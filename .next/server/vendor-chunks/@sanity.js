/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@sanity";
exports.ids = ["vendor-chunks/@sanity"];
exports.modules = {

/***/ "(ssr)/./node_modules/@sanity/eventsource/node.js":
/*!**************************************************!*\
  !*** ./node_modules/@sanity/eventsource/node.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! eventsource */ \"(ssr)/./node_modules/eventsource/lib/eventsource.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9ldmVudHNvdXJjZS9ub2RlLmpzIiwibWFwcGluZ3MiOiJBQUFBLDhHQUF1QyIsInNvdXJjZXMiOlsiL21lZGlhL2F3YWlzL05ldyBWb2x1bWUvR292ZXJOT3IgSG91c2UgL2hhY2thdGhvbi0zL3NlY29uZFRpbWVzL2hhY2thdGhvbi1iYW5kYWdlL25vZGVfbW9kdWxlcy9Ac2FuaXR5L2V2ZW50c291cmNlL25vZGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCdldmVudHNvdXJjZScpXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/eventsource/node.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@sanity/eventsource/node.js":
/*!**************************************************!*\
  !*** ./node_modules/@sanity/eventsource/node.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! eventsource */ \"(action-browser)/./node_modules/eventsource/lib/eventsource.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac2FuaXR5L2V2ZW50c291cmNlL25vZGUuanMiLCJtYXBwaW5ncyI6IkFBQUEseUhBQXVDIiwic291cmNlcyI6WyIvbWVkaWEvYXdhaXMvTmV3IFZvbHVtZS9Hb3Zlck5PciBIb3VzZSAvaGFja2F0aG9uLTMvc2Vjb25kVGltZXMvaGFja2F0aG9uLWJhbmRhZ2Uvbm9kZV9tb2R1bGVzL0BzYW5pdHkvZXZlbnRzb3VyY2Uvbm9kZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJ2V2ZW50c291cmNlJylcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@sanity/eventsource/node.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sanity/eventsource/node.js":
/*!**************************************************!*\
  !*** ./node_modules/@sanity/eventsource/node.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! eventsource */ \"(rsc)/./node_modules/eventsource/lib/eventsource.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9ldmVudHNvdXJjZS9ub2RlLmpzIiwibWFwcGluZ3MiOiJBQUFBLDhHQUF1QyIsInNvdXJjZXMiOlsiL21lZGlhL2F3YWlzL05ldyBWb2x1bWUvR292ZXJOT3IgSG91c2UgL2hhY2thdGhvbi0zL3NlY29uZFRpbWVzL2hhY2thdGhvbi1iYW5kYWdlL25vZGVfbW9kdWxlcy9Ac2FuaXR5L2V2ZW50c291cmNlL25vZGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCdldmVudHNvdXJjZScpXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sanity/eventsource/node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/client/dist/_chunks-es/resolveEditInfo.js":
/*!************************************************************************!*\
  !*** ./node_modules/@sanity/client/dist/_chunks-es/resolveEditInfo.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DRAFTS_PREFIX: () => (/* binding */ DRAFTS_PREFIX),\n/* harmony export */   createEditUrl: () => (/* binding */ createEditUrl),\n/* harmony export */   get: () => (/* binding */ get),\n/* harmony export */   getPublishedId: () => (/* binding */ getPublishedId),\n/* harmony export */   jsonPath: () => (/* binding */ jsonPath),\n/* harmony export */   jsonPathToStudioPath: () => (/* binding */ jsonPathToStudioPath),\n/* harmony export */   parseJsonPath: () => (/* binding */ parseJsonPath),\n/* harmony export */   reKeySegment: () => (/* binding */ reKeySegment),\n/* harmony export */   resolveEditInfo: () => (/* binding */ resolveEditInfo),\n/* harmony export */   resolveMapping: () => (/* binding */ resolveMapping),\n/* harmony export */   resolveStudioBaseRoute: () => (/* binding */ resolveStudioBaseRoute),\n/* harmony export */   studioPath: () => (/* binding */ studioPath),\n/* harmony export */   studioPathToJsonPath: () => (/* binding */ studioPathToJsonPath),\n/* harmony export */   toString: () => (/* binding */ toString),\n/* harmony export */   walkMap: () => (/* binding */ walkMap)\n/* harmony export */ });\nconst rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g, reKeySegment = /_key\\s*==\\s*['\"](.*)['\"]/, reIndexTuple = /^\\d*:\\d*$/;\nfunction isIndexSegment(segment) {\n  return typeof segment == \"number\" || typeof segment == \"string\" && /^\\[\\d+\\]$/.test(segment);\n}\nfunction isKeySegment(segment) {\n  return typeof segment == \"string\" ? reKeySegment.test(segment.trim()) : typeof segment == \"object\" && \"_key\" in segment;\n}\nfunction isIndexTuple(segment) {\n  if (typeof segment == \"string\" && reIndexTuple.test(segment))\n    return !0;\n  if (!Array.isArray(segment) || segment.length !== 2)\n    return !1;\n  const [from, to] = segment;\n  return (typeof from == \"number\" || from === \"\") && (typeof to == \"number\" || to === \"\");\n}\nfunction get(obj, path, defaultVal) {\n  const select = typeof path == \"string\" ? fromString(path) : path;\n  if (!Array.isArray(select))\n    throw new Error(\"Path must be an array or a string\");\n  let acc = obj;\n  for (let i = 0; i < select.length; i++) {\n    const segment = select[i];\n    if (isIndexSegment(segment)) {\n      if (!Array.isArray(acc))\n        return defaultVal;\n      acc = acc[segment];\n    }\n    if (isKeySegment(segment)) {\n      if (!Array.isArray(acc))\n        return defaultVal;\n      acc = acc.find((item) => item._key === segment._key);\n    }\n    if (typeof segment == \"string\" && (acc = typeof acc == \"object\" && acc !== null ? acc[segment] : void 0), typeof acc > \"u\")\n      return defaultVal;\n  }\n  return acc;\n}\nfunction toString(path) {\n  if (!Array.isArray(path))\n    throw new Error(\"Path is not an array\");\n  return path.reduce((target, segment, i) => {\n    const segmentType = typeof segment;\n    if (segmentType === \"number\")\n      return `${target}[${segment}]`;\n    if (segmentType === \"string\")\n      return `${target}${i === 0 ? \"\" : \".\"}${segment}`;\n    if (isKeySegment(segment) && segment._key)\n      return `${target}[_key==\"${segment._key}\"]`;\n    if (Array.isArray(segment)) {\n      const [from, to] = segment;\n      return `${target}[${from}:${to}]`;\n    }\n    throw new Error(`Unsupported path segment \\`${JSON.stringify(segment)}\\``);\n  }, \"\");\n}\nfunction fromString(path) {\n  if (typeof path != \"string\")\n    throw new Error(\"Path is not a string\");\n  const segments = path.match(rePropName);\n  if (!segments)\n    throw new Error(\"Invalid path string\");\n  return segments.map(parsePathSegment);\n}\nfunction parsePathSegment(segment) {\n  return isIndexSegment(segment) ? parseIndexSegment(segment) : isKeySegment(segment) ? parseKeySegment(segment) : isIndexTuple(segment) ? parseIndexTupleSegment(segment) : segment;\n}\nfunction parseIndexSegment(segment) {\n  return Number(segment.replace(/[^\\d]/g, \"\"));\n}\nfunction parseKeySegment(segment) {\n  return { _key: segment.match(reKeySegment)[1] };\n}\nfunction parseIndexTupleSegment(segment) {\n  const [from, to] = segment.split(\":\").map((seg) => seg === \"\" ? seg : Number(seg));\n  return [from, to];\n}\nvar studioPath = /* @__PURE__ */ Object.freeze({\n  __proto__: null,\n  fromString,\n  get,\n  isIndexSegment,\n  isIndexTuple,\n  isKeySegment,\n  reKeySegment,\n  toString\n});\nconst DRAFTS_PREFIX = \"drafts.\";\nfunction getPublishedId(id) {\n  return id.startsWith(DRAFTS_PREFIX) ? id.slice(DRAFTS_PREFIX.length) : id;\n}\nconst ESCAPE = {\n  \"\\f\": \"\\\\f\",\n  \"\\n\": \"\\\\n\",\n  \"\\r\": \"\\\\r\",\n  \"\t\": \"\\\\t\",\n  \"'\": \"\\\\'\",\n  \"\\\\\": \"\\\\\\\\\"\n}, UNESCAPE = {\n  \"\\\\f\": \"\\f\",\n  \"\\\\n\": `\n`,\n  \"\\\\r\": \"\\r\",\n  \"\\\\t\": \"\t\",\n  \"\\\\'\": \"'\",\n  \"\\\\\\\\\": \"\\\\\"\n};\nfunction jsonPath(path) {\n  return `$${path.map((segment) => typeof segment == \"string\" ? `['${segment.replace(/[\\f\\n\\r\\t'\\\\]/g, (match) => ESCAPE[match])}']` : typeof segment == \"number\" ? `[${segment}]` : segment._key !== \"\" ? `[?(@._key=='${segment._key.replace(/['\\\\]/g, (match) => ESCAPE[match])}')]` : `[${segment._index}]`).join(\"\")}`;\n}\nfunction parseJsonPath(path) {\n  const parsed = [], parseRe = /\\['(.*?)'\\]|\\[(\\d+)\\]|\\[\\?\\(@\\._key=='(.*?)'\\)\\]/g;\n  let match;\n  for (; (match = parseRe.exec(path)) !== null; ) {\n    if (match[1] !== void 0) {\n      const key = match[1].replace(/\\\\(\\\\|f|n|r|t|')/g, (m) => UNESCAPE[m]);\n      parsed.push(key);\n      continue;\n    }\n    if (match[2] !== void 0) {\n      parsed.push(parseInt(match[2], 10));\n      continue;\n    }\n    if (match[3] !== void 0) {\n      const _key = match[3].replace(/\\\\(\\\\')/g, (m) => UNESCAPE[m]);\n      parsed.push({\n        _key,\n        _index: -1\n      });\n      continue;\n    }\n  }\n  return parsed;\n}\nfunction jsonPathToStudioPath(path) {\n  return path.map((segment) => {\n    if (typeof segment == \"string\" || typeof segment == \"number\")\n      return segment;\n    if (segment._key !== \"\")\n      return { _key: segment._key };\n    if (segment._index !== -1)\n      return segment._index;\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`);\n  });\n}\nfunction studioPathToJsonPath(path) {\n  return (typeof path == \"string\" ? fromString(path) : path).map((segment) => {\n    if (typeof segment == \"string\" || typeof segment == \"number\")\n      return segment;\n    if (Array.isArray(segment))\n      throw new Error(`IndexTuple segments aren't supported:${JSON.stringify(segment)}`);\n    if (isContentSourceMapParsedPathKeyedSegment(segment))\n      return segment;\n    if (segment._key)\n      return { _key: segment._key, _index: -1 };\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`);\n  });\n}\nfunction isContentSourceMapParsedPathKeyedSegment(segment) {\n  return typeof segment == \"object\" && \"_key\" in segment && \"_index\" in segment;\n}\nfunction jsonPathToMappingPath(path) {\n  return path.map((segment) => {\n    if (typeof segment == \"string\" || typeof segment == \"number\")\n      return segment;\n    if (segment._index !== -1)\n      return segment._index;\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`);\n  });\n}\nfunction resolveMapping(resultPath, csm) {\n  if (!csm?.mappings)\n    return;\n  const resultMappingPath = jsonPath(jsonPathToMappingPath(resultPath));\n  if (csm.mappings[resultMappingPath] !== void 0)\n    return {\n      mapping: csm.mappings[resultMappingPath],\n      matchedPath: resultMappingPath,\n      pathSuffix: \"\"\n    };\n  const mappings = Object.entries(csm.mappings).filter(([key]) => resultMappingPath.startsWith(key)).sort(([key1], [key2]) => key2.length - key1.length);\n  if (mappings.length == 0)\n    return;\n  const [matchedPath, mapping] = mappings[0], pathSuffix = resultMappingPath.substring(matchedPath.length);\n  return { mapping, matchedPath, pathSuffix };\n}\nfunction isArray(value) {\n  return value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n  return typeof value == \"object\" && value !== null;\n}\nfunction walkMap(value, mappingFn, path = []) {\n  if (isArray(value))\n    return value.map((v, idx) => {\n      if (isRecord(v)) {\n        const _key = v._key;\n        if (typeof _key == \"string\")\n          return walkMap(v, mappingFn, path.concat({ _key, _index: idx }));\n      }\n      return walkMap(v, mappingFn, path.concat(idx));\n    });\n  if (isRecord(value)) {\n    if (value._type === \"block\" || value._type === \"span\") {\n      const result = { ...value };\n      return value._type === \"block\" ? result.children = walkMap(value.children, mappingFn, path.concat(\"children\")) : value._type === \"span\" && (result.text = walkMap(value.text, mappingFn, path.concat(\"text\"))), result;\n    }\n    return Object.fromEntries(\n      Object.entries(value).map(([k, v]) => [k, walkMap(v, mappingFn, path.concat(k))])\n    );\n  }\n  return mappingFn(value, path);\n}\nfunction createEditUrl(options) {\n  const {\n    baseUrl,\n    workspace: _workspace = \"default\",\n    tool: _tool = \"default\",\n    id: _id,\n    type,\n    path,\n    projectId,\n    dataset\n  } = options;\n  if (!baseUrl)\n    throw new Error(\"baseUrl is required\");\n  if (!path)\n    throw new Error(\"path is required\");\n  if (!_id)\n    throw new Error(\"id is required\");\n  if (baseUrl !== \"/\" && baseUrl.endsWith(\"/\"))\n    throw new Error(\"baseUrl must not end with a slash\");\n  const workspace = _workspace === \"default\" ? void 0 : _workspace, tool = _tool === \"default\" ? void 0 : _tool, id = getPublishedId(_id), stringifiedPath = Array.isArray(path) ? toString(jsonPathToStudioPath(path)) : path, searchParams = new URLSearchParams({\n    baseUrl,\n    id,\n    type,\n    path: stringifiedPath\n  });\n  workspace && searchParams.set(\"workspace\", workspace), tool && searchParams.set(\"tool\", tool), projectId && searchParams.set(\"projectId\", projectId), dataset && searchParams.set(\"dataset\", dataset), _id.startsWith(DRAFTS_PREFIX) && searchParams.set(\"isDraft\", \"\");\n  const segments = [baseUrl === \"/\" ? \"\" : baseUrl];\n  workspace && segments.push(workspace);\n  const routerParams = [\n    \"mode=presentation\",\n    `id=${id}`,\n    `type=${type}`,\n    `path=${encodeURIComponent(stringifiedPath)}`\n  ];\n  return tool && routerParams.push(`tool=${tool}`), segments.push(\"intent\", \"edit\", `${routerParams.join(\";\")}?${searchParams}`), segments.join(\"/\");\n}\nfunction resolveEditInfo(options) {\n  const { resultSourceMap: csm, resultPath } = options, { mapping, pathSuffix } = resolveMapping(resultPath, csm) || {};\n  if (!mapping || mapping.source.type === \"literal\" || mapping.source.type === \"unknown\")\n    return;\n  const sourceDoc = csm.documents[mapping.source.document], sourcePath = csm.paths[mapping.source.path];\n  if (sourceDoc && sourcePath) {\n    const { baseUrl, workspace, tool } = resolveStudioBaseRoute(\n      typeof options.studioUrl == \"function\" ? options.studioUrl(sourceDoc) : options.studioUrl\n    );\n    if (!baseUrl) return;\n    const { _id, _type, _projectId, _dataset } = sourceDoc;\n    return {\n      baseUrl,\n      workspace,\n      tool,\n      id: _id,\n      type: _type,\n      path: parseJsonPath(sourcePath + pathSuffix),\n      projectId: _projectId,\n      dataset: _dataset\n    };\n  }\n}\nfunction resolveStudioBaseRoute(studioUrl) {\n  let baseUrl = typeof studioUrl == \"string\" ? studioUrl : studioUrl.baseUrl;\n  return baseUrl !== \"/\" && (baseUrl = baseUrl.replace(/\\/$/, \"\")), typeof studioUrl == \"string\" ? { baseUrl } : { ...studioUrl, baseUrl };\n}\n\n//# sourceMappingURL=resolveEditInfo.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/client/dist/_chunks-es/resolveEditInfo.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/client/dist/_chunks-es/stegaClean.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@sanity/client/dist/_chunks-es/stegaClean.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   C: () => (/* binding */ C),\n/* harmony export */   stegaClean: () => (/* binding */ stegaClean),\n/* harmony export */   vercelStegaCleanAll: () => (/* binding */ vercelStegaCleanAll)\n/* harmony export */ });\nvar s = { 0: 8203, 1: 8204, 2: 8205, 3: 8290, 4: 8291, 5: 8288, 6: 65279, 7: 8289, 8: 119155, 9: 119156, a: 119157, b: 119158, c: 119159, d: 119160, e: 119161, f: 119162 }, c = { 0: 8203, 1: 8204, 2: 8205, 3: 65279 }, u = new Array(4).fill(String.fromCodePoint(c[0])).join(\"\");\nfunction E(t) {\n  let e = JSON.stringify(t);\n  return `${u}${Array.from(e).map((r) => {\n    let n = r.charCodeAt(0);\n    if (n > 255) throw new Error(`Only ASCII edit info can be encoded. Error attempting to encode ${e} on character ${r} (${n})`);\n    return Array.from(n.toString(4).padStart(4, \"0\")).map((o) => String.fromCodePoint(c[o])).join(\"\");\n  }).join(\"\")}`;\n}\nfunction I(t) {\n  return !Number.isNaN(Number(t)) || /[a-z]/i.test(t) && !/\\d+(?:[-:\\/]\\d+){2}(?:T\\d+(?:[-:\\/]\\d+){1,2}(\\.\\d+)?Z?)?/.test(t) ? !1 : !!Date.parse(t);\n}\nfunction T(t) {\n  try {\n    new URL(t, t.startsWith(\"/\") ? \"https://acme.com\" : void 0);\n  } catch {\n    return !1;\n  }\n  return !0;\n}\nfunction C(t, e, r = \"auto\") {\n  return r === !0 || r === \"auto\" && (I(t) || T(t)) ? t : `${t}${E(e)}`;\n}\nObject.fromEntries(Object.entries(c).map((t) => t.reverse()));\nObject.fromEntries(Object.entries(s).map((t) => t.reverse()));\nvar S = `${Object.values(s).map((t) => `\\\\u{${t.toString(16)}}`).join(\"\")}`, f = new RegExp(`[${S}]{4,}`, \"gu\");\nfunction _(t) {\n  var e;\n  return { cleaned: t.replace(f, \"\"), encoded: ((e = t.match(f)) == null ? void 0 : e[0]) || \"\" };\n}\nfunction O(t) {\n  return t && JSON.parse(_(JSON.stringify(t)).cleaned);\n}\nfunction stegaClean(result) {\n  return O(result);\n}\nconst vercelStegaCleanAll = stegaClean;\n\n//# sourceMappingURL=stegaClean.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9jbGllbnQvZGlzdC9fY2h1bmtzLWVzL3N0ZWdhQ2xlYW4uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsVUFBVSxpS0FBaUssUUFBUSxxQ0FBcUM7QUFDeE47QUFDQTtBQUNBLFlBQVksRUFBRSxFQUFFO0FBQ2hCO0FBQ0Esb0dBQW9HLEdBQUcsZUFBZSxHQUFHLEdBQUcsRUFBRTtBQUM5SDtBQUNBLEdBQUcsV0FBVztBQUNkO0FBQ0E7QUFDQSw0RUFBNEUsRUFBRSxxQkFBcUIsSUFBSTtBQUN2RztBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkRBQTZELEVBQUUsRUFBRSxLQUFLO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBLFdBQVcsaUNBQWlDLEVBQUUsZ0JBQWdCLFlBQVksc0JBQXNCLEVBQUUsRUFBRSxHQUFHO0FBQ3ZHO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUtFO0FBQ0YiLCJzb3VyY2VzIjpbIi9tZWRpYS9hd2Fpcy9OZXcgVm9sdW1lL0dvdmVyTk9yIEhvdXNlIC9oYWNrYXRob24tMy9zZWNvbmRUaW1lcy9oYWNrYXRob24tYmFuZGFnZS9ub2RlX21vZHVsZXMvQHNhbml0eS9jbGllbnQvZGlzdC9fY2h1bmtzLWVzL3N0ZWdhQ2xlYW4uanMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHMgPSB7IDA6IDgyMDMsIDE6IDgyMDQsIDI6IDgyMDUsIDM6IDgyOTAsIDQ6IDgyOTEsIDU6IDgyODgsIDY6IDY1Mjc5LCA3OiA4Mjg5LCA4OiAxMTkxNTUsIDk6IDExOTE1NiwgYTogMTE5MTU3LCBiOiAxMTkxNTgsIGM6IDExOTE1OSwgZDogMTE5MTYwLCBlOiAxMTkxNjEsIGY6IDExOTE2MiB9LCBjID0geyAwOiA4MjAzLCAxOiA4MjA0LCAyOiA4MjA1LCAzOiA2NTI3OSB9LCB1ID0gbmV3IEFycmF5KDQpLmZpbGwoU3RyaW5nLmZyb21Db2RlUG9pbnQoY1swXSkpLmpvaW4oXCJcIik7XG5mdW5jdGlvbiBFKHQpIHtcbiAgbGV0IGUgPSBKU09OLnN0cmluZ2lmeSh0KTtcbiAgcmV0dXJuIGAke3V9JHtBcnJheS5mcm9tKGUpLm1hcCgocikgPT4ge1xuICAgIGxldCBuID0gci5jaGFyQ29kZUF0KDApO1xuICAgIGlmIChuID4gMjU1KSB0aHJvdyBuZXcgRXJyb3IoYE9ubHkgQVNDSUkgZWRpdCBpbmZvIGNhbiBiZSBlbmNvZGVkLiBFcnJvciBhdHRlbXB0aW5nIHRvIGVuY29kZSAke2V9IG9uIGNoYXJhY3RlciAke3J9ICgke259KWApO1xuICAgIHJldHVybiBBcnJheS5mcm9tKG4udG9TdHJpbmcoNCkucGFkU3RhcnQoNCwgXCIwXCIpKS5tYXAoKG8pID0+IFN0cmluZy5mcm9tQ29kZVBvaW50KGNbb10pKS5qb2luKFwiXCIpO1xuICB9KS5qb2luKFwiXCIpfWA7XG59XG5mdW5jdGlvbiBJKHQpIHtcbiAgcmV0dXJuICFOdW1iZXIuaXNOYU4oTnVtYmVyKHQpKSB8fCAvW2Etel0vaS50ZXN0KHQpICYmICEvXFxkKyg/OlstOlxcL11cXGQrKXsyfSg/OlRcXGQrKD86Wy06XFwvXVxcZCspezEsMn0oXFwuXFxkKyk/Wj8pPy8udGVzdCh0KSA/ICExIDogISFEYXRlLnBhcnNlKHQpO1xufVxuZnVuY3Rpb24gVCh0KSB7XG4gIHRyeSB7XG4gICAgbmV3IFVSTCh0LCB0LnN0YXJ0c1dpdGgoXCIvXCIpID8gXCJodHRwczovL2FjbWUuY29tXCIgOiB2b2lkIDApO1xuICB9IGNhdGNoIHtcbiAgICByZXR1cm4gITE7XG4gIH1cbiAgcmV0dXJuICEwO1xufVxuZnVuY3Rpb24gQyh0LCBlLCByID0gXCJhdXRvXCIpIHtcbiAgcmV0dXJuIHIgPT09ICEwIHx8IHIgPT09IFwiYXV0b1wiICYmIChJKHQpIHx8IFQodCkpID8gdCA6IGAke3R9JHtFKGUpfWA7XG59XG5PYmplY3QuZnJvbUVudHJpZXMoT2JqZWN0LmVudHJpZXMoYykubWFwKCh0KSA9PiB0LnJldmVyc2UoKSkpO1xuT2JqZWN0LmZyb21FbnRyaWVzKE9iamVjdC5lbnRyaWVzKHMpLm1hcCgodCkgPT4gdC5yZXZlcnNlKCkpKTtcbnZhciBTID0gYCR7T2JqZWN0LnZhbHVlcyhzKS5tYXAoKHQpID0+IGBcXFxcdXske3QudG9TdHJpbmcoMTYpfX1gKS5qb2luKFwiXCIpfWAsIGYgPSBuZXcgUmVnRXhwKGBbJHtTfV17NCx9YCwgXCJndVwiKTtcbmZ1bmN0aW9uIF8odCkge1xuICB2YXIgZTtcbiAgcmV0dXJuIHsgY2xlYW5lZDogdC5yZXBsYWNlKGYsIFwiXCIpLCBlbmNvZGVkOiAoKGUgPSB0Lm1hdGNoKGYpKSA9PSBudWxsID8gdm9pZCAwIDogZVswXSkgfHwgXCJcIiB9O1xufVxuZnVuY3Rpb24gTyh0KSB7XG4gIHJldHVybiB0ICYmIEpTT04ucGFyc2UoXyhKU09OLnN0cmluZ2lmeSh0KSkuY2xlYW5lZCk7XG59XG5mdW5jdGlvbiBzdGVnYUNsZWFuKHJlc3VsdCkge1xuICByZXR1cm4gTyhyZXN1bHQpO1xufVxuY29uc3QgdmVyY2VsU3RlZ2FDbGVhbkFsbCA9IHN0ZWdhQ2xlYW47XG5leHBvcnQge1xuICBDLFxuICBzdGVnYUNsZWFuLFxuICB2ZXJjZWxTdGVnYUNsZWFuQWxsXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3RlZ2FDbGVhbi5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/client/dist/_chunks-es/stegaClean.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/client/dist/_chunks-es/stegaEncodeSourceMap.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@sanity/client/dist/_chunks-es/stegaEncodeSourceMap.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodeIntoResult: () => (/* binding */ encodeIntoResult),\n/* harmony export */   stegaEncodeSourceMap: () => (/* binding */ stegaEncodeSourceMap),\n/* harmony export */   stegaEncodeSourceMap$1: () => (/* binding */ stegaEncodeSourceMap$1)\n/* harmony export */ });\n/* harmony import */ var _stegaClean_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./stegaClean.js */ \"(ssr)/./node_modules/@sanity/client/dist/_chunks-es/stegaClean.js\");\n\nconst reKeySegment = /_key\\s*==\\s*['\"](.*)['\"]/;\nfunction isKeySegment(segment) {\n  return typeof segment == \"string\" ? reKeySegment.test(segment.trim()) : typeof segment == \"object\" && \"_key\" in segment;\n}\nfunction toString(path) {\n  if (!Array.isArray(path))\n    throw new Error(\"Path is not an array\");\n  return path.reduce((target, segment, i) => {\n    const segmentType = typeof segment;\n    if (segmentType === \"number\")\n      return `${target}[${segment}]`;\n    if (segmentType === \"string\")\n      return `${target}${i === 0 ? \"\" : \".\"}${segment}`;\n    if (isKeySegment(segment) && segment._key)\n      return `${target}[_key==\"${segment._key}\"]`;\n    if (Array.isArray(segment)) {\n      const [from, to] = segment;\n      return `${target}[${from}:${to}]`;\n    }\n    throw new Error(`Unsupported path segment \\`${JSON.stringify(segment)}\\``);\n  }, \"\");\n}\nconst ESCAPE = {\n  \"\\f\": \"\\\\f\",\n  \"\\n\": \"\\\\n\",\n  \"\\r\": \"\\\\r\",\n  \"\t\": \"\\\\t\",\n  \"'\": \"\\\\'\",\n  \"\\\\\": \"\\\\\\\\\"\n}, UNESCAPE = {\n  \"\\\\f\": \"\\f\",\n  \"\\\\n\": `\n`,\n  \"\\\\r\": \"\\r\",\n  \"\\\\t\": \"\t\",\n  \"\\\\'\": \"'\",\n  \"\\\\\\\\\": \"\\\\\"\n};\nfunction jsonPath(path) {\n  return `$${path.map((segment) => typeof segment == \"string\" ? `['${segment.replace(/[\\f\\n\\r\\t'\\\\]/g, (match) => ESCAPE[match])}']` : typeof segment == \"number\" ? `[${segment}]` : segment._key !== \"\" ? `[?(@._key=='${segment._key.replace(/['\\\\]/g, (match) => ESCAPE[match])}')]` : `[${segment._index}]`).join(\"\")}`;\n}\nfunction parseJsonPath(path) {\n  const parsed = [], parseRe = /\\['(.*?)'\\]|\\[(\\d+)\\]|\\[\\?\\(@\\._key=='(.*?)'\\)\\]/g;\n  let match;\n  for (; (match = parseRe.exec(path)) !== null; ) {\n    if (match[1] !== void 0) {\n      const key = match[1].replace(/\\\\(\\\\|f|n|r|t|')/g, (m) => UNESCAPE[m]);\n      parsed.push(key);\n      continue;\n    }\n    if (match[2] !== void 0) {\n      parsed.push(parseInt(match[2], 10));\n      continue;\n    }\n    if (match[3] !== void 0) {\n      const _key = match[3].replace(/\\\\(\\\\')/g, (m) => UNESCAPE[m]);\n      parsed.push({\n        _key,\n        _index: -1\n      });\n      continue;\n    }\n  }\n  return parsed;\n}\nfunction jsonPathToStudioPath(path) {\n  return path.map((segment) => {\n    if (typeof segment == \"string\" || typeof segment == \"number\")\n      return segment;\n    if (segment._key !== \"\")\n      return { _key: segment._key };\n    if (segment._index !== -1)\n      return segment._index;\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`);\n  });\n}\nfunction jsonPathToMappingPath(path) {\n  return path.map((segment) => {\n    if (typeof segment == \"string\" || typeof segment == \"number\")\n      return segment;\n    if (segment._index !== -1)\n      return segment._index;\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`);\n  });\n}\nfunction resolveMapping(resultPath, csm) {\n  if (!csm?.mappings)\n    return;\n  const resultMappingPath = jsonPath(jsonPathToMappingPath(resultPath));\n  if (csm.mappings[resultMappingPath] !== void 0)\n    return {\n      mapping: csm.mappings[resultMappingPath],\n      matchedPath: resultMappingPath,\n      pathSuffix: \"\"\n    };\n  const mappings = Object.entries(csm.mappings).filter(([key]) => resultMappingPath.startsWith(key)).sort(([key1], [key2]) => key2.length - key1.length);\n  if (mappings.length == 0)\n    return;\n  const [matchedPath, mapping] = mappings[0], pathSuffix = resultMappingPath.substring(matchedPath.length);\n  return { mapping, matchedPath, pathSuffix };\n}\nfunction isArray(value) {\n  return value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n  return typeof value == \"object\" && value !== null;\n}\nfunction walkMap(value, mappingFn, path = []) {\n  if (isArray(value))\n    return value.map((v, idx) => {\n      if (isRecord(v)) {\n        const _key = v._key;\n        if (typeof _key == \"string\")\n          return walkMap(v, mappingFn, path.concat({ _key, _index: idx }));\n      }\n      return walkMap(v, mappingFn, path.concat(idx));\n    });\n  if (isRecord(value)) {\n    if (value._type === \"block\" || value._type === \"span\") {\n      const result = { ...value };\n      return value._type === \"block\" ? result.children = walkMap(value.children, mappingFn, path.concat(\"children\")) : value._type === \"span\" && (result.text = walkMap(value.text, mappingFn, path.concat(\"text\"))), result;\n    }\n    return Object.fromEntries(\n      Object.entries(value).map(([k, v]) => [k, walkMap(v, mappingFn, path.concat(k))])\n    );\n  }\n  return mappingFn(value, path);\n}\nfunction encodeIntoResult(result, csm, encoder) {\n  return walkMap(result, (value, path) => {\n    if (typeof value != \"string\")\n      return value;\n    const resolveMappingResult = resolveMapping(path, csm);\n    if (!resolveMappingResult)\n      return value;\n    const { mapping, matchedPath } = resolveMappingResult;\n    if (mapping.type !== \"value\" || mapping.source.type !== \"documentValue\")\n      return value;\n    const sourceDocument = csm.documents[mapping.source.document], sourcePath = csm.paths[mapping.source.path], matchPathSegments = parseJsonPath(matchedPath), fullSourceSegments = parseJsonPath(sourcePath).concat(path.slice(matchPathSegments.length));\n    return encoder({\n      sourcePath: fullSourceSegments,\n      sourceDocument,\n      resultPath: path,\n      value\n    });\n  });\n}\nconst DRAFTS_PREFIX = \"drafts.\";\nfunction getPublishedId(id) {\n  return id.startsWith(DRAFTS_PREFIX) ? id.slice(DRAFTS_PREFIX.length) : id;\n}\nfunction createEditUrl(options) {\n  const {\n    baseUrl,\n    workspace: _workspace = \"default\",\n    tool: _tool = \"default\",\n    id: _id,\n    type,\n    path,\n    projectId,\n    dataset\n  } = options;\n  if (!baseUrl)\n    throw new Error(\"baseUrl is required\");\n  if (!path)\n    throw new Error(\"path is required\");\n  if (!_id)\n    throw new Error(\"id is required\");\n  if (baseUrl !== \"/\" && baseUrl.endsWith(\"/\"))\n    throw new Error(\"baseUrl must not end with a slash\");\n  const workspace = _workspace === \"default\" ? void 0 : _workspace, tool = _tool === \"default\" ? void 0 : _tool, id = getPublishedId(_id), stringifiedPath = Array.isArray(path) ? toString(jsonPathToStudioPath(path)) : path, searchParams = new URLSearchParams({\n    baseUrl,\n    id,\n    type,\n    path: stringifiedPath\n  });\n  workspace && searchParams.set(\"workspace\", workspace), tool && searchParams.set(\"tool\", tool), projectId && searchParams.set(\"projectId\", projectId), dataset && searchParams.set(\"dataset\", dataset), _id.startsWith(DRAFTS_PREFIX) && searchParams.set(\"isDraft\", \"\");\n  const segments = [baseUrl === \"/\" ? \"\" : baseUrl];\n  workspace && segments.push(workspace);\n  const routerParams = [\n    \"mode=presentation\",\n    `id=${id}`,\n    `type=${type}`,\n    `path=${encodeURIComponent(stringifiedPath)}`\n  ];\n  return tool && routerParams.push(`tool=${tool}`), segments.push(\"intent\", \"edit\", `${routerParams.join(\";\")}?${searchParams}`), segments.join(\"/\");\n}\nfunction resolveStudioBaseRoute(studioUrl) {\n  let baseUrl = typeof studioUrl == \"string\" ? studioUrl : studioUrl.baseUrl;\n  return baseUrl !== \"/\" && (baseUrl = baseUrl.replace(/\\/$/, \"\")), typeof studioUrl == \"string\" ? { baseUrl } : { ...studioUrl, baseUrl };\n}\nconst filterDefault = ({ sourcePath, resultPath, value }) => {\n  if (isValidDate(value) || isValidURL(value))\n    return !1;\n  const endPath = sourcePath.at(-1);\n  return !(sourcePath.at(-2) === \"slug\" && endPath === \"current\" || typeof endPath == \"string\" && (endPath.startsWith(\"_\") || endPath.endsWith(\"Id\")) || sourcePath.some(\n    (path) => path === \"meta\" || path === \"metadata\" || path === \"openGraph\" || path === \"seo\"\n  ) || hasTypeLike(sourcePath) || hasTypeLike(resultPath) || typeof endPath == \"string\" && denylist.has(endPath));\n}, denylist = /* @__PURE__ */ new Set([\n  \"color\",\n  \"colour\",\n  \"currency\",\n  \"email\",\n  \"format\",\n  \"gid\",\n  \"hex\",\n  \"href\",\n  \"hsl\",\n  \"hsla\",\n  \"icon\",\n  \"id\",\n  \"index\",\n  \"key\",\n  \"language\",\n  \"layout\",\n  \"link\",\n  \"linkAction\",\n  \"locale\",\n  \"lqip\",\n  \"page\",\n  \"path\",\n  \"ref\",\n  \"rgb\",\n  \"rgba\",\n  \"route\",\n  \"secret\",\n  \"slug\",\n  \"status\",\n  \"tag\",\n  \"template\",\n  \"theme\",\n  \"type\",\n  \"textTheme\",\n  \"unit\",\n  \"url\",\n  \"username\",\n  \"variant\",\n  \"website\"\n]);\nfunction isValidDate(dateString) {\n  return /^\\d{4}-\\d{2}-\\d{2}/.test(dateString) ? !!Date.parse(dateString) : !1;\n}\nfunction isValidURL(url) {\n  try {\n    new URL(url, url.startsWith(\"/\") ? \"https://acme.com\" : void 0);\n  } catch {\n    return !1;\n  }\n  return !0;\n}\nfunction hasTypeLike(path) {\n  return path.some((segment) => typeof segment == \"string\" && segment.match(/type/i) !== null);\n}\nconst TRUNCATE_LENGTH = 20;\nfunction stegaEncodeSourceMap(result, resultSourceMap, config) {\n  const { filter, logger, enabled } = config;\n  if (!enabled) {\n    const msg = \"config.enabled must be true, don't call this function otherwise\";\n    throw logger?.error?.(`[@sanity/client]: ${msg}`, { result, resultSourceMap, config }), new TypeError(msg);\n  }\n  if (!resultSourceMap)\n    return logger?.error?.(\"[@sanity/client]: Missing Content Source Map from response body\", {\n      result,\n      resultSourceMap,\n      config\n    }), result;\n  if (!config.studioUrl) {\n    const msg = \"config.studioUrl must be defined\";\n    throw logger?.error?.(`[@sanity/client]: ${msg}`, { result, resultSourceMap, config }), new TypeError(msg);\n  }\n  const report = {\n    encoded: [],\n    skipped: []\n  }, resultWithStega = encodeIntoResult(\n    result,\n    resultSourceMap,\n    ({ sourcePath, sourceDocument, resultPath, value }) => {\n      if ((typeof filter == \"function\" ? filter({ sourcePath, resultPath, filterDefault, sourceDocument, value }) : filterDefault({ sourcePath, resultPath, filterDefault, sourceDocument, value })) === !1)\n        return logger && report.skipped.push({\n          path: prettyPathForLogging(sourcePath),\n          value: `${value.slice(0, TRUNCATE_LENGTH)}${value.length > TRUNCATE_LENGTH ? \"...\" : \"\"}`,\n          length: value.length\n        }), value;\n      logger && report.encoded.push({\n        path: prettyPathForLogging(sourcePath),\n        value: `${value.slice(0, TRUNCATE_LENGTH)}${value.length > TRUNCATE_LENGTH ? \"...\" : \"\"}`,\n        length: value.length\n      });\n      const { baseUrl, workspace, tool } = resolveStudioBaseRoute(\n        typeof config.studioUrl == \"function\" ? config.studioUrl(sourceDocument) : config.studioUrl\n      );\n      if (!baseUrl) return value;\n      const { _id: id, _type: type, _projectId: projectId, _dataset: dataset } = sourceDocument;\n      return (0,_stegaClean_js__WEBPACK_IMPORTED_MODULE_0__.C)(\n        value,\n        {\n          origin: \"sanity.io\",\n          href: createEditUrl({\n            baseUrl,\n            workspace,\n            tool,\n            id,\n            type,\n            path: sourcePath,\n            ...!config.omitCrossDatasetReferenceData && { dataset, projectId }\n          })\n        },\n        // We use custom logic to determine if we should skip encoding\n        !1\n      );\n    }\n  );\n  if (logger) {\n    const isSkipping = report.skipped.length, isEncoding = report.encoded.length;\n    if ((isSkipping || isEncoding) && ((logger?.groupCollapsed || logger.log)?.(\"[@sanity/client]: Encoding source map into result\"), logger.log?.(\n      `[@sanity/client]: Paths encoded: ${report.encoded.length}, skipped: ${report.skipped.length}`\n    )), report.encoded.length > 0 && (logger?.log?.(\"[@sanity/client]: Table of encoded paths\"), (logger?.table || logger.log)?.(report.encoded)), report.skipped.length > 0) {\n      const skipped = /* @__PURE__ */ new Set();\n      for (const { path } of report.skipped)\n        skipped.add(path.replace(reKeySegment, \"0\").replace(/\\[\\d+\\]/g, \"[]\"));\n      logger?.log?.(\"[@sanity/client]: List of skipped paths\", [...skipped.values()]);\n    }\n    (isSkipping || isEncoding) && logger?.groupEnd?.();\n  }\n  return resultWithStega;\n}\nfunction prettyPathForLogging(path) {\n  return toString(jsonPathToStudioPath(path));\n}\nvar stegaEncodeSourceMap$1 = /* @__PURE__ */ Object.freeze({\n  __proto__: null,\n  stegaEncodeSourceMap\n});\n\n//# sourceMappingURL=stegaEncodeSourceMap.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/client/dist/_chunks-es/stegaEncodeSourceMap.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/client/dist/index.js":
/*!***************************************************!*\
  !*** ./node_modules/@sanity/client/dist/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BasePatch: () => (/* binding */ BasePatch),\n/* harmony export */   BaseTransaction: () => (/* binding */ BaseTransaction),\n/* harmony export */   ChannelError: () => (/* binding */ ChannelError),\n/* harmony export */   ClientError: () => (/* binding */ ClientError),\n/* harmony export */   ConnectionFailedError: () => (/* binding */ ConnectionFailedError),\n/* harmony export */   CorsOriginError: () => (/* binding */ CorsOriginError),\n/* harmony export */   DisconnectError: () => (/* binding */ DisconnectError),\n/* harmony export */   MessageError: () => (/* binding */ MessageError),\n/* harmony export */   MessageParseError: () => (/* binding */ MessageParseError),\n/* harmony export */   ObservablePatch: () => (/* binding */ ObservablePatch),\n/* harmony export */   ObservableSanityClient: () => (/* binding */ ObservableSanityClient),\n/* harmony export */   ObservableTransaction: () => (/* binding */ ObservableTransaction),\n/* harmony export */   Patch: () => (/* binding */ Patch),\n/* harmony export */   SanityClient: () => (/* binding */ SanityClient),\n/* harmony export */   ServerError: () => (/* binding */ ServerError),\n/* harmony export */   Transaction: () => (/* binding */ Transaction),\n/* harmony export */   connectEventSource: () => (/* binding */ connectEventSource),\n/* harmony export */   createClient: () => (/* binding */ createClient),\n/* harmony export */   \"default\": () => (/* binding */ deprecatedCreateClient),\n/* harmony export */   requester: () => (/* binding */ requester),\n/* harmony export */   unstable__adapter: () => (/* reexport safe */ get_it__WEBPACK_IMPORTED_MODULE_17__.a),\n/* harmony export */   unstable__environment: () => (/* reexport safe */ get_it__WEBPACK_IMPORTED_MODULE_0__.environment),\n/* harmony export */   validateApiPerspective: () => (/* binding */ validateApiPerspective)\n/* harmony export */ });\n/* harmony import */ var get_it__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! get-it */ \"(ssr)/./node_modules/get-it/dist/index.js\");\n/* harmony import */ var get_it__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! get-it */ \"(ssr)/./node_modules/get-it/dist/_chunks-es/node-request.js\");\n/* harmony import */ var get_it_middleware__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! get-it/middleware */ \"(ssr)/./node_modules/get-it/dist/middleware.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/Observable.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/defer.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/util/isObservable.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/of.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/mergeMap.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/from.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/lastValueFrom.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/shareReplay.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/catchError.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/concat.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/timer.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/throwError.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/empty.js\");\n/* harmony import */ var _chunks_es_stegaClean_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./_chunks-es/stegaClean.js */ \"(ssr)/./node_modules/@sanity/client/dist/_chunks-es/stegaClean.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! rxjs/operators */ \"(ssr)/./node_modules/rxjs/dist/cjs/operators/index.js\");\n\n\n\n\n\n\nclass ClientError extends Error {\n  response;\n  statusCode = 400;\n  responseBody;\n  details;\n  constructor(res) {\n    const props = extractErrorProps(res);\n    super(props.message), Object.assign(this, props);\n  }\n}\nclass ServerError extends Error {\n  response;\n  statusCode = 500;\n  responseBody;\n  details;\n  constructor(res) {\n    const props = extractErrorProps(res);\n    super(props.message), Object.assign(this, props);\n  }\n}\nfunction extractErrorProps(res) {\n  const body = res.body, props = {\n    response: res,\n    statusCode: res.statusCode,\n    responseBody: stringifyBody(body, res),\n    message: \"\",\n    details: void 0\n  };\n  if (body.error && body.message)\n    return props.message = `${body.error} - ${body.message}`, props;\n  if (isMutationError(body) || isActionError(body)) {\n    const allItems = body.error.items || [], items = allItems.slice(0, 5).map((item) => item.error?.description).filter(Boolean);\n    let itemsStr = items.length ? `:\n- ${items.join(`\n- `)}` : \"\";\n    return allItems.length > 5 && (itemsStr += `\n...and ${allItems.length - 5} more`), props.message = `${body.error.description}${itemsStr}`, props.details = body.error, props;\n  }\n  return body.error && body.error.description ? (props.message = body.error.description, props.details = body.error, props) : (props.message = body.error || body.message || httpErrorMessage(res), props);\n}\nfunction isMutationError(body) {\n  return isPlainObject(body) && isPlainObject(body.error) && body.error.type === \"mutationError\" && typeof body.error.description == \"string\";\n}\nfunction isActionError(body) {\n  return isPlainObject(body) && isPlainObject(body.error) && body.error.type === \"actionError\" && typeof body.error.description == \"string\";\n}\nfunction isPlainObject(obj) {\n  return typeof obj == \"object\" && obj !== null && !Array.isArray(obj);\n}\nfunction httpErrorMessage(res) {\n  const statusMessage = res.statusMessage ? ` ${res.statusMessage}` : \"\";\n  return `${res.method}-request to ${res.url} resulted in HTTP ${res.statusCode}${statusMessage}`;\n}\nfunction stringifyBody(body, res) {\n  return (res.headers[\"content-type\"] || \"\").toLowerCase().indexOf(\"application/json\") !== -1 ? JSON.stringify(body, null, 2) : body;\n}\nclass CorsOriginError extends Error {\n  projectId;\n  addOriginUrl;\n  constructor({ projectId: projectId2 }) {\n    super(\"CorsOriginError\"), this.name = \"CorsOriginError\", this.projectId = projectId2;\n    const url = new URL(`https://sanity.io/manage/project/${projectId2}/api`);\n    if (typeof location < \"u\") {\n      const { origin } = location;\n      url.searchParams.set(\"cors\", \"add\"), url.searchParams.set(\"origin\", origin), this.addOriginUrl = url, this.message = `The current origin is not allowed to connect to the Live Content API. Add it here: ${url}`;\n    } else\n      this.message = `The current origin is not allowed to connect to the Live Content API. Change your configuration here: ${url}`;\n  }\n}\nconst httpError = {\n  onResponse: (res) => {\n    if (res.statusCode >= 500)\n      throw new ServerError(res);\n    if (res.statusCode >= 400)\n      throw new ClientError(res);\n    return res;\n  }\n};\nfunction printWarnings() {\n  const seen = {};\n  return {\n    onResponse: (res) => {\n      const warn = res.headers[\"x-sanity-warning\"], warnings = Array.isArray(warn) ? warn : [warn];\n      for (const msg of warnings)\n        !msg || seen[msg] || (seen[msg] = !0, console.warn(msg));\n      return res;\n    }\n  };\n}\nfunction defineHttpRequest(envMiddleware) {\n  return (0,get_it__WEBPACK_IMPORTED_MODULE_0__.getIt)([\n    (0,get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.retry)({ shouldRetry }),\n    ...envMiddleware,\n    printWarnings(),\n    (0,get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.jsonRequest)(),\n    (0,get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.jsonResponse)(),\n    (0,get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.progress)(),\n    httpError,\n    (0,get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.observable)({ implementation: rxjs__WEBPACK_IMPORTED_MODULE_2__.Observable })\n  ]);\n}\nfunction shouldRetry(err, attempt, options) {\n  if (options.maxRetries === 0) return !1;\n  const isSafe = options.method === \"GET\" || options.method === \"HEAD\", isQuery = (options.uri || options.url).startsWith(\"/data/query\"), isRetriableResponse = err.response && (err.response.statusCode === 429 || err.response.statusCode === 502 || err.response.statusCode === 503);\n  return (isSafe || isQuery) && isRetriableResponse ? !0 : get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.retry.shouldRetry(err, attempt, options);\n}\nconst BASE_URL = \"https://www.sanity.io/help/\";\nfunction generateHelpUrl(slug) {\n  return BASE_URL + slug;\n}\nconst VALID_ASSET_TYPES = [\"image\", \"file\"], VALID_INSERT_LOCATIONS = [\"before\", \"after\", \"replace\"], dataset = (name2) => {\n  if (!/^(~[a-z0-9]{1}[-\\w]{0,63}|[a-z0-9]{1}[-\\w]{0,63})$/.test(name2))\n    throw new Error(\n      \"Datasets can only contain lowercase characters, numbers, underscores and dashes, and start with tilde, and be maximum 64 characters\"\n    );\n}, projectId = (id) => {\n  if (!/^[-a-z0-9]+$/i.test(id))\n    throw new Error(\"`projectId` can only contain only a-z, 0-9 and dashes\");\n}, validateAssetType = (type) => {\n  if (VALID_ASSET_TYPES.indexOf(type) === -1)\n    throw new Error(`Invalid asset type: ${type}. Must be one of ${VALID_ASSET_TYPES.join(\", \")}`);\n}, validateObject = (op, val) => {\n  if (val === null || typeof val != \"object\" || Array.isArray(val))\n    throw new Error(`${op}() takes an object of properties`);\n}, validateDocumentId = (op, id) => {\n  if (typeof id != \"string\" || !/^[a-z0-9_][a-z0-9_.-]{0,127}$/i.test(id) || id.includes(\"..\"))\n    throw new Error(`${op}(): \"${id}\" is not a valid document ID`);\n}, requireDocumentId = (op, doc) => {\n  if (!doc._id)\n    throw new Error(`${op}() requires that the document contains an ID (\"_id\" property)`);\n  validateDocumentId(op, doc._id);\n}, validateInsert = (at, selector, items) => {\n  const signature = \"insert(at, selector, items)\";\n  if (VALID_INSERT_LOCATIONS.indexOf(at) === -1) {\n    const valid = VALID_INSERT_LOCATIONS.map((loc) => `\"${loc}\"`).join(\", \");\n    throw new Error(`${signature} takes an \"at\"-argument which is one of: ${valid}`);\n  }\n  if (typeof selector != \"string\")\n    throw new Error(`${signature} takes a \"selector\"-argument which must be a string`);\n  if (!Array.isArray(items))\n    throw new Error(`${signature} takes an \"items\"-argument which must be an array`);\n}, hasDataset = (config) => {\n  if (!config.dataset)\n    throw new Error(\"`dataset` must be provided to perform queries\");\n  return config.dataset || \"\";\n}, requestTag = (tag) => {\n  if (typeof tag != \"string\" || !/^[a-z0-9._-]{1,75}$/i.test(tag))\n    throw new Error(\n      \"Tag can only contain alphanumeric characters, underscores, dashes and dots, and be between one and 75 characters long.\"\n    );\n  return tag;\n};\nfunction once(fn) {\n  let didCall = !1, returnValue;\n  return (...args) => (didCall || (returnValue = fn(...args), didCall = !0), returnValue);\n}\nconst createWarningPrinter = (message) => (\n  // eslint-disable-next-line no-console\n  once((...args) => console.warn(message.join(\" \"), ...args))\n), printCdnAndWithCredentialsWarning = createWarningPrinter([\n  \"Because you set `withCredentials` to true, we will override your `useCdn`\",\n  \"setting to be false since (cookie-based) credentials are never set on the CDN\"\n]), printCdnWarning = createWarningPrinter([\n  \"Since you haven't set a value for `useCdn`, we will deliver content using our\",\n  \"global, edge-cached API-CDN. If you wish to have content delivered faster, set\",\n  \"`useCdn: false` to use the Live API. Note: You may incur higher costs using the live API.\"\n]), printCdnPreviewDraftsWarning = createWarningPrinter([\n  \"The Sanity client is configured with the `perspective` set to `previewDrafts`, which doesn't support the API-CDN.\",\n  \"The Live API will be used instead. Set `useCdn: false` in your configuration to hide this warning.\"\n]), printBrowserTokenWarning = createWarningPrinter([\n  \"You have configured Sanity client to use a token in the browser. This may cause unintentional security issues.\",\n  `See ${generateHelpUrl(\n    \"js-client-browser-token\"\n  )} for more information and how to hide this warning.`\n]), printNoApiVersionSpecifiedWarning = createWarningPrinter([\n  \"Using the Sanity client without specifying an API version is deprecated.\",\n  `See ${generateHelpUrl(\"js-client-api-version\")}`\n]), printNoDefaultExport = createWarningPrinter([\n  \"The default export of @sanity/client has been deprecated. Use the named export `createClient` instead.\"\n]), defaultCdnHost = \"apicdn.sanity.io\", defaultConfig = {\n  apiHost: \"https://api.sanity.io\",\n  apiVersion: \"1\",\n  useProjectHostname: !0,\n  stega: { enabled: !1 }\n}, LOCALHOSTS = [\"localhost\", \"127.0.0.1\", \"0.0.0.0\"], isLocal = (host) => LOCALHOSTS.indexOf(host) !== -1;\nfunction validateApiVersion(apiVersion) {\n  if (apiVersion === \"1\" || apiVersion === \"X\")\n    return;\n  const apiDate = new Date(apiVersion);\n  if (!(/^\\d{4}-\\d{2}-\\d{2}$/.test(apiVersion) && apiDate instanceof Date && apiDate.getTime() > 0))\n    throw new Error(\"Invalid API version string, expected `1` or date in format `YYYY-MM-DD`\");\n}\nfunction validateApiPerspective(perspective) {\n  if (Array.isArray(perspective)) {\n    for (const perspectiveValue of perspective)\n      if (perspectiveValue !== \"published\" && perspectiveValue !== \"drafts\" && !(typeof perspectiveValue == \"string\" && perspectiveValue.startsWith(\"r\") && perspectiveValue !== \"raw\"))\n        throw new TypeError(\n          \"Invalid API perspective value, expected `published`, `drafts` or a valid release identifier string\"\n        );\n    return;\n  }\n  switch (perspective) {\n    case \"previewDrafts\":\n    case \"drafts\":\n    case \"published\":\n    case \"raw\":\n      return;\n    default:\n      throw new TypeError(\n        \"Invalid API perspective string, expected `published`, `previewDrafts` or `raw`\"\n      );\n  }\n}\nconst initConfig = (config, prevConfig) => {\n  const specifiedConfig = {\n    ...prevConfig,\n    ...config,\n    stega: {\n      ...typeof prevConfig.stega == \"boolean\" ? { enabled: prevConfig.stega } : prevConfig.stega || defaultConfig.stega,\n      ...typeof config.stega == \"boolean\" ? { enabled: config.stega } : config.stega || {}\n    }\n  };\n  specifiedConfig.apiVersion || printNoApiVersionSpecifiedWarning();\n  const newConfig = {\n    ...defaultConfig,\n    ...specifiedConfig\n  }, projectBased = newConfig.useProjectHostname;\n  if (typeof Promise > \"u\") {\n    const helpUrl = generateHelpUrl(\"js-client-promise-polyfill\");\n    throw new Error(`No native Promise-implementation found, polyfill needed - see ${helpUrl}`);\n  }\n  if (projectBased && !newConfig.projectId)\n    throw new Error(\"Configuration must contain `projectId`\");\n  if (typeof newConfig.perspective < \"u\" && validateApiPerspective(newConfig.perspective), \"encodeSourceMap\" in newConfig)\n    throw new Error(\n      \"It looks like you're using options meant for '@sanity/preview-kit/client'. 'encodeSourceMap' is not supported in '@sanity/client'. Did you mean 'stega.enabled'?\"\n    );\n  if (\"encodeSourceMapAtPath\" in newConfig)\n    throw new Error(\n      \"It looks like you're using options meant for '@sanity/preview-kit/client'. 'encodeSourceMapAtPath' is not supported in '@sanity/client'. Did you mean 'stega.filter'?\"\n    );\n  if (typeof newConfig.stega.enabled != \"boolean\")\n    throw new Error(`stega.enabled must be a boolean, received ${newConfig.stega.enabled}`);\n  if (newConfig.stega.enabled && newConfig.stega.studioUrl === void 0)\n    throw new Error(\"stega.studioUrl must be defined when stega.enabled is true\");\n  if (newConfig.stega.enabled && typeof newConfig.stega.studioUrl != \"string\" && typeof newConfig.stega.studioUrl != \"function\")\n    throw new Error(\n      `stega.studioUrl must be a string or a function, received ${newConfig.stega.studioUrl}`\n    );\n  const isBrowser = typeof window < \"u\" && window.location && window.location.hostname, isLocalhost = isBrowser && isLocal(window.location.hostname);\n  isBrowser && isLocalhost && newConfig.token && newConfig.ignoreBrowserTokenWarning !== !0 ? printBrowserTokenWarning() : typeof newConfig.useCdn > \"u\" && printCdnWarning(), projectBased && projectId(newConfig.projectId), newConfig.dataset && dataset(newConfig.dataset), \"requestTagPrefix\" in newConfig && (newConfig.requestTagPrefix = newConfig.requestTagPrefix ? requestTag(newConfig.requestTagPrefix).replace(/\\.+$/, \"\") : void 0), newConfig.apiVersion = `${newConfig.apiVersion}`.replace(/^v/, \"\"), newConfig.isDefaultApi = newConfig.apiHost === defaultConfig.apiHost, newConfig.useCdn === !0 && newConfig.withCredentials && printCdnAndWithCredentialsWarning(), newConfig.useCdn = newConfig.useCdn !== !1 && !newConfig.withCredentials, validateApiVersion(newConfig.apiVersion);\n  const hostParts = newConfig.apiHost.split(\"://\", 2), protocol = hostParts[0], host = hostParts[1], cdnHost = newConfig.isDefaultApi ? defaultCdnHost : host;\n  return newConfig.useProjectHostname ? (newConfig.url = `${protocol}://${newConfig.projectId}.${host}/v${newConfig.apiVersion}`, newConfig.cdnUrl = `${protocol}://${newConfig.projectId}.${cdnHost}/v${newConfig.apiVersion}`) : (newConfig.url = `${newConfig.apiHost}/v${newConfig.apiVersion}`, newConfig.cdnUrl = newConfig.url), newConfig;\n};\nclass ConnectionFailedError extends Error {\n  name = \"ConnectionFailedError\";\n}\nclass DisconnectError extends Error {\n  name = \"DisconnectError\";\n  reason;\n  constructor(message, reason, options = {}) {\n    super(message, options), this.reason = reason;\n  }\n}\nclass ChannelError extends Error {\n  name = \"ChannelError\";\n  data;\n  constructor(message, data) {\n    super(message), this.data = data;\n  }\n}\nclass MessageError extends Error {\n  name = \"MessageError\";\n  data;\n  constructor(message, data, options = {}) {\n    super(message, options), this.data = data;\n  }\n}\nclass MessageParseError extends Error {\n  name = \"MessageParseError\";\n}\nconst REQUIRED_EVENTS = [\"channelError\", \"disconnect\"];\nfunction connectEventSource(initEventSource, events) {\n  return (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.defer)(() => {\n    const es = initEventSource();\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.isObservable)(es) ? es : (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.of)(es);\n  }).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_6__.mergeMap)((es) => connectWithESInstance(es, events)));\n}\nfunction connectWithESInstance(es, events) {\n  return new rxjs__WEBPACK_IMPORTED_MODULE_2__.Observable((observer) => {\n    const emitOpen = events.includes(\"open\"), emitReconnect = events.includes(\"reconnect\");\n    function onError(evt) {\n      if (\"data\" in evt) {\n        const [parseError, event] = parseEvent(evt);\n        observer.error(\n          parseError ? new MessageParseError(\"Unable to parse EventSource error message\", { cause: event }) : new MessageError((event?.data).message, event)\n        );\n        return;\n      }\n      es.readyState === es.CLOSED ? observer.error(new ConnectionFailedError(\"EventSource connection failed\")) : emitReconnect && observer.next({ type: \"reconnect\" });\n    }\n    function onOpen() {\n      observer.next({ type: \"open\" });\n    }\n    function onMessage(message) {\n      const [parseError, event] = parseEvent(message);\n      if (parseError) {\n        observer.error(\n          new MessageParseError(\"Unable to parse EventSource message\", { cause: parseError })\n        );\n        return;\n      }\n      if (message.type === \"channelError\") {\n        observer.error(new ChannelError(extractErrorMessage(event?.data), event.data));\n        return;\n      }\n      if (message.type === \"disconnect\") {\n        observer.error(\n          new DisconnectError(\n            `Server disconnected client: ${event.data?.reason || \"unknown error\"}`\n          )\n        );\n        return;\n      }\n      observer.next({\n        type: message.type,\n        id: message.lastEventId,\n        ...event.data ? { data: event.data } : {}\n      });\n    }\n    es.addEventListener(\"error\", onError), emitOpen && es.addEventListener(\"open\", onOpen);\n    const cleanedEvents = [.../* @__PURE__ */ new Set([...REQUIRED_EVENTS, ...events])].filter((type) => type !== \"error\" && type !== \"open\" && type !== \"reconnect\");\n    return cleanedEvents.forEach((type) => es.addEventListener(type, onMessage)), () => {\n      es.removeEventListener(\"error\", onError), emitOpen && es.removeEventListener(\"open\", onOpen), cleanedEvents.forEach((type) => es.removeEventListener(type, onMessage)), es.close();\n    };\n  });\n}\nfunction parseEvent(message) {\n  try {\n    const data = typeof message.data == \"string\" && JSON.parse(message.data);\n    return [\n      null,\n      {\n        type: message.type,\n        id: message.lastEventId,\n        ...isEmptyObject(data) ? {} : { data }\n      }\n    ];\n  } catch (err) {\n    return [err, null];\n  }\n}\nfunction extractErrorMessage(err) {\n  return err.error ? err.error.description ? err.error.description : typeof err.error == \"string\" ? err.error : JSON.stringify(err.error, null, 2) : err.message || \"Unknown listener error\";\n}\nfunction isEmptyObject(data) {\n  for (const _ in data)\n    return !1;\n  return !0;\n}\nfunction getSelection(sel) {\n  if (typeof sel == \"string\")\n    return { id: sel };\n  if (Array.isArray(sel))\n    return { query: \"*[_id in $ids]\", params: { ids: sel } };\n  if (typeof sel == \"object\" && sel !== null && \"query\" in sel && typeof sel.query == \"string\")\n    return \"params\" in sel && typeof sel.params == \"object\" && sel.params !== null ? { query: sel.query, params: sel.params } : { query: sel.query };\n  const selectionOpts = [\n    \"* Document ID (<docId>)\",\n    \"* Array of document IDs\",\n    \"* Object containing `query`\"\n  ].join(`\n`);\n  throw new Error(`Unknown selection - must be one of:\n\n${selectionOpts}`);\n}\nclass BasePatch {\n  selection;\n  operations;\n  constructor(selection, operations = {}) {\n    this.selection = selection, this.operations = operations;\n  }\n  /**\n   * Sets the given attributes to the document. Does NOT merge objects.\n   * The operation is added to the current patch, ready to be commited by `commit()`\n   *\n   * @param attrs - Attributes to set. To set a deep attribute, use JSONMatch, eg: \\{\"nested.prop\": \"value\"\\}\n   */\n  set(attrs) {\n    return this._assign(\"set\", attrs);\n  }\n  /**\n   * Sets the given attributes to the document if they are not currently set. Does NOT merge objects.\n   * The operation is added to the current patch, ready to be commited by `commit()`\n   *\n   * @param attrs - Attributes to set. To set a deep attribute, use JSONMatch, eg: \\{\"nested.prop\": \"value\"\\}\n   */\n  setIfMissing(attrs) {\n    return this._assign(\"setIfMissing\", attrs);\n  }\n  /**\n   * Performs a \"diff-match-patch\" operation on the string attributes provided.\n   * The operation is added to the current patch, ready to be commited by `commit()`\n   *\n   * @param attrs - Attributes to perform operation on. To set a deep attribute, use JSONMatch, eg: \\{\"nested.prop\": \"dmp\"\\}\n   */\n  diffMatchPatch(attrs) {\n    return validateObject(\"diffMatchPatch\", attrs), this._assign(\"diffMatchPatch\", attrs);\n  }\n  /**\n   * Unsets the attribute paths provided.\n   * The operation is added to the current patch, ready to be commited by `commit()`\n   *\n   * @param attrs - Attribute paths to unset.\n   */\n  unset(attrs) {\n    if (!Array.isArray(attrs))\n      throw new Error(\"unset(attrs) takes an array of attributes to unset, non-array given\");\n    return this.operations = Object.assign({}, this.operations, { unset: attrs }), this;\n  }\n  /**\n   * Increment a numeric value. Each entry in the argument is either an attribute or a JSON path. The value may be a positive or negative integer or floating-point value. The operation will fail if target value is not a numeric value, or doesn't exist.\n   *\n   * @param attrs - Object of attribute paths to increment, values representing the number to increment by.\n   */\n  inc(attrs) {\n    return this._assign(\"inc\", attrs);\n  }\n  /**\n   * Decrement a numeric value. Each entry in the argument is either an attribute or a JSON path. The value may be a positive or negative integer or floating-point value. The operation will fail if target value is not a numeric value, or doesn't exist.\n   *\n   * @param attrs - Object of attribute paths to decrement, values representing the number to decrement by.\n   */\n  dec(attrs) {\n    return this._assign(\"dec\", attrs);\n  }\n  /**\n   * Provides methods for modifying arrays, by inserting, appending and replacing elements via a JSONPath expression.\n   *\n   * @param at - Location to insert at, relative to the given selector, or 'replace' the matched path\n   * @param selector - JSONPath expression, eg `comments[-1]` or `blocks[_key==\"abc123\"]`\n   * @param items - Array of items to insert/replace\n   */\n  insert(at, selector, items) {\n    return validateInsert(at, selector, items), this._assign(\"insert\", { [at]: selector, items });\n  }\n  /**\n   * Append the given items to the array at the given JSONPath\n   *\n   * @param selector - Attribute/path to append to, eg `comments` or `person.hobbies`\n   * @param items - Array of items to append to the array\n   */\n  append(selector, items) {\n    return this.insert(\"after\", `${selector}[-1]`, items);\n  }\n  /**\n   * Prepend the given items to the array at the given JSONPath\n   *\n   * @param selector - Attribute/path to prepend to, eg `comments` or `person.hobbies`\n   * @param items - Array of items to prepend to the array\n   */\n  prepend(selector, items) {\n    return this.insert(\"before\", `${selector}[0]`, items);\n  }\n  /**\n   * Change the contents of an array by removing existing elements and/or adding new elements.\n   *\n   * @param selector - Attribute or JSONPath expression for array\n   * @param start - Index at which to start changing the array (with origin 0). If greater than the length of the array, actual starting index will be set to the length of the array. If negative, will begin that many elements from the end of the array (with origin -1) and will be set to 0 if absolute value is greater than the length of the array.x\n   * @param deleteCount - An integer indicating the number of old array elements to remove.\n   * @param items - The elements to add to the array, beginning at the start index. If you don't specify any elements, splice() will only remove elements from the array.\n   */\n  splice(selector, start, deleteCount, items) {\n    const delAll = typeof deleteCount > \"u\" || deleteCount === -1, startIndex = start < 0 ? start - 1 : start, delCount = delAll ? -1 : Math.max(0, start + deleteCount), delRange = startIndex < 0 && delCount >= 0 ? \"\" : delCount, rangeSelector = `${selector}[${startIndex}:${delRange}]`;\n    return this.insert(\"replace\", rangeSelector, items || []);\n  }\n  /**\n   * Adds a revision clause, preventing the document from being patched if the `_rev` property does not match the given value\n   *\n   * @param rev - Revision to lock the patch to\n   */\n  ifRevisionId(rev) {\n    return this.operations.ifRevisionID = rev, this;\n  }\n  /**\n   * Return a plain JSON representation of the patch\n   */\n  serialize() {\n    return { ...getSelection(this.selection), ...this.operations };\n  }\n  /**\n   * Return a plain JSON representation of the patch\n   */\n  toJSON() {\n    return this.serialize();\n  }\n  /**\n   * Clears the patch of all operations\n   */\n  reset() {\n    return this.operations = {}, this;\n  }\n  _assign(op, props, merge = !0) {\n    return validateObject(op, props), this.operations = Object.assign({}, this.operations, {\n      [op]: Object.assign({}, merge && this.operations[op] || {}, props)\n    }), this;\n  }\n  _set(op, props) {\n    return this._assign(op, props, !1);\n  }\n}\nclass ObservablePatch extends BasePatch {\n  #client;\n  constructor(selection, operations, client) {\n    super(selection, operations), this.#client = client;\n  }\n  /**\n   * Clones the patch\n   */\n  clone() {\n    return new ObservablePatch(this.selection, { ...this.operations }, this.#client);\n  }\n  commit(options) {\n    if (!this.#client)\n      throw new Error(\n        \"No `client` passed to patch, either provide one or pass the patch to a clients `mutate()` method\"\n      );\n    const returnFirst = typeof this.selection == \"string\", opts = Object.assign({ returnFirst, returnDocuments: !0 }, options);\n    return this.#client.mutate({ patch: this.serialize() }, opts);\n  }\n}\nclass Patch extends BasePatch {\n  #client;\n  constructor(selection, operations, client) {\n    super(selection, operations), this.#client = client;\n  }\n  /**\n   * Clones the patch\n   */\n  clone() {\n    return new Patch(this.selection, { ...this.operations }, this.#client);\n  }\n  commit(options) {\n    if (!this.#client)\n      throw new Error(\n        \"No `client` passed to patch, either provide one or pass the patch to a clients `mutate()` method\"\n      );\n    const returnFirst = typeof this.selection == \"string\", opts = Object.assign({ returnFirst, returnDocuments: !0 }, options);\n    return this.#client.mutate({ patch: this.serialize() }, opts);\n  }\n}\nconst defaultMutateOptions = { returnDocuments: !1 };\nclass BaseTransaction {\n  operations;\n  trxId;\n  constructor(operations = [], transactionId) {\n    this.operations = operations, this.trxId = transactionId;\n  }\n  /**\n   * Creates a new Sanity document. If `_id` is provided and already exists, the mutation will fail. If no `_id` is given, one will automatically be generated by the database.\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param doc - Document to create. Requires a `_type` property.\n   */\n  create(doc) {\n    return validateObject(\"create\", doc), this._add({ create: doc });\n  }\n  /**\n   * Creates a new Sanity document. If a document with the same `_id` already exists, the create operation will be ignored.\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param doc - Document to create if it does not already exist. Requires `_id` and `_type` properties.\n   */\n  createIfNotExists(doc) {\n    const op = \"createIfNotExists\";\n    return validateObject(op, doc), requireDocumentId(op, doc), this._add({ [op]: doc });\n  }\n  /**\n   * Creates a new Sanity document, or replaces an existing one if the same `_id` is already used.\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param doc - Document to create or replace. Requires `_id` and `_type` properties.\n   */\n  createOrReplace(doc) {\n    const op = \"createOrReplace\";\n    return validateObject(op, doc), requireDocumentId(op, doc), this._add({ [op]: doc });\n  }\n  /**\n   * Deletes the document with the given document ID\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param documentId - Document ID to delete\n   */\n  delete(documentId) {\n    return validateDocumentId(\"delete\", documentId), this._add({ delete: { id: documentId } });\n  }\n  transactionId(id) {\n    return id ? (this.trxId = id, this) : this.trxId;\n  }\n  /**\n   * Return a plain JSON representation of the transaction\n   */\n  serialize() {\n    return [...this.operations];\n  }\n  /**\n   * Return a plain JSON representation of the transaction\n   */\n  toJSON() {\n    return this.serialize();\n  }\n  /**\n   * Clears the transaction of all operations\n   */\n  reset() {\n    return this.operations = [], this;\n  }\n  _add(mut) {\n    return this.operations.push(mut), this;\n  }\n}\nclass Transaction extends BaseTransaction {\n  #client;\n  constructor(operations, client, transactionId) {\n    super(operations, transactionId), this.#client = client;\n  }\n  /**\n   * Clones the transaction\n   */\n  clone() {\n    return new Transaction([...this.operations], this.#client, this.trxId);\n  }\n  commit(options) {\n    if (!this.#client)\n      throw new Error(\n        \"No `client` passed to transaction, either provide one or pass the transaction to a clients `mutate()` method\"\n      );\n    return this.#client.mutate(\n      this.serialize(),\n      Object.assign({ transactionId: this.trxId }, defaultMutateOptions, options || {})\n    );\n  }\n  patch(patchOrDocumentId, patchOps) {\n    const isBuilder = typeof patchOps == \"function\", isPatch = typeof patchOrDocumentId != \"string\" && patchOrDocumentId instanceof Patch, isMutationSelection = typeof patchOrDocumentId == \"object\" && (\"query\" in patchOrDocumentId || \"id\" in patchOrDocumentId);\n    if (isPatch)\n      return this._add({ patch: patchOrDocumentId.serialize() });\n    if (isBuilder) {\n      const patch = patchOps(new Patch(patchOrDocumentId, {}, this.#client));\n      if (!(patch instanceof Patch))\n        throw new Error(\"function passed to `patch()` must return the patch\");\n      return this._add({ patch: patch.serialize() });\n    }\n    if (isMutationSelection) {\n      const patch = new Patch(patchOrDocumentId, patchOps || {}, this.#client);\n      return this._add({ patch: patch.serialize() });\n    }\n    return this._add({ patch: { id: patchOrDocumentId, ...patchOps } });\n  }\n}\nclass ObservableTransaction extends BaseTransaction {\n  #client;\n  constructor(operations, client, transactionId) {\n    super(operations, transactionId), this.#client = client;\n  }\n  /**\n   * Clones the transaction\n   */\n  clone() {\n    return new ObservableTransaction([...this.operations], this.#client, this.trxId);\n  }\n  commit(options) {\n    if (!this.#client)\n      throw new Error(\n        \"No `client` passed to transaction, either provide one or pass the transaction to a clients `mutate()` method\"\n      );\n    return this.#client.mutate(\n      this.serialize(),\n      Object.assign({ transactionId: this.trxId }, defaultMutateOptions, options || {})\n    );\n  }\n  patch(patchOrDocumentId, patchOps) {\n    const isBuilder = typeof patchOps == \"function\";\n    if (typeof patchOrDocumentId != \"string\" && patchOrDocumentId instanceof ObservablePatch)\n      return this._add({ patch: patchOrDocumentId.serialize() });\n    if (isBuilder) {\n      const patch = patchOps(new ObservablePatch(patchOrDocumentId, {}, this.#client));\n      if (!(patch instanceof ObservablePatch))\n        throw new Error(\"function passed to `patch()` must return the patch\");\n      return this._add({ patch: patch.serialize() });\n    }\n    return this._add({ patch: { id: patchOrDocumentId, ...patchOps } });\n  }\n}\nconst projectHeader = \"X-Sanity-Project-ID\";\nfunction requestOptions(config, overrides = {}) {\n  const headers2 = {}, token = overrides.token || config.token;\n  token && (headers2.Authorization = `Bearer ${token}`), !overrides.useGlobalApi && !config.useProjectHostname && config.projectId && (headers2[projectHeader] = config.projectId);\n  const withCredentials = !!(typeof overrides.withCredentials > \"u\" ? config.token || config.withCredentials : overrides.withCredentials), timeout = typeof overrides.timeout > \"u\" ? config.timeout : overrides.timeout;\n  return Object.assign({}, overrides, {\n    headers: Object.assign({}, headers2, overrides.headers || {}),\n    timeout: typeof timeout > \"u\" ? 5 * 60 * 1e3 : timeout,\n    proxy: overrides.proxy || config.proxy,\n    json: !0,\n    withCredentials,\n    fetch: typeof overrides.fetch == \"object\" && typeof config.fetch == \"object\" ? { ...config.fetch, ...overrides.fetch } : overrides.fetch || config.fetch\n  });\n}\nconst encodeQueryString = ({\n  query,\n  params = {},\n  options = {}\n}) => {\n  const searchParams = new URLSearchParams(), { tag, includeMutations, returnQuery, ...opts } = options;\n  tag && searchParams.append(\"tag\", tag), searchParams.append(\"query\", query);\n  for (const [key, value] of Object.entries(params))\n    searchParams.append(`$${key}`, JSON.stringify(value));\n  for (const [key, value] of Object.entries(opts))\n    value && searchParams.append(key, `${value}`);\n  return returnQuery === !1 && searchParams.append(\"returnQuery\", \"false\"), includeMutations === !1 && searchParams.append(\"includeMutations\", \"false\"), `?${searchParams}`;\n}, excludeFalsey = (param, defValue) => param === !1 ? void 0 : typeof param > \"u\" ? defValue : param, getMutationQuery = (options = {}) => ({\n  dryRun: options.dryRun,\n  returnIds: !0,\n  returnDocuments: excludeFalsey(options.returnDocuments, !0),\n  visibility: options.visibility || \"sync\",\n  autoGenerateArrayKeys: options.autoGenerateArrayKeys,\n  skipCrossDatasetReferenceValidation: options.skipCrossDatasetReferenceValidation\n}), isResponse = (event) => event.type === \"response\", getBody = (event) => event.body, indexBy = (docs, attr) => docs.reduce((indexed, doc) => (indexed[attr(doc)] = doc, indexed), /* @__PURE__ */ Object.create(null)), getQuerySizeLimit = 11264;\nfunction _fetch(client, httpRequest, _stega, query, _params = {}, options = {}) {\n  const stega = \"stega\" in options ? {\n    ..._stega || {},\n    ...typeof options.stega == \"boolean\" ? { enabled: options.stega } : options.stega || {}\n  } : _stega, params = stega.enabled ? (0,_chunks_es_stegaClean_js__WEBPACK_IMPORTED_MODULE_7__.stegaClean)(_params) : _params, mapResponse = options.filterResponse === !1 ? (res) => res : (res) => res.result, { cache, next, ...opts } = {\n    // Opt out of setting a `signal` on an internal `fetch` if one isn't provided.\n    // This is necessary in React Server Components to avoid opting out of Request Memoization.\n    useAbortSignal: typeof options.signal < \"u\",\n    // Set `resultSourceMap' when stega is enabled, as it's required for encoding.\n    resultSourceMap: stega.enabled ? \"withKeyArraySelector\" : options.resultSourceMap,\n    ...options,\n    // Default to not returning the query, unless `filterResponse` is `false`,\n    // or `returnQuery` is explicitly set. `true` is the default in Content Lake, so skip if truthy\n    returnQuery: options.filterResponse === !1 && options.returnQuery !== !1\n  }, reqOpts = typeof cache < \"u\" || typeof next < \"u\" ? { ...opts, fetch: { cache, next } } : opts, $request = _dataRequest(client, httpRequest, \"query\", { query, params }, reqOpts);\n  return stega.enabled ? $request.pipe(\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.combineLatestWith)(\n      (0,rxjs__WEBPACK_IMPORTED_MODULE_9__.from)(\n        __webpack_require__.e(/*! import() */ \"vendor-chunks/@sanity\").then(__webpack_require__.bind(__webpack_require__, /*! ./_chunks-es/stegaEncodeSourceMap.js */ \"(ssr)/./node_modules/@sanity/client/dist/_chunks-es/stegaEncodeSourceMap.js\")).then(function(n) {\n          return n.stegaEncodeSourceMap$1;\n        }).then(\n          ({ stegaEncodeSourceMap }) => stegaEncodeSourceMap\n        )\n      )\n    ),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)(\n      ([res, stegaEncodeSourceMap]) => {\n        const result = stegaEncodeSourceMap(res.result, res.resultSourceMap, stega);\n        return mapResponse({ ...res, result });\n      }\n    )\n  ) : $request.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)(mapResponse));\n}\nfunction _getDocument(client, httpRequest, id, opts = {}) {\n  const options = {\n    uri: _getDataUrl(client, \"doc\", id),\n    json: !0,\n    tag: opts.tag,\n    signal: opts.signal\n  };\n  return _requestObservable(client, httpRequest, options).pipe(\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.filter)(isResponse),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)((event) => event.body.documents && event.body.documents[0])\n  );\n}\nfunction _getDocuments(client, httpRequest, ids, opts = {}) {\n  const options = {\n    uri: _getDataUrl(client, \"doc\", ids.join(\",\")),\n    json: !0,\n    tag: opts.tag,\n    signal: opts.signal\n  };\n  return _requestObservable(client, httpRequest, options).pipe(\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.filter)(isResponse),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)((event) => {\n      const indexed = indexBy(event.body.documents || [], (doc) => doc._id);\n      return ids.map((id) => indexed[id] || null);\n    })\n  );\n}\nfunction _createIfNotExists(client, httpRequest, doc, options) {\n  return requireDocumentId(\"createIfNotExists\", doc), _create(client, httpRequest, doc, \"createIfNotExists\", options);\n}\nfunction _createOrReplace(client, httpRequest, doc, options) {\n  return requireDocumentId(\"createOrReplace\", doc), _create(client, httpRequest, doc, \"createOrReplace\", options);\n}\nfunction _delete(client, httpRequest, selection, options) {\n  return _dataRequest(\n    client,\n    httpRequest,\n    \"mutate\",\n    { mutations: [{ delete: getSelection(selection) }] },\n    options\n  );\n}\nfunction _mutate(client, httpRequest, mutations, options) {\n  let mut;\n  mutations instanceof Patch || mutations instanceof ObservablePatch ? mut = { patch: mutations.serialize() } : mutations instanceof Transaction || mutations instanceof ObservableTransaction ? mut = mutations.serialize() : mut = mutations;\n  const muts = Array.isArray(mut) ? mut : [mut], transactionId = options && options.transactionId || void 0;\n  return _dataRequest(client, httpRequest, \"mutate\", { mutations: muts, transactionId }, options);\n}\nfunction _action(client, httpRequest, actions, options) {\n  const acts = Array.isArray(actions) ? actions : [actions], transactionId = options && options.transactionId || void 0, skipCrossDatasetReferenceValidation = options && options.skipCrossDatasetReferenceValidation || void 0, dryRun = options && options.dryRun || void 0;\n  return _dataRequest(\n    client,\n    httpRequest,\n    \"actions\",\n    { actions: acts, transactionId, skipCrossDatasetReferenceValidation, dryRun },\n    options\n  );\n}\nfunction _dataRequest(client, httpRequest, endpoint, body, options = {}) {\n  const isMutation = endpoint === \"mutate\", isAction = endpoint === \"actions\", isQuery = endpoint === \"query\", strQuery = isMutation || isAction ? \"\" : encodeQueryString(body), useGet = !isMutation && !isAction && strQuery.length < getQuerySizeLimit, stringQuery = useGet ? strQuery : \"\", returnFirst = options.returnFirst, { timeout, token, tag, headers: headers2, returnQuery, lastLiveEventId, cacheMode } = options, uri = _getDataUrl(client, endpoint, stringQuery), reqOptions = {\n    method: useGet ? \"GET\" : \"POST\",\n    uri,\n    json: !0,\n    body: useGet ? void 0 : body,\n    query: isMutation && getMutationQuery(options),\n    timeout,\n    headers: headers2,\n    token,\n    tag,\n    returnQuery,\n    perspective: options.perspective,\n    resultSourceMap: options.resultSourceMap,\n    lastLiveEventId: Array.isArray(lastLiveEventId) ? lastLiveEventId[0] : lastLiveEventId,\n    cacheMode,\n    canUseCdn: isQuery,\n    signal: options.signal,\n    fetch: options.fetch,\n    useAbortSignal: options.useAbortSignal,\n    useCdn: options.useCdn\n  };\n  return _requestObservable(client, httpRequest, reqOptions).pipe(\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.filter)(isResponse),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)(getBody),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)((res) => {\n      if (!isMutation)\n        return res;\n      const results = res.results || [];\n      if (options.returnDocuments)\n        return returnFirst ? results[0] && results[0].document : results.map((mut) => mut.document);\n      const key = returnFirst ? \"documentId\" : \"documentIds\", ids = returnFirst ? results[0] && results[0].id : results.map((mut) => mut.id);\n      return {\n        transactionId: res.transactionId,\n        results,\n        [key]: ids\n      };\n    })\n  );\n}\nfunction _create(client, httpRequest, doc, op, options = {}) {\n  const mutation = { [op]: doc }, opts = Object.assign({ returnFirst: !0, returnDocuments: !0 }, options);\n  return _dataRequest(client, httpRequest, \"mutate\", { mutations: [mutation] }, opts);\n}\nfunction _requestObservable(client, httpRequest, options) {\n  const uri = options.url || options.uri, config = client.config(), canUseCdn = typeof options.canUseCdn > \"u\" ? [\"GET\", \"HEAD\"].indexOf(options.method || \"GET\") >= 0 && uri.indexOf(\"/data/\") === 0 : options.canUseCdn;\n  let useCdn = (options.useCdn ?? config.useCdn) && canUseCdn;\n  const tag = options.tag && config.requestTagPrefix ? [config.requestTagPrefix, options.tag].join(\".\") : options.tag || config.requestTagPrefix;\n  if (tag && options.tag !== null && (options.query = { tag: requestTag(tag), ...options.query }), [\"GET\", \"HEAD\", \"POST\"].indexOf(options.method || \"GET\") >= 0 && uri.indexOf(\"/data/query/\") === 0) {\n    const resultSourceMap = options.resultSourceMap ?? config.resultSourceMap;\n    resultSourceMap !== void 0 && resultSourceMap !== !1 && (options.query = { resultSourceMap, ...options.query });\n    const perspectiveOption = options.perspective || config.perspective;\n    typeof perspectiveOption < \"u\" && (validateApiPerspective(perspectiveOption), options.query = {\n      perspective: Array.isArray(perspectiveOption) ? perspectiveOption.join(\",\") : perspectiveOption,\n      ...options.query\n    }, perspectiveOption === \"previewDrafts\" && useCdn && (useCdn = !1, printCdnPreviewDraftsWarning())), options.lastLiveEventId && (options.query = { ...options.query, lastLiveEventId: options.lastLiveEventId }), options.returnQuery === !1 && (options.query = { returnQuery: \"false\", ...options.query }), useCdn && options.cacheMode == \"noStale\" && (options.query = { cacheMode: \"noStale\", ...options.query });\n  }\n  const reqOptions = requestOptions(\n    config,\n    Object.assign({}, options, {\n      url: _getUrl(client, uri, useCdn)\n    })\n  ), request = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Observable(\n    (subscriber) => httpRequest(reqOptions, config.requester).subscribe(subscriber)\n  );\n  return options.signal ? request.pipe(_withAbortSignal(options.signal)) : request;\n}\nfunction _request(client, httpRequest, options) {\n  return _requestObservable(client, httpRequest, options).pipe(\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.filter)((event) => event.type === \"response\"),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)((event) => event.body)\n  );\n}\nfunction _getDataUrl(client, operation, path) {\n  const config = client.config(), catalog = hasDataset(config), baseUri = `/${operation}/${catalog}`;\n  return `/data${path ? `${baseUri}/${path}` : baseUri}`.replace(/\\/($|\\?)/, \"$1\");\n}\nfunction _getUrl(client, uri, canUseCdn = !1) {\n  const { url, cdnUrl } = client.config();\n  return `${canUseCdn ? cdnUrl : url}/${uri.replace(/^\\//, \"\")}`;\n}\nfunction _withAbortSignal(signal) {\n  return (input) => new rxjs__WEBPACK_IMPORTED_MODULE_2__.Observable((observer) => {\n    const abort = () => observer.error(_createAbortError(signal));\n    if (signal && signal.aborted) {\n      abort();\n      return;\n    }\n    const subscription = input.subscribe(observer);\n    return signal.addEventListener(\"abort\", abort), () => {\n      signal.removeEventListener(\"abort\", abort), subscription.unsubscribe();\n    };\n  });\n}\nconst isDomExceptionSupported = !!globalThis.DOMException;\nfunction _createAbortError(signal) {\n  if (isDomExceptionSupported)\n    return new DOMException(signal?.reason ?? \"The operation was aborted.\", \"AbortError\");\n  const error = new Error(signal?.reason ?? \"The operation was aborted.\");\n  return error.name = \"AbortError\", error;\n}\nclass ObservableAssetsClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  upload(assetType, body, options) {\n    return _upload(this.#client, this.#httpRequest, assetType, body, options);\n  }\n}\nclass AssetsClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  upload(assetType, body, options) {\n    const observable2 = _upload(this.#client, this.#httpRequest, assetType, body, options);\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(\n      observable2.pipe(\n        (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.filter)((event) => event.type === \"response\"),\n        (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)(\n          (event) => event.body.document\n        )\n      )\n    );\n  }\n}\nfunction _upload(client, httpRequest, assetType, body, opts = {}) {\n  validateAssetType(assetType);\n  let meta = opts.extract || void 0;\n  meta && !meta.length && (meta = [\"none\"]);\n  const dataset2 = hasDataset(client.config()), assetEndpoint = assetType === \"image\" ? \"images\" : \"files\", options = optionsFromFile(opts, body), { tag, label, title, description, creditLine, filename, source } = options, query = {\n    label,\n    title,\n    description,\n    filename,\n    meta,\n    creditLine\n  };\n  return source && (query.sourceId = source.id, query.sourceName = source.name, query.sourceUrl = source.url), _requestObservable(client, httpRequest, {\n    tag,\n    method: \"POST\",\n    timeout: options.timeout || 0,\n    uri: `/assets/${assetEndpoint}/${dataset2}`,\n    headers: options.contentType ? { \"Content-Type\": options.contentType } : {},\n    query,\n    body\n  });\n}\nfunction optionsFromFile(opts, file) {\n  return typeof File > \"u\" || !(file instanceof File) ? opts : Object.assign(\n    {\n      filename: opts.preserveFilename === !1 ? void 0 : file.name,\n      contentType: file.type\n    },\n    opts\n  );\n}\nvar defaults = (obj, defaults2) => Object.keys(defaults2).concat(Object.keys(obj)).reduce((target, prop) => (target[prop] = typeof obj[prop] > \"u\" ? defaults2[prop] : obj[prop], target), {});\nconst pick = (obj, props) => props.reduce((selection, prop) => (typeof obj[prop] > \"u\" || (selection[prop] = obj[prop]), selection), {}), eventSourcePolyfill = (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.defer)(() => Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/@sanity\"), __webpack_require__.e(\"vendor-chunks/eventsource\")]).then(__webpack_require__.t.bind(__webpack_require__, /*! @sanity/eventsource */ \"(ssr)/./node_modules/@sanity/eventsource/node.js\", 19))).pipe(\n  (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)(({ default: EventSource2 }) => EventSource2),\n  (0,rxjs__WEBPACK_IMPORTED_MODULE_11__.shareReplay)(1)\n);\nfunction reconnectOnConnectionFailure() {\n  return function(source) {\n    return source.pipe(\n      (0,rxjs__WEBPACK_IMPORTED_MODULE_12__.catchError)((err, caught) => err instanceof ConnectionFailedError ? (0,rxjs__WEBPACK_IMPORTED_MODULE_13__.concat)((0,rxjs__WEBPACK_IMPORTED_MODULE_5__.of)({ type: \"reconnect\" }), (0,rxjs__WEBPACK_IMPORTED_MODULE_14__.timer)(1e3).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_6__.mergeMap)(() => caught))) : (0,rxjs__WEBPACK_IMPORTED_MODULE_15__.throwError)(() => err))\n    );\n  };\n}\nconst MAX_URL_LENGTH = 14800, possibleOptions = [\n  \"includePreviousRevision\",\n  \"includeResult\",\n  \"includeMutations\",\n  \"visibility\",\n  \"effectFormat\",\n  \"tag\"\n], defaultOptions = {\n  includeResult: !0\n};\nfunction _listen(query, params, opts = {}) {\n  const { url, token, withCredentials, requestTagPrefix } = this.config(), tag = opts.tag && requestTagPrefix ? [requestTagPrefix, opts.tag].join(\".\") : opts.tag, options = { ...defaults(opts, defaultOptions), tag }, listenOpts = pick(options, possibleOptions), qs = encodeQueryString({ query, params, options: { tag, ...listenOpts } }), uri = `${url}${_getDataUrl(this, \"listen\", qs)}`;\n  if (uri.length > MAX_URL_LENGTH)\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_15__.throwError)(() => new Error(\"Query too large for listener\"));\n  const listenFor = options.events ? options.events : [\"mutation\"], esOptions = {};\n  return (token || withCredentials) && (esOptions.withCredentials = !0), token && (esOptions.headers = {\n    Authorization: `Bearer ${token}`\n  }), connectEventSource(() => (\n    // use polyfill if there is no global EventSource or if we need to set headers\n    (typeof EventSource > \"u\" || esOptions.headers ? eventSourcePolyfill : (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.of)(EventSource)).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)((EventSource2) => new EventSource2(uri, esOptions)))\n  ), listenFor).pipe(\n    reconnectOnConnectionFailure(),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.filter)((event) => listenFor.includes(event.type)),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)(\n      (event) => ({\n        type: event.type,\n        ...\"data\" in event ? event.data : {}\n      })\n    )\n  );\n}\nconst requiredApiVersion = \"2021-03-26\";\nclass LiveClient {\n  #client;\n  constructor(client) {\n    this.#client = client;\n  }\n  /**\n   * Requires `apiVersion` to be `2021-03-26` or later.\n   */\n  events({\n    includeDrafts = !1,\n    tag: _tag\n  } = {}) {\n    const {\n      projectId: projectId2,\n      apiVersion: _apiVersion,\n      token,\n      withCredentials,\n      requestTagPrefix\n    } = this.#client.config(), apiVersion = _apiVersion.replace(/^v/, \"\");\n    if (apiVersion !== \"X\" && apiVersion < requiredApiVersion)\n      throw new Error(\n        `The live events API requires API version ${requiredApiVersion} or later. The current API version is ${apiVersion}. Please update your API version to use this feature.`\n      );\n    if (includeDrafts && !token && !withCredentials)\n      throw new Error(\n        \"The live events API requires a token or withCredentials when 'includeDrafts: true'. Please update your client configuration. The token should have the lowest possible access role.\"\n      );\n    if (includeDrafts && apiVersion !== \"X\")\n      throw new Error(\n        \"The live events API requires API version X when 'includeDrafts: true'. This API is experimental and may change or even be removed.\"\n      );\n    const path = _getDataUrl(this.#client, \"live/events\"), url = new URL(this.#client.getUrl(path, !1)), tag = _tag && requestTagPrefix ? [requestTagPrefix, _tag].join(\".\") : _tag;\n    tag && url.searchParams.set(\"tag\", tag), includeDrafts && url.searchParams.set(\"includeDrafts\", \"true\");\n    const esOptions = {};\n    includeDrafts && token && (esOptions.headers = {\n      Authorization: `Bearer ${token}`\n    }), includeDrafts && withCredentials && (esOptions.withCredentials = !0);\n    const events = connectEventSource(() => (\n      // use polyfill if there is no global EventSource or if we need to set headers\n      (typeof EventSource > \"u\" || esOptions.headers ? eventSourcePolyfill : (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.of)(EventSource)).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)((EventSource2) => new EventSource2(url.href, esOptions)))\n    ), [\n      \"message\",\n      \"restart\",\n      \"welcome\",\n      \"reconnect\"\n    ]).pipe(\n      reconnectOnConnectionFailure(),\n      (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)((event) => {\n        if (event.type === \"message\") {\n          const { data, ...rest } = event;\n          return { ...rest, tags: data.tags };\n        }\n        return event;\n      })\n    ), checkCors = fetchObservable(url, {\n      method: \"OPTIONS\",\n      mode: \"cors\",\n      credentials: esOptions.withCredentials ? \"include\" : \"omit\",\n      headers: esOptions.headers\n    }).pipe(\n      (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.mergeMap)(() => rxjs__WEBPACK_IMPORTED_MODULE_16__.EMPTY),\n      (0,rxjs__WEBPACK_IMPORTED_MODULE_12__.catchError)(() => {\n        throw new CorsOriginError({ projectId: projectId2 });\n      })\n    );\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_13__.concat)(checkCors, events);\n  }\n}\nfunction fetchObservable(url, init) {\n  return new rxjs__WEBPACK_IMPORTED_MODULE_2__.Observable((observer) => {\n    const controller = new AbortController(), signal = controller.signal;\n    return fetch(url, { ...init, signal: controller.signal }).then(\n      (response) => {\n        observer.next(response), observer.complete();\n      },\n      (err) => {\n        signal.aborted || observer.error(err);\n      }\n    ), () => controller.abort();\n  });\n}\nclass ObservableDatasetsClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  /**\n   * Create a new dataset with the given name\n   *\n   * @param name - Name of the dataset to create\n   * @param options - Options for the dataset\n   */\n  create(name2, options) {\n    return _modify(this.#client, this.#httpRequest, \"PUT\", name2, options);\n  }\n  /**\n   * Edit a dataset with the given name\n   *\n   * @param name - Name of the dataset to edit\n   * @param options - New options for the dataset\n   */\n  edit(name2, options) {\n    return _modify(this.#client, this.#httpRequest, \"PATCH\", name2, options);\n  }\n  /**\n   * Delete a dataset with the given name\n   *\n   * @param name - Name of the dataset to delete\n   */\n  delete(name2) {\n    return _modify(this.#client, this.#httpRequest, \"DELETE\", name2);\n  }\n  /**\n   * Fetch a list of datasets for the configured project\n   */\n  list() {\n    return _request(this.#client, this.#httpRequest, {\n      uri: \"/datasets\",\n      tag: null\n    });\n  }\n}\nclass DatasetsClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  /**\n   * Create a new dataset with the given name\n   *\n   * @param name - Name of the dataset to create\n   * @param options - Options for the dataset\n   */\n  create(name2, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(\n      _modify(this.#client, this.#httpRequest, \"PUT\", name2, options)\n    );\n  }\n  /**\n   * Edit a dataset with the given name\n   *\n   * @param name - Name of the dataset to edit\n   * @param options - New options for the dataset\n   */\n  edit(name2, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(\n      _modify(this.#client, this.#httpRequest, \"PATCH\", name2, options)\n    );\n  }\n  /**\n   * Delete a dataset with the given name\n   *\n   * @param name - Name of the dataset to delete\n   */\n  delete(name2) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(_modify(this.#client, this.#httpRequest, \"DELETE\", name2));\n  }\n  /**\n   * Fetch a list of datasets for the configured project\n   */\n  list() {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(\n      _request(this.#client, this.#httpRequest, { uri: \"/datasets\", tag: null })\n    );\n  }\n}\nfunction _modify(client, httpRequest, method, name2, options) {\n  return dataset(name2), _request(client, httpRequest, {\n    method,\n    uri: `/datasets/${name2}`,\n    body: options,\n    tag: null\n  });\n}\nclass ObservableProjectsClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  list(options) {\n    const uri = options?.includeMembers === !1 ? \"/projects?includeMembers=false\" : \"/projects\";\n    return _request(this.#client, this.#httpRequest, { uri });\n  }\n  /**\n   * Fetch a project by project ID\n   *\n   * @param projectId - ID of the project to fetch\n   */\n  getById(projectId2) {\n    return _request(this.#client, this.#httpRequest, { uri: `/projects/${projectId2}` });\n  }\n}\nclass ProjectsClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  list(options) {\n    const uri = options?.includeMembers === !1 ? \"/projects?includeMembers=false\" : \"/projects\";\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(_request(this.#client, this.#httpRequest, { uri }));\n  }\n  /**\n   * Fetch a project by project ID\n   *\n   * @param projectId - ID of the project to fetch\n   */\n  getById(projectId2) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(\n      _request(this.#client, this.#httpRequest, { uri: `/projects/${projectId2}` })\n    );\n  }\n}\nclass ObservableUsersClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  /**\n   * Fetch a user by user ID\n   *\n   * @param id - User ID of the user to fetch. If `me` is provided, a minimal response including the users role is returned.\n   */\n  getById(id) {\n    return _request(\n      this.#client,\n      this.#httpRequest,\n      { uri: `/users/${id}` }\n    );\n  }\n}\nclass UsersClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  /**\n   * Fetch a user by user ID\n   *\n   * @param id - User ID of the user to fetch. If `me` is provided, a minimal response including the users role is returned.\n   */\n  getById(id) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(\n      _request(this.#client, this.#httpRequest, {\n        uri: `/users/${id}`\n      })\n    );\n  }\n}\nclass ObservableSanityClient {\n  assets;\n  datasets;\n  live;\n  projects;\n  users;\n  /**\n   * Private properties\n   */\n  #clientConfig;\n  #httpRequest;\n  /**\n   * Instance properties\n   */\n  listen = _listen;\n  constructor(httpRequest, config = defaultConfig) {\n    this.config(config), this.#httpRequest = httpRequest, this.assets = new ObservableAssetsClient(this, this.#httpRequest), this.datasets = new ObservableDatasetsClient(this, this.#httpRequest), this.live = new LiveClient(this), this.projects = new ObservableProjectsClient(this, this.#httpRequest), this.users = new ObservableUsersClient(this, this.#httpRequest);\n  }\n  /**\n   * Clone the client - returns a new instance\n   */\n  clone() {\n    return new ObservableSanityClient(this.#httpRequest, this.config());\n  }\n  config(newConfig) {\n    if (newConfig === void 0)\n      return { ...this.#clientConfig };\n    if (this.#clientConfig && this.#clientConfig.allowReconfigure === !1)\n      throw new Error(\n        \"Existing client instance cannot be reconfigured - use `withConfig(newConfig)` to return a new client\"\n      );\n    return this.#clientConfig = initConfig(newConfig, this.#clientConfig || {}), this;\n  }\n  /**\n   * Clone the client with a new (partial) configuration.\n   *\n   * @param newConfig - New client configuration properties, shallowly merged with existing configuration\n   */\n  withConfig(newConfig) {\n    const thisConfig = this.config();\n    return new ObservableSanityClient(this.#httpRequest, {\n      ...thisConfig,\n      ...newConfig,\n      stega: {\n        ...thisConfig.stega || {},\n        ...typeof newConfig?.stega == \"boolean\" ? { enabled: newConfig.stega } : newConfig?.stega || {}\n      }\n    });\n  }\n  fetch(query, params, options) {\n    return _fetch(\n      this,\n      this.#httpRequest,\n      this.#clientConfig.stega,\n      query,\n      params,\n      options\n    );\n  }\n  /**\n   * Fetch a single document with the given ID.\n   *\n   * @param id - Document ID to fetch\n   * @param options - Request options\n   */\n  getDocument(id, options) {\n    return _getDocument(this, this.#httpRequest, id, options);\n  }\n  /**\n   * Fetch multiple documents in one request.\n   * Should be used sparingly - performing a query is usually a better option.\n   * The order/position of documents is preserved based on the original array of IDs.\n   * If any of the documents are missing, they will be replaced by a `null` entry in the returned array\n   *\n   * @param ids - Document IDs to fetch\n   * @param options - Request options\n   */\n  getDocuments(ids, options) {\n    return _getDocuments(this, this.#httpRequest, ids, options);\n  }\n  create(document, options) {\n    return _create(this, this.#httpRequest, document, \"create\", options);\n  }\n  createIfNotExists(document, options) {\n    return _createIfNotExists(this, this.#httpRequest, document, options);\n  }\n  createOrReplace(document, options) {\n    return _createOrReplace(this, this.#httpRequest, document, options);\n  }\n  delete(selection, options) {\n    return _delete(this, this.#httpRequest, selection, options);\n  }\n  mutate(operations, options) {\n    return _mutate(this, this.#httpRequest, operations, options);\n  }\n  /**\n   * Create a new buildable patch of operations to perform\n   *\n   * @param selection - Document ID, an array of document IDs, or an object with `query` and optional `params`, defining which document(s) to patch\n   * @param operations - Optional object of patch operations to initialize the patch instance with\n   * @returns Patch instance - call `.commit()` to perform the operations defined\n   */\n  patch(selection, operations) {\n    return new ObservablePatch(selection, operations, this);\n  }\n  /**\n   * Create a new transaction of mutations\n   *\n   * @param operations - Optional array of mutation operations to initialize the transaction instance with\n   */\n  transaction(operations) {\n    return new ObservableTransaction(operations, this);\n  }\n  /**\n   * Perform action operations against the configured dataset\n   *\n   * @param operations - Action operation(s) to execute\n   * @param options - Action options\n   */\n  action(operations, options) {\n    return _action(this, this.#httpRequest, operations, options);\n  }\n  /**\n   * Perform an HTTP request against the Sanity API\n   *\n   * @param options - Request options\n   */\n  request(options) {\n    return _request(this, this.#httpRequest, options);\n  }\n  /**\n   * Get a Sanity API URL for the URI provided\n   *\n   * @param uri - URI/path to build URL for\n   * @param canUseCdn - Whether or not to allow using the API CDN for this route\n   */\n  getUrl(uri, canUseCdn) {\n    return _getUrl(this, uri, canUseCdn);\n  }\n  /**\n   * Get a Sanity API URL for the data operation and path provided\n   *\n   * @param operation - Data operation (eg `query`, `mutate`, `listen` or similar)\n   * @param path - Path to append after the operation\n   */\n  getDataUrl(operation, path) {\n    return _getDataUrl(this, operation, path);\n  }\n}\nclass SanityClient {\n  assets;\n  datasets;\n  live;\n  projects;\n  users;\n  /**\n   * Observable version of the Sanity client, with the same configuration as the promise-based one\n   */\n  observable;\n  /**\n   * Private properties\n   */\n  #clientConfig;\n  #httpRequest;\n  /**\n   * Instance properties\n   */\n  listen = _listen;\n  constructor(httpRequest, config = defaultConfig) {\n    this.config(config), this.#httpRequest = httpRequest, this.assets = new AssetsClient(this, this.#httpRequest), this.datasets = new DatasetsClient(this, this.#httpRequest), this.live = new LiveClient(this), this.projects = new ProjectsClient(this, this.#httpRequest), this.users = new UsersClient(this, this.#httpRequest), this.observable = new ObservableSanityClient(httpRequest, config);\n  }\n  /**\n   * Clone the client - returns a new instance\n   */\n  clone() {\n    return new SanityClient(this.#httpRequest, this.config());\n  }\n  config(newConfig) {\n    if (newConfig === void 0)\n      return { ...this.#clientConfig };\n    if (this.#clientConfig && this.#clientConfig.allowReconfigure === !1)\n      throw new Error(\n        \"Existing client instance cannot be reconfigured - use `withConfig(newConfig)` to return a new client\"\n      );\n    return this.observable && this.observable.config(newConfig), this.#clientConfig = initConfig(newConfig, this.#clientConfig || {}), this;\n  }\n  /**\n   * Clone the client with a new (partial) configuration.\n   *\n   * @param newConfig - New client configuration properties, shallowly merged with existing configuration\n   */\n  withConfig(newConfig) {\n    const thisConfig = this.config();\n    return new SanityClient(this.#httpRequest, {\n      ...thisConfig,\n      ...newConfig,\n      stega: {\n        ...thisConfig.stega || {},\n        ...typeof newConfig?.stega == \"boolean\" ? { enabled: newConfig.stega } : newConfig?.stega || {}\n      }\n    });\n  }\n  fetch(query, params, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(\n      _fetch(\n        this,\n        this.#httpRequest,\n        this.#clientConfig.stega,\n        query,\n        params,\n        options\n      )\n    );\n  }\n  /**\n   * Fetch a single document with the given ID.\n   *\n   * @param id - Document ID to fetch\n   * @param options - Request options\n   */\n  getDocument(id, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(_getDocument(this, this.#httpRequest, id, options));\n  }\n  /**\n   * Fetch multiple documents in one request.\n   * Should be used sparingly - performing a query is usually a better option.\n   * The order/position of documents is preserved based on the original array of IDs.\n   * If any of the documents are missing, they will be replaced by a `null` entry in the returned array\n   *\n   * @param ids - Document IDs to fetch\n   * @param options - Request options\n   */\n  getDocuments(ids, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(_getDocuments(this, this.#httpRequest, ids, options));\n  }\n  create(document, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(\n      _create(this, this.#httpRequest, document, \"create\", options)\n    );\n  }\n  createIfNotExists(document, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(\n      _createIfNotExists(this, this.#httpRequest, document, options)\n    );\n  }\n  createOrReplace(document, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(\n      _createOrReplace(this, this.#httpRequest, document, options)\n    );\n  }\n  delete(selection, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(_delete(this, this.#httpRequest, selection, options));\n  }\n  mutate(operations, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(_mutate(this, this.#httpRequest, operations, options));\n  }\n  /**\n   * Create a new buildable patch of operations to perform\n   *\n   * @param selection - Document ID, an array of document IDs, or an object with `query` and optional `params`, defining which document(s) to patch\n   * @param operations - Optional object of patch operations to initialize the patch instance with\n   * @returns Patch instance - call `.commit()` to perform the operations defined\n   */\n  patch(documentId, operations) {\n    return new Patch(documentId, operations, this);\n  }\n  /**\n   * Create a new transaction of mutations\n   *\n   * @param operations - Optional array of mutation operations to initialize the transaction instance with\n   */\n  transaction(operations) {\n    return new Transaction(operations, this);\n  }\n  /**\n   * Perform action operations against the configured dataset\n   * Returns a promise that resolves to the transaction result\n   *\n   * @param operations - Action operation(s) to execute\n   * @param options - Action options\n   */\n  action(operations, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(_action(this, this.#httpRequest, operations, options));\n  }\n  /**\n   * Perform a request against the Sanity API\n   * NOTE: Only use this for Sanity API endpoints, not for your own APIs!\n   *\n   * @param options - Request options\n   * @returns Promise resolving to the response body\n   */\n  request(options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(_request(this, this.#httpRequest, options));\n  }\n  /**\n   * Perform an HTTP request a `/data` sub-endpoint\n   * NOTE: Considered internal, thus marked as deprecated. Use `request` instead.\n   *\n   * @deprecated - Use `request()` or your own HTTP library instead\n   * @param endpoint - Endpoint to hit (mutate, query etc)\n   * @param body - Request body\n   * @param options - Request options\n   * @internal\n   */\n  dataRequest(endpoint, body, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(_dataRequest(this, this.#httpRequest, endpoint, body, options));\n  }\n  /**\n   * Get a Sanity API URL for the URI provided\n   *\n   * @param uri - URI/path to build URL for\n   * @param canUseCdn - Whether or not to allow using the API CDN for this route\n   */\n  getUrl(uri, canUseCdn) {\n    return _getUrl(this, uri, canUseCdn);\n  }\n  /**\n   * Get a Sanity API URL for the data operation and path provided\n   *\n   * @param operation - Data operation (eg `query`, `mutate`, `listen` or similar)\n   * @param path - Path to append after the operation\n   */\n  getDataUrl(operation, path) {\n    return _getDataUrl(this, operation, path);\n  }\n}\nfunction defineCreateClientExports(envMiddleware, ClassConstructor) {\n  return { requester: defineHttpRequest(envMiddleware), createClient: (config) => {\n    const clientRequester = defineHttpRequest(envMiddleware);\n    return new ClassConstructor(\n      (options, requester2) => (requester2 || clientRequester)({\n        maxRedirects: 0,\n        maxRetries: config.maxRetries,\n        retryDelay: config.retryDelay,\n        ...options\n      }),\n      config\n    );\n  } };\n}\nfunction defineDeprecatedCreateClient(createClient2) {\n  return function(config) {\n    return printNoDefaultExport(), createClient2(config);\n  };\n}\nvar name = \"@sanity/client\", version = \"6.25.0\";\nconst middleware = [\n  (0,get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.debug)({ verbose: !0, namespace: \"sanity:client\" }),\n  (0,get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.headers)({ \"User-Agent\": `${name} ${version}` }),\n  // Enable keep-alive, and in addition limit the number of sockets that can be opened.\n  // This avoids opening too many connections to the server if someone tries to execute\n  // a bunch of requests in parallel. It's recommended to have a concurrency limit\n  // at a \"higher limit\" (i.e. you shouldn't actually execute hundreds of requests in parallel),\n  // and this is mainly to minimize the impact for the network and server.\n  //\n  // We're currently matching the same defaults as browsers:\n  // https://stackoverflow.com/questions/26003756/is-there-a-limit-practical-or-otherwise-to-the-number-of-web-sockets-a-page-op\n  (0,get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.agent)({\n    keepAlive: !0,\n    maxSockets: 30,\n    maxTotalSockets: 256\n  })\n], exp = defineCreateClientExports(middleware, SanityClient), requester = exp.requester, createClient = exp.createClient, deprecatedCreateClient = defineDeprecatedCreateClient(createClient);\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9jbGllbnQvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUErQjtBQUNlO0FBQ29FO0FBQ21DO0FBQzdGO0FBQ1E7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixZQUFZLElBQUksYUFBYTtBQUMzRDtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0osS0FBSztBQUNMO0FBQ0EsU0FBUyxxQkFBcUIsMkJBQTJCLHVCQUF1QixFQUFFLFNBQVM7QUFDM0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnREFBZ0Qsa0JBQWtCO0FBQ2xFLFlBQVksV0FBVyxjQUFjLFNBQVMsbUJBQW1CLGVBQWUsRUFBRSxjQUFjO0FBQ2hHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLHVCQUF1QjtBQUN2QztBQUNBLDREQUE0RCxXQUFXO0FBQ3ZFO0FBQ0EsY0FBYyxTQUFTO0FBQ3ZCLGlOQUFpTixJQUFJO0FBQ3JOLE1BQU07QUFDTiw4SEFBOEgsSUFBSTtBQUNsSTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyw2Q0FBSztBQUNkLElBQUksd0RBQUssR0FBRyxhQUFhO0FBQ3pCO0FBQ0E7QUFDQSxJQUFJLDhEQUFXO0FBQ2YsSUFBSSwrREFBWTtBQUNoQixJQUFJLDJEQUFRO0FBQ1o7QUFDQSxJQUFJLDZEQUFVLEdBQUcsZ0JBQWdCLDRDQUFVLEVBQUU7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJEQUEyRCxvREFBSztBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsRUFBRSxNQUFNLEtBQUssVUFBVSxFQUFFLE1BQU0sS0FBSztBQUN4RDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLDJDQUEyQyxLQUFLLG1CQUFtQiw2QkFBNkI7QUFDaEcsQ0FBQztBQUNEO0FBQ0EsdUJBQXVCLEdBQUc7QUFDMUIsQ0FBQztBQUNELHVEQUF1RCxNQUFNO0FBQzdELHVCQUF1QixHQUFHLE9BQU8sR0FBRztBQUNwQyxDQUFDO0FBQ0Q7QUFDQSx1QkFBdUIsR0FBRztBQUMxQjtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsMERBQTBELElBQUk7QUFDOUQsdUJBQXVCLFdBQVcsMENBQTBDLE1BQU07QUFDbEY7QUFDQTtBQUNBLHVCQUF1QixXQUFXO0FBQ2xDO0FBQ0EsdUJBQXVCLFdBQVc7QUFDbEMsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCwrQ0FBK0MsS0FBSztBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFNBQVMseUNBQXlDO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWCxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRTtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRCw0QkFBNEI7QUFDOUUsOENBQThDLHdCQUF3QjtBQUN0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLHFGQUFxRixRQUFRO0FBQzdGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlFQUFpRSx3QkFBd0I7QUFDekY7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrRUFBa0UsMEJBQTBCO0FBQzVGO0FBQ0E7QUFDQSw4Y0FBOGMscUJBQXFCO0FBQ25lO0FBQ0EsNERBQTRELFNBQVMsS0FBSyxvQkFBb0IsR0FBRyxLQUFLLElBQUkscUJBQXFCLHlCQUF5QixTQUFTLEtBQUssb0JBQW9CLEdBQUcsUUFBUSxJQUFJLHFCQUFxQix5QkFBeUIsa0JBQWtCLElBQUkscUJBQXFCO0FBQ2xTO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLDJDQUFLO0FBQ2Q7QUFDQSxXQUFXLGtEQUFZLFlBQVksd0NBQUU7QUFDckMsR0FBRyxPQUFPLDhDQUFRO0FBQ2xCO0FBQ0E7QUFDQSxhQUFhLDRDQUFVO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0RkFBNEYsY0FBYztBQUMxRztBQUNBO0FBQ0E7QUFDQSxrSkFBa0osbUJBQW1CO0FBQ3JLO0FBQ0E7QUFDQSxzQkFBc0IsY0FBYztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUVBQXlFLG1CQUFtQjtBQUM1RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxzQ0FBc0M7QUFDakY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsbUJBQW1CO0FBQzdDLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLElBQUk7QUFDeEM7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLGFBQWEsbUNBQW1DO0FBQ2hEO0FBQ0EsdUZBQXVGLHVDQUF1QyxJQUFJO0FBQ2xJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLEVBQUUsY0FBYztBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxRkFBcUY7QUFDckY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFGQUFxRjtBQUNyRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0dBQXNHO0FBQ3RHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDLHFCQUFxQixjQUFjO0FBQ2hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUVBQXlFLHVCQUF1QjtBQUNoRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLFNBQVM7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyxTQUFTO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseVBBQXlQLFNBQVMsR0FBRyxXQUFXLEdBQUcsU0FBUztBQUM1UjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0I7QUFDL0I7QUFDQTtBQUNBLHdFQUF3RTtBQUN4RSw0QkFBNEIsb0NBQW9DO0FBQ2hFLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQWlELG9CQUFvQjtBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrRkFBa0Ysa0NBQWtDO0FBQ3BILGlDQUFpQyx5QkFBeUI7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxvQkFBb0I7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0ZBQWtGLGtDQUFrQztBQUNwSCxpQ0FBaUMseUJBQXlCO0FBQzFEO0FBQ0E7QUFDQSwrQkFBK0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzREFBc0QsYUFBYTtBQUNuRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0RUFBNEUsV0FBVztBQUN2RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0RUFBNEUsV0FBVztBQUN2RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUVBQWlFLFVBQVUsa0JBQWtCO0FBQzdGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsMkJBQTJCLHFDQUFxQztBQUN0RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLHNDQUFzQztBQUMvRDtBQUNBLDREQUE0RDtBQUM1RDtBQUNBO0FBQ0EseUJBQXlCLDBCQUEwQjtBQUNuRDtBQUNBO0FBQ0EsK0RBQStEO0FBQy9ELHlCQUF5QiwwQkFBMEI7QUFDbkQ7QUFDQSx1QkFBdUIsU0FBUyxzQ0FBc0M7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiwyQkFBMkIscUNBQXFDO0FBQ3RGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsc0NBQXNDO0FBQy9EO0FBQ0Esc0VBQXNFO0FBQ3RFO0FBQ0E7QUFDQSx5QkFBeUIsMEJBQTBCO0FBQ25EO0FBQ0EsdUJBQXVCLFNBQVMsc0NBQXNDO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QztBQUM5QyxxQkFBcUI7QUFDckIsK0NBQStDLE1BQU07QUFDckQ7QUFDQSx5QkFBeUI7QUFDekIsNkJBQTZCLG1DQUFtQztBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFGQUFxRixzQ0FBc0M7QUFDM0gsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLENBQUM7QUFDRCxnREFBZ0QsOENBQThDO0FBQzlGO0FBQ0E7QUFDQSw0QkFBNEIsSUFBSTtBQUNoQztBQUNBLHlDQUF5QyxNQUFNO0FBQy9DLDZKQUE2SixhQUFhO0FBQzFLLENBQUMsc0lBQXNJO0FBQ3ZJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxnRUFBZ0UsY0FBYztBQUM5RTtBQUNBLG1CQUFtQjtBQUNuQiw2Q0FBNkMseUJBQXlCO0FBQ3RFLElBQUksbUNBQW1DLG9FQUFVLHlHQUF5Ryx1QkFBdUI7QUFDakw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRyx3REFBd0Qsa0JBQWtCLGdCQUFnQixnRUFBZ0UsZUFBZTtBQUM1SztBQUNBLElBQUksaUVBQWlCO0FBQ3JCLE1BQU0sMENBQUk7QUFDVixRQUFRLDZPQUE4QztBQUN0RDtBQUNBLFNBQVM7QUFDVCxhQUFhLHNCQUFzQjtBQUNuQztBQUNBO0FBQ0E7QUFDQSxJQUFJLG1EQUFHO0FBQ1A7QUFDQTtBQUNBLDZCQUE2QixnQkFBZ0I7QUFDN0M7QUFDQTtBQUNBLG9CQUFvQixtREFBRztBQUN2QjtBQUNBLHdEQUF3RDtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksc0RBQU07QUFDVixJQUFJLG1EQUFHO0FBQ1A7QUFDQTtBQUNBLDBEQUEwRDtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksc0RBQU07QUFDVixJQUFJLG1EQUFHO0FBQ1A7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sY0FBYyxpQ0FBaUMsR0FBRztBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0VBQStFLCtCQUErQjtBQUM5RztBQUNBLHVEQUF1RCxnQ0FBZ0M7QUFDdkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLDJFQUEyRTtBQUNqRjtBQUNBO0FBQ0E7QUFDQSx1RUFBdUU7QUFDdkUsc1VBQXNVLGtGQUFrRjtBQUN4WjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLHNEQUFNO0FBQ1YsSUFBSSxtREFBRztBQUNQLElBQUksbURBQUc7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSwyREFBMkQ7QUFDM0QscUJBQXFCLFdBQVcseUJBQXlCLHNDQUFzQztBQUMvRix1REFBdUQsdUJBQXVCO0FBQzlFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3REFBd0Qsd0NBQXdDO0FBQ2hHO0FBQ0EsK0VBQStFLG1DQUFtQztBQUNsSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUssbUpBQW1KLDREQUE0RCxvREFBb0Qsd0NBQXdDLGtFQUFrRSx3Q0FBd0M7QUFDMVo7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0EsS0FBSztBQUNMLG1CQUFtQiw0Q0FBVTtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLHNEQUFNO0FBQ1YsSUFBSSxtREFBRztBQUNQO0FBQ0E7QUFDQTtBQUNBLDhFQUE4RSxVQUFVLEdBQUcsUUFBUTtBQUNuRyxpQkFBaUIsVUFBVSxRQUFRLEdBQUcsS0FBSyxZQUFZO0FBQ3ZEO0FBQ0E7QUFDQSxVQUFVLGNBQWM7QUFDeEIsWUFBWSx5QkFBeUIsR0FBRyx1QkFBdUI7QUFDL0Q7QUFDQTtBQUNBLHdCQUF3Qiw0Q0FBVTtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsb0RBQWE7QUFDeEI7QUFDQSxRQUFRLHNEQUFNO0FBQ2QsUUFBUSxtREFBRztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdFQUFnRTtBQUNoRTtBQUNBO0FBQ0E7QUFDQSxxSkFBcUosK0RBQStEO0FBQ3BOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsY0FBYyxHQUFHLFNBQVM7QUFDOUMscUNBQXFDLHNDQUFzQyxJQUFJO0FBQy9FO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLDZMQUE2TDtBQUM3TCx1SUFBdUkseUJBQXlCLDJDQUFLLE9BQU8seVFBQTZCO0FBQ3pNLEVBQUUsbURBQUcsSUFBSSx1QkFBdUI7QUFDaEMsRUFBRSxrREFBVztBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSxpREFBVSx5REFBeUQsNkNBQU0sQ0FBQyx3Q0FBRSxHQUFHLG1CQUFtQixHQUFHLDRDQUFLLFdBQVcsOENBQVEsbUJBQW1CLGlEQUFVO0FBQ2hLO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDO0FBQ3pDLFVBQVUsZ0RBQWdELHFIQUFxSCx3Q0FBd0Msd0VBQXdFLDBCQUEwQixzQkFBc0IsWUFBWSxJQUFJLEVBQUUsZ0NBQWdDO0FBQ2pZO0FBQ0EsV0FBVyxpREFBVTtBQUNyQjtBQUNBO0FBQ0EsNkJBQTZCLE1BQU07QUFDbkMsR0FBRztBQUNIO0FBQ0EsMkVBQTJFLHdDQUFFLG9CQUFvQixtREFBRztBQUNwRztBQUNBO0FBQ0EsSUFBSSxzREFBTTtBQUNWLElBQUksbURBQUc7QUFDUDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSxJQUFJO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSxvREFBb0Qsb0JBQW9CLHVDQUF1QyxXQUFXO0FBQzFIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLE1BQU07QUFDckMsS0FBSztBQUNMO0FBQ0E7QUFDQSw2RUFBNkUsd0NBQUUsb0JBQW9CLG1EQUFHO0FBQ3RHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSxtREFBRztBQUNUO0FBQ0Esa0JBQWtCLGdCQUFnQjtBQUNsQyxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLE1BQU0sOENBQVEsT0FBTyx3Q0FBSztBQUMxQixNQUFNLGlEQUFVO0FBQ2hCLG9DQUFvQyx1QkFBdUI7QUFDM0QsT0FBTztBQUNQO0FBQ0EsV0FBVyw2Q0FBTTtBQUNqQjtBQUNBO0FBQ0E7QUFDQSxhQUFhLDRDQUFVO0FBQ3ZCO0FBQ0Esd0JBQXdCLG9DQUFvQztBQUM1RDtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsb0RBQWE7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLG9EQUFhO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsb0RBQWE7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsb0RBQWE7QUFDeEIsa0RBQWtELDZCQUE2QjtBQUMvRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsTUFBTTtBQUM1QjtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RCxLQUFLO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdURBQXVELGtCQUFrQixXQUFXLEdBQUc7QUFDdkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLG9EQUFhLDZDQUE2QyxLQUFLO0FBQzFFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxvREFBYTtBQUN4QixrREFBa0Qsa0JBQWtCLFdBQVcsR0FBRztBQUNsRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLGVBQWUsR0FBRztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLG9EQUFhO0FBQ3hCO0FBQ0EsdUJBQXVCLEdBQUc7QUFDMUIsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4RUFBOEU7QUFDOUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDO0FBQ2pDLG9EQUFvRCwyQkFBMkI7QUFDL0U7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9JQUFvSTtBQUNwSTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakMsb0RBQW9ELDJCQUEyQjtBQUMvRTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsV0FBVyxvREFBYTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxvREFBYTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxvREFBYTtBQUN4QjtBQUNBO0FBQ0EsV0FBVyxvREFBYTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsb0RBQWE7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLG9EQUFhO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxvREFBYTtBQUN4QjtBQUNBO0FBQ0EsV0FBVyxvREFBYTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLG9EQUFhO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsb0RBQWE7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxvREFBYTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUUsd0RBQUssR0FBRyx5Q0FBeUM7QUFDbkQsRUFBRSwwREFBTyxHQUFHLGlCQUFpQixNQUFNLEVBQUUsUUFBUSxHQUFHO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLHdEQUFLO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBeUJFO0FBQ0YiLCJzb3VyY2VzIjpbIi9tZWRpYS9hd2Fpcy9OZXcgVm9sdW1lL0dvdmVyTk9yIEhvdXNlIC9oYWNrYXRob24tMy9zZWNvbmRUaW1lcy9oYWNrYXRob24tYmFuZGFnZS9ub2RlX21vZHVsZXMvQHNhbml0eS9jbGllbnQvZGlzdC9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRJdCB9IGZyb20gXCJnZXQtaXRcIjtcbmltcG9ydCB7IGFkYXB0ZXIsIGVudmlyb25tZW50IH0gZnJvbSBcImdldC1pdFwiO1xuaW1wb3J0IHsgcmV0cnksIGpzb25SZXF1ZXN0LCBqc29uUmVzcG9uc2UsIHByb2dyZXNzLCBvYnNlcnZhYmxlLCBkZWJ1ZywgaGVhZGVycywgYWdlbnQgfSBmcm9tIFwiZ2V0LWl0L21pZGRsZXdhcmVcIjtcbmltcG9ydCB7IE9ic2VydmFibGUsIGRlZmVyLCBpc09ic2VydmFibGUsIG9mLCBtZXJnZU1hcCwgZnJvbSwgbGFzdFZhbHVlRnJvbSwgc2hhcmVSZXBsYXksIGNhdGNoRXJyb3IsIGNvbmNhdCwgdGltZXIsIHRocm93RXJyb3IsIEVNUFRZIH0gZnJvbSBcInJ4anNcIjtcbmltcG9ydCB7IHN0ZWdhQ2xlYW4gfSBmcm9tIFwiLi9fY2h1bmtzLWVzL3N0ZWdhQ2xlYW4uanNcIjtcbmltcG9ydCB7IGNvbWJpbmVMYXRlc3RXaXRoLCBtYXAsIGZpbHRlciB9IGZyb20gXCJyeGpzL29wZXJhdG9yc1wiO1xuY2xhc3MgQ2xpZW50RXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gIHJlc3BvbnNlO1xuICBzdGF0dXNDb2RlID0gNDAwO1xuICByZXNwb25zZUJvZHk7XG4gIGRldGFpbHM7XG4gIGNvbnN0cnVjdG9yKHJlcykge1xuICAgIGNvbnN0IHByb3BzID0gZXh0cmFjdEVycm9yUHJvcHMocmVzKTtcbiAgICBzdXBlcihwcm9wcy5tZXNzYWdlKSwgT2JqZWN0LmFzc2lnbih0aGlzLCBwcm9wcyk7XG4gIH1cbn1cbmNsYXNzIFNlcnZlckVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICByZXNwb25zZTtcbiAgc3RhdHVzQ29kZSA9IDUwMDtcbiAgcmVzcG9uc2VCb2R5O1xuICBkZXRhaWxzO1xuICBjb25zdHJ1Y3RvcihyZXMpIHtcbiAgICBjb25zdCBwcm9wcyA9IGV4dHJhY3RFcnJvclByb3BzKHJlcyk7XG4gICAgc3VwZXIocHJvcHMubWVzc2FnZSksIE9iamVjdC5hc3NpZ24odGhpcywgcHJvcHMpO1xuICB9XG59XG5mdW5jdGlvbiBleHRyYWN0RXJyb3JQcm9wcyhyZXMpIHtcbiAgY29uc3QgYm9keSA9IHJlcy5ib2R5LCBwcm9wcyA9IHtcbiAgICByZXNwb25zZTogcmVzLFxuICAgIHN0YXR1c0NvZGU6IHJlcy5zdGF0dXNDb2RlLFxuICAgIHJlc3BvbnNlQm9keTogc3RyaW5naWZ5Qm9keShib2R5LCByZXMpLFxuICAgIG1lc3NhZ2U6IFwiXCIsXG4gICAgZGV0YWlsczogdm9pZCAwXG4gIH07XG4gIGlmIChib2R5LmVycm9yICYmIGJvZHkubWVzc2FnZSlcbiAgICByZXR1cm4gcHJvcHMubWVzc2FnZSA9IGAke2JvZHkuZXJyb3J9IC0gJHtib2R5Lm1lc3NhZ2V9YCwgcHJvcHM7XG4gIGlmIChpc011dGF0aW9uRXJyb3IoYm9keSkgfHwgaXNBY3Rpb25FcnJvcihib2R5KSkge1xuICAgIGNvbnN0IGFsbEl0ZW1zID0gYm9keS5lcnJvci5pdGVtcyB8fCBbXSwgaXRlbXMgPSBhbGxJdGVtcy5zbGljZSgwLCA1KS5tYXAoKGl0ZW0pID0+IGl0ZW0uZXJyb3I/LmRlc2NyaXB0aW9uKS5maWx0ZXIoQm9vbGVhbik7XG4gICAgbGV0IGl0ZW1zU3RyID0gaXRlbXMubGVuZ3RoID8gYDpcbi0gJHtpdGVtcy5qb2luKGBcbi0gYCl9YCA6IFwiXCI7XG4gICAgcmV0dXJuIGFsbEl0ZW1zLmxlbmd0aCA+IDUgJiYgKGl0ZW1zU3RyICs9IGBcbi4uLmFuZCAke2FsbEl0ZW1zLmxlbmd0aCAtIDV9IG1vcmVgKSwgcHJvcHMubWVzc2FnZSA9IGAke2JvZHkuZXJyb3IuZGVzY3JpcHRpb259JHtpdGVtc1N0cn1gLCBwcm9wcy5kZXRhaWxzID0gYm9keS5lcnJvciwgcHJvcHM7XG4gIH1cbiAgcmV0dXJuIGJvZHkuZXJyb3IgJiYgYm9keS5lcnJvci5kZXNjcmlwdGlvbiA/IChwcm9wcy5tZXNzYWdlID0gYm9keS5lcnJvci5kZXNjcmlwdGlvbiwgcHJvcHMuZGV0YWlscyA9IGJvZHkuZXJyb3IsIHByb3BzKSA6IChwcm9wcy5tZXNzYWdlID0gYm9keS5lcnJvciB8fCBib2R5Lm1lc3NhZ2UgfHwgaHR0cEVycm9yTWVzc2FnZShyZXMpLCBwcm9wcyk7XG59XG5mdW5jdGlvbiBpc011dGF0aW9uRXJyb3IoYm9keSkge1xuICByZXR1cm4gaXNQbGFpbk9iamVjdChib2R5KSAmJiBpc1BsYWluT2JqZWN0KGJvZHkuZXJyb3IpICYmIGJvZHkuZXJyb3IudHlwZSA9PT0gXCJtdXRhdGlvbkVycm9yXCIgJiYgdHlwZW9mIGJvZHkuZXJyb3IuZGVzY3JpcHRpb24gPT0gXCJzdHJpbmdcIjtcbn1cbmZ1bmN0aW9uIGlzQWN0aW9uRXJyb3IoYm9keSkge1xuICByZXR1cm4gaXNQbGFpbk9iamVjdChib2R5KSAmJiBpc1BsYWluT2JqZWN0KGJvZHkuZXJyb3IpICYmIGJvZHkuZXJyb3IudHlwZSA9PT0gXCJhY3Rpb25FcnJvclwiICYmIHR5cGVvZiBib2R5LmVycm9yLmRlc2NyaXB0aW9uID09IFwic3RyaW5nXCI7XG59XG5mdW5jdGlvbiBpc1BsYWluT2JqZWN0KG9iaikge1xuICByZXR1cm4gdHlwZW9mIG9iaiA9PSBcIm9iamVjdFwiICYmIG9iaiAhPT0gbnVsbCAmJiAhQXJyYXkuaXNBcnJheShvYmopO1xufVxuZnVuY3Rpb24gaHR0cEVycm9yTWVzc2FnZShyZXMpIHtcbiAgY29uc3Qgc3RhdHVzTWVzc2FnZSA9IHJlcy5zdGF0dXNNZXNzYWdlID8gYCAke3Jlcy5zdGF0dXNNZXNzYWdlfWAgOiBcIlwiO1xuICByZXR1cm4gYCR7cmVzLm1ldGhvZH0tcmVxdWVzdCB0byAke3Jlcy51cmx9IHJlc3VsdGVkIGluIEhUVFAgJHtyZXMuc3RhdHVzQ29kZX0ke3N0YXR1c01lc3NhZ2V9YDtcbn1cbmZ1bmN0aW9uIHN0cmluZ2lmeUJvZHkoYm9keSwgcmVzKSB7XG4gIHJldHVybiAocmVzLmhlYWRlcnNbXCJjb250ZW50LXR5cGVcIl0gfHwgXCJcIikudG9Mb3dlckNhc2UoKS5pbmRleE9mKFwiYXBwbGljYXRpb24vanNvblwiKSAhPT0gLTEgPyBKU09OLnN0cmluZ2lmeShib2R5LCBudWxsLCAyKSA6IGJvZHk7XG59XG5jbGFzcyBDb3JzT3JpZ2luRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gIHByb2plY3RJZDtcbiAgYWRkT3JpZ2luVXJsO1xuICBjb25zdHJ1Y3Rvcih7IHByb2plY3RJZDogcHJvamVjdElkMiB9KSB7XG4gICAgc3VwZXIoXCJDb3JzT3JpZ2luRXJyb3JcIiksIHRoaXMubmFtZSA9IFwiQ29yc09yaWdpbkVycm9yXCIsIHRoaXMucHJvamVjdElkID0gcHJvamVjdElkMjtcbiAgICBjb25zdCB1cmwgPSBuZXcgVVJMKGBodHRwczovL3Nhbml0eS5pby9tYW5hZ2UvcHJvamVjdC8ke3Byb2plY3RJZDJ9L2FwaWApO1xuICAgIGlmICh0eXBlb2YgbG9jYXRpb24gPCBcInVcIikge1xuICAgICAgY29uc3QgeyBvcmlnaW4gfSA9IGxvY2F0aW9uO1xuICAgICAgdXJsLnNlYXJjaFBhcmFtcy5zZXQoXCJjb3JzXCIsIFwiYWRkXCIpLCB1cmwuc2VhcmNoUGFyYW1zLnNldChcIm9yaWdpblwiLCBvcmlnaW4pLCB0aGlzLmFkZE9yaWdpblVybCA9IHVybCwgdGhpcy5tZXNzYWdlID0gYFRoZSBjdXJyZW50IG9yaWdpbiBpcyBub3QgYWxsb3dlZCB0byBjb25uZWN0IHRvIHRoZSBMaXZlIENvbnRlbnQgQVBJLiBBZGQgaXQgaGVyZTogJHt1cmx9YDtcbiAgICB9IGVsc2VcbiAgICAgIHRoaXMubWVzc2FnZSA9IGBUaGUgY3VycmVudCBvcmlnaW4gaXMgbm90IGFsbG93ZWQgdG8gY29ubmVjdCB0byB0aGUgTGl2ZSBDb250ZW50IEFQSS4gQ2hhbmdlIHlvdXIgY29uZmlndXJhdGlvbiBoZXJlOiAke3VybH1gO1xuICB9XG59XG5jb25zdCBodHRwRXJyb3IgPSB7XG4gIG9uUmVzcG9uc2U6IChyZXMpID0+IHtcbiAgICBpZiAocmVzLnN0YXR1c0NvZGUgPj0gNTAwKVxuICAgICAgdGhyb3cgbmV3IFNlcnZlckVycm9yKHJlcyk7XG4gICAgaWYgKHJlcy5zdGF0dXNDb2RlID49IDQwMClcbiAgICAgIHRocm93IG5ldyBDbGllbnRFcnJvcihyZXMpO1xuICAgIHJldHVybiByZXM7XG4gIH1cbn07XG5mdW5jdGlvbiBwcmludFdhcm5pbmdzKCkge1xuICBjb25zdCBzZWVuID0ge307XG4gIHJldHVybiB7XG4gICAgb25SZXNwb25zZTogKHJlcykgPT4ge1xuICAgICAgY29uc3Qgd2FybiA9IHJlcy5oZWFkZXJzW1wieC1zYW5pdHktd2FybmluZ1wiXSwgd2FybmluZ3MgPSBBcnJheS5pc0FycmF5KHdhcm4pID8gd2FybiA6IFt3YXJuXTtcbiAgICAgIGZvciAoY29uc3QgbXNnIG9mIHdhcm5pbmdzKVxuICAgICAgICAhbXNnIHx8IHNlZW5bbXNnXSB8fCAoc2Vlblttc2ddID0gITAsIGNvbnNvbGUud2Fybihtc2cpKTtcbiAgICAgIHJldHVybiByZXM7XG4gICAgfVxuICB9O1xufVxuZnVuY3Rpb24gZGVmaW5lSHR0cFJlcXVlc3QoZW52TWlkZGxld2FyZSkge1xuICByZXR1cm4gZ2V0SXQoW1xuICAgIHJldHJ5KHsgc2hvdWxkUmV0cnkgfSksXG4gICAgLi4uZW52TWlkZGxld2FyZSxcbiAgICBwcmludFdhcm5pbmdzKCksXG4gICAganNvblJlcXVlc3QoKSxcbiAgICBqc29uUmVzcG9uc2UoKSxcbiAgICBwcm9ncmVzcygpLFxuICAgIGh0dHBFcnJvcixcbiAgICBvYnNlcnZhYmxlKHsgaW1wbGVtZW50YXRpb246IE9ic2VydmFibGUgfSlcbiAgXSk7XG59XG5mdW5jdGlvbiBzaG91bGRSZXRyeShlcnIsIGF0dGVtcHQsIG9wdGlvbnMpIHtcbiAgaWYgKG9wdGlvbnMubWF4UmV0cmllcyA9PT0gMCkgcmV0dXJuICExO1xuICBjb25zdCBpc1NhZmUgPSBvcHRpb25zLm1ldGhvZCA9PT0gXCJHRVRcIiB8fCBvcHRpb25zLm1ldGhvZCA9PT0gXCJIRUFEXCIsIGlzUXVlcnkgPSAob3B0aW9ucy51cmkgfHwgb3B0aW9ucy51cmwpLnN0YXJ0c1dpdGgoXCIvZGF0YS9xdWVyeVwiKSwgaXNSZXRyaWFibGVSZXNwb25zZSA9IGVyci5yZXNwb25zZSAmJiAoZXJyLnJlc3BvbnNlLnN0YXR1c0NvZGUgPT09IDQyOSB8fCBlcnIucmVzcG9uc2Uuc3RhdHVzQ29kZSA9PT0gNTAyIHx8IGVyci5yZXNwb25zZS5zdGF0dXNDb2RlID09PSA1MDMpO1xuICByZXR1cm4gKGlzU2FmZSB8fCBpc1F1ZXJ5KSAmJiBpc1JldHJpYWJsZVJlc3BvbnNlID8gITAgOiByZXRyeS5zaG91bGRSZXRyeShlcnIsIGF0dGVtcHQsIG9wdGlvbnMpO1xufVxuY29uc3QgQkFTRV9VUkwgPSBcImh0dHBzOi8vd3d3LnNhbml0eS5pby9oZWxwL1wiO1xuZnVuY3Rpb24gZ2VuZXJhdGVIZWxwVXJsKHNsdWcpIHtcbiAgcmV0dXJuIEJBU0VfVVJMICsgc2x1Zztcbn1cbmNvbnN0IFZBTElEX0FTU0VUX1RZUEVTID0gW1wiaW1hZ2VcIiwgXCJmaWxlXCJdLCBWQUxJRF9JTlNFUlRfTE9DQVRJT05TID0gW1wiYmVmb3JlXCIsIFwiYWZ0ZXJcIiwgXCJyZXBsYWNlXCJdLCBkYXRhc2V0ID0gKG5hbWUyKSA9PiB7XG4gIGlmICghL14oflthLXowLTldezF9Wy1cXHddezAsNjN9fFthLXowLTldezF9Wy1cXHddezAsNjN9KSQvLnRlc3QobmFtZTIpKVxuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIFwiRGF0YXNldHMgY2FuIG9ubHkgY29udGFpbiBsb3dlcmNhc2UgY2hhcmFjdGVycywgbnVtYmVycywgdW5kZXJzY29yZXMgYW5kIGRhc2hlcywgYW5kIHN0YXJ0IHdpdGggdGlsZGUsIGFuZCBiZSBtYXhpbXVtIDY0IGNoYXJhY3RlcnNcIlxuICAgICk7XG59LCBwcm9qZWN0SWQgPSAoaWQpID0+IHtcbiAgaWYgKCEvXlstYS16MC05XSskL2kudGVzdChpZCkpXG4gICAgdGhyb3cgbmV3IEVycm9yKFwiYHByb2plY3RJZGAgY2FuIG9ubHkgY29udGFpbiBvbmx5IGEteiwgMC05IGFuZCBkYXNoZXNcIik7XG59LCB2YWxpZGF0ZUFzc2V0VHlwZSA9ICh0eXBlKSA9PiB7XG4gIGlmIChWQUxJRF9BU1NFVF9UWVBFUy5pbmRleE9mKHR5cGUpID09PSAtMSlcbiAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgYXNzZXQgdHlwZTogJHt0eXBlfS4gTXVzdCBiZSBvbmUgb2YgJHtWQUxJRF9BU1NFVF9UWVBFUy5qb2luKFwiLCBcIil9YCk7XG59LCB2YWxpZGF0ZU9iamVjdCA9IChvcCwgdmFsKSA9PiB7XG4gIGlmICh2YWwgPT09IG51bGwgfHwgdHlwZW9mIHZhbCAhPSBcIm9iamVjdFwiIHx8IEFycmF5LmlzQXJyYXkodmFsKSlcbiAgICB0aHJvdyBuZXcgRXJyb3IoYCR7b3B9KCkgdGFrZXMgYW4gb2JqZWN0IG9mIHByb3BlcnRpZXNgKTtcbn0sIHZhbGlkYXRlRG9jdW1lbnRJZCA9IChvcCwgaWQpID0+IHtcbiAgaWYgKHR5cGVvZiBpZCAhPSBcInN0cmluZ1wiIHx8ICEvXlthLXowLTlfXVthLXowLTlfLi1dezAsMTI3fSQvaS50ZXN0KGlkKSB8fCBpZC5pbmNsdWRlcyhcIi4uXCIpKVxuICAgIHRocm93IG5ldyBFcnJvcihgJHtvcH0oKTogXCIke2lkfVwiIGlzIG5vdCBhIHZhbGlkIGRvY3VtZW50IElEYCk7XG59LCByZXF1aXJlRG9jdW1lbnRJZCA9IChvcCwgZG9jKSA9PiB7XG4gIGlmICghZG9jLl9pZClcbiAgICB0aHJvdyBuZXcgRXJyb3IoYCR7b3B9KCkgcmVxdWlyZXMgdGhhdCB0aGUgZG9jdW1lbnQgY29udGFpbnMgYW4gSUQgKFwiX2lkXCIgcHJvcGVydHkpYCk7XG4gIHZhbGlkYXRlRG9jdW1lbnRJZChvcCwgZG9jLl9pZCk7XG59LCB2YWxpZGF0ZUluc2VydCA9IChhdCwgc2VsZWN0b3IsIGl0ZW1zKSA9PiB7XG4gIGNvbnN0IHNpZ25hdHVyZSA9IFwiaW5zZXJ0KGF0LCBzZWxlY3RvciwgaXRlbXMpXCI7XG4gIGlmIChWQUxJRF9JTlNFUlRfTE9DQVRJT05TLmluZGV4T2YoYXQpID09PSAtMSkge1xuICAgIGNvbnN0IHZhbGlkID0gVkFMSURfSU5TRVJUX0xPQ0FUSU9OUy5tYXAoKGxvYykgPT4gYFwiJHtsb2N9XCJgKS5qb2luKFwiLCBcIik7XG4gICAgdGhyb3cgbmV3IEVycm9yKGAke3NpZ25hdHVyZX0gdGFrZXMgYW4gXCJhdFwiLWFyZ3VtZW50IHdoaWNoIGlzIG9uZSBvZjogJHt2YWxpZH1gKTtcbiAgfVxuICBpZiAodHlwZW9mIHNlbGVjdG9yICE9IFwic3RyaW5nXCIpXG4gICAgdGhyb3cgbmV3IEVycm9yKGAke3NpZ25hdHVyZX0gdGFrZXMgYSBcInNlbGVjdG9yXCItYXJndW1lbnQgd2hpY2ggbXVzdCBiZSBhIHN0cmluZ2ApO1xuICBpZiAoIUFycmF5LmlzQXJyYXkoaXRlbXMpKVxuICAgIHRocm93IG5ldyBFcnJvcihgJHtzaWduYXR1cmV9IHRha2VzIGFuIFwiaXRlbXNcIi1hcmd1bWVudCB3aGljaCBtdXN0IGJlIGFuIGFycmF5YCk7XG59LCBoYXNEYXRhc2V0ID0gKGNvbmZpZykgPT4ge1xuICBpZiAoIWNvbmZpZy5kYXRhc2V0KVxuICAgIHRocm93IG5ldyBFcnJvcihcImBkYXRhc2V0YCBtdXN0IGJlIHByb3ZpZGVkIHRvIHBlcmZvcm0gcXVlcmllc1wiKTtcbiAgcmV0dXJuIGNvbmZpZy5kYXRhc2V0IHx8IFwiXCI7XG59LCByZXF1ZXN0VGFnID0gKHRhZykgPT4ge1xuICBpZiAodHlwZW9mIHRhZyAhPSBcInN0cmluZ1wiIHx8ICEvXlthLXowLTkuXy1dezEsNzV9JC9pLnRlc3QodGFnKSlcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBcIlRhZyBjYW4gb25seSBjb250YWluIGFscGhhbnVtZXJpYyBjaGFyYWN0ZXJzLCB1bmRlcnNjb3JlcywgZGFzaGVzIGFuZCBkb3RzLCBhbmQgYmUgYmV0d2VlbiBvbmUgYW5kIDc1IGNoYXJhY3RlcnMgbG9uZy5cIlxuICAgICk7XG4gIHJldHVybiB0YWc7XG59O1xuZnVuY3Rpb24gb25jZShmbikge1xuICBsZXQgZGlkQ2FsbCA9ICExLCByZXR1cm5WYWx1ZTtcbiAgcmV0dXJuICguLi5hcmdzKSA9PiAoZGlkQ2FsbCB8fCAocmV0dXJuVmFsdWUgPSBmbiguLi5hcmdzKSwgZGlkQ2FsbCA9ICEwKSwgcmV0dXJuVmFsdWUpO1xufVxuY29uc3QgY3JlYXRlV2FybmluZ1ByaW50ZXIgPSAobWVzc2FnZSkgPT4gKFxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICBvbmNlKCguLi5hcmdzKSA9PiBjb25zb2xlLndhcm4obWVzc2FnZS5qb2luKFwiIFwiKSwgLi4uYXJncykpXG4pLCBwcmludENkbkFuZFdpdGhDcmVkZW50aWFsc1dhcm5pbmcgPSBjcmVhdGVXYXJuaW5nUHJpbnRlcihbXG4gIFwiQmVjYXVzZSB5b3Ugc2V0IGB3aXRoQ3JlZGVudGlhbHNgIHRvIHRydWUsIHdlIHdpbGwgb3ZlcnJpZGUgeW91ciBgdXNlQ2RuYFwiLFxuICBcInNldHRpbmcgdG8gYmUgZmFsc2Ugc2luY2UgKGNvb2tpZS1iYXNlZCkgY3JlZGVudGlhbHMgYXJlIG5ldmVyIHNldCBvbiB0aGUgQ0ROXCJcbl0pLCBwcmludENkbldhcm5pbmcgPSBjcmVhdGVXYXJuaW5nUHJpbnRlcihbXG4gIFwiU2luY2UgeW91IGhhdmVuJ3Qgc2V0IGEgdmFsdWUgZm9yIGB1c2VDZG5gLCB3ZSB3aWxsIGRlbGl2ZXIgY29udGVudCB1c2luZyBvdXJcIixcbiAgXCJnbG9iYWwsIGVkZ2UtY2FjaGVkIEFQSS1DRE4uIElmIHlvdSB3aXNoIHRvIGhhdmUgY29udGVudCBkZWxpdmVyZWQgZmFzdGVyLCBzZXRcIixcbiAgXCJgdXNlQ2RuOiBmYWxzZWAgdG8gdXNlIHRoZSBMaXZlIEFQSS4gTm90ZTogWW91IG1heSBpbmN1ciBoaWdoZXIgY29zdHMgdXNpbmcgdGhlIGxpdmUgQVBJLlwiXG5dKSwgcHJpbnRDZG5QcmV2aWV3RHJhZnRzV2FybmluZyA9IGNyZWF0ZVdhcm5pbmdQcmludGVyKFtcbiAgXCJUaGUgU2FuaXR5IGNsaWVudCBpcyBjb25maWd1cmVkIHdpdGggdGhlIGBwZXJzcGVjdGl2ZWAgc2V0IHRvIGBwcmV2aWV3RHJhZnRzYCwgd2hpY2ggZG9lc24ndCBzdXBwb3J0IHRoZSBBUEktQ0ROLlwiLFxuICBcIlRoZSBMaXZlIEFQSSB3aWxsIGJlIHVzZWQgaW5zdGVhZC4gU2V0IGB1c2VDZG46IGZhbHNlYCBpbiB5b3VyIGNvbmZpZ3VyYXRpb24gdG8gaGlkZSB0aGlzIHdhcm5pbmcuXCJcbl0pLCBwcmludEJyb3dzZXJUb2tlbldhcm5pbmcgPSBjcmVhdGVXYXJuaW5nUHJpbnRlcihbXG4gIFwiWW91IGhhdmUgY29uZmlndXJlZCBTYW5pdHkgY2xpZW50IHRvIHVzZSBhIHRva2VuIGluIHRoZSBicm93c2VyLiBUaGlzIG1heSBjYXVzZSB1bmludGVudGlvbmFsIHNlY3VyaXR5IGlzc3Vlcy5cIixcbiAgYFNlZSAke2dlbmVyYXRlSGVscFVybChcbiAgICBcImpzLWNsaWVudC1icm93c2VyLXRva2VuXCJcbiAgKX0gZm9yIG1vcmUgaW5mb3JtYXRpb24gYW5kIGhvdyB0byBoaWRlIHRoaXMgd2FybmluZy5gXG5dKSwgcHJpbnROb0FwaVZlcnNpb25TcGVjaWZpZWRXYXJuaW5nID0gY3JlYXRlV2FybmluZ1ByaW50ZXIoW1xuICBcIlVzaW5nIHRoZSBTYW5pdHkgY2xpZW50IHdpdGhvdXQgc3BlY2lmeWluZyBhbiBBUEkgdmVyc2lvbiBpcyBkZXByZWNhdGVkLlwiLFxuICBgU2VlICR7Z2VuZXJhdGVIZWxwVXJsKFwianMtY2xpZW50LWFwaS12ZXJzaW9uXCIpfWBcbl0pLCBwcmludE5vRGVmYXVsdEV4cG9ydCA9IGNyZWF0ZVdhcm5pbmdQcmludGVyKFtcbiAgXCJUaGUgZGVmYXVsdCBleHBvcnQgb2YgQHNhbml0eS9jbGllbnQgaGFzIGJlZW4gZGVwcmVjYXRlZC4gVXNlIHRoZSBuYW1lZCBleHBvcnQgYGNyZWF0ZUNsaWVudGAgaW5zdGVhZC5cIlxuXSksIGRlZmF1bHRDZG5Ib3N0ID0gXCJhcGljZG4uc2FuaXR5LmlvXCIsIGRlZmF1bHRDb25maWcgPSB7XG4gIGFwaUhvc3Q6IFwiaHR0cHM6Ly9hcGkuc2FuaXR5LmlvXCIsXG4gIGFwaVZlcnNpb246IFwiMVwiLFxuICB1c2VQcm9qZWN0SG9zdG5hbWU6ICEwLFxuICBzdGVnYTogeyBlbmFibGVkOiAhMSB9XG59LCBMT0NBTEhPU1RTID0gW1wibG9jYWxob3N0XCIsIFwiMTI3LjAuMC4xXCIsIFwiMC4wLjAuMFwiXSwgaXNMb2NhbCA9IChob3N0KSA9PiBMT0NBTEhPU1RTLmluZGV4T2YoaG9zdCkgIT09IC0xO1xuZnVuY3Rpb24gdmFsaWRhdGVBcGlWZXJzaW9uKGFwaVZlcnNpb24pIHtcbiAgaWYgKGFwaVZlcnNpb24gPT09IFwiMVwiIHx8IGFwaVZlcnNpb24gPT09IFwiWFwiKVxuICAgIHJldHVybjtcbiAgY29uc3QgYXBpRGF0ZSA9IG5ldyBEYXRlKGFwaVZlcnNpb24pO1xuICBpZiAoISgvXlxcZHs0fS1cXGR7Mn0tXFxkezJ9JC8udGVzdChhcGlWZXJzaW9uKSAmJiBhcGlEYXRlIGluc3RhbmNlb2YgRGF0ZSAmJiBhcGlEYXRlLmdldFRpbWUoKSA+IDApKVxuICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgQVBJIHZlcnNpb24gc3RyaW5nLCBleHBlY3RlZCBgMWAgb3IgZGF0ZSBpbiBmb3JtYXQgYFlZWVktTU0tRERgXCIpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVBcGlQZXJzcGVjdGl2ZShwZXJzcGVjdGl2ZSkge1xuICBpZiAoQXJyYXkuaXNBcnJheShwZXJzcGVjdGl2ZSkpIHtcbiAgICBmb3IgKGNvbnN0IHBlcnNwZWN0aXZlVmFsdWUgb2YgcGVyc3BlY3RpdmUpXG4gICAgICBpZiAocGVyc3BlY3RpdmVWYWx1ZSAhPT0gXCJwdWJsaXNoZWRcIiAmJiBwZXJzcGVjdGl2ZVZhbHVlICE9PSBcImRyYWZ0c1wiICYmICEodHlwZW9mIHBlcnNwZWN0aXZlVmFsdWUgPT0gXCJzdHJpbmdcIiAmJiBwZXJzcGVjdGl2ZVZhbHVlLnN0YXJ0c1dpdGgoXCJyXCIpICYmIHBlcnNwZWN0aXZlVmFsdWUgIT09IFwicmF3XCIpKVxuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFxuICAgICAgICAgIFwiSW52YWxpZCBBUEkgcGVyc3BlY3RpdmUgdmFsdWUsIGV4cGVjdGVkIGBwdWJsaXNoZWRgLCBgZHJhZnRzYCBvciBhIHZhbGlkIHJlbGVhc2UgaWRlbnRpZmllciBzdHJpbmdcIlxuICAgICAgICApO1xuICAgIHJldHVybjtcbiAgfVxuICBzd2l0Y2ggKHBlcnNwZWN0aXZlKSB7XG4gICAgY2FzZSBcInByZXZpZXdEcmFmdHNcIjpcbiAgICBjYXNlIFwiZHJhZnRzXCI6XG4gICAgY2FzZSBcInB1Ymxpc2hlZFwiOlxuICAgIGNhc2UgXCJyYXdcIjpcbiAgICAgIHJldHVybjtcbiAgICBkZWZhdWx0OlxuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcbiAgICAgICAgXCJJbnZhbGlkIEFQSSBwZXJzcGVjdGl2ZSBzdHJpbmcsIGV4cGVjdGVkIGBwdWJsaXNoZWRgLCBgcHJldmlld0RyYWZ0c2Agb3IgYHJhd2BcIlxuICAgICAgKTtcbiAgfVxufVxuY29uc3QgaW5pdENvbmZpZyA9IChjb25maWcsIHByZXZDb25maWcpID0+IHtcbiAgY29uc3Qgc3BlY2lmaWVkQ29uZmlnID0ge1xuICAgIC4uLnByZXZDb25maWcsXG4gICAgLi4uY29uZmlnLFxuICAgIHN0ZWdhOiB7XG4gICAgICAuLi50eXBlb2YgcHJldkNvbmZpZy5zdGVnYSA9PSBcImJvb2xlYW5cIiA/IHsgZW5hYmxlZDogcHJldkNvbmZpZy5zdGVnYSB9IDogcHJldkNvbmZpZy5zdGVnYSB8fCBkZWZhdWx0Q29uZmlnLnN0ZWdhLFxuICAgICAgLi4udHlwZW9mIGNvbmZpZy5zdGVnYSA9PSBcImJvb2xlYW5cIiA/IHsgZW5hYmxlZDogY29uZmlnLnN0ZWdhIH0gOiBjb25maWcuc3RlZ2EgfHwge31cbiAgICB9XG4gIH07XG4gIHNwZWNpZmllZENvbmZpZy5hcGlWZXJzaW9uIHx8IHByaW50Tm9BcGlWZXJzaW9uU3BlY2lmaWVkV2FybmluZygpO1xuICBjb25zdCBuZXdDb25maWcgPSB7XG4gICAgLi4uZGVmYXVsdENvbmZpZyxcbiAgICAuLi5zcGVjaWZpZWRDb25maWdcbiAgfSwgcHJvamVjdEJhc2VkID0gbmV3Q29uZmlnLnVzZVByb2plY3RIb3N0bmFtZTtcbiAgaWYgKHR5cGVvZiBQcm9taXNlID4gXCJ1XCIpIHtcbiAgICBjb25zdCBoZWxwVXJsID0gZ2VuZXJhdGVIZWxwVXJsKFwianMtY2xpZW50LXByb21pc2UtcG9seWZpbGxcIik7XG4gICAgdGhyb3cgbmV3IEVycm9yKGBObyBuYXRpdmUgUHJvbWlzZS1pbXBsZW1lbnRhdGlvbiBmb3VuZCwgcG9seWZpbGwgbmVlZGVkIC0gc2VlICR7aGVscFVybH1gKTtcbiAgfVxuICBpZiAocHJvamVjdEJhc2VkICYmICFuZXdDb25maWcucHJvamVjdElkKVxuICAgIHRocm93IG5ldyBFcnJvcihcIkNvbmZpZ3VyYXRpb24gbXVzdCBjb250YWluIGBwcm9qZWN0SWRgXCIpO1xuICBpZiAodHlwZW9mIG5ld0NvbmZpZy5wZXJzcGVjdGl2ZSA8IFwidVwiICYmIHZhbGlkYXRlQXBpUGVyc3BlY3RpdmUobmV3Q29uZmlnLnBlcnNwZWN0aXZlKSwgXCJlbmNvZGVTb3VyY2VNYXBcIiBpbiBuZXdDb25maWcpXG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgXCJJdCBsb29rcyBsaWtlIHlvdSdyZSB1c2luZyBvcHRpb25zIG1lYW50IGZvciAnQHNhbml0eS9wcmV2aWV3LWtpdC9jbGllbnQnLiAnZW5jb2RlU291cmNlTWFwJyBpcyBub3Qgc3VwcG9ydGVkIGluICdAc2FuaXR5L2NsaWVudCcuIERpZCB5b3UgbWVhbiAnc3RlZ2EuZW5hYmxlZCc/XCJcbiAgICApO1xuICBpZiAoXCJlbmNvZGVTb3VyY2VNYXBBdFBhdGhcIiBpbiBuZXdDb25maWcpXG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgXCJJdCBsb29rcyBsaWtlIHlvdSdyZSB1c2luZyBvcHRpb25zIG1lYW50IGZvciAnQHNhbml0eS9wcmV2aWV3LWtpdC9jbGllbnQnLiAnZW5jb2RlU291cmNlTWFwQXRQYXRoJyBpcyBub3Qgc3VwcG9ydGVkIGluICdAc2FuaXR5L2NsaWVudCcuIERpZCB5b3UgbWVhbiAnc3RlZ2EuZmlsdGVyJz9cIlxuICAgICk7XG4gIGlmICh0eXBlb2YgbmV3Q29uZmlnLnN0ZWdhLmVuYWJsZWQgIT0gXCJib29sZWFuXCIpXG4gICAgdGhyb3cgbmV3IEVycm9yKGBzdGVnYS5lbmFibGVkIG11c3QgYmUgYSBib29sZWFuLCByZWNlaXZlZCAke25ld0NvbmZpZy5zdGVnYS5lbmFibGVkfWApO1xuICBpZiAobmV3Q29uZmlnLnN0ZWdhLmVuYWJsZWQgJiYgbmV3Q29uZmlnLnN0ZWdhLnN0dWRpb1VybCA9PT0gdm9pZCAwKVxuICAgIHRocm93IG5ldyBFcnJvcihcInN0ZWdhLnN0dWRpb1VybCBtdXN0IGJlIGRlZmluZWQgd2hlbiBzdGVnYS5lbmFibGVkIGlzIHRydWVcIik7XG4gIGlmIChuZXdDb25maWcuc3RlZ2EuZW5hYmxlZCAmJiB0eXBlb2YgbmV3Q29uZmlnLnN0ZWdhLnN0dWRpb1VybCAhPSBcInN0cmluZ1wiICYmIHR5cGVvZiBuZXdDb25maWcuc3RlZ2Euc3R1ZGlvVXJsICE9IFwiZnVuY3Rpb25cIilcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBgc3RlZ2Euc3R1ZGlvVXJsIG11c3QgYmUgYSBzdHJpbmcgb3IgYSBmdW5jdGlvbiwgcmVjZWl2ZWQgJHtuZXdDb25maWcuc3RlZ2Euc3R1ZGlvVXJsfWBcbiAgICApO1xuICBjb25zdCBpc0Jyb3dzZXIgPSB0eXBlb2Ygd2luZG93IDwgXCJ1XCIgJiYgd2luZG93LmxvY2F0aW9uICYmIHdpbmRvdy5sb2NhdGlvbi5ob3N0bmFtZSwgaXNMb2NhbGhvc3QgPSBpc0Jyb3dzZXIgJiYgaXNMb2NhbCh3aW5kb3cubG9jYXRpb24uaG9zdG5hbWUpO1xuICBpc0Jyb3dzZXIgJiYgaXNMb2NhbGhvc3QgJiYgbmV3Q29uZmlnLnRva2VuICYmIG5ld0NvbmZpZy5pZ25vcmVCcm93c2VyVG9rZW5XYXJuaW5nICE9PSAhMCA/IHByaW50QnJvd3NlclRva2VuV2FybmluZygpIDogdHlwZW9mIG5ld0NvbmZpZy51c2VDZG4gPiBcInVcIiAmJiBwcmludENkbldhcm5pbmcoKSwgcHJvamVjdEJhc2VkICYmIHByb2plY3RJZChuZXdDb25maWcucHJvamVjdElkKSwgbmV3Q29uZmlnLmRhdGFzZXQgJiYgZGF0YXNldChuZXdDb25maWcuZGF0YXNldCksIFwicmVxdWVzdFRhZ1ByZWZpeFwiIGluIG5ld0NvbmZpZyAmJiAobmV3Q29uZmlnLnJlcXVlc3RUYWdQcmVmaXggPSBuZXdDb25maWcucmVxdWVzdFRhZ1ByZWZpeCA/IHJlcXVlc3RUYWcobmV3Q29uZmlnLnJlcXVlc3RUYWdQcmVmaXgpLnJlcGxhY2UoL1xcLiskLywgXCJcIikgOiB2b2lkIDApLCBuZXdDb25maWcuYXBpVmVyc2lvbiA9IGAke25ld0NvbmZpZy5hcGlWZXJzaW9ufWAucmVwbGFjZSgvXnYvLCBcIlwiKSwgbmV3Q29uZmlnLmlzRGVmYXVsdEFwaSA9IG5ld0NvbmZpZy5hcGlIb3N0ID09PSBkZWZhdWx0Q29uZmlnLmFwaUhvc3QsIG5ld0NvbmZpZy51c2VDZG4gPT09ICEwICYmIG5ld0NvbmZpZy53aXRoQ3JlZGVudGlhbHMgJiYgcHJpbnRDZG5BbmRXaXRoQ3JlZGVudGlhbHNXYXJuaW5nKCksIG5ld0NvbmZpZy51c2VDZG4gPSBuZXdDb25maWcudXNlQ2RuICE9PSAhMSAmJiAhbmV3Q29uZmlnLndpdGhDcmVkZW50aWFscywgdmFsaWRhdGVBcGlWZXJzaW9uKG5ld0NvbmZpZy5hcGlWZXJzaW9uKTtcbiAgY29uc3QgaG9zdFBhcnRzID0gbmV3Q29uZmlnLmFwaUhvc3Quc3BsaXQoXCI6Ly9cIiwgMiksIHByb3RvY29sID0gaG9zdFBhcnRzWzBdLCBob3N0ID0gaG9zdFBhcnRzWzFdLCBjZG5Ib3N0ID0gbmV3Q29uZmlnLmlzRGVmYXVsdEFwaSA/IGRlZmF1bHRDZG5Ib3N0IDogaG9zdDtcbiAgcmV0dXJuIG5ld0NvbmZpZy51c2VQcm9qZWN0SG9zdG5hbWUgPyAobmV3Q29uZmlnLnVybCA9IGAke3Byb3RvY29sfTovLyR7bmV3Q29uZmlnLnByb2plY3RJZH0uJHtob3N0fS92JHtuZXdDb25maWcuYXBpVmVyc2lvbn1gLCBuZXdDb25maWcuY2RuVXJsID0gYCR7cHJvdG9jb2x9Oi8vJHtuZXdDb25maWcucHJvamVjdElkfS4ke2Nkbkhvc3R9L3Yke25ld0NvbmZpZy5hcGlWZXJzaW9ufWApIDogKG5ld0NvbmZpZy51cmwgPSBgJHtuZXdDb25maWcuYXBpSG9zdH0vdiR7bmV3Q29uZmlnLmFwaVZlcnNpb259YCwgbmV3Q29uZmlnLmNkblVybCA9IG5ld0NvbmZpZy51cmwpLCBuZXdDb25maWc7XG59O1xuY2xhc3MgQ29ubmVjdGlvbkZhaWxlZEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICBuYW1lID0gXCJDb25uZWN0aW9uRmFpbGVkRXJyb3JcIjtcbn1cbmNsYXNzIERpc2Nvbm5lY3RFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgbmFtZSA9IFwiRGlzY29ubmVjdEVycm9yXCI7XG4gIHJlYXNvbjtcbiAgY29uc3RydWN0b3IobWVzc2FnZSwgcmVhc29uLCBvcHRpb25zID0ge30pIHtcbiAgICBzdXBlcihtZXNzYWdlLCBvcHRpb25zKSwgdGhpcy5yZWFzb24gPSByZWFzb247XG4gIH1cbn1cbmNsYXNzIENoYW5uZWxFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgbmFtZSA9IFwiQ2hhbm5lbEVycm9yXCI7XG4gIGRhdGE7XG4gIGNvbnN0cnVjdG9yKG1lc3NhZ2UsIGRhdGEpIHtcbiAgICBzdXBlcihtZXNzYWdlKSwgdGhpcy5kYXRhID0gZGF0YTtcbiAgfVxufVxuY2xhc3MgTWVzc2FnZUVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICBuYW1lID0gXCJNZXNzYWdlRXJyb3JcIjtcbiAgZGF0YTtcbiAgY29uc3RydWN0b3IobWVzc2FnZSwgZGF0YSwgb3B0aW9ucyA9IHt9KSB7XG4gICAgc3VwZXIobWVzc2FnZSwgb3B0aW9ucyksIHRoaXMuZGF0YSA9IGRhdGE7XG4gIH1cbn1cbmNsYXNzIE1lc3NhZ2VQYXJzZUVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICBuYW1lID0gXCJNZXNzYWdlUGFyc2VFcnJvclwiO1xufVxuY29uc3QgUkVRVUlSRURfRVZFTlRTID0gW1wiY2hhbm5lbEVycm9yXCIsIFwiZGlzY29ubmVjdFwiXTtcbmZ1bmN0aW9uIGNvbm5lY3RFdmVudFNvdXJjZShpbml0RXZlbnRTb3VyY2UsIGV2ZW50cykge1xuICByZXR1cm4gZGVmZXIoKCkgPT4ge1xuICAgIGNvbnN0IGVzID0gaW5pdEV2ZW50U291cmNlKCk7XG4gICAgcmV0dXJuIGlzT2JzZXJ2YWJsZShlcykgPyBlcyA6IG9mKGVzKTtcbiAgfSkucGlwZShtZXJnZU1hcCgoZXMpID0+IGNvbm5lY3RXaXRoRVNJbnN0YW5jZShlcywgZXZlbnRzKSkpO1xufVxuZnVuY3Rpb24gY29ubmVjdFdpdGhFU0luc3RhbmNlKGVzLCBldmVudHMpIHtcbiAgcmV0dXJuIG5ldyBPYnNlcnZhYmxlKChvYnNlcnZlcikgPT4ge1xuICAgIGNvbnN0IGVtaXRPcGVuID0gZXZlbnRzLmluY2x1ZGVzKFwib3BlblwiKSwgZW1pdFJlY29ubmVjdCA9IGV2ZW50cy5pbmNsdWRlcyhcInJlY29ubmVjdFwiKTtcbiAgICBmdW5jdGlvbiBvbkVycm9yKGV2dCkge1xuICAgICAgaWYgKFwiZGF0YVwiIGluIGV2dCkge1xuICAgICAgICBjb25zdCBbcGFyc2VFcnJvciwgZXZlbnRdID0gcGFyc2VFdmVudChldnQpO1xuICAgICAgICBvYnNlcnZlci5lcnJvcihcbiAgICAgICAgICBwYXJzZUVycm9yID8gbmV3IE1lc3NhZ2VQYXJzZUVycm9yKFwiVW5hYmxlIHRvIHBhcnNlIEV2ZW50U291cmNlIGVycm9yIG1lc3NhZ2VcIiwgeyBjYXVzZTogZXZlbnQgfSkgOiBuZXcgTWVzc2FnZUVycm9yKChldmVudD8uZGF0YSkubWVzc2FnZSwgZXZlbnQpXG4gICAgICAgICk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGVzLnJlYWR5U3RhdGUgPT09IGVzLkNMT1NFRCA/IG9ic2VydmVyLmVycm9yKG5ldyBDb25uZWN0aW9uRmFpbGVkRXJyb3IoXCJFdmVudFNvdXJjZSBjb25uZWN0aW9uIGZhaWxlZFwiKSkgOiBlbWl0UmVjb25uZWN0ICYmIG9ic2VydmVyLm5leHQoeyB0eXBlOiBcInJlY29ubmVjdFwiIH0pO1xuICAgIH1cbiAgICBmdW5jdGlvbiBvbk9wZW4oKSB7XG4gICAgICBvYnNlcnZlci5uZXh0KHsgdHlwZTogXCJvcGVuXCIgfSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIG9uTWVzc2FnZShtZXNzYWdlKSB7XG4gICAgICBjb25zdCBbcGFyc2VFcnJvciwgZXZlbnRdID0gcGFyc2VFdmVudChtZXNzYWdlKTtcbiAgICAgIGlmIChwYXJzZUVycm9yKSB7XG4gICAgICAgIG9ic2VydmVyLmVycm9yKFxuICAgICAgICAgIG5ldyBNZXNzYWdlUGFyc2VFcnJvcihcIlVuYWJsZSB0byBwYXJzZSBFdmVudFNvdXJjZSBtZXNzYWdlXCIsIHsgY2F1c2U6IHBhcnNlRXJyb3IgfSlcbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgaWYgKG1lc3NhZ2UudHlwZSA9PT0gXCJjaGFubmVsRXJyb3JcIikge1xuICAgICAgICBvYnNlcnZlci5lcnJvcihuZXcgQ2hhbm5lbEVycm9yKGV4dHJhY3RFcnJvck1lc3NhZ2UoZXZlbnQ/LmRhdGEpLCBldmVudC5kYXRhKSk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGlmIChtZXNzYWdlLnR5cGUgPT09IFwiZGlzY29ubmVjdFwiKSB7XG4gICAgICAgIG9ic2VydmVyLmVycm9yKFxuICAgICAgICAgIG5ldyBEaXNjb25uZWN0RXJyb3IoXG4gICAgICAgICAgICBgU2VydmVyIGRpc2Nvbm5lY3RlZCBjbGllbnQ6ICR7ZXZlbnQuZGF0YT8ucmVhc29uIHx8IFwidW5rbm93biBlcnJvclwifWBcbiAgICAgICAgICApXG4gICAgICAgICk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIG9ic2VydmVyLm5leHQoe1xuICAgICAgICB0eXBlOiBtZXNzYWdlLnR5cGUsXG4gICAgICAgIGlkOiBtZXNzYWdlLmxhc3RFdmVudElkLFxuICAgICAgICAuLi5ldmVudC5kYXRhID8geyBkYXRhOiBldmVudC5kYXRhIH0gOiB7fVxuICAgICAgfSk7XG4gICAgfVxuICAgIGVzLmFkZEV2ZW50TGlzdGVuZXIoXCJlcnJvclwiLCBvbkVycm9yKSwgZW1pdE9wZW4gJiYgZXMuYWRkRXZlbnRMaXN0ZW5lcihcIm9wZW5cIiwgb25PcGVuKTtcbiAgICBjb25zdCBjbGVhbmVkRXZlbnRzID0gWy4uLi8qIEBfX1BVUkVfXyAqLyBuZXcgU2V0KFsuLi5SRVFVSVJFRF9FVkVOVFMsIC4uLmV2ZW50c10pXS5maWx0ZXIoKHR5cGUpID0+IHR5cGUgIT09IFwiZXJyb3JcIiAmJiB0eXBlICE9PSBcIm9wZW5cIiAmJiB0eXBlICE9PSBcInJlY29ubmVjdFwiKTtcbiAgICByZXR1cm4gY2xlYW5lZEV2ZW50cy5mb3JFYWNoKCh0eXBlKSA9PiBlcy5hZGRFdmVudExpc3RlbmVyKHR5cGUsIG9uTWVzc2FnZSkpLCAoKSA9PiB7XG4gICAgICBlcy5yZW1vdmVFdmVudExpc3RlbmVyKFwiZXJyb3JcIiwgb25FcnJvciksIGVtaXRPcGVuICYmIGVzLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJvcGVuXCIsIG9uT3BlbiksIGNsZWFuZWRFdmVudHMuZm9yRWFjaCgodHlwZSkgPT4gZXMucmVtb3ZlRXZlbnRMaXN0ZW5lcih0eXBlLCBvbk1lc3NhZ2UpKSwgZXMuY2xvc2UoKTtcbiAgICB9O1xuICB9KTtcbn1cbmZ1bmN0aW9uIHBhcnNlRXZlbnQobWVzc2FnZSkge1xuICB0cnkge1xuICAgIGNvbnN0IGRhdGEgPSB0eXBlb2YgbWVzc2FnZS5kYXRhID09IFwic3RyaW5nXCIgJiYgSlNPTi5wYXJzZShtZXNzYWdlLmRhdGEpO1xuICAgIHJldHVybiBbXG4gICAgICBudWxsLFxuICAgICAge1xuICAgICAgICB0eXBlOiBtZXNzYWdlLnR5cGUsXG4gICAgICAgIGlkOiBtZXNzYWdlLmxhc3RFdmVudElkLFxuICAgICAgICAuLi5pc0VtcHR5T2JqZWN0KGRhdGEpID8ge30gOiB7IGRhdGEgfVxuICAgICAgfVxuICAgIF07XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIHJldHVybiBbZXJyLCBudWxsXTtcbiAgfVxufVxuZnVuY3Rpb24gZXh0cmFjdEVycm9yTWVzc2FnZShlcnIpIHtcbiAgcmV0dXJuIGVyci5lcnJvciA/IGVyci5lcnJvci5kZXNjcmlwdGlvbiA/IGVyci5lcnJvci5kZXNjcmlwdGlvbiA6IHR5cGVvZiBlcnIuZXJyb3IgPT0gXCJzdHJpbmdcIiA/IGVyci5lcnJvciA6IEpTT04uc3RyaW5naWZ5KGVyci5lcnJvciwgbnVsbCwgMikgOiBlcnIubWVzc2FnZSB8fCBcIlVua25vd24gbGlzdGVuZXIgZXJyb3JcIjtcbn1cbmZ1bmN0aW9uIGlzRW1wdHlPYmplY3QoZGF0YSkge1xuICBmb3IgKGNvbnN0IF8gaW4gZGF0YSlcbiAgICByZXR1cm4gITE7XG4gIHJldHVybiAhMDtcbn1cbmZ1bmN0aW9uIGdldFNlbGVjdGlvbihzZWwpIHtcbiAgaWYgKHR5cGVvZiBzZWwgPT0gXCJzdHJpbmdcIilcbiAgICByZXR1cm4geyBpZDogc2VsIH07XG4gIGlmIChBcnJheS5pc0FycmF5KHNlbCkpXG4gICAgcmV0dXJuIHsgcXVlcnk6IFwiKltfaWQgaW4gJGlkc11cIiwgcGFyYW1zOiB7IGlkczogc2VsIH0gfTtcbiAgaWYgKHR5cGVvZiBzZWwgPT0gXCJvYmplY3RcIiAmJiBzZWwgIT09IG51bGwgJiYgXCJxdWVyeVwiIGluIHNlbCAmJiB0eXBlb2Ygc2VsLnF1ZXJ5ID09IFwic3RyaW5nXCIpXG4gICAgcmV0dXJuIFwicGFyYW1zXCIgaW4gc2VsICYmIHR5cGVvZiBzZWwucGFyYW1zID09IFwib2JqZWN0XCIgJiYgc2VsLnBhcmFtcyAhPT0gbnVsbCA/IHsgcXVlcnk6IHNlbC5xdWVyeSwgcGFyYW1zOiBzZWwucGFyYW1zIH0gOiB7IHF1ZXJ5OiBzZWwucXVlcnkgfTtcbiAgY29uc3Qgc2VsZWN0aW9uT3B0cyA9IFtcbiAgICBcIiogRG9jdW1lbnQgSUQgKDxkb2NJZD4pXCIsXG4gICAgXCIqIEFycmF5IG9mIGRvY3VtZW50IElEc1wiLFxuICAgIFwiKiBPYmplY3QgY29udGFpbmluZyBgcXVlcnlgXCJcbiAgXS5qb2luKGBcbmApO1xuICB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gc2VsZWN0aW9uIC0gbXVzdCBiZSBvbmUgb2Y6XG5cbiR7c2VsZWN0aW9uT3B0c31gKTtcbn1cbmNsYXNzIEJhc2VQYXRjaCB7XG4gIHNlbGVjdGlvbjtcbiAgb3BlcmF0aW9ucztcbiAgY29uc3RydWN0b3Ioc2VsZWN0aW9uLCBvcGVyYXRpb25zID0ge30pIHtcbiAgICB0aGlzLnNlbGVjdGlvbiA9IHNlbGVjdGlvbiwgdGhpcy5vcGVyYXRpb25zID0gb3BlcmF0aW9ucztcbiAgfVxuICAvKipcbiAgICogU2V0cyB0aGUgZ2l2ZW4gYXR0cmlidXRlcyB0byB0aGUgZG9jdW1lbnQuIERvZXMgTk9UIG1lcmdlIG9iamVjdHMuXG4gICAqIFRoZSBvcGVyYXRpb24gaXMgYWRkZWQgdG8gdGhlIGN1cnJlbnQgcGF0Y2gsIHJlYWR5IHRvIGJlIGNvbW1pdGVkIGJ5IGBjb21taXQoKWBcbiAgICpcbiAgICogQHBhcmFtIGF0dHJzIC0gQXR0cmlidXRlcyB0byBzZXQuIFRvIHNldCBhIGRlZXAgYXR0cmlidXRlLCB1c2UgSlNPTk1hdGNoLCBlZzogXFx7XCJuZXN0ZWQucHJvcFwiOiBcInZhbHVlXCJcXH1cbiAgICovXG4gIHNldChhdHRycykge1xuICAgIHJldHVybiB0aGlzLl9hc3NpZ24oXCJzZXRcIiwgYXR0cnMpO1xuICB9XG4gIC8qKlxuICAgKiBTZXRzIHRoZSBnaXZlbiBhdHRyaWJ1dGVzIHRvIHRoZSBkb2N1bWVudCBpZiB0aGV5IGFyZSBub3QgY3VycmVudGx5IHNldC4gRG9lcyBOT1QgbWVyZ2Ugb2JqZWN0cy5cbiAgICogVGhlIG9wZXJhdGlvbiBpcyBhZGRlZCB0byB0aGUgY3VycmVudCBwYXRjaCwgcmVhZHkgdG8gYmUgY29tbWl0ZWQgYnkgYGNvbW1pdCgpYFxuICAgKlxuICAgKiBAcGFyYW0gYXR0cnMgLSBBdHRyaWJ1dGVzIHRvIHNldC4gVG8gc2V0IGEgZGVlcCBhdHRyaWJ1dGUsIHVzZSBKU09OTWF0Y2gsIGVnOiBcXHtcIm5lc3RlZC5wcm9wXCI6IFwidmFsdWVcIlxcfVxuICAgKi9cbiAgc2V0SWZNaXNzaW5nKGF0dHJzKSB7XG4gICAgcmV0dXJuIHRoaXMuX2Fzc2lnbihcInNldElmTWlzc2luZ1wiLCBhdHRycyk7XG4gIH1cbiAgLyoqXG4gICAqIFBlcmZvcm1zIGEgXCJkaWZmLW1hdGNoLXBhdGNoXCIgb3BlcmF0aW9uIG9uIHRoZSBzdHJpbmcgYXR0cmlidXRlcyBwcm92aWRlZC5cbiAgICogVGhlIG9wZXJhdGlvbiBpcyBhZGRlZCB0byB0aGUgY3VycmVudCBwYXRjaCwgcmVhZHkgdG8gYmUgY29tbWl0ZWQgYnkgYGNvbW1pdCgpYFxuICAgKlxuICAgKiBAcGFyYW0gYXR0cnMgLSBBdHRyaWJ1dGVzIHRvIHBlcmZvcm0gb3BlcmF0aW9uIG9uLiBUbyBzZXQgYSBkZWVwIGF0dHJpYnV0ZSwgdXNlIEpTT05NYXRjaCwgZWc6IFxce1wibmVzdGVkLnByb3BcIjogXCJkbXBcIlxcfVxuICAgKi9cbiAgZGlmZk1hdGNoUGF0Y2goYXR0cnMpIHtcbiAgICByZXR1cm4gdmFsaWRhdGVPYmplY3QoXCJkaWZmTWF0Y2hQYXRjaFwiLCBhdHRycyksIHRoaXMuX2Fzc2lnbihcImRpZmZNYXRjaFBhdGNoXCIsIGF0dHJzKTtcbiAgfVxuICAvKipcbiAgICogVW5zZXRzIHRoZSBhdHRyaWJ1dGUgcGF0aHMgcHJvdmlkZWQuXG4gICAqIFRoZSBvcGVyYXRpb24gaXMgYWRkZWQgdG8gdGhlIGN1cnJlbnQgcGF0Y2gsIHJlYWR5IHRvIGJlIGNvbW1pdGVkIGJ5IGBjb21taXQoKWBcbiAgICpcbiAgICogQHBhcmFtIGF0dHJzIC0gQXR0cmlidXRlIHBhdGhzIHRvIHVuc2V0LlxuICAgKi9cbiAgdW5zZXQoYXR0cnMpIHtcbiAgICBpZiAoIUFycmF5LmlzQXJyYXkoYXR0cnMpKVxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwidW5zZXQoYXR0cnMpIHRha2VzIGFuIGFycmF5IG9mIGF0dHJpYnV0ZXMgdG8gdW5zZXQsIG5vbi1hcnJheSBnaXZlblwiKTtcbiAgICByZXR1cm4gdGhpcy5vcGVyYXRpb25zID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5vcGVyYXRpb25zLCB7IHVuc2V0OiBhdHRycyB9KSwgdGhpcztcbiAgfVxuICAvKipcbiAgICogSW5jcmVtZW50IGEgbnVtZXJpYyB2YWx1ZS4gRWFjaCBlbnRyeSBpbiB0aGUgYXJndW1lbnQgaXMgZWl0aGVyIGFuIGF0dHJpYnV0ZSBvciBhIEpTT04gcGF0aC4gVGhlIHZhbHVlIG1heSBiZSBhIHBvc2l0aXZlIG9yIG5lZ2F0aXZlIGludGVnZXIgb3IgZmxvYXRpbmctcG9pbnQgdmFsdWUuIFRoZSBvcGVyYXRpb24gd2lsbCBmYWlsIGlmIHRhcmdldCB2YWx1ZSBpcyBub3QgYSBudW1lcmljIHZhbHVlLCBvciBkb2Vzbid0IGV4aXN0LlxuICAgKlxuICAgKiBAcGFyYW0gYXR0cnMgLSBPYmplY3Qgb2YgYXR0cmlidXRlIHBhdGhzIHRvIGluY3JlbWVudCwgdmFsdWVzIHJlcHJlc2VudGluZyB0aGUgbnVtYmVyIHRvIGluY3JlbWVudCBieS5cbiAgICovXG4gIGluYyhhdHRycykge1xuICAgIHJldHVybiB0aGlzLl9hc3NpZ24oXCJpbmNcIiwgYXR0cnMpO1xuICB9XG4gIC8qKlxuICAgKiBEZWNyZW1lbnQgYSBudW1lcmljIHZhbHVlLiBFYWNoIGVudHJ5IGluIHRoZSBhcmd1bWVudCBpcyBlaXRoZXIgYW4gYXR0cmlidXRlIG9yIGEgSlNPTiBwYXRoLiBUaGUgdmFsdWUgbWF5IGJlIGEgcG9zaXRpdmUgb3IgbmVnYXRpdmUgaW50ZWdlciBvciBmbG9hdGluZy1wb2ludCB2YWx1ZS4gVGhlIG9wZXJhdGlvbiB3aWxsIGZhaWwgaWYgdGFyZ2V0IHZhbHVlIGlzIG5vdCBhIG51bWVyaWMgdmFsdWUsIG9yIGRvZXNuJ3QgZXhpc3QuXG4gICAqXG4gICAqIEBwYXJhbSBhdHRycyAtIE9iamVjdCBvZiBhdHRyaWJ1dGUgcGF0aHMgdG8gZGVjcmVtZW50LCB2YWx1ZXMgcmVwcmVzZW50aW5nIHRoZSBudW1iZXIgdG8gZGVjcmVtZW50IGJ5LlxuICAgKi9cbiAgZGVjKGF0dHJzKSB7XG4gICAgcmV0dXJuIHRoaXMuX2Fzc2lnbihcImRlY1wiLCBhdHRycyk7XG4gIH1cbiAgLyoqXG4gICAqIFByb3ZpZGVzIG1ldGhvZHMgZm9yIG1vZGlmeWluZyBhcnJheXMsIGJ5IGluc2VydGluZywgYXBwZW5kaW5nIGFuZCByZXBsYWNpbmcgZWxlbWVudHMgdmlhIGEgSlNPTlBhdGggZXhwcmVzc2lvbi5cbiAgICpcbiAgICogQHBhcmFtIGF0IC0gTG9jYXRpb24gdG8gaW5zZXJ0IGF0LCByZWxhdGl2ZSB0byB0aGUgZ2l2ZW4gc2VsZWN0b3IsIG9yICdyZXBsYWNlJyB0aGUgbWF0Y2hlZCBwYXRoXG4gICAqIEBwYXJhbSBzZWxlY3RvciAtIEpTT05QYXRoIGV4cHJlc3Npb24sIGVnIGBjb21tZW50c1stMV1gIG9yIGBibG9ja3NbX2tleT09XCJhYmMxMjNcIl1gXG4gICAqIEBwYXJhbSBpdGVtcyAtIEFycmF5IG9mIGl0ZW1zIHRvIGluc2VydC9yZXBsYWNlXG4gICAqL1xuICBpbnNlcnQoYXQsIHNlbGVjdG9yLCBpdGVtcykge1xuICAgIHJldHVybiB2YWxpZGF0ZUluc2VydChhdCwgc2VsZWN0b3IsIGl0ZW1zKSwgdGhpcy5fYXNzaWduKFwiaW5zZXJ0XCIsIHsgW2F0XTogc2VsZWN0b3IsIGl0ZW1zIH0pO1xuICB9XG4gIC8qKlxuICAgKiBBcHBlbmQgdGhlIGdpdmVuIGl0ZW1zIHRvIHRoZSBhcnJheSBhdCB0aGUgZ2l2ZW4gSlNPTlBhdGhcbiAgICpcbiAgICogQHBhcmFtIHNlbGVjdG9yIC0gQXR0cmlidXRlL3BhdGggdG8gYXBwZW5kIHRvLCBlZyBgY29tbWVudHNgIG9yIGBwZXJzb24uaG9iYmllc2BcbiAgICogQHBhcmFtIGl0ZW1zIC0gQXJyYXkgb2YgaXRlbXMgdG8gYXBwZW5kIHRvIHRoZSBhcnJheVxuICAgKi9cbiAgYXBwZW5kKHNlbGVjdG9yLCBpdGVtcykge1xuICAgIHJldHVybiB0aGlzLmluc2VydChcImFmdGVyXCIsIGAke3NlbGVjdG9yfVstMV1gLCBpdGVtcyk7XG4gIH1cbiAgLyoqXG4gICAqIFByZXBlbmQgdGhlIGdpdmVuIGl0ZW1zIHRvIHRoZSBhcnJheSBhdCB0aGUgZ2l2ZW4gSlNPTlBhdGhcbiAgICpcbiAgICogQHBhcmFtIHNlbGVjdG9yIC0gQXR0cmlidXRlL3BhdGggdG8gcHJlcGVuZCB0bywgZWcgYGNvbW1lbnRzYCBvciBgcGVyc29uLmhvYmJpZXNgXG4gICAqIEBwYXJhbSBpdGVtcyAtIEFycmF5IG9mIGl0ZW1zIHRvIHByZXBlbmQgdG8gdGhlIGFycmF5XG4gICAqL1xuICBwcmVwZW5kKHNlbGVjdG9yLCBpdGVtcykge1xuICAgIHJldHVybiB0aGlzLmluc2VydChcImJlZm9yZVwiLCBgJHtzZWxlY3Rvcn1bMF1gLCBpdGVtcyk7XG4gIH1cbiAgLyoqXG4gICAqIENoYW5nZSB0aGUgY29udGVudHMgb2YgYW4gYXJyYXkgYnkgcmVtb3ZpbmcgZXhpc3RpbmcgZWxlbWVudHMgYW5kL29yIGFkZGluZyBuZXcgZWxlbWVudHMuXG4gICAqXG4gICAqIEBwYXJhbSBzZWxlY3RvciAtIEF0dHJpYnV0ZSBvciBKU09OUGF0aCBleHByZXNzaW9uIGZvciBhcnJheVxuICAgKiBAcGFyYW0gc3RhcnQgLSBJbmRleCBhdCB3aGljaCB0byBzdGFydCBjaGFuZ2luZyB0aGUgYXJyYXkgKHdpdGggb3JpZ2luIDApLiBJZiBncmVhdGVyIHRoYW4gdGhlIGxlbmd0aCBvZiB0aGUgYXJyYXksIGFjdHVhbCBzdGFydGluZyBpbmRleCB3aWxsIGJlIHNldCB0byB0aGUgbGVuZ3RoIG9mIHRoZSBhcnJheS4gSWYgbmVnYXRpdmUsIHdpbGwgYmVnaW4gdGhhdCBtYW55IGVsZW1lbnRzIGZyb20gdGhlIGVuZCBvZiB0aGUgYXJyYXkgKHdpdGggb3JpZ2luIC0xKSBhbmQgd2lsbCBiZSBzZXQgdG8gMCBpZiBhYnNvbHV0ZSB2YWx1ZSBpcyBncmVhdGVyIHRoYW4gdGhlIGxlbmd0aCBvZiB0aGUgYXJyYXkueFxuICAgKiBAcGFyYW0gZGVsZXRlQ291bnQgLSBBbiBpbnRlZ2VyIGluZGljYXRpbmcgdGhlIG51bWJlciBvZiBvbGQgYXJyYXkgZWxlbWVudHMgdG8gcmVtb3ZlLlxuICAgKiBAcGFyYW0gaXRlbXMgLSBUaGUgZWxlbWVudHMgdG8gYWRkIHRvIHRoZSBhcnJheSwgYmVnaW5uaW5nIGF0IHRoZSBzdGFydCBpbmRleC4gSWYgeW91IGRvbid0IHNwZWNpZnkgYW55IGVsZW1lbnRzLCBzcGxpY2UoKSB3aWxsIG9ubHkgcmVtb3ZlIGVsZW1lbnRzIGZyb20gdGhlIGFycmF5LlxuICAgKi9cbiAgc3BsaWNlKHNlbGVjdG9yLCBzdGFydCwgZGVsZXRlQ291bnQsIGl0ZW1zKSB7XG4gICAgY29uc3QgZGVsQWxsID0gdHlwZW9mIGRlbGV0ZUNvdW50ID4gXCJ1XCIgfHwgZGVsZXRlQ291bnQgPT09IC0xLCBzdGFydEluZGV4ID0gc3RhcnQgPCAwID8gc3RhcnQgLSAxIDogc3RhcnQsIGRlbENvdW50ID0gZGVsQWxsID8gLTEgOiBNYXRoLm1heCgwLCBzdGFydCArIGRlbGV0ZUNvdW50KSwgZGVsUmFuZ2UgPSBzdGFydEluZGV4IDwgMCAmJiBkZWxDb3VudCA+PSAwID8gXCJcIiA6IGRlbENvdW50LCByYW5nZVNlbGVjdG9yID0gYCR7c2VsZWN0b3J9WyR7c3RhcnRJbmRleH06JHtkZWxSYW5nZX1dYDtcbiAgICByZXR1cm4gdGhpcy5pbnNlcnQoXCJyZXBsYWNlXCIsIHJhbmdlU2VsZWN0b3IsIGl0ZW1zIHx8IFtdKTtcbiAgfVxuICAvKipcbiAgICogQWRkcyBhIHJldmlzaW9uIGNsYXVzZSwgcHJldmVudGluZyB0aGUgZG9jdW1lbnQgZnJvbSBiZWluZyBwYXRjaGVkIGlmIHRoZSBgX3JldmAgcHJvcGVydHkgZG9lcyBub3QgbWF0Y2ggdGhlIGdpdmVuIHZhbHVlXG4gICAqXG4gICAqIEBwYXJhbSByZXYgLSBSZXZpc2lvbiB0byBsb2NrIHRoZSBwYXRjaCB0b1xuICAgKi9cbiAgaWZSZXZpc2lvbklkKHJldikge1xuICAgIHJldHVybiB0aGlzLm9wZXJhdGlvbnMuaWZSZXZpc2lvbklEID0gcmV2LCB0aGlzO1xuICB9XG4gIC8qKlxuICAgKiBSZXR1cm4gYSBwbGFpbiBKU09OIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBwYXRjaFxuICAgKi9cbiAgc2VyaWFsaXplKCkge1xuICAgIHJldHVybiB7IC4uLmdldFNlbGVjdGlvbih0aGlzLnNlbGVjdGlvbiksIC4uLnRoaXMub3BlcmF0aW9ucyB9O1xuICB9XG4gIC8qKlxuICAgKiBSZXR1cm4gYSBwbGFpbiBKU09OIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBwYXRjaFxuICAgKi9cbiAgdG9KU09OKCkge1xuICAgIHJldHVybiB0aGlzLnNlcmlhbGl6ZSgpO1xuICB9XG4gIC8qKlxuICAgKiBDbGVhcnMgdGhlIHBhdGNoIG9mIGFsbCBvcGVyYXRpb25zXG4gICAqL1xuICByZXNldCgpIHtcbiAgICByZXR1cm4gdGhpcy5vcGVyYXRpb25zID0ge30sIHRoaXM7XG4gIH1cbiAgX2Fzc2lnbihvcCwgcHJvcHMsIG1lcmdlID0gITApIHtcbiAgICByZXR1cm4gdmFsaWRhdGVPYmplY3Qob3AsIHByb3BzKSwgdGhpcy5vcGVyYXRpb25zID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5vcGVyYXRpb25zLCB7XG4gICAgICBbb3BdOiBPYmplY3QuYXNzaWduKHt9LCBtZXJnZSAmJiB0aGlzLm9wZXJhdGlvbnNbb3BdIHx8IHt9LCBwcm9wcylcbiAgICB9KSwgdGhpcztcbiAgfVxuICBfc2V0KG9wLCBwcm9wcykge1xuICAgIHJldHVybiB0aGlzLl9hc3NpZ24ob3AsIHByb3BzLCAhMSk7XG4gIH1cbn1cbmNsYXNzIE9ic2VydmFibGVQYXRjaCBleHRlbmRzIEJhc2VQYXRjaCB7XG4gICNjbGllbnQ7XG4gIGNvbnN0cnVjdG9yKHNlbGVjdGlvbiwgb3BlcmF0aW9ucywgY2xpZW50KSB7XG4gICAgc3VwZXIoc2VsZWN0aW9uLCBvcGVyYXRpb25zKSwgdGhpcy4jY2xpZW50ID0gY2xpZW50O1xuICB9XG4gIC8qKlxuICAgKiBDbG9uZXMgdGhlIHBhdGNoXG4gICAqL1xuICBjbG9uZSgpIHtcbiAgICByZXR1cm4gbmV3IE9ic2VydmFibGVQYXRjaCh0aGlzLnNlbGVjdGlvbiwgeyAuLi50aGlzLm9wZXJhdGlvbnMgfSwgdGhpcy4jY2xpZW50KTtcbiAgfVxuICBjb21taXQob3B0aW9ucykge1xuICAgIGlmICghdGhpcy4jY2xpZW50KVxuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICBcIk5vIGBjbGllbnRgIHBhc3NlZCB0byBwYXRjaCwgZWl0aGVyIHByb3ZpZGUgb25lIG9yIHBhc3MgdGhlIHBhdGNoIHRvIGEgY2xpZW50cyBgbXV0YXRlKClgIG1ldGhvZFwiXG4gICAgICApO1xuICAgIGNvbnN0IHJldHVybkZpcnN0ID0gdHlwZW9mIHRoaXMuc2VsZWN0aW9uID09IFwic3RyaW5nXCIsIG9wdHMgPSBPYmplY3QuYXNzaWduKHsgcmV0dXJuRmlyc3QsIHJldHVybkRvY3VtZW50czogITAgfSwgb3B0aW9ucyk7XG4gICAgcmV0dXJuIHRoaXMuI2NsaWVudC5tdXRhdGUoeyBwYXRjaDogdGhpcy5zZXJpYWxpemUoKSB9LCBvcHRzKTtcbiAgfVxufVxuY2xhc3MgUGF0Y2ggZXh0ZW5kcyBCYXNlUGF0Y2gge1xuICAjY2xpZW50O1xuICBjb25zdHJ1Y3RvcihzZWxlY3Rpb24sIG9wZXJhdGlvbnMsIGNsaWVudCkge1xuICAgIHN1cGVyKHNlbGVjdGlvbiwgb3BlcmF0aW9ucyksIHRoaXMuI2NsaWVudCA9IGNsaWVudDtcbiAgfVxuICAvKipcbiAgICogQ2xvbmVzIHRoZSBwYXRjaFxuICAgKi9cbiAgY2xvbmUoKSB7XG4gICAgcmV0dXJuIG5ldyBQYXRjaCh0aGlzLnNlbGVjdGlvbiwgeyAuLi50aGlzLm9wZXJhdGlvbnMgfSwgdGhpcy4jY2xpZW50KTtcbiAgfVxuICBjb21taXQob3B0aW9ucykge1xuICAgIGlmICghdGhpcy4jY2xpZW50KVxuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICBcIk5vIGBjbGllbnRgIHBhc3NlZCB0byBwYXRjaCwgZWl0aGVyIHByb3ZpZGUgb25lIG9yIHBhc3MgdGhlIHBhdGNoIHRvIGEgY2xpZW50cyBgbXV0YXRlKClgIG1ldGhvZFwiXG4gICAgICApO1xuICAgIGNvbnN0IHJldHVybkZpcnN0ID0gdHlwZW9mIHRoaXMuc2VsZWN0aW9uID09IFwic3RyaW5nXCIsIG9wdHMgPSBPYmplY3QuYXNzaWduKHsgcmV0dXJuRmlyc3QsIHJldHVybkRvY3VtZW50czogITAgfSwgb3B0aW9ucyk7XG4gICAgcmV0dXJuIHRoaXMuI2NsaWVudC5tdXRhdGUoeyBwYXRjaDogdGhpcy5zZXJpYWxpemUoKSB9LCBvcHRzKTtcbiAgfVxufVxuY29uc3QgZGVmYXVsdE11dGF0ZU9wdGlvbnMgPSB7IHJldHVybkRvY3VtZW50czogITEgfTtcbmNsYXNzIEJhc2VUcmFuc2FjdGlvbiB7XG4gIG9wZXJhdGlvbnM7XG4gIHRyeElkO1xuICBjb25zdHJ1Y3RvcihvcGVyYXRpb25zID0gW10sIHRyYW5zYWN0aW9uSWQpIHtcbiAgICB0aGlzLm9wZXJhdGlvbnMgPSBvcGVyYXRpb25zLCB0aGlzLnRyeElkID0gdHJhbnNhY3Rpb25JZDtcbiAgfVxuICAvKipcbiAgICogQ3JlYXRlcyBhIG5ldyBTYW5pdHkgZG9jdW1lbnQuIElmIGBfaWRgIGlzIHByb3ZpZGVkIGFuZCBhbHJlYWR5IGV4aXN0cywgdGhlIG11dGF0aW9uIHdpbGwgZmFpbC4gSWYgbm8gYF9pZGAgaXMgZ2l2ZW4sIG9uZSB3aWxsIGF1dG9tYXRpY2FsbHkgYmUgZ2VuZXJhdGVkIGJ5IHRoZSBkYXRhYmFzZS5cbiAgICogVGhlIG9wZXJhdGlvbiBpcyBhZGRlZCB0byB0aGUgY3VycmVudCB0cmFuc2FjdGlvbiwgcmVhZHkgdG8gYmUgY29tbWl0ZWQgYnkgYGNvbW1pdCgpYFxuICAgKlxuICAgKiBAcGFyYW0gZG9jIC0gRG9jdW1lbnQgdG8gY3JlYXRlLiBSZXF1aXJlcyBhIGBfdHlwZWAgcHJvcGVydHkuXG4gICAqL1xuICBjcmVhdGUoZG9jKSB7XG4gICAgcmV0dXJuIHZhbGlkYXRlT2JqZWN0KFwiY3JlYXRlXCIsIGRvYyksIHRoaXMuX2FkZCh7IGNyZWF0ZTogZG9jIH0pO1xuICB9XG4gIC8qKlxuICAgKiBDcmVhdGVzIGEgbmV3IFNhbml0eSBkb2N1bWVudC4gSWYgYSBkb2N1bWVudCB3aXRoIHRoZSBzYW1lIGBfaWRgIGFscmVhZHkgZXhpc3RzLCB0aGUgY3JlYXRlIG9wZXJhdGlvbiB3aWxsIGJlIGlnbm9yZWQuXG4gICAqIFRoZSBvcGVyYXRpb24gaXMgYWRkZWQgdG8gdGhlIGN1cnJlbnQgdHJhbnNhY3Rpb24sIHJlYWR5IHRvIGJlIGNvbW1pdGVkIGJ5IGBjb21taXQoKWBcbiAgICpcbiAgICogQHBhcmFtIGRvYyAtIERvY3VtZW50IHRvIGNyZWF0ZSBpZiBpdCBkb2VzIG5vdCBhbHJlYWR5IGV4aXN0LiBSZXF1aXJlcyBgX2lkYCBhbmQgYF90eXBlYCBwcm9wZXJ0aWVzLlxuICAgKi9cbiAgY3JlYXRlSWZOb3RFeGlzdHMoZG9jKSB7XG4gICAgY29uc3Qgb3AgPSBcImNyZWF0ZUlmTm90RXhpc3RzXCI7XG4gICAgcmV0dXJuIHZhbGlkYXRlT2JqZWN0KG9wLCBkb2MpLCByZXF1aXJlRG9jdW1lbnRJZChvcCwgZG9jKSwgdGhpcy5fYWRkKHsgW29wXTogZG9jIH0pO1xuICB9XG4gIC8qKlxuICAgKiBDcmVhdGVzIGEgbmV3IFNhbml0eSBkb2N1bWVudCwgb3IgcmVwbGFjZXMgYW4gZXhpc3Rpbmcgb25lIGlmIHRoZSBzYW1lIGBfaWRgIGlzIGFscmVhZHkgdXNlZC5cbiAgICogVGhlIG9wZXJhdGlvbiBpcyBhZGRlZCB0byB0aGUgY3VycmVudCB0cmFuc2FjdGlvbiwgcmVhZHkgdG8gYmUgY29tbWl0ZWQgYnkgYGNvbW1pdCgpYFxuICAgKlxuICAgKiBAcGFyYW0gZG9jIC0gRG9jdW1lbnQgdG8gY3JlYXRlIG9yIHJlcGxhY2UuIFJlcXVpcmVzIGBfaWRgIGFuZCBgX3R5cGVgIHByb3BlcnRpZXMuXG4gICAqL1xuICBjcmVhdGVPclJlcGxhY2UoZG9jKSB7XG4gICAgY29uc3Qgb3AgPSBcImNyZWF0ZU9yUmVwbGFjZVwiO1xuICAgIHJldHVybiB2YWxpZGF0ZU9iamVjdChvcCwgZG9jKSwgcmVxdWlyZURvY3VtZW50SWQob3AsIGRvYyksIHRoaXMuX2FkZCh7IFtvcF06IGRvYyB9KTtcbiAgfVxuICAvKipcbiAgICogRGVsZXRlcyB0aGUgZG9jdW1lbnQgd2l0aCB0aGUgZ2l2ZW4gZG9jdW1lbnQgSURcbiAgICogVGhlIG9wZXJhdGlvbiBpcyBhZGRlZCB0byB0aGUgY3VycmVudCB0cmFuc2FjdGlvbiwgcmVhZHkgdG8gYmUgY29tbWl0ZWQgYnkgYGNvbW1pdCgpYFxuICAgKlxuICAgKiBAcGFyYW0gZG9jdW1lbnRJZCAtIERvY3VtZW50IElEIHRvIGRlbGV0ZVxuICAgKi9cbiAgZGVsZXRlKGRvY3VtZW50SWQpIHtcbiAgICByZXR1cm4gdmFsaWRhdGVEb2N1bWVudElkKFwiZGVsZXRlXCIsIGRvY3VtZW50SWQpLCB0aGlzLl9hZGQoeyBkZWxldGU6IHsgaWQ6IGRvY3VtZW50SWQgfSB9KTtcbiAgfVxuICB0cmFuc2FjdGlvbklkKGlkKSB7XG4gICAgcmV0dXJuIGlkID8gKHRoaXMudHJ4SWQgPSBpZCwgdGhpcykgOiB0aGlzLnRyeElkO1xuICB9XG4gIC8qKlxuICAgKiBSZXR1cm4gYSBwbGFpbiBKU09OIHJlcHJlc2VudGF0aW9uIG9mIHRoZSB0cmFuc2FjdGlvblxuICAgKi9cbiAgc2VyaWFsaXplKCkge1xuICAgIHJldHVybiBbLi4udGhpcy5vcGVyYXRpb25zXTtcbiAgfVxuICAvKipcbiAgICogUmV0dXJuIGEgcGxhaW4gSlNPTiByZXByZXNlbnRhdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb25cbiAgICovXG4gIHRvSlNPTigpIHtcbiAgICByZXR1cm4gdGhpcy5zZXJpYWxpemUoKTtcbiAgfVxuICAvKipcbiAgICogQ2xlYXJzIHRoZSB0cmFuc2FjdGlvbiBvZiBhbGwgb3BlcmF0aW9uc1xuICAgKi9cbiAgcmVzZXQoKSB7XG4gICAgcmV0dXJuIHRoaXMub3BlcmF0aW9ucyA9IFtdLCB0aGlzO1xuICB9XG4gIF9hZGQobXV0KSB7XG4gICAgcmV0dXJuIHRoaXMub3BlcmF0aW9ucy5wdXNoKG11dCksIHRoaXM7XG4gIH1cbn1cbmNsYXNzIFRyYW5zYWN0aW9uIGV4dGVuZHMgQmFzZVRyYW5zYWN0aW9uIHtcbiAgI2NsaWVudDtcbiAgY29uc3RydWN0b3Iob3BlcmF0aW9ucywgY2xpZW50LCB0cmFuc2FjdGlvbklkKSB7XG4gICAgc3VwZXIob3BlcmF0aW9ucywgdHJhbnNhY3Rpb25JZCksIHRoaXMuI2NsaWVudCA9IGNsaWVudDtcbiAgfVxuICAvKipcbiAgICogQ2xvbmVzIHRoZSB0cmFuc2FjdGlvblxuICAgKi9cbiAgY2xvbmUoKSB7XG4gICAgcmV0dXJuIG5ldyBUcmFuc2FjdGlvbihbLi4udGhpcy5vcGVyYXRpb25zXSwgdGhpcy4jY2xpZW50LCB0aGlzLnRyeElkKTtcbiAgfVxuICBjb21taXQob3B0aW9ucykge1xuICAgIGlmICghdGhpcy4jY2xpZW50KVxuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICBcIk5vIGBjbGllbnRgIHBhc3NlZCB0byB0cmFuc2FjdGlvbiwgZWl0aGVyIHByb3ZpZGUgb25lIG9yIHBhc3MgdGhlIHRyYW5zYWN0aW9uIHRvIGEgY2xpZW50cyBgbXV0YXRlKClgIG1ldGhvZFwiXG4gICAgICApO1xuICAgIHJldHVybiB0aGlzLiNjbGllbnQubXV0YXRlKFxuICAgICAgdGhpcy5zZXJpYWxpemUoKSxcbiAgICAgIE9iamVjdC5hc3NpZ24oeyB0cmFuc2FjdGlvbklkOiB0aGlzLnRyeElkIH0sIGRlZmF1bHRNdXRhdGVPcHRpb25zLCBvcHRpb25zIHx8IHt9KVxuICAgICk7XG4gIH1cbiAgcGF0Y2gocGF0Y2hPckRvY3VtZW50SWQsIHBhdGNoT3BzKSB7XG4gICAgY29uc3QgaXNCdWlsZGVyID0gdHlwZW9mIHBhdGNoT3BzID09IFwiZnVuY3Rpb25cIiwgaXNQYXRjaCA9IHR5cGVvZiBwYXRjaE9yRG9jdW1lbnRJZCAhPSBcInN0cmluZ1wiICYmIHBhdGNoT3JEb2N1bWVudElkIGluc3RhbmNlb2YgUGF0Y2gsIGlzTXV0YXRpb25TZWxlY3Rpb24gPSB0eXBlb2YgcGF0Y2hPckRvY3VtZW50SWQgPT0gXCJvYmplY3RcIiAmJiAoXCJxdWVyeVwiIGluIHBhdGNoT3JEb2N1bWVudElkIHx8IFwiaWRcIiBpbiBwYXRjaE9yRG9jdW1lbnRJZCk7XG4gICAgaWYgKGlzUGF0Y2gpXG4gICAgICByZXR1cm4gdGhpcy5fYWRkKHsgcGF0Y2g6IHBhdGNoT3JEb2N1bWVudElkLnNlcmlhbGl6ZSgpIH0pO1xuICAgIGlmIChpc0J1aWxkZXIpIHtcbiAgICAgIGNvbnN0IHBhdGNoID0gcGF0Y2hPcHMobmV3IFBhdGNoKHBhdGNoT3JEb2N1bWVudElkLCB7fSwgdGhpcy4jY2xpZW50KSk7XG4gICAgICBpZiAoIShwYXRjaCBpbnN0YW5jZW9mIFBhdGNoKSlcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiZnVuY3Rpb24gcGFzc2VkIHRvIGBwYXRjaCgpYCBtdXN0IHJldHVybiB0aGUgcGF0Y2hcIik7XG4gICAgICByZXR1cm4gdGhpcy5fYWRkKHsgcGF0Y2g6IHBhdGNoLnNlcmlhbGl6ZSgpIH0pO1xuICAgIH1cbiAgICBpZiAoaXNNdXRhdGlvblNlbGVjdGlvbikge1xuICAgICAgY29uc3QgcGF0Y2ggPSBuZXcgUGF0Y2gocGF0Y2hPckRvY3VtZW50SWQsIHBhdGNoT3BzIHx8IHt9LCB0aGlzLiNjbGllbnQpO1xuICAgICAgcmV0dXJuIHRoaXMuX2FkZCh7IHBhdGNoOiBwYXRjaC5zZXJpYWxpemUoKSB9KTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMuX2FkZCh7IHBhdGNoOiB7IGlkOiBwYXRjaE9yRG9jdW1lbnRJZCwgLi4ucGF0Y2hPcHMgfSB9KTtcbiAgfVxufVxuY2xhc3MgT2JzZXJ2YWJsZVRyYW5zYWN0aW9uIGV4dGVuZHMgQmFzZVRyYW5zYWN0aW9uIHtcbiAgI2NsaWVudDtcbiAgY29uc3RydWN0b3Iob3BlcmF0aW9ucywgY2xpZW50LCB0cmFuc2FjdGlvbklkKSB7XG4gICAgc3VwZXIob3BlcmF0aW9ucywgdHJhbnNhY3Rpb25JZCksIHRoaXMuI2NsaWVudCA9IGNsaWVudDtcbiAgfVxuICAvKipcbiAgICogQ2xvbmVzIHRoZSB0cmFuc2FjdGlvblxuICAgKi9cbiAgY2xvbmUoKSB7XG4gICAgcmV0dXJuIG5ldyBPYnNlcnZhYmxlVHJhbnNhY3Rpb24oWy4uLnRoaXMub3BlcmF0aW9uc10sIHRoaXMuI2NsaWVudCwgdGhpcy50cnhJZCk7XG4gIH1cbiAgY29tbWl0KG9wdGlvbnMpIHtcbiAgICBpZiAoIXRoaXMuI2NsaWVudClcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgXCJObyBgY2xpZW50YCBwYXNzZWQgdG8gdHJhbnNhY3Rpb24sIGVpdGhlciBwcm92aWRlIG9uZSBvciBwYXNzIHRoZSB0cmFuc2FjdGlvbiB0byBhIGNsaWVudHMgYG11dGF0ZSgpYCBtZXRob2RcIlxuICAgICAgKTtcbiAgICByZXR1cm4gdGhpcy4jY2xpZW50Lm11dGF0ZShcbiAgICAgIHRoaXMuc2VyaWFsaXplKCksXG4gICAgICBPYmplY3QuYXNzaWduKHsgdHJhbnNhY3Rpb25JZDogdGhpcy50cnhJZCB9LCBkZWZhdWx0TXV0YXRlT3B0aW9ucywgb3B0aW9ucyB8fCB7fSlcbiAgICApO1xuICB9XG4gIHBhdGNoKHBhdGNoT3JEb2N1bWVudElkLCBwYXRjaE9wcykge1xuICAgIGNvbnN0IGlzQnVpbGRlciA9IHR5cGVvZiBwYXRjaE9wcyA9PSBcImZ1bmN0aW9uXCI7XG4gICAgaWYgKHR5cGVvZiBwYXRjaE9yRG9jdW1lbnRJZCAhPSBcInN0cmluZ1wiICYmIHBhdGNoT3JEb2N1bWVudElkIGluc3RhbmNlb2YgT2JzZXJ2YWJsZVBhdGNoKVxuICAgICAgcmV0dXJuIHRoaXMuX2FkZCh7IHBhdGNoOiBwYXRjaE9yRG9jdW1lbnRJZC5zZXJpYWxpemUoKSB9KTtcbiAgICBpZiAoaXNCdWlsZGVyKSB7XG4gICAgICBjb25zdCBwYXRjaCA9IHBhdGNoT3BzKG5ldyBPYnNlcnZhYmxlUGF0Y2gocGF0Y2hPckRvY3VtZW50SWQsIHt9LCB0aGlzLiNjbGllbnQpKTtcbiAgICAgIGlmICghKHBhdGNoIGluc3RhbmNlb2YgT2JzZXJ2YWJsZVBhdGNoKSlcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiZnVuY3Rpb24gcGFzc2VkIHRvIGBwYXRjaCgpYCBtdXN0IHJldHVybiB0aGUgcGF0Y2hcIik7XG4gICAgICByZXR1cm4gdGhpcy5fYWRkKHsgcGF0Y2g6IHBhdGNoLnNlcmlhbGl6ZSgpIH0pO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy5fYWRkKHsgcGF0Y2g6IHsgaWQ6IHBhdGNoT3JEb2N1bWVudElkLCAuLi5wYXRjaE9wcyB9IH0pO1xuICB9XG59XG5jb25zdCBwcm9qZWN0SGVhZGVyID0gXCJYLVNhbml0eS1Qcm9qZWN0LUlEXCI7XG5mdW5jdGlvbiByZXF1ZXN0T3B0aW9ucyhjb25maWcsIG92ZXJyaWRlcyA9IHt9KSB7XG4gIGNvbnN0IGhlYWRlcnMyID0ge30sIHRva2VuID0gb3ZlcnJpZGVzLnRva2VuIHx8IGNvbmZpZy50b2tlbjtcbiAgdG9rZW4gJiYgKGhlYWRlcnMyLkF1dGhvcml6YXRpb24gPSBgQmVhcmVyICR7dG9rZW59YCksICFvdmVycmlkZXMudXNlR2xvYmFsQXBpICYmICFjb25maWcudXNlUHJvamVjdEhvc3RuYW1lICYmIGNvbmZpZy5wcm9qZWN0SWQgJiYgKGhlYWRlcnMyW3Byb2plY3RIZWFkZXJdID0gY29uZmlnLnByb2plY3RJZCk7XG4gIGNvbnN0IHdpdGhDcmVkZW50aWFscyA9ICEhKHR5cGVvZiBvdmVycmlkZXMud2l0aENyZWRlbnRpYWxzID4gXCJ1XCIgPyBjb25maWcudG9rZW4gfHwgY29uZmlnLndpdGhDcmVkZW50aWFscyA6IG92ZXJyaWRlcy53aXRoQ3JlZGVudGlhbHMpLCB0aW1lb3V0ID0gdHlwZW9mIG92ZXJyaWRlcy50aW1lb3V0ID4gXCJ1XCIgPyBjb25maWcudGltZW91dCA6IG92ZXJyaWRlcy50aW1lb3V0O1xuICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgb3ZlcnJpZGVzLCB7XG4gICAgaGVhZGVyczogT2JqZWN0LmFzc2lnbih7fSwgaGVhZGVyczIsIG92ZXJyaWRlcy5oZWFkZXJzIHx8IHt9KSxcbiAgICB0aW1lb3V0OiB0eXBlb2YgdGltZW91dCA+IFwidVwiID8gNSAqIDYwICogMWUzIDogdGltZW91dCxcbiAgICBwcm94eTogb3ZlcnJpZGVzLnByb3h5IHx8IGNvbmZpZy5wcm94eSxcbiAgICBqc29uOiAhMCxcbiAgICB3aXRoQ3JlZGVudGlhbHMsXG4gICAgZmV0Y2g6IHR5cGVvZiBvdmVycmlkZXMuZmV0Y2ggPT0gXCJvYmplY3RcIiAmJiB0eXBlb2YgY29uZmlnLmZldGNoID09IFwib2JqZWN0XCIgPyB7IC4uLmNvbmZpZy5mZXRjaCwgLi4ub3ZlcnJpZGVzLmZldGNoIH0gOiBvdmVycmlkZXMuZmV0Y2ggfHwgY29uZmlnLmZldGNoXG4gIH0pO1xufVxuY29uc3QgZW5jb2RlUXVlcnlTdHJpbmcgPSAoe1xuICBxdWVyeSxcbiAgcGFyYW1zID0ge30sXG4gIG9wdGlvbnMgPSB7fVxufSkgPT4ge1xuICBjb25zdCBzZWFyY2hQYXJhbXMgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKCksIHsgdGFnLCBpbmNsdWRlTXV0YXRpb25zLCByZXR1cm5RdWVyeSwgLi4ub3B0cyB9ID0gb3B0aW9ucztcbiAgdGFnICYmIHNlYXJjaFBhcmFtcy5hcHBlbmQoXCJ0YWdcIiwgdGFnKSwgc2VhcmNoUGFyYW1zLmFwcGVuZChcInF1ZXJ5XCIsIHF1ZXJ5KTtcbiAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMocGFyYW1zKSlcbiAgICBzZWFyY2hQYXJhbXMuYXBwZW5kKGAkJHtrZXl9YCwgSlNPTi5zdHJpbmdpZnkodmFsdWUpKTtcbiAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMob3B0cykpXG4gICAgdmFsdWUgJiYgc2VhcmNoUGFyYW1zLmFwcGVuZChrZXksIGAke3ZhbHVlfWApO1xuICByZXR1cm4gcmV0dXJuUXVlcnkgPT09ICExICYmIHNlYXJjaFBhcmFtcy5hcHBlbmQoXCJyZXR1cm5RdWVyeVwiLCBcImZhbHNlXCIpLCBpbmNsdWRlTXV0YXRpb25zID09PSAhMSAmJiBzZWFyY2hQYXJhbXMuYXBwZW5kKFwiaW5jbHVkZU11dGF0aW9uc1wiLCBcImZhbHNlXCIpLCBgPyR7c2VhcmNoUGFyYW1zfWA7XG59LCBleGNsdWRlRmFsc2V5ID0gKHBhcmFtLCBkZWZWYWx1ZSkgPT4gcGFyYW0gPT09ICExID8gdm9pZCAwIDogdHlwZW9mIHBhcmFtID4gXCJ1XCIgPyBkZWZWYWx1ZSA6IHBhcmFtLCBnZXRNdXRhdGlvblF1ZXJ5ID0gKG9wdGlvbnMgPSB7fSkgPT4gKHtcbiAgZHJ5UnVuOiBvcHRpb25zLmRyeVJ1bixcbiAgcmV0dXJuSWRzOiAhMCxcbiAgcmV0dXJuRG9jdW1lbnRzOiBleGNsdWRlRmFsc2V5KG9wdGlvbnMucmV0dXJuRG9jdW1lbnRzLCAhMCksXG4gIHZpc2liaWxpdHk6IG9wdGlvbnMudmlzaWJpbGl0eSB8fCBcInN5bmNcIixcbiAgYXV0b0dlbmVyYXRlQXJyYXlLZXlzOiBvcHRpb25zLmF1dG9HZW5lcmF0ZUFycmF5S2V5cyxcbiAgc2tpcENyb3NzRGF0YXNldFJlZmVyZW5jZVZhbGlkYXRpb246IG9wdGlvbnMuc2tpcENyb3NzRGF0YXNldFJlZmVyZW5jZVZhbGlkYXRpb25cbn0pLCBpc1Jlc3BvbnNlID0gKGV2ZW50KSA9PiBldmVudC50eXBlID09PSBcInJlc3BvbnNlXCIsIGdldEJvZHkgPSAoZXZlbnQpID0+IGV2ZW50LmJvZHksIGluZGV4QnkgPSAoZG9jcywgYXR0cikgPT4gZG9jcy5yZWR1Y2UoKGluZGV4ZWQsIGRvYykgPT4gKGluZGV4ZWRbYXR0cihkb2MpXSA9IGRvYywgaW5kZXhlZCksIC8qIEBfX1BVUkVfXyAqLyBPYmplY3QuY3JlYXRlKG51bGwpKSwgZ2V0UXVlcnlTaXplTGltaXQgPSAxMTI2NDtcbmZ1bmN0aW9uIF9mZXRjaChjbGllbnQsIGh0dHBSZXF1ZXN0LCBfc3RlZ2EsIHF1ZXJ5LCBfcGFyYW1zID0ge30sIG9wdGlvbnMgPSB7fSkge1xuICBjb25zdCBzdGVnYSA9IFwic3RlZ2FcIiBpbiBvcHRpb25zID8ge1xuICAgIC4uLl9zdGVnYSB8fCB7fSxcbiAgICAuLi50eXBlb2Ygb3B0aW9ucy5zdGVnYSA9PSBcImJvb2xlYW5cIiA/IHsgZW5hYmxlZDogb3B0aW9ucy5zdGVnYSB9IDogb3B0aW9ucy5zdGVnYSB8fCB7fVxuICB9IDogX3N0ZWdhLCBwYXJhbXMgPSBzdGVnYS5lbmFibGVkID8gc3RlZ2FDbGVhbihfcGFyYW1zKSA6IF9wYXJhbXMsIG1hcFJlc3BvbnNlID0gb3B0aW9ucy5maWx0ZXJSZXNwb25zZSA9PT0gITEgPyAocmVzKSA9PiByZXMgOiAocmVzKSA9PiByZXMucmVzdWx0LCB7IGNhY2hlLCBuZXh0LCAuLi5vcHRzIH0gPSB7XG4gICAgLy8gT3B0IG91dCBvZiBzZXR0aW5nIGEgYHNpZ25hbGAgb24gYW4gaW50ZXJuYWwgYGZldGNoYCBpZiBvbmUgaXNuJ3QgcHJvdmlkZWQuXG4gICAgLy8gVGhpcyBpcyBuZWNlc3NhcnkgaW4gUmVhY3QgU2VydmVyIENvbXBvbmVudHMgdG8gYXZvaWQgb3B0aW5nIG91dCBvZiBSZXF1ZXN0IE1lbW9pemF0aW9uLlxuICAgIHVzZUFib3J0U2lnbmFsOiB0eXBlb2Ygb3B0aW9ucy5zaWduYWwgPCBcInVcIixcbiAgICAvLyBTZXQgYHJlc3VsdFNvdXJjZU1hcCcgd2hlbiBzdGVnYSBpcyBlbmFibGVkLCBhcyBpdCdzIHJlcXVpcmVkIGZvciBlbmNvZGluZy5cbiAgICByZXN1bHRTb3VyY2VNYXA6IHN0ZWdhLmVuYWJsZWQgPyBcIndpdGhLZXlBcnJheVNlbGVjdG9yXCIgOiBvcHRpb25zLnJlc3VsdFNvdXJjZU1hcCxcbiAgICAuLi5vcHRpb25zLFxuICAgIC8vIERlZmF1bHQgdG8gbm90IHJldHVybmluZyB0aGUgcXVlcnksIHVubGVzcyBgZmlsdGVyUmVzcG9uc2VgIGlzIGBmYWxzZWAsXG4gICAgLy8gb3IgYHJldHVyblF1ZXJ5YCBpcyBleHBsaWNpdGx5IHNldC4gYHRydWVgIGlzIHRoZSBkZWZhdWx0IGluIENvbnRlbnQgTGFrZSwgc28gc2tpcCBpZiB0cnV0aHlcbiAgICByZXR1cm5RdWVyeTogb3B0aW9ucy5maWx0ZXJSZXNwb25zZSA9PT0gITEgJiYgb3B0aW9ucy5yZXR1cm5RdWVyeSAhPT0gITFcbiAgfSwgcmVxT3B0cyA9IHR5cGVvZiBjYWNoZSA8IFwidVwiIHx8IHR5cGVvZiBuZXh0IDwgXCJ1XCIgPyB7IC4uLm9wdHMsIGZldGNoOiB7IGNhY2hlLCBuZXh0IH0gfSA6IG9wdHMsICRyZXF1ZXN0ID0gX2RhdGFSZXF1ZXN0KGNsaWVudCwgaHR0cFJlcXVlc3QsIFwicXVlcnlcIiwgeyBxdWVyeSwgcGFyYW1zIH0sIHJlcU9wdHMpO1xuICByZXR1cm4gc3RlZ2EuZW5hYmxlZCA/ICRyZXF1ZXN0LnBpcGUoXG4gICAgY29tYmluZUxhdGVzdFdpdGgoXG4gICAgICBmcm9tKFxuICAgICAgICBpbXBvcnQoXCIuL19jaHVua3MtZXMvc3RlZ2FFbmNvZGVTb3VyY2VNYXAuanNcIikudGhlbihmdW5jdGlvbihuKSB7XG4gICAgICAgICAgcmV0dXJuIG4uc3RlZ2FFbmNvZGVTb3VyY2VNYXAkMTtcbiAgICAgICAgfSkudGhlbihcbiAgICAgICAgICAoeyBzdGVnYUVuY29kZVNvdXJjZU1hcCB9KSA9PiBzdGVnYUVuY29kZVNvdXJjZU1hcFxuICAgICAgICApXG4gICAgICApXG4gICAgKSxcbiAgICBtYXAoXG4gICAgICAoW3Jlcywgc3RlZ2FFbmNvZGVTb3VyY2VNYXBdKSA9PiB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHN0ZWdhRW5jb2RlU291cmNlTWFwKHJlcy5yZXN1bHQsIHJlcy5yZXN1bHRTb3VyY2VNYXAsIHN0ZWdhKTtcbiAgICAgICAgcmV0dXJuIG1hcFJlc3BvbnNlKHsgLi4ucmVzLCByZXN1bHQgfSk7XG4gICAgICB9XG4gICAgKVxuICApIDogJHJlcXVlc3QucGlwZShtYXAobWFwUmVzcG9uc2UpKTtcbn1cbmZ1bmN0aW9uIF9nZXREb2N1bWVudChjbGllbnQsIGh0dHBSZXF1ZXN0LCBpZCwgb3B0cyA9IHt9KSB7XG4gIGNvbnN0IG9wdGlvbnMgPSB7XG4gICAgdXJpOiBfZ2V0RGF0YVVybChjbGllbnQsIFwiZG9jXCIsIGlkKSxcbiAgICBqc29uOiAhMCxcbiAgICB0YWc6IG9wdHMudGFnLFxuICAgIHNpZ25hbDogb3B0cy5zaWduYWxcbiAgfTtcbiAgcmV0dXJuIF9yZXF1ZXN0T2JzZXJ2YWJsZShjbGllbnQsIGh0dHBSZXF1ZXN0LCBvcHRpb25zKS5waXBlKFxuICAgIGZpbHRlcihpc1Jlc3BvbnNlKSxcbiAgICBtYXAoKGV2ZW50KSA9PiBldmVudC5ib2R5LmRvY3VtZW50cyAmJiBldmVudC5ib2R5LmRvY3VtZW50c1swXSlcbiAgKTtcbn1cbmZ1bmN0aW9uIF9nZXREb2N1bWVudHMoY2xpZW50LCBodHRwUmVxdWVzdCwgaWRzLCBvcHRzID0ge30pIHtcbiAgY29uc3Qgb3B0aW9ucyA9IHtcbiAgICB1cmk6IF9nZXREYXRhVXJsKGNsaWVudCwgXCJkb2NcIiwgaWRzLmpvaW4oXCIsXCIpKSxcbiAgICBqc29uOiAhMCxcbiAgICB0YWc6IG9wdHMudGFnLFxuICAgIHNpZ25hbDogb3B0cy5zaWduYWxcbiAgfTtcbiAgcmV0dXJuIF9yZXF1ZXN0T2JzZXJ2YWJsZShjbGllbnQsIGh0dHBSZXF1ZXN0LCBvcHRpb25zKS5waXBlKFxuICAgIGZpbHRlcihpc1Jlc3BvbnNlKSxcbiAgICBtYXAoKGV2ZW50KSA9PiB7XG4gICAgICBjb25zdCBpbmRleGVkID0gaW5kZXhCeShldmVudC5ib2R5LmRvY3VtZW50cyB8fCBbXSwgKGRvYykgPT4gZG9jLl9pZCk7XG4gICAgICByZXR1cm4gaWRzLm1hcCgoaWQpID0+IGluZGV4ZWRbaWRdIHx8IG51bGwpO1xuICAgIH0pXG4gICk7XG59XG5mdW5jdGlvbiBfY3JlYXRlSWZOb3RFeGlzdHMoY2xpZW50LCBodHRwUmVxdWVzdCwgZG9jLCBvcHRpb25zKSB7XG4gIHJldHVybiByZXF1aXJlRG9jdW1lbnRJZChcImNyZWF0ZUlmTm90RXhpc3RzXCIsIGRvYyksIF9jcmVhdGUoY2xpZW50LCBodHRwUmVxdWVzdCwgZG9jLCBcImNyZWF0ZUlmTm90RXhpc3RzXCIsIG9wdGlvbnMpO1xufVxuZnVuY3Rpb24gX2NyZWF0ZU9yUmVwbGFjZShjbGllbnQsIGh0dHBSZXF1ZXN0LCBkb2MsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHJlcXVpcmVEb2N1bWVudElkKFwiY3JlYXRlT3JSZXBsYWNlXCIsIGRvYyksIF9jcmVhdGUoY2xpZW50LCBodHRwUmVxdWVzdCwgZG9jLCBcImNyZWF0ZU9yUmVwbGFjZVwiLCBvcHRpb25zKTtcbn1cbmZ1bmN0aW9uIF9kZWxldGUoY2xpZW50LCBodHRwUmVxdWVzdCwgc2VsZWN0aW9uLCBvcHRpb25zKSB7XG4gIHJldHVybiBfZGF0YVJlcXVlc3QoXG4gICAgY2xpZW50LFxuICAgIGh0dHBSZXF1ZXN0LFxuICAgIFwibXV0YXRlXCIsXG4gICAgeyBtdXRhdGlvbnM6IFt7IGRlbGV0ZTogZ2V0U2VsZWN0aW9uKHNlbGVjdGlvbikgfV0gfSxcbiAgICBvcHRpb25zXG4gICk7XG59XG5mdW5jdGlvbiBfbXV0YXRlKGNsaWVudCwgaHR0cFJlcXVlc3QsIG11dGF0aW9ucywgb3B0aW9ucykge1xuICBsZXQgbXV0O1xuICBtdXRhdGlvbnMgaW5zdGFuY2VvZiBQYXRjaCB8fCBtdXRhdGlvbnMgaW5zdGFuY2VvZiBPYnNlcnZhYmxlUGF0Y2ggPyBtdXQgPSB7IHBhdGNoOiBtdXRhdGlvbnMuc2VyaWFsaXplKCkgfSA6IG11dGF0aW9ucyBpbnN0YW5jZW9mIFRyYW5zYWN0aW9uIHx8IG11dGF0aW9ucyBpbnN0YW5jZW9mIE9ic2VydmFibGVUcmFuc2FjdGlvbiA/IG11dCA9IG11dGF0aW9ucy5zZXJpYWxpemUoKSA6IG11dCA9IG11dGF0aW9ucztcbiAgY29uc3QgbXV0cyA9IEFycmF5LmlzQXJyYXkobXV0KSA/IG11dCA6IFttdXRdLCB0cmFuc2FjdGlvbklkID0gb3B0aW9ucyAmJiBvcHRpb25zLnRyYW5zYWN0aW9uSWQgfHwgdm9pZCAwO1xuICByZXR1cm4gX2RhdGFSZXF1ZXN0KGNsaWVudCwgaHR0cFJlcXVlc3QsIFwibXV0YXRlXCIsIHsgbXV0YXRpb25zOiBtdXRzLCB0cmFuc2FjdGlvbklkIH0sIG9wdGlvbnMpO1xufVxuZnVuY3Rpb24gX2FjdGlvbihjbGllbnQsIGh0dHBSZXF1ZXN0LCBhY3Rpb25zLCBvcHRpb25zKSB7XG4gIGNvbnN0IGFjdHMgPSBBcnJheS5pc0FycmF5KGFjdGlvbnMpID8gYWN0aW9ucyA6IFthY3Rpb25zXSwgdHJhbnNhY3Rpb25JZCA9IG9wdGlvbnMgJiYgb3B0aW9ucy50cmFuc2FjdGlvbklkIHx8IHZvaWQgMCwgc2tpcENyb3NzRGF0YXNldFJlZmVyZW5jZVZhbGlkYXRpb24gPSBvcHRpb25zICYmIG9wdGlvbnMuc2tpcENyb3NzRGF0YXNldFJlZmVyZW5jZVZhbGlkYXRpb24gfHwgdm9pZCAwLCBkcnlSdW4gPSBvcHRpb25zICYmIG9wdGlvbnMuZHJ5UnVuIHx8IHZvaWQgMDtcbiAgcmV0dXJuIF9kYXRhUmVxdWVzdChcbiAgICBjbGllbnQsXG4gICAgaHR0cFJlcXVlc3QsXG4gICAgXCJhY3Rpb25zXCIsXG4gICAgeyBhY3Rpb25zOiBhY3RzLCB0cmFuc2FjdGlvbklkLCBza2lwQ3Jvc3NEYXRhc2V0UmVmZXJlbmNlVmFsaWRhdGlvbiwgZHJ5UnVuIH0sXG4gICAgb3B0aW9uc1xuICApO1xufVxuZnVuY3Rpb24gX2RhdGFSZXF1ZXN0KGNsaWVudCwgaHR0cFJlcXVlc3QsIGVuZHBvaW50LCBib2R5LCBvcHRpb25zID0ge30pIHtcbiAgY29uc3QgaXNNdXRhdGlvbiA9IGVuZHBvaW50ID09PSBcIm11dGF0ZVwiLCBpc0FjdGlvbiA9IGVuZHBvaW50ID09PSBcImFjdGlvbnNcIiwgaXNRdWVyeSA9IGVuZHBvaW50ID09PSBcInF1ZXJ5XCIsIHN0clF1ZXJ5ID0gaXNNdXRhdGlvbiB8fCBpc0FjdGlvbiA/IFwiXCIgOiBlbmNvZGVRdWVyeVN0cmluZyhib2R5KSwgdXNlR2V0ID0gIWlzTXV0YXRpb24gJiYgIWlzQWN0aW9uICYmIHN0clF1ZXJ5Lmxlbmd0aCA8IGdldFF1ZXJ5U2l6ZUxpbWl0LCBzdHJpbmdRdWVyeSA9IHVzZUdldCA/IHN0clF1ZXJ5IDogXCJcIiwgcmV0dXJuRmlyc3QgPSBvcHRpb25zLnJldHVybkZpcnN0LCB7IHRpbWVvdXQsIHRva2VuLCB0YWcsIGhlYWRlcnM6IGhlYWRlcnMyLCByZXR1cm5RdWVyeSwgbGFzdExpdmVFdmVudElkLCBjYWNoZU1vZGUgfSA9IG9wdGlvbnMsIHVyaSA9IF9nZXREYXRhVXJsKGNsaWVudCwgZW5kcG9pbnQsIHN0cmluZ1F1ZXJ5KSwgcmVxT3B0aW9ucyA9IHtcbiAgICBtZXRob2Q6IHVzZUdldCA/IFwiR0VUXCIgOiBcIlBPU1RcIixcbiAgICB1cmksXG4gICAganNvbjogITAsXG4gICAgYm9keTogdXNlR2V0ID8gdm9pZCAwIDogYm9keSxcbiAgICBxdWVyeTogaXNNdXRhdGlvbiAmJiBnZXRNdXRhdGlvblF1ZXJ5KG9wdGlvbnMpLFxuICAgIHRpbWVvdXQsXG4gICAgaGVhZGVyczogaGVhZGVyczIsXG4gICAgdG9rZW4sXG4gICAgdGFnLFxuICAgIHJldHVyblF1ZXJ5LFxuICAgIHBlcnNwZWN0aXZlOiBvcHRpb25zLnBlcnNwZWN0aXZlLFxuICAgIHJlc3VsdFNvdXJjZU1hcDogb3B0aW9ucy5yZXN1bHRTb3VyY2VNYXAsXG4gICAgbGFzdExpdmVFdmVudElkOiBBcnJheS5pc0FycmF5KGxhc3RMaXZlRXZlbnRJZCkgPyBsYXN0TGl2ZUV2ZW50SWRbMF0gOiBsYXN0TGl2ZUV2ZW50SWQsXG4gICAgY2FjaGVNb2RlLFxuICAgIGNhblVzZUNkbjogaXNRdWVyeSxcbiAgICBzaWduYWw6IG9wdGlvbnMuc2lnbmFsLFxuICAgIGZldGNoOiBvcHRpb25zLmZldGNoLFxuICAgIHVzZUFib3J0U2lnbmFsOiBvcHRpb25zLnVzZUFib3J0U2lnbmFsLFxuICAgIHVzZUNkbjogb3B0aW9ucy51c2VDZG5cbiAgfTtcbiAgcmV0dXJuIF9yZXF1ZXN0T2JzZXJ2YWJsZShjbGllbnQsIGh0dHBSZXF1ZXN0LCByZXFPcHRpb25zKS5waXBlKFxuICAgIGZpbHRlcihpc1Jlc3BvbnNlKSxcbiAgICBtYXAoZ2V0Qm9keSksXG4gICAgbWFwKChyZXMpID0+IHtcbiAgICAgIGlmICghaXNNdXRhdGlvbilcbiAgICAgICAgcmV0dXJuIHJlcztcbiAgICAgIGNvbnN0IHJlc3VsdHMgPSByZXMucmVzdWx0cyB8fCBbXTtcbiAgICAgIGlmIChvcHRpb25zLnJldHVybkRvY3VtZW50cylcbiAgICAgICAgcmV0dXJuIHJldHVybkZpcnN0ID8gcmVzdWx0c1swXSAmJiByZXN1bHRzWzBdLmRvY3VtZW50IDogcmVzdWx0cy5tYXAoKG11dCkgPT4gbXV0LmRvY3VtZW50KTtcbiAgICAgIGNvbnN0IGtleSA9IHJldHVybkZpcnN0ID8gXCJkb2N1bWVudElkXCIgOiBcImRvY3VtZW50SWRzXCIsIGlkcyA9IHJldHVybkZpcnN0ID8gcmVzdWx0c1swXSAmJiByZXN1bHRzWzBdLmlkIDogcmVzdWx0cy5tYXAoKG11dCkgPT4gbXV0LmlkKTtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHRyYW5zYWN0aW9uSWQ6IHJlcy50cmFuc2FjdGlvbklkLFxuICAgICAgICByZXN1bHRzLFxuICAgICAgICBba2V5XTogaWRzXG4gICAgICB9O1xuICAgIH0pXG4gICk7XG59XG5mdW5jdGlvbiBfY3JlYXRlKGNsaWVudCwgaHR0cFJlcXVlc3QsIGRvYywgb3AsIG9wdGlvbnMgPSB7fSkge1xuICBjb25zdCBtdXRhdGlvbiA9IHsgW29wXTogZG9jIH0sIG9wdHMgPSBPYmplY3QuYXNzaWduKHsgcmV0dXJuRmlyc3Q6ICEwLCByZXR1cm5Eb2N1bWVudHM6ICEwIH0sIG9wdGlvbnMpO1xuICByZXR1cm4gX2RhdGFSZXF1ZXN0KGNsaWVudCwgaHR0cFJlcXVlc3QsIFwibXV0YXRlXCIsIHsgbXV0YXRpb25zOiBbbXV0YXRpb25dIH0sIG9wdHMpO1xufVxuZnVuY3Rpb24gX3JlcXVlc3RPYnNlcnZhYmxlKGNsaWVudCwgaHR0cFJlcXVlc3QsIG9wdGlvbnMpIHtcbiAgY29uc3QgdXJpID0gb3B0aW9ucy51cmwgfHwgb3B0aW9ucy51cmksIGNvbmZpZyA9IGNsaWVudC5jb25maWcoKSwgY2FuVXNlQ2RuID0gdHlwZW9mIG9wdGlvbnMuY2FuVXNlQ2RuID4gXCJ1XCIgPyBbXCJHRVRcIiwgXCJIRUFEXCJdLmluZGV4T2Yob3B0aW9ucy5tZXRob2QgfHwgXCJHRVRcIikgPj0gMCAmJiB1cmkuaW5kZXhPZihcIi9kYXRhL1wiKSA9PT0gMCA6IG9wdGlvbnMuY2FuVXNlQ2RuO1xuICBsZXQgdXNlQ2RuID0gKG9wdGlvbnMudXNlQ2RuID8/IGNvbmZpZy51c2VDZG4pICYmIGNhblVzZUNkbjtcbiAgY29uc3QgdGFnID0gb3B0aW9ucy50YWcgJiYgY29uZmlnLnJlcXVlc3RUYWdQcmVmaXggPyBbY29uZmlnLnJlcXVlc3RUYWdQcmVmaXgsIG9wdGlvbnMudGFnXS5qb2luKFwiLlwiKSA6IG9wdGlvbnMudGFnIHx8IGNvbmZpZy5yZXF1ZXN0VGFnUHJlZml4O1xuICBpZiAodGFnICYmIG9wdGlvbnMudGFnICE9PSBudWxsICYmIChvcHRpb25zLnF1ZXJ5ID0geyB0YWc6IHJlcXVlc3RUYWcodGFnKSwgLi4ub3B0aW9ucy5xdWVyeSB9KSwgW1wiR0VUXCIsIFwiSEVBRFwiLCBcIlBPU1RcIl0uaW5kZXhPZihvcHRpb25zLm1ldGhvZCB8fCBcIkdFVFwiKSA+PSAwICYmIHVyaS5pbmRleE9mKFwiL2RhdGEvcXVlcnkvXCIpID09PSAwKSB7XG4gICAgY29uc3QgcmVzdWx0U291cmNlTWFwID0gb3B0aW9ucy5yZXN1bHRTb3VyY2VNYXAgPz8gY29uZmlnLnJlc3VsdFNvdXJjZU1hcDtcbiAgICByZXN1bHRTb3VyY2VNYXAgIT09IHZvaWQgMCAmJiByZXN1bHRTb3VyY2VNYXAgIT09ICExICYmIChvcHRpb25zLnF1ZXJ5ID0geyByZXN1bHRTb3VyY2VNYXAsIC4uLm9wdGlvbnMucXVlcnkgfSk7XG4gICAgY29uc3QgcGVyc3BlY3RpdmVPcHRpb24gPSBvcHRpb25zLnBlcnNwZWN0aXZlIHx8IGNvbmZpZy5wZXJzcGVjdGl2ZTtcbiAgICB0eXBlb2YgcGVyc3BlY3RpdmVPcHRpb24gPCBcInVcIiAmJiAodmFsaWRhdGVBcGlQZXJzcGVjdGl2ZShwZXJzcGVjdGl2ZU9wdGlvbiksIG9wdGlvbnMucXVlcnkgPSB7XG4gICAgICBwZXJzcGVjdGl2ZTogQXJyYXkuaXNBcnJheShwZXJzcGVjdGl2ZU9wdGlvbikgPyBwZXJzcGVjdGl2ZU9wdGlvbi5qb2luKFwiLFwiKSA6IHBlcnNwZWN0aXZlT3B0aW9uLFxuICAgICAgLi4ub3B0aW9ucy5xdWVyeVxuICAgIH0sIHBlcnNwZWN0aXZlT3B0aW9uID09PSBcInByZXZpZXdEcmFmdHNcIiAmJiB1c2VDZG4gJiYgKHVzZUNkbiA9ICExLCBwcmludENkblByZXZpZXdEcmFmdHNXYXJuaW5nKCkpKSwgb3B0aW9ucy5sYXN0TGl2ZUV2ZW50SWQgJiYgKG9wdGlvbnMucXVlcnkgPSB7IC4uLm9wdGlvbnMucXVlcnksIGxhc3RMaXZlRXZlbnRJZDogb3B0aW9ucy5sYXN0TGl2ZUV2ZW50SWQgfSksIG9wdGlvbnMucmV0dXJuUXVlcnkgPT09ICExICYmIChvcHRpb25zLnF1ZXJ5ID0geyByZXR1cm5RdWVyeTogXCJmYWxzZVwiLCAuLi5vcHRpb25zLnF1ZXJ5IH0pLCB1c2VDZG4gJiYgb3B0aW9ucy5jYWNoZU1vZGUgPT0gXCJub1N0YWxlXCIgJiYgKG9wdGlvbnMucXVlcnkgPSB7IGNhY2hlTW9kZTogXCJub1N0YWxlXCIsIC4uLm9wdGlvbnMucXVlcnkgfSk7XG4gIH1cbiAgY29uc3QgcmVxT3B0aW9ucyA9IHJlcXVlc3RPcHRpb25zKFxuICAgIGNvbmZpZyxcbiAgICBPYmplY3QuYXNzaWduKHt9LCBvcHRpb25zLCB7XG4gICAgICB1cmw6IF9nZXRVcmwoY2xpZW50LCB1cmksIHVzZUNkbilcbiAgICB9KVxuICApLCByZXF1ZXN0ID0gbmV3IE9ic2VydmFibGUoXG4gICAgKHN1YnNjcmliZXIpID0+IGh0dHBSZXF1ZXN0KHJlcU9wdGlvbnMsIGNvbmZpZy5yZXF1ZXN0ZXIpLnN1YnNjcmliZShzdWJzY3JpYmVyKVxuICApO1xuICByZXR1cm4gb3B0aW9ucy5zaWduYWwgPyByZXF1ZXN0LnBpcGUoX3dpdGhBYm9ydFNpZ25hbChvcHRpb25zLnNpZ25hbCkpIDogcmVxdWVzdDtcbn1cbmZ1bmN0aW9uIF9yZXF1ZXN0KGNsaWVudCwgaHR0cFJlcXVlc3QsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIF9yZXF1ZXN0T2JzZXJ2YWJsZShjbGllbnQsIGh0dHBSZXF1ZXN0LCBvcHRpb25zKS5waXBlKFxuICAgIGZpbHRlcigoZXZlbnQpID0+IGV2ZW50LnR5cGUgPT09IFwicmVzcG9uc2VcIiksXG4gICAgbWFwKChldmVudCkgPT4gZXZlbnQuYm9keSlcbiAgKTtcbn1cbmZ1bmN0aW9uIF9nZXREYXRhVXJsKGNsaWVudCwgb3BlcmF0aW9uLCBwYXRoKSB7XG4gIGNvbnN0IGNvbmZpZyA9IGNsaWVudC5jb25maWcoKSwgY2F0YWxvZyA9IGhhc0RhdGFzZXQoY29uZmlnKSwgYmFzZVVyaSA9IGAvJHtvcGVyYXRpb259LyR7Y2F0YWxvZ31gO1xuICByZXR1cm4gYC9kYXRhJHtwYXRoID8gYCR7YmFzZVVyaX0vJHtwYXRofWAgOiBiYXNlVXJpfWAucmVwbGFjZSgvXFwvKCR8XFw/KS8sIFwiJDFcIik7XG59XG5mdW5jdGlvbiBfZ2V0VXJsKGNsaWVudCwgdXJpLCBjYW5Vc2VDZG4gPSAhMSkge1xuICBjb25zdCB7IHVybCwgY2RuVXJsIH0gPSBjbGllbnQuY29uZmlnKCk7XG4gIHJldHVybiBgJHtjYW5Vc2VDZG4gPyBjZG5VcmwgOiB1cmx9LyR7dXJpLnJlcGxhY2UoL15cXC8vLCBcIlwiKX1gO1xufVxuZnVuY3Rpb24gX3dpdGhBYm9ydFNpZ25hbChzaWduYWwpIHtcbiAgcmV0dXJuIChpbnB1dCkgPT4gbmV3IE9ic2VydmFibGUoKG9ic2VydmVyKSA9PiB7XG4gICAgY29uc3QgYWJvcnQgPSAoKSA9PiBvYnNlcnZlci5lcnJvcihfY3JlYXRlQWJvcnRFcnJvcihzaWduYWwpKTtcbiAgICBpZiAoc2lnbmFsICYmIHNpZ25hbC5hYm9ydGVkKSB7XG4gICAgICBhYm9ydCgpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCBzdWJzY3JpcHRpb24gPSBpbnB1dC5zdWJzY3JpYmUob2JzZXJ2ZXIpO1xuICAgIHJldHVybiBzaWduYWwuYWRkRXZlbnRMaXN0ZW5lcihcImFib3J0XCIsIGFib3J0KSwgKCkgPT4ge1xuICAgICAgc2lnbmFsLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJhYm9ydFwiLCBhYm9ydCksIHN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICAgIH07XG4gIH0pO1xufVxuY29uc3QgaXNEb21FeGNlcHRpb25TdXBwb3J0ZWQgPSAhIWdsb2JhbFRoaXMuRE9NRXhjZXB0aW9uO1xuZnVuY3Rpb24gX2NyZWF0ZUFib3J0RXJyb3Ioc2lnbmFsKSB7XG4gIGlmIChpc0RvbUV4Y2VwdGlvblN1cHBvcnRlZClcbiAgICByZXR1cm4gbmV3IERPTUV4Y2VwdGlvbihzaWduYWw/LnJlYXNvbiA/PyBcIlRoZSBvcGVyYXRpb24gd2FzIGFib3J0ZWQuXCIsIFwiQWJvcnRFcnJvclwiKTtcbiAgY29uc3QgZXJyb3IgPSBuZXcgRXJyb3Ioc2lnbmFsPy5yZWFzb24gPz8gXCJUaGUgb3BlcmF0aW9uIHdhcyBhYm9ydGVkLlwiKTtcbiAgcmV0dXJuIGVycm9yLm5hbWUgPSBcIkFib3J0RXJyb3JcIiwgZXJyb3I7XG59XG5jbGFzcyBPYnNlcnZhYmxlQXNzZXRzQ2xpZW50IHtcbiAgI2NsaWVudDtcbiAgI2h0dHBSZXF1ZXN0O1xuICBjb25zdHJ1Y3RvcihjbGllbnQsIGh0dHBSZXF1ZXN0KSB7XG4gICAgdGhpcy4jY2xpZW50ID0gY2xpZW50LCB0aGlzLiNodHRwUmVxdWVzdCA9IGh0dHBSZXF1ZXN0O1xuICB9XG4gIHVwbG9hZChhc3NldFR5cGUsIGJvZHksIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gX3VwbG9hZCh0aGlzLiNjbGllbnQsIHRoaXMuI2h0dHBSZXF1ZXN0LCBhc3NldFR5cGUsIGJvZHksIG9wdGlvbnMpO1xuICB9XG59XG5jbGFzcyBBc3NldHNDbGllbnQge1xuICAjY2xpZW50O1xuICAjaHR0cFJlcXVlc3Q7XG4gIGNvbnN0cnVjdG9yKGNsaWVudCwgaHR0cFJlcXVlc3QpIHtcbiAgICB0aGlzLiNjbGllbnQgPSBjbGllbnQsIHRoaXMuI2h0dHBSZXF1ZXN0ID0gaHR0cFJlcXVlc3Q7XG4gIH1cbiAgdXBsb2FkKGFzc2V0VHlwZSwgYm9keSwgb3B0aW9ucykge1xuICAgIGNvbnN0IG9ic2VydmFibGUyID0gX3VwbG9hZCh0aGlzLiNjbGllbnQsIHRoaXMuI2h0dHBSZXF1ZXN0LCBhc3NldFR5cGUsIGJvZHksIG9wdGlvbnMpO1xuICAgIHJldHVybiBsYXN0VmFsdWVGcm9tKFxuICAgICAgb2JzZXJ2YWJsZTIucGlwZShcbiAgICAgICAgZmlsdGVyKChldmVudCkgPT4gZXZlbnQudHlwZSA9PT0gXCJyZXNwb25zZVwiKSxcbiAgICAgICAgbWFwKFxuICAgICAgICAgIChldmVudCkgPT4gZXZlbnQuYm9keS5kb2N1bWVudFxuICAgICAgICApXG4gICAgICApXG4gICAgKTtcbiAgfVxufVxuZnVuY3Rpb24gX3VwbG9hZChjbGllbnQsIGh0dHBSZXF1ZXN0LCBhc3NldFR5cGUsIGJvZHksIG9wdHMgPSB7fSkge1xuICB2YWxpZGF0ZUFzc2V0VHlwZShhc3NldFR5cGUpO1xuICBsZXQgbWV0YSA9IG9wdHMuZXh0cmFjdCB8fCB2b2lkIDA7XG4gIG1ldGEgJiYgIW1ldGEubGVuZ3RoICYmIChtZXRhID0gW1wibm9uZVwiXSk7XG4gIGNvbnN0IGRhdGFzZXQyID0gaGFzRGF0YXNldChjbGllbnQuY29uZmlnKCkpLCBhc3NldEVuZHBvaW50ID0gYXNzZXRUeXBlID09PSBcImltYWdlXCIgPyBcImltYWdlc1wiIDogXCJmaWxlc1wiLCBvcHRpb25zID0gb3B0aW9uc0Zyb21GaWxlKG9wdHMsIGJvZHkpLCB7IHRhZywgbGFiZWwsIHRpdGxlLCBkZXNjcmlwdGlvbiwgY3JlZGl0TGluZSwgZmlsZW5hbWUsIHNvdXJjZSB9ID0gb3B0aW9ucywgcXVlcnkgPSB7XG4gICAgbGFiZWwsXG4gICAgdGl0bGUsXG4gICAgZGVzY3JpcHRpb24sXG4gICAgZmlsZW5hbWUsXG4gICAgbWV0YSxcbiAgICBjcmVkaXRMaW5lXG4gIH07XG4gIHJldHVybiBzb3VyY2UgJiYgKHF1ZXJ5LnNvdXJjZUlkID0gc291cmNlLmlkLCBxdWVyeS5zb3VyY2VOYW1lID0gc291cmNlLm5hbWUsIHF1ZXJ5LnNvdXJjZVVybCA9IHNvdXJjZS51cmwpLCBfcmVxdWVzdE9ic2VydmFibGUoY2xpZW50LCBodHRwUmVxdWVzdCwge1xuICAgIHRhZyxcbiAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgIHRpbWVvdXQ6IG9wdGlvbnMudGltZW91dCB8fCAwLFxuICAgIHVyaTogYC9hc3NldHMvJHthc3NldEVuZHBvaW50fS8ke2RhdGFzZXQyfWAsXG4gICAgaGVhZGVyczogb3B0aW9ucy5jb250ZW50VHlwZSA/IHsgXCJDb250ZW50LVR5cGVcIjogb3B0aW9ucy5jb250ZW50VHlwZSB9IDoge30sXG4gICAgcXVlcnksXG4gICAgYm9keVxuICB9KTtcbn1cbmZ1bmN0aW9uIG9wdGlvbnNGcm9tRmlsZShvcHRzLCBmaWxlKSB7XG4gIHJldHVybiB0eXBlb2YgRmlsZSA+IFwidVwiIHx8ICEoZmlsZSBpbnN0YW5jZW9mIEZpbGUpID8gb3B0cyA6IE9iamVjdC5hc3NpZ24oXG4gICAge1xuICAgICAgZmlsZW5hbWU6IG9wdHMucHJlc2VydmVGaWxlbmFtZSA9PT0gITEgPyB2b2lkIDAgOiBmaWxlLm5hbWUsXG4gICAgICBjb250ZW50VHlwZTogZmlsZS50eXBlXG4gICAgfSxcbiAgICBvcHRzXG4gICk7XG59XG52YXIgZGVmYXVsdHMgPSAob2JqLCBkZWZhdWx0czIpID0+IE9iamVjdC5rZXlzKGRlZmF1bHRzMikuY29uY2F0KE9iamVjdC5rZXlzKG9iaikpLnJlZHVjZSgodGFyZ2V0LCBwcm9wKSA9PiAodGFyZ2V0W3Byb3BdID0gdHlwZW9mIG9ialtwcm9wXSA+IFwidVwiID8gZGVmYXVsdHMyW3Byb3BdIDogb2JqW3Byb3BdLCB0YXJnZXQpLCB7fSk7XG5jb25zdCBwaWNrID0gKG9iaiwgcHJvcHMpID0+IHByb3BzLnJlZHVjZSgoc2VsZWN0aW9uLCBwcm9wKSA9PiAodHlwZW9mIG9ialtwcm9wXSA+IFwidVwiIHx8IChzZWxlY3Rpb25bcHJvcF0gPSBvYmpbcHJvcF0pLCBzZWxlY3Rpb24pLCB7fSksIGV2ZW50U291cmNlUG9seWZpbGwgPSBkZWZlcigoKSA9PiBpbXBvcnQoXCJAc2FuaXR5L2V2ZW50c291cmNlXCIpKS5waXBlKFxuICBtYXAoKHsgZGVmYXVsdDogRXZlbnRTb3VyY2UyIH0pID0+IEV2ZW50U291cmNlMiksXG4gIHNoYXJlUmVwbGF5KDEpXG4pO1xuZnVuY3Rpb24gcmVjb25uZWN0T25Db25uZWN0aW9uRmFpbHVyZSgpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHNvdXJjZSkge1xuICAgIHJldHVybiBzb3VyY2UucGlwZShcbiAgICAgIGNhdGNoRXJyb3IoKGVyciwgY2F1Z2h0KSA9PiBlcnIgaW5zdGFuY2VvZiBDb25uZWN0aW9uRmFpbGVkRXJyb3IgPyBjb25jYXQob2YoeyB0eXBlOiBcInJlY29ubmVjdFwiIH0pLCB0aW1lcigxZTMpLnBpcGUobWVyZ2VNYXAoKCkgPT4gY2F1Z2h0KSkpIDogdGhyb3dFcnJvcigoKSA9PiBlcnIpKVxuICAgICk7XG4gIH07XG59XG5jb25zdCBNQVhfVVJMX0xFTkdUSCA9IDE0ODAwLCBwb3NzaWJsZU9wdGlvbnMgPSBbXG4gIFwiaW5jbHVkZVByZXZpb3VzUmV2aXNpb25cIixcbiAgXCJpbmNsdWRlUmVzdWx0XCIsXG4gIFwiaW5jbHVkZU11dGF0aW9uc1wiLFxuICBcInZpc2liaWxpdHlcIixcbiAgXCJlZmZlY3RGb3JtYXRcIixcbiAgXCJ0YWdcIlxuXSwgZGVmYXVsdE9wdGlvbnMgPSB7XG4gIGluY2x1ZGVSZXN1bHQ6ICEwXG59O1xuZnVuY3Rpb24gX2xpc3RlbihxdWVyeSwgcGFyYW1zLCBvcHRzID0ge30pIHtcbiAgY29uc3QgeyB1cmwsIHRva2VuLCB3aXRoQ3JlZGVudGlhbHMsIHJlcXVlc3RUYWdQcmVmaXggfSA9IHRoaXMuY29uZmlnKCksIHRhZyA9IG9wdHMudGFnICYmIHJlcXVlc3RUYWdQcmVmaXggPyBbcmVxdWVzdFRhZ1ByZWZpeCwgb3B0cy50YWddLmpvaW4oXCIuXCIpIDogb3B0cy50YWcsIG9wdGlvbnMgPSB7IC4uLmRlZmF1bHRzKG9wdHMsIGRlZmF1bHRPcHRpb25zKSwgdGFnIH0sIGxpc3Rlbk9wdHMgPSBwaWNrKG9wdGlvbnMsIHBvc3NpYmxlT3B0aW9ucyksIHFzID0gZW5jb2RlUXVlcnlTdHJpbmcoeyBxdWVyeSwgcGFyYW1zLCBvcHRpb25zOiB7IHRhZywgLi4ubGlzdGVuT3B0cyB9IH0pLCB1cmkgPSBgJHt1cmx9JHtfZ2V0RGF0YVVybCh0aGlzLCBcImxpc3RlblwiLCBxcyl9YDtcbiAgaWYgKHVyaS5sZW5ndGggPiBNQVhfVVJMX0xFTkdUSClcbiAgICByZXR1cm4gdGhyb3dFcnJvcigoKSA9PiBuZXcgRXJyb3IoXCJRdWVyeSB0b28gbGFyZ2UgZm9yIGxpc3RlbmVyXCIpKTtcbiAgY29uc3QgbGlzdGVuRm9yID0gb3B0aW9ucy5ldmVudHMgPyBvcHRpb25zLmV2ZW50cyA6IFtcIm11dGF0aW9uXCJdLCBlc09wdGlvbnMgPSB7fTtcbiAgcmV0dXJuICh0b2tlbiB8fCB3aXRoQ3JlZGVudGlhbHMpICYmIChlc09wdGlvbnMud2l0aENyZWRlbnRpYWxzID0gITApLCB0b2tlbiAmJiAoZXNPcHRpb25zLmhlYWRlcnMgPSB7XG4gICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke3Rva2VufWBcbiAgfSksIGNvbm5lY3RFdmVudFNvdXJjZSgoKSA9PiAoXG4gICAgLy8gdXNlIHBvbHlmaWxsIGlmIHRoZXJlIGlzIG5vIGdsb2JhbCBFdmVudFNvdXJjZSBvciBpZiB3ZSBuZWVkIHRvIHNldCBoZWFkZXJzXG4gICAgKHR5cGVvZiBFdmVudFNvdXJjZSA+IFwidVwiIHx8IGVzT3B0aW9ucy5oZWFkZXJzID8gZXZlbnRTb3VyY2VQb2x5ZmlsbCA6IG9mKEV2ZW50U291cmNlKSkucGlwZShtYXAoKEV2ZW50U291cmNlMikgPT4gbmV3IEV2ZW50U291cmNlMih1cmksIGVzT3B0aW9ucykpKVxuICApLCBsaXN0ZW5Gb3IpLnBpcGUoXG4gICAgcmVjb25uZWN0T25Db25uZWN0aW9uRmFpbHVyZSgpLFxuICAgIGZpbHRlcigoZXZlbnQpID0+IGxpc3RlbkZvci5pbmNsdWRlcyhldmVudC50eXBlKSksXG4gICAgbWFwKFxuICAgICAgKGV2ZW50KSA9PiAoe1xuICAgICAgICB0eXBlOiBldmVudC50eXBlLFxuICAgICAgICAuLi5cImRhdGFcIiBpbiBldmVudCA/IGV2ZW50LmRhdGEgOiB7fVxuICAgICAgfSlcbiAgICApXG4gICk7XG59XG5jb25zdCByZXF1aXJlZEFwaVZlcnNpb24gPSBcIjIwMjEtMDMtMjZcIjtcbmNsYXNzIExpdmVDbGllbnQge1xuICAjY2xpZW50O1xuICBjb25zdHJ1Y3RvcihjbGllbnQpIHtcbiAgICB0aGlzLiNjbGllbnQgPSBjbGllbnQ7XG4gIH1cbiAgLyoqXG4gICAqIFJlcXVpcmVzIGBhcGlWZXJzaW9uYCB0byBiZSBgMjAyMS0wMy0yNmAgb3IgbGF0ZXIuXG4gICAqL1xuICBldmVudHMoe1xuICAgIGluY2x1ZGVEcmFmdHMgPSAhMSxcbiAgICB0YWc6IF90YWdcbiAgfSA9IHt9KSB7XG4gICAgY29uc3Qge1xuICAgICAgcHJvamVjdElkOiBwcm9qZWN0SWQyLFxuICAgICAgYXBpVmVyc2lvbjogX2FwaVZlcnNpb24sXG4gICAgICB0b2tlbixcbiAgICAgIHdpdGhDcmVkZW50aWFscyxcbiAgICAgIHJlcXVlc3RUYWdQcmVmaXhcbiAgICB9ID0gdGhpcy4jY2xpZW50LmNvbmZpZygpLCBhcGlWZXJzaW9uID0gX2FwaVZlcnNpb24ucmVwbGFjZSgvXnYvLCBcIlwiKTtcbiAgICBpZiAoYXBpVmVyc2lvbiAhPT0gXCJYXCIgJiYgYXBpVmVyc2lvbiA8IHJlcXVpcmVkQXBpVmVyc2lvbilcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgYFRoZSBsaXZlIGV2ZW50cyBBUEkgcmVxdWlyZXMgQVBJIHZlcnNpb24gJHtyZXF1aXJlZEFwaVZlcnNpb259IG9yIGxhdGVyLiBUaGUgY3VycmVudCBBUEkgdmVyc2lvbiBpcyAke2FwaVZlcnNpb259LiBQbGVhc2UgdXBkYXRlIHlvdXIgQVBJIHZlcnNpb24gdG8gdXNlIHRoaXMgZmVhdHVyZS5gXG4gICAgICApO1xuICAgIGlmIChpbmNsdWRlRHJhZnRzICYmICF0b2tlbiAmJiAhd2l0aENyZWRlbnRpYWxzKVxuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICBcIlRoZSBsaXZlIGV2ZW50cyBBUEkgcmVxdWlyZXMgYSB0b2tlbiBvciB3aXRoQ3JlZGVudGlhbHMgd2hlbiAnaW5jbHVkZURyYWZ0czogdHJ1ZScuIFBsZWFzZSB1cGRhdGUgeW91ciBjbGllbnQgY29uZmlndXJhdGlvbi4gVGhlIHRva2VuIHNob3VsZCBoYXZlIHRoZSBsb3dlc3QgcG9zc2libGUgYWNjZXNzIHJvbGUuXCJcbiAgICAgICk7XG4gICAgaWYgKGluY2x1ZGVEcmFmdHMgJiYgYXBpVmVyc2lvbiAhPT0gXCJYXCIpXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgIFwiVGhlIGxpdmUgZXZlbnRzIEFQSSByZXF1aXJlcyBBUEkgdmVyc2lvbiBYIHdoZW4gJ2luY2x1ZGVEcmFmdHM6IHRydWUnLiBUaGlzIEFQSSBpcyBleHBlcmltZW50YWwgYW5kIG1heSBjaGFuZ2Ugb3IgZXZlbiBiZSByZW1vdmVkLlwiXG4gICAgICApO1xuICAgIGNvbnN0IHBhdGggPSBfZ2V0RGF0YVVybCh0aGlzLiNjbGllbnQsIFwibGl2ZS9ldmVudHNcIiksIHVybCA9IG5ldyBVUkwodGhpcy4jY2xpZW50LmdldFVybChwYXRoLCAhMSkpLCB0YWcgPSBfdGFnICYmIHJlcXVlc3RUYWdQcmVmaXggPyBbcmVxdWVzdFRhZ1ByZWZpeCwgX3RhZ10uam9pbihcIi5cIikgOiBfdGFnO1xuICAgIHRhZyAmJiB1cmwuc2VhcmNoUGFyYW1zLnNldChcInRhZ1wiLCB0YWcpLCBpbmNsdWRlRHJhZnRzICYmIHVybC5zZWFyY2hQYXJhbXMuc2V0KFwiaW5jbHVkZURyYWZ0c1wiLCBcInRydWVcIik7XG4gICAgY29uc3QgZXNPcHRpb25zID0ge307XG4gICAgaW5jbHVkZURyYWZ0cyAmJiB0b2tlbiAmJiAoZXNPcHRpb25zLmhlYWRlcnMgPSB7XG4gICAgICBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7dG9rZW59YFxuICAgIH0pLCBpbmNsdWRlRHJhZnRzICYmIHdpdGhDcmVkZW50aWFscyAmJiAoZXNPcHRpb25zLndpdGhDcmVkZW50aWFscyA9ICEwKTtcbiAgICBjb25zdCBldmVudHMgPSBjb25uZWN0RXZlbnRTb3VyY2UoKCkgPT4gKFxuICAgICAgLy8gdXNlIHBvbHlmaWxsIGlmIHRoZXJlIGlzIG5vIGdsb2JhbCBFdmVudFNvdXJjZSBvciBpZiB3ZSBuZWVkIHRvIHNldCBoZWFkZXJzXG4gICAgICAodHlwZW9mIEV2ZW50U291cmNlID4gXCJ1XCIgfHwgZXNPcHRpb25zLmhlYWRlcnMgPyBldmVudFNvdXJjZVBvbHlmaWxsIDogb2YoRXZlbnRTb3VyY2UpKS5waXBlKG1hcCgoRXZlbnRTb3VyY2UyKSA9PiBuZXcgRXZlbnRTb3VyY2UyKHVybC5ocmVmLCBlc09wdGlvbnMpKSlcbiAgICApLCBbXG4gICAgICBcIm1lc3NhZ2VcIixcbiAgICAgIFwicmVzdGFydFwiLFxuICAgICAgXCJ3ZWxjb21lXCIsXG4gICAgICBcInJlY29ubmVjdFwiXG4gICAgXSkucGlwZShcbiAgICAgIHJlY29ubmVjdE9uQ29ubmVjdGlvbkZhaWx1cmUoKSxcbiAgICAgIG1hcCgoZXZlbnQpID0+IHtcbiAgICAgICAgaWYgKGV2ZW50LnR5cGUgPT09IFwibWVzc2FnZVwiKSB7XG4gICAgICAgICAgY29uc3QgeyBkYXRhLCAuLi5yZXN0IH0gPSBldmVudDtcbiAgICAgICAgICByZXR1cm4geyAuLi5yZXN0LCB0YWdzOiBkYXRhLnRhZ3MgfTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZXZlbnQ7XG4gICAgICB9KVxuICAgICksIGNoZWNrQ29ycyA9IGZldGNoT2JzZXJ2YWJsZSh1cmwsIHtcbiAgICAgIG1ldGhvZDogXCJPUFRJT05TXCIsXG4gICAgICBtb2RlOiBcImNvcnNcIixcbiAgICAgIGNyZWRlbnRpYWxzOiBlc09wdGlvbnMud2l0aENyZWRlbnRpYWxzID8gXCJpbmNsdWRlXCIgOiBcIm9taXRcIixcbiAgICAgIGhlYWRlcnM6IGVzT3B0aW9ucy5oZWFkZXJzXG4gICAgfSkucGlwZShcbiAgICAgIG1lcmdlTWFwKCgpID0+IEVNUFRZKSxcbiAgICAgIGNhdGNoRXJyb3IoKCkgPT4ge1xuICAgICAgICB0aHJvdyBuZXcgQ29yc09yaWdpbkVycm9yKHsgcHJvamVjdElkOiBwcm9qZWN0SWQyIH0pO1xuICAgICAgfSlcbiAgICApO1xuICAgIHJldHVybiBjb25jYXQoY2hlY2tDb3JzLCBldmVudHMpO1xuICB9XG59XG5mdW5jdGlvbiBmZXRjaE9ic2VydmFibGUodXJsLCBpbml0KSB7XG4gIHJldHVybiBuZXcgT2JzZXJ2YWJsZSgob2JzZXJ2ZXIpID0+IHtcbiAgICBjb25zdCBjb250cm9sbGVyID0gbmV3IEFib3J0Q29udHJvbGxlcigpLCBzaWduYWwgPSBjb250cm9sbGVyLnNpZ25hbDtcbiAgICByZXR1cm4gZmV0Y2godXJsLCB7IC4uLmluaXQsIHNpZ25hbDogY29udHJvbGxlci5zaWduYWwgfSkudGhlbihcbiAgICAgIChyZXNwb25zZSkgPT4ge1xuICAgICAgICBvYnNlcnZlci5uZXh0KHJlc3BvbnNlKSwgb2JzZXJ2ZXIuY29tcGxldGUoKTtcbiAgICAgIH0sXG4gICAgICAoZXJyKSA9PiB7XG4gICAgICAgIHNpZ25hbC5hYm9ydGVkIHx8IG9ic2VydmVyLmVycm9yKGVycik7XG4gICAgICB9XG4gICAgKSwgKCkgPT4gY29udHJvbGxlci5hYm9ydCgpO1xuICB9KTtcbn1cbmNsYXNzIE9ic2VydmFibGVEYXRhc2V0c0NsaWVudCB7XG4gICNjbGllbnQ7XG4gICNodHRwUmVxdWVzdDtcbiAgY29uc3RydWN0b3IoY2xpZW50LCBodHRwUmVxdWVzdCkge1xuICAgIHRoaXMuI2NsaWVudCA9IGNsaWVudCwgdGhpcy4jaHR0cFJlcXVlc3QgPSBodHRwUmVxdWVzdDtcbiAgfVxuICAvKipcbiAgICogQ3JlYXRlIGEgbmV3IGRhdGFzZXQgd2l0aCB0aGUgZ2l2ZW4gbmFtZVxuICAgKlxuICAgKiBAcGFyYW0gbmFtZSAtIE5hbWUgb2YgdGhlIGRhdGFzZXQgdG8gY3JlYXRlXG4gICAqIEBwYXJhbSBvcHRpb25zIC0gT3B0aW9ucyBmb3IgdGhlIGRhdGFzZXRcbiAgICovXG4gIGNyZWF0ZShuYW1lMiwgb3B0aW9ucykge1xuICAgIHJldHVybiBfbW9kaWZ5KHRoaXMuI2NsaWVudCwgdGhpcy4jaHR0cFJlcXVlc3QsIFwiUFVUXCIsIG5hbWUyLCBvcHRpb25zKTtcbiAgfVxuICAvKipcbiAgICogRWRpdCBhIGRhdGFzZXQgd2l0aCB0aGUgZ2l2ZW4gbmFtZVxuICAgKlxuICAgKiBAcGFyYW0gbmFtZSAtIE5hbWUgb2YgdGhlIGRhdGFzZXQgdG8gZWRpdFxuICAgKiBAcGFyYW0gb3B0aW9ucyAtIE5ldyBvcHRpb25zIGZvciB0aGUgZGF0YXNldFxuICAgKi9cbiAgZWRpdChuYW1lMiwgb3B0aW9ucykge1xuICAgIHJldHVybiBfbW9kaWZ5KHRoaXMuI2NsaWVudCwgdGhpcy4jaHR0cFJlcXVlc3QsIFwiUEFUQ0hcIiwgbmFtZTIsIG9wdGlvbnMpO1xuICB9XG4gIC8qKlxuICAgKiBEZWxldGUgYSBkYXRhc2V0IHdpdGggdGhlIGdpdmVuIG5hbWVcbiAgICpcbiAgICogQHBhcmFtIG5hbWUgLSBOYW1lIG9mIHRoZSBkYXRhc2V0IHRvIGRlbGV0ZVxuICAgKi9cbiAgZGVsZXRlKG5hbWUyKSB7XG4gICAgcmV0dXJuIF9tb2RpZnkodGhpcy4jY2xpZW50LCB0aGlzLiNodHRwUmVxdWVzdCwgXCJERUxFVEVcIiwgbmFtZTIpO1xuICB9XG4gIC8qKlxuICAgKiBGZXRjaCBhIGxpc3Qgb2YgZGF0YXNldHMgZm9yIHRoZSBjb25maWd1cmVkIHByb2plY3RcbiAgICovXG4gIGxpc3QoKSB7XG4gICAgcmV0dXJuIF9yZXF1ZXN0KHRoaXMuI2NsaWVudCwgdGhpcy4jaHR0cFJlcXVlc3QsIHtcbiAgICAgIHVyaTogXCIvZGF0YXNldHNcIixcbiAgICAgIHRhZzogbnVsbFxuICAgIH0pO1xuICB9XG59XG5jbGFzcyBEYXRhc2V0c0NsaWVudCB7XG4gICNjbGllbnQ7XG4gICNodHRwUmVxdWVzdDtcbiAgY29uc3RydWN0b3IoY2xpZW50LCBodHRwUmVxdWVzdCkge1xuICAgIHRoaXMuI2NsaWVudCA9IGNsaWVudCwgdGhpcy4jaHR0cFJlcXVlc3QgPSBodHRwUmVxdWVzdDtcbiAgfVxuICAvKipcbiAgICogQ3JlYXRlIGEgbmV3IGRhdGFzZXQgd2l0aCB0aGUgZ2l2ZW4gbmFtZVxuICAgKlxuICAgKiBAcGFyYW0gbmFtZSAtIE5hbWUgb2YgdGhlIGRhdGFzZXQgdG8gY3JlYXRlXG4gICAqIEBwYXJhbSBvcHRpb25zIC0gT3B0aW9ucyBmb3IgdGhlIGRhdGFzZXRcbiAgICovXG4gIGNyZWF0ZShuYW1lMiwgb3B0aW9ucykge1xuICAgIHJldHVybiBsYXN0VmFsdWVGcm9tKFxuICAgICAgX21vZGlmeSh0aGlzLiNjbGllbnQsIHRoaXMuI2h0dHBSZXF1ZXN0LCBcIlBVVFwiLCBuYW1lMiwgb3B0aW9ucylcbiAgICApO1xuICB9XG4gIC8qKlxuICAgKiBFZGl0IGEgZGF0YXNldCB3aXRoIHRoZSBnaXZlbiBuYW1lXG4gICAqXG4gICAqIEBwYXJhbSBuYW1lIC0gTmFtZSBvZiB0aGUgZGF0YXNldCB0byBlZGl0XG4gICAqIEBwYXJhbSBvcHRpb25zIC0gTmV3IG9wdGlvbnMgZm9yIHRoZSBkYXRhc2V0XG4gICAqL1xuICBlZGl0KG5hbWUyLCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIGxhc3RWYWx1ZUZyb20oXG4gICAgICBfbW9kaWZ5KHRoaXMuI2NsaWVudCwgdGhpcy4jaHR0cFJlcXVlc3QsIFwiUEFUQ0hcIiwgbmFtZTIsIG9wdGlvbnMpXG4gICAgKTtcbiAgfVxuICAvKipcbiAgICogRGVsZXRlIGEgZGF0YXNldCB3aXRoIHRoZSBnaXZlbiBuYW1lXG4gICAqXG4gICAqIEBwYXJhbSBuYW1lIC0gTmFtZSBvZiB0aGUgZGF0YXNldCB0byBkZWxldGVcbiAgICovXG4gIGRlbGV0ZShuYW1lMikge1xuICAgIHJldHVybiBsYXN0VmFsdWVGcm9tKF9tb2RpZnkodGhpcy4jY2xpZW50LCB0aGlzLiNodHRwUmVxdWVzdCwgXCJERUxFVEVcIiwgbmFtZTIpKTtcbiAgfVxuICAvKipcbiAgICogRmV0Y2ggYSBsaXN0IG9mIGRhdGFzZXRzIGZvciB0aGUgY29uZmlndXJlZCBwcm9qZWN0XG4gICAqL1xuICBsaXN0KCkge1xuICAgIHJldHVybiBsYXN0VmFsdWVGcm9tKFxuICAgICAgX3JlcXVlc3QodGhpcy4jY2xpZW50LCB0aGlzLiNodHRwUmVxdWVzdCwgeyB1cmk6IFwiL2RhdGFzZXRzXCIsIHRhZzogbnVsbCB9KVxuICAgICk7XG4gIH1cbn1cbmZ1bmN0aW9uIF9tb2RpZnkoY2xpZW50LCBodHRwUmVxdWVzdCwgbWV0aG9kLCBuYW1lMiwgb3B0aW9ucykge1xuICByZXR1cm4gZGF0YXNldChuYW1lMiksIF9yZXF1ZXN0KGNsaWVudCwgaHR0cFJlcXVlc3QsIHtcbiAgICBtZXRob2QsXG4gICAgdXJpOiBgL2RhdGFzZXRzLyR7bmFtZTJ9YCxcbiAgICBib2R5OiBvcHRpb25zLFxuICAgIHRhZzogbnVsbFxuICB9KTtcbn1cbmNsYXNzIE9ic2VydmFibGVQcm9qZWN0c0NsaWVudCB7XG4gICNjbGllbnQ7XG4gICNodHRwUmVxdWVzdDtcbiAgY29uc3RydWN0b3IoY2xpZW50LCBodHRwUmVxdWVzdCkge1xuICAgIHRoaXMuI2NsaWVudCA9IGNsaWVudCwgdGhpcy4jaHR0cFJlcXVlc3QgPSBodHRwUmVxdWVzdDtcbiAgfVxuICBsaXN0KG9wdGlvbnMpIHtcbiAgICBjb25zdCB1cmkgPSBvcHRpb25zPy5pbmNsdWRlTWVtYmVycyA9PT0gITEgPyBcIi9wcm9qZWN0cz9pbmNsdWRlTWVtYmVycz1mYWxzZVwiIDogXCIvcHJvamVjdHNcIjtcbiAgICByZXR1cm4gX3JlcXVlc3QodGhpcy4jY2xpZW50LCB0aGlzLiNodHRwUmVxdWVzdCwgeyB1cmkgfSk7XG4gIH1cbiAgLyoqXG4gICAqIEZldGNoIGEgcHJvamVjdCBieSBwcm9qZWN0IElEXG4gICAqXG4gICAqIEBwYXJhbSBwcm9qZWN0SWQgLSBJRCBvZiB0aGUgcHJvamVjdCB0byBmZXRjaFxuICAgKi9cbiAgZ2V0QnlJZChwcm9qZWN0SWQyKSB7XG4gICAgcmV0dXJuIF9yZXF1ZXN0KHRoaXMuI2NsaWVudCwgdGhpcy4jaHR0cFJlcXVlc3QsIHsgdXJpOiBgL3Byb2plY3RzLyR7cHJvamVjdElkMn1gIH0pO1xuICB9XG59XG5jbGFzcyBQcm9qZWN0c0NsaWVudCB7XG4gICNjbGllbnQ7XG4gICNodHRwUmVxdWVzdDtcbiAgY29uc3RydWN0b3IoY2xpZW50LCBodHRwUmVxdWVzdCkge1xuICAgIHRoaXMuI2NsaWVudCA9IGNsaWVudCwgdGhpcy4jaHR0cFJlcXVlc3QgPSBodHRwUmVxdWVzdDtcbiAgfVxuICBsaXN0KG9wdGlvbnMpIHtcbiAgICBjb25zdCB1cmkgPSBvcHRpb25zPy5pbmNsdWRlTWVtYmVycyA9PT0gITEgPyBcIi9wcm9qZWN0cz9pbmNsdWRlTWVtYmVycz1mYWxzZVwiIDogXCIvcHJvamVjdHNcIjtcbiAgICByZXR1cm4gbGFzdFZhbHVlRnJvbShfcmVxdWVzdCh0aGlzLiNjbGllbnQsIHRoaXMuI2h0dHBSZXF1ZXN0LCB7IHVyaSB9KSk7XG4gIH1cbiAgLyoqXG4gICAqIEZldGNoIGEgcHJvamVjdCBieSBwcm9qZWN0IElEXG4gICAqXG4gICAqIEBwYXJhbSBwcm9qZWN0SWQgLSBJRCBvZiB0aGUgcHJvamVjdCB0byBmZXRjaFxuICAgKi9cbiAgZ2V0QnlJZChwcm9qZWN0SWQyKSB7XG4gICAgcmV0dXJuIGxhc3RWYWx1ZUZyb20oXG4gICAgICBfcmVxdWVzdCh0aGlzLiNjbGllbnQsIHRoaXMuI2h0dHBSZXF1ZXN0LCB7IHVyaTogYC9wcm9qZWN0cy8ke3Byb2plY3RJZDJ9YCB9KVxuICAgICk7XG4gIH1cbn1cbmNsYXNzIE9ic2VydmFibGVVc2Vyc0NsaWVudCB7XG4gICNjbGllbnQ7XG4gICNodHRwUmVxdWVzdDtcbiAgY29uc3RydWN0b3IoY2xpZW50LCBodHRwUmVxdWVzdCkge1xuICAgIHRoaXMuI2NsaWVudCA9IGNsaWVudCwgdGhpcy4jaHR0cFJlcXVlc3QgPSBodHRwUmVxdWVzdDtcbiAgfVxuICAvKipcbiAgICogRmV0Y2ggYSB1c2VyIGJ5IHVzZXIgSURcbiAgICpcbiAgICogQHBhcmFtIGlkIC0gVXNlciBJRCBvZiB0aGUgdXNlciB0byBmZXRjaC4gSWYgYG1lYCBpcyBwcm92aWRlZCwgYSBtaW5pbWFsIHJlc3BvbnNlIGluY2x1ZGluZyB0aGUgdXNlcnMgcm9sZSBpcyByZXR1cm5lZC5cbiAgICovXG4gIGdldEJ5SWQoaWQpIHtcbiAgICByZXR1cm4gX3JlcXVlc3QoXG4gICAgICB0aGlzLiNjbGllbnQsXG4gICAgICB0aGlzLiNodHRwUmVxdWVzdCxcbiAgICAgIHsgdXJpOiBgL3VzZXJzLyR7aWR9YCB9XG4gICAgKTtcbiAgfVxufVxuY2xhc3MgVXNlcnNDbGllbnQge1xuICAjY2xpZW50O1xuICAjaHR0cFJlcXVlc3Q7XG4gIGNvbnN0cnVjdG9yKGNsaWVudCwgaHR0cFJlcXVlc3QpIHtcbiAgICB0aGlzLiNjbGllbnQgPSBjbGllbnQsIHRoaXMuI2h0dHBSZXF1ZXN0ID0gaHR0cFJlcXVlc3Q7XG4gIH1cbiAgLyoqXG4gICAqIEZldGNoIGEgdXNlciBieSB1c2VyIElEXG4gICAqXG4gICAqIEBwYXJhbSBpZCAtIFVzZXIgSUQgb2YgdGhlIHVzZXIgdG8gZmV0Y2guIElmIGBtZWAgaXMgcHJvdmlkZWQsIGEgbWluaW1hbCByZXNwb25zZSBpbmNsdWRpbmcgdGhlIHVzZXJzIHJvbGUgaXMgcmV0dXJuZWQuXG4gICAqL1xuICBnZXRCeUlkKGlkKSB7XG4gICAgcmV0dXJuIGxhc3RWYWx1ZUZyb20oXG4gICAgICBfcmVxdWVzdCh0aGlzLiNjbGllbnQsIHRoaXMuI2h0dHBSZXF1ZXN0LCB7XG4gICAgICAgIHVyaTogYC91c2Vycy8ke2lkfWBcbiAgICAgIH0pXG4gICAgKTtcbiAgfVxufVxuY2xhc3MgT2JzZXJ2YWJsZVNhbml0eUNsaWVudCB7XG4gIGFzc2V0cztcbiAgZGF0YXNldHM7XG4gIGxpdmU7XG4gIHByb2plY3RzO1xuICB1c2VycztcbiAgLyoqXG4gICAqIFByaXZhdGUgcHJvcGVydGllc1xuICAgKi9cbiAgI2NsaWVudENvbmZpZztcbiAgI2h0dHBSZXF1ZXN0O1xuICAvKipcbiAgICogSW5zdGFuY2UgcHJvcGVydGllc1xuICAgKi9cbiAgbGlzdGVuID0gX2xpc3RlbjtcbiAgY29uc3RydWN0b3IoaHR0cFJlcXVlc3QsIGNvbmZpZyA9IGRlZmF1bHRDb25maWcpIHtcbiAgICB0aGlzLmNvbmZpZyhjb25maWcpLCB0aGlzLiNodHRwUmVxdWVzdCA9IGh0dHBSZXF1ZXN0LCB0aGlzLmFzc2V0cyA9IG5ldyBPYnNlcnZhYmxlQXNzZXRzQ2xpZW50KHRoaXMsIHRoaXMuI2h0dHBSZXF1ZXN0KSwgdGhpcy5kYXRhc2V0cyA9IG5ldyBPYnNlcnZhYmxlRGF0YXNldHNDbGllbnQodGhpcywgdGhpcy4jaHR0cFJlcXVlc3QpLCB0aGlzLmxpdmUgPSBuZXcgTGl2ZUNsaWVudCh0aGlzKSwgdGhpcy5wcm9qZWN0cyA9IG5ldyBPYnNlcnZhYmxlUHJvamVjdHNDbGllbnQodGhpcywgdGhpcy4jaHR0cFJlcXVlc3QpLCB0aGlzLnVzZXJzID0gbmV3IE9ic2VydmFibGVVc2Vyc0NsaWVudCh0aGlzLCB0aGlzLiNodHRwUmVxdWVzdCk7XG4gIH1cbiAgLyoqXG4gICAqIENsb25lIHRoZSBjbGllbnQgLSByZXR1cm5zIGEgbmV3IGluc3RhbmNlXG4gICAqL1xuICBjbG9uZSgpIHtcbiAgICByZXR1cm4gbmV3IE9ic2VydmFibGVTYW5pdHlDbGllbnQodGhpcy4jaHR0cFJlcXVlc3QsIHRoaXMuY29uZmlnKCkpO1xuICB9XG4gIGNvbmZpZyhuZXdDb25maWcpIHtcbiAgICBpZiAobmV3Q29uZmlnID09PSB2b2lkIDApXG4gICAgICByZXR1cm4geyAuLi50aGlzLiNjbGllbnRDb25maWcgfTtcbiAgICBpZiAodGhpcy4jY2xpZW50Q29uZmlnICYmIHRoaXMuI2NsaWVudENvbmZpZy5hbGxvd1JlY29uZmlndXJlID09PSAhMSlcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgXCJFeGlzdGluZyBjbGllbnQgaW5zdGFuY2UgY2Fubm90IGJlIHJlY29uZmlndXJlZCAtIHVzZSBgd2l0aENvbmZpZyhuZXdDb25maWcpYCB0byByZXR1cm4gYSBuZXcgY2xpZW50XCJcbiAgICAgICk7XG4gICAgcmV0dXJuIHRoaXMuI2NsaWVudENvbmZpZyA9IGluaXRDb25maWcobmV3Q29uZmlnLCB0aGlzLiNjbGllbnRDb25maWcgfHwge30pLCB0aGlzO1xuICB9XG4gIC8qKlxuICAgKiBDbG9uZSB0aGUgY2xpZW50IHdpdGggYSBuZXcgKHBhcnRpYWwpIGNvbmZpZ3VyYXRpb24uXG4gICAqXG4gICAqIEBwYXJhbSBuZXdDb25maWcgLSBOZXcgY2xpZW50IGNvbmZpZ3VyYXRpb24gcHJvcGVydGllcywgc2hhbGxvd2x5IG1lcmdlZCB3aXRoIGV4aXN0aW5nIGNvbmZpZ3VyYXRpb25cbiAgICovXG4gIHdpdGhDb25maWcobmV3Q29uZmlnKSB7XG4gICAgY29uc3QgdGhpc0NvbmZpZyA9IHRoaXMuY29uZmlnKCk7XG4gICAgcmV0dXJuIG5ldyBPYnNlcnZhYmxlU2FuaXR5Q2xpZW50KHRoaXMuI2h0dHBSZXF1ZXN0LCB7XG4gICAgICAuLi50aGlzQ29uZmlnLFxuICAgICAgLi4ubmV3Q29uZmlnLFxuICAgICAgc3RlZ2E6IHtcbiAgICAgICAgLi4udGhpc0NvbmZpZy5zdGVnYSB8fCB7fSxcbiAgICAgICAgLi4udHlwZW9mIG5ld0NvbmZpZz8uc3RlZ2EgPT0gXCJib29sZWFuXCIgPyB7IGVuYWJsZWQ6IG5ld0NvbmZpZy5zdGVnYSB9IDogbmV3Q29uZmlnPy5zdGVnYSB8fCB7fVxuICAgICAgfVxuICAgIH0pO1xuICB9XG4gIGZldGNoKHF1ZXJ5LCBwYXJhbXMsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gX2ZldGNoKFxuICAgICAgdGhpcyxcbiAgICAgIHRoaXMuI2h0dHBSZXF1ZXN0LFxuICAgICAgdGhpcy4jY2xpZW50Q29uZmlnLnN0ZWdhLFxuICAgICAgcXVlcnksXG4gICAgICBwYXJhbXMsXG4gICAgICBvcHRpb25zXG4gICAgKTtcbiAgfVxuICAvKipcbiAgICogRmV0Y2ggYSBzaW5nbGUgZG9jdW1lbnQgd2l0aCB0aGUgZ2l2ZW4gSUQuXG4gICAqXG4gICAqIEBwYXJhbSBpZCAtIERvY3VtZW50IElEIHRvIGZldGNoXG4gICAqIEBwYXJhbSBvcHRpb25zIC0gUmVxdWVzdCBvcHRpb25zXG4gICAqL1xuICBnZXREb2N1bWVudChpZCwgb3B0aW9ucykge1xuICAgIHJldHVybiBfZ2V0RG9jdW1lbnQodGhpcywgdGhpcy4jaHR0cFJlcXVlc3QsIGlkLCBvcHRpb25zKTtcbiAgfVxuICAvKipcbiAgICogRmV0Y2ggbXVsdGlwbGUgZG9jdW1lbnRzIGluIG9uZSByZXF1ZXN0LlxuICAgKiBTaG91bGQgYmUgdXNlZCBzcGFyaW5nbHkgLSBwZXJmb3JtaW5nIGEgcXVlcnkgaXMgdXN1YWxseSBhIGJldHRlciBvcHRpb24uXG4gICAqIFRoZSBvcmRlci9wb3NpdGlvbiBvZiBkb2N1bWVudHMgaXMgcHJlc2VydmVkIGJhc2VkIG9uIHRoZSBvcmlnaW5hbCBhcnJheSBvZiBJRHMuXG4gICAqIElmIGFueSBvZiB0aGUgZG9jdW1lbnRzIGFyZSBtaXNzaW5nLCB0aGV5IHdpbGwgYmUgcmVwbGFjZWQgYnkgYSBgbnVsbGAgZW50cnkgaW4gdGhlIHJldHVybmVkIGFycmF5XG4gICAqXG4gICAqIEBwYXJhbSBpZHMgLSBEb2N1bWVudCBJRHMgdG8gZmV0Y2hcbiAgICogQHBhcmFtIG9wdGlvbnMgLSBSZXF1ZXN0IG9wdGlvbnNcbiAgICovXG4gIGdldERvY3VtZW50cyhpZHMsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gX2dldERvY3VtZW50cyh0aGlzLCB0aGlzLiNodHRwUmVxdWVzdCwgaWRzLCBvcHRpb25zKTtcbiAgfVxuICBjcmVhdGUoZG9jdW1lbnQsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gX2NyZWF0ZSh0aGlzLCB0aGlzLiNodHRwUmVxdWVzdCwgZG9jdW1lbnQsIFwiY3JlYXRlXCIsIG9wdGlvbnMpO1xuICB9XG4gIGNyZWF0ZUlmTm90RXhpc3RzKGRvY3VtZW50LCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIF9jcmVhdGVJZk5vdEV4aXN0cyh0aGlzLCB0aGlzLiNodHRwUmVxdWVzdCwgZG9jdW1lbnQsIG9wdGlvbnMpO1xuICB9XG4gIGNyZWF0ZU9yUmVwbGFjZShkb2N1bWVudCwgb3B0aW9ucykge1xuICAgIHJldHVybiBfY3JlYXRlT3JSZXBsYWNlKHRoaXMsIHRoaXMuI2h0dHBSZXF1ZXN0LCBkb2N1bWVudCwgb3B0aW9ucyk7XG4gIH1cbiAgZGVsZXRlKHNlbGVjdGlvbiwgb3B0aW9ucykge1xuICAgIHJldHVybiBfZGVsZXRlKHRoaXMsIHRoaXMuI2h0dHBSZXF1ZXN0LCBzZWxlY3Rpb24sIG9wdGlvbnMpO1xuICB9XG4gIG11dGF0ZShvcGVyYXRpb25zLCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIF9tdXRhdGUodGhpcywgdGhpcy4jaHR0cFJlcXVlc3QsIG9wZXJhdGlvbnMsIG9wdGlvbnMpO1xuICB9XG4gIC8qKlxuICAgKiBDcmVhdGUgYSBuZXcgYnVpbGRhYmxlIHBhdGNoIG9mIG9wZXJhdGlvbnMgdG8gcGVyZm9ybVxuICAgKlxuICAgKiBAcGFyYW0gc2VsZWN0aW9uIC0gRG9jdW1lbnQgSUQsIGFuIGFycmF5IG9mIGRvY3VtZW50IElEcywgb3IgYW4gb2JqZWN0IHdpdGggYHF1ZXJ5YCBhbmQgb3B0aW9uYWwgYHBhcmFtc2AsIGRlZmluaW5nIHdoaWNoIGRvY3VtZW50KHMpIHRvIHBhdGNoXG4gICAqIEBwYXJhbSBvcGVyYXRpb25zIC0gT3B0aW9uYWwgb2JqZWN0IG9mIHBhdGNoIG9wZXJhdGlvbnMgdG8gaW5pdGlhbGl6ZSB0aGUgcGF0Y2ggaW5zdGFuY2Ugd2l0aFxuICAgKiBAcmV0dXJucyBQYXRjaCBpbnN0YW5jZSAtIGNhbGwgYC5jb21taXQoKWAgdG8gcGVyZm9ybSB0aGUgb3BlcmF0aW9ucyBkZWZpbmVkXG4gICAqL1xuICBwYXRjaChzZWxlY3Rpb24sIG9wZXJhdGlvbnMpIHtcbiAgICByZXR1cm4gbmV3IE9ic2VydmFibGVQYXRjaChzZWxlY3Rpb24sIG9wZXJhdGlvbnMsIHRoaXMpO1xuICB9XG4gIC8qKlxuICAgKiBDcmVhdGUgYSBuZXcgdHJhbnNhY3Rpb24gb2YgbXV0YXRpb25zXG4gICAqXG4gICAqIEBwYXJhbSBvcGVyYXRpb25zIC0gT3B0aW9uYWwgYXJyYXkgb2YgbXV0YXRpb24gb3BlcmF0aW9ucyB0byBpbml0aWFsaXplIHRoZSB0cmFuc2FjdGlvbiBpbnN0YW5jZSB3aXRoXG4gICAqL1xuICB0cmFuc2FjdGlvbihvcGVyYXRpb25zKSB7XG4gICAgcmV0dXJuIG5ldyBPYnNlcnZhYmxlVHJhbnNhY3Rpb24ob3BlcmF0aW9ucywgdGhpcyk7XG4gIH1cbiAgLyoqXG4gICAqIFBlcmZvcm0gYWN0aW9uIG9wZXJhdGlvbnMgYWdhaW5zdCB0aGUgY29uZmlndXJlZCBkYXRhc2V0XG4gICAqXG4gICAqIEBwYXJhbSBvcGVyYXRpb25zIC0gQWN0aW9uIG9wZXJhdGlvbihzKSB0byBleGVjdXRlXG4gICAqIEBwYXJhbSBvcHRpb25zIC0gQWN0aW9uIG9wdGlvbnNcbiAgICovXG4gIGFjdGlvbihvcGVyYXRpb25zLCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIF9hY3Rpb24odGhpcywgdGhpcy4jaHR0cFJlcXVlc3QsIG9wZXJhdGlvbnMsIG9wdGlvbnMpO1xuICB9XG4gIC8qKlxuICAgKiBQZXJmb3JtIGFuIEhUVFAgcmVxdWVzdCBhZ2FpbnN0IHRoZSBTYW5pdHkgQVBJXG4gICAqXG4gICAqIEBwYXJhbSBvcHRpb25zIC0gUmVxdWVzdCBvcHRpb25zXG4gICAqL1xuICByZXF1ZXN0KG9wdGlvbnMpIHtcbiAgICByZXR1cm4gX3JlcXVlc3QodGhpcywgdGhpcy4jaHR0cFJlcXVlc3QsIG9wdGlvbnMpO1xuICB9XG4gIC8qKlxuICAgKiBHZXQgYSBTYW5pdHkgQVBJIFVSTCBmb3IgdGhlIFVSSSBwcm92aWRlZFxuICAgKlxuICAgKiBAcGFyYW0gdXJpIC0gVVJJL3BhdGggdG8gYnVpbGQgVVJMIGZvclxuICAgKiBAcGFyYW0gY2FuVXNlQ2RuIC0gV2hldGhlciBvciBub3QgdG8gYWxsb3cgdXNpbmcgdGhlIEFQSSBDRE4gZm9yIHRoaXMgcm91dGVcbiAgICovXG4gIGdldFVybCh1cmksIGNhblVzZUNkbikge1xuICAgIHJldHVybiBfZ2V0VXJsKHRoaXMsIHVyaSwgY2FuVXNlQ2RuKTtcbiAgfVxuICAvKipcbiAgICogR2V0IGEgU2FuaXR5IEFQSSBVUkwgZm9yIHRoZSBkYXRhIG9wZXJhdGlvbiBhbmQgcGF0aCBwcm92aWRlZFxuICAgKlxuICAgKiBAcGFyYW0gb3BlcmF0aW9uIC0gRGF0YSBvcGVyYXRpb24gKGVnIGBxdWVyeWAsIGBtdXRhdGVgLCBgbGlzdGVuYCBvciBzaW1pbGFyKVxuICAgKiBAcGFyYW0gcGF0aCAtIFBhdGggdG8gYXBwZW5kIGFmdGVyIHRoZSBvcGVyYXRpb25cbiAgICovXG4gIGdldERhdGFVcmwob3BlcmF0aW9uLCBwYXRoKSB7XG4gICAgcmV0dXJuIF9nZXREYXRhVXJsKHRoaXMsIG9wZXJhdGlvbiwgcGF0aCk7XG4gIH1cbn1cbmNsYXNzIFNhbml0eUNsaWVudCB7XG4gIGFzc2V0cztcbiAgZGF0YXNldHM7XG4gIGxpdmU7XG4gIHByb2plY3RzO1xuICB1c2VycztcbiAgLyoqXG4gICAqIE9ic2VydmFibGUgdmVyc2lvbiBvZiB0aGUgU2FuaXR5IGNsaWVudCwgd2l0aCB0aGUgc2FtZSBjb25maWd1cmF0aW9uIGFzIHRoZSBwcm9taXNlLWJhc2VkIG9uZVxuICAgKi9cbiAgb2JzZXJ2YWJsZTtcbiAgLyoqXG4gICAqIFByaXZhdGUgcHJvcGVydGllc1xuICAgKi9cbiAgI2NsaWVudENvbmZpZztcbiAgI2h0dHBSZXF1ZXN0O1xuICAvKipcbiAgICogSW5zdGFuY2UgcHJvcGVydGllc1xuICAgKi9cbiAgbGlzdGVuID0gX2xpc3RlbjtcbiAgY29uc3RydWN0b3IoaHR0cFJlcXVlc3QsIGNvbmZpZyA9IGRlZmF1bHRDb25maWcpIHtcbiAgICB0aGlzLmNvbmZpZyhjb25maWcpLCB0aGlzLiNodHRwUmVxdWVzdCA9IGh0dHBSZXF1ZXN0LCB0aGlzLmFzc2V0cyA9IG5ldyBBc3NldHNDbGllbnQodGhpcywgdGhpcy4jaHR0cFJlcXVlc3QpLCB0aGlzLmRhdGFzZXRzID0gbmV3IERhdGFzZXRzQ2xpZW50KHRoaXMsIHRoaXMuI2h0dHBSZXF1ZXN0KSwgdGhpcy5saXZlID0gbmV3IExpdmVDbGllbnQodGhpcyksIHRoaXMucHJvamVjdHMgPSBuZXcgUHJvamVjdHNDbGllbnQodGhpcywgdGhpcy4jaHR0cFJlcXVlc3QpLCB0aGlzLnVzZXJzID0gbmV3IFVzZXJzQ2xpZW50KHRoaXMsIHRoaXMuI2h0dHBSZXF1ZXN0KSwgdGhpcy5vYnNlcnZhYmxlID0gbmV3IE9ic2VydmFibGVTYW5pdHlDbGllbnQoaHR0cFJlcXVlc3QsIGNvbmZpZyk7XG4gIH1cbiAgLyoqXG4gICAqIENsb25lIHRoZSBjbGllbnQgLSByZXR1cm5zIGEgbmV3IGluc3RhbmNlXG4gICAqL1xuICBjbG9uZSgpIHtcbiAgICByZXR1cm4gbmV3IFNhbml0eUNsaWVudCh0aGlzLiNodHRwUmVxdWVzdCwgdGhpcy5jb25maWcoKSk7XG4gIH1cbiAgY29uZmlnKG5ld0NvbmZpZykge1xuICAgIGlmIChuZXdDb25maWcgPT09IHZvaWQgMClcbiAgICAgIHJldHVybiB7IC4uLnRoaXMuI2NsaWVudENvbmZpZyB9O1xuICAgIGlmICh0aGlzLiNjbGllbnRDb25maWcgJiYgdGhpcy4jY2xpZW50Q29uZmlnLmFsbG93UmVjb25maWd1cmUgPT09ICExKVxuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICBcIkV4aXN0aW5nIGNsaWVudCBpbnN0YW5jZSBjYW5ub3QgYmUgcmVjb25maWd1cmVkIC0gdXNlIGB3aXRoQ29uZmlnKG5ld0NvbmZpZylgIHRvIHJldHVybiBhIG5ldyBjbGllbnRcIlxuICAgICAgKTtcbiAgICByZXR1cm4gdGhpcy5vYnNlcnZhYmxlICYmIHRoaXMub2JzZXJ2YWJsZS5jb25maWcobmV3Q29uZmlnKSwgdGhpcy4jY2xpZW50Q29uZmlnID0gaW5pdENvbmZpZyhuZXdDb25maWcsIHRoaXMuI2NsaWVudENvbmZpZyB8fCB7fSksIHRoaXM7XG4gIH1cbiAgLyoqXG4gICAqIENsb25lIHRoZSBjbGllbnQgd2l0aCBhIG5ldyAocGFydGlhbCkgY29uZmlndXJhdGlvbi5cbiAgICpcbiAgICogQHBhcmFtIG5ld0NvbmZpZyAtIE5ldyBjbGllbnQgY29uZmlndXJhdGlvbiBwcm9wZXJ0aWVzLCBzaGFsbG93bHkgbWVyZ2VkIHdpdGggZXhpc3RpbmcgY29uZmlndXJhdGlvblxuICAgKi9cbiAgd2l0aENvbmZpZyhuZXdDb25maWcpIHtcbiAgICBjb25zdCB0aGlzQ29uZmlnID0gdGhpcy5jb25maWcoKTtcbiAgICByZXR1cm4gbmV3IFNhbml0eUNsaWVudCh0aGlzLiNodHRwUmVxdWVzdCwge1xuICAgICAgLi4udGhpc0NvbmZpZyxcbiAgICAgIC4uLm5ld0NvbmZpZyxcbiAgICAgIHN0ZWdhOiB7XG4gICAgICAgIC4uLnRoaXNDb25maWcuc3RlZ2EgfHwge30sXG4gICAgICAgIC4uLnR5cGVvZiBuZXdDb25maWc/LnN0ZWdhID09IFwiYm9vbGVhblwiID8geyBlbmFibGVkOiBuZXdDb25maWcuc3RlZ2EgfSA6IG5ld0NvbmZpZz8uc3RlZ2EgfHwge31cbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuICBmZXRjaChxdWVyeSwgcGFyYW1zLCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIGxhc3RWYWx1ZUZyb20oXG4gICAgICBfZmV0Y2goXG4gICAgICAgIHRoaXMsXG4gICAgICAgIHRoaXMuI2h0dHBSZXF1ZXN0LFxuICAgICAgICB0aGlzLiNjbGllbnRDb25maWcuc3RlZ2EsXG4gICAgICAgIHF1ZXJ5LFxuICAgICAgICBwYXJhbXMsXG4gICAgICAgIG9wdGlvbnNcbiAgICAgIClcbiAgICApO1xuICB9XG4gIC8qKlxuICAgKiBGZXRjaCBhIHNpbmdsZSBkb2N1bWVudCB3aXRoIHRoZSBnaXZlbiBJRC5cbiAgICpcbiAgICogQHBhcmFtIGlkIC0gRG9jdW1lbnQgSUQgdG8gZmV0Y2hcbiAgICogQHBhcmFtIG9wdGlvbnMgLSBSZXF1ZXN0IG9wdGlvbnNcbiAgICovXG4gIGdldERvY3VtZW50KGlkLCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIGxhc3RWYWx1ZUZyb20oX2dldERvY3VtZW50KHRoaXMsIHRoaXMuI2h0dHBSZXF1ZXN0LCBpZCwgb3B0aW9ucykpO1xuICB9XG4gIC8qKlxuICAgKiBGZXRjaCBtdWx0aXBsZSBkb2N1bWVudHMgaW4gb25lIHJlcXVlc3QuXG4gICAqIFNob3VsZCBiZSB1c2VkIHNwYXJpbmdseSAtIHBlcmZvcm1pbmcgYSBxdWVyeSBpcyB1c3VhbGx5IGEgYmV0dGVyIG9wdGlvbi5cbiAgICogVGhlIG9yZGVyL3Bvc2l0aW9uIG9mIGRvY3VtZW50cyBpcyBwcmVzZXJ2ZWQgYmFzZWQgb24gdGhlIG9yaWdpbmFsIGFycmF5IG9mIElEcy5cbiAgICogSWYgYW55IG9mIHRoZSBkb2N1bWVudHMgYXJlIG1pc3NpbmcsIHRoZXkgd2lsbCBiZSByZXBsYWNlZCBieSBhIGBudWxsYCBlbnRyeSBpbiB0aGUgcmV0dXJuZWQgYXJyYXlcbiAgICpcbiAgICogQHBhcmFtIGlkcyAtIERvY3VtZW50IElEcyB0byBmZXRjaFxuICAgKiBAcGFyYW0gb3B0aW9ucyAtIFJlcXVlc3Qgb3B0aW9uc1xuICAgKi9cbiAgZ2V0RG9jdW1lbnRzKGlkcywgb3B0aW9ucykge1xuICAgIHJldHVybiBsYXN0VmFsdWVGcm9tKF9nZXREb2N1bWVudHModGhpcywgdGhpcy4jaHR0cFJlcXVlc3QsIGlkcywgb3B0aW9ucykpO1xuICB9XG4gIGNyZWF0ZShkb2N1bWVudCwgb3B0aW9ucykge1xuICAgIHJldHVybiBsYXN0VmFsdWVGcm9tKFxuICAgICAgX2NyZWF0ZSh0aGlzLCB0aGlzLiNodHRwUmVxdWVzdCwgZG9jdW1lbnQsIFwiY3JlYXRlXCIsIG9wdGlvbnMpXG4gICAgKTtcbiAgfVxuICBjcmVhdGVJZk5vdEV4aXN0cyhkb2N1bWVudCwgb3B0aW9ucykge1xuICAgIHJldHVybiBsYXN0VmFsdWVGcm9tKFxuICAgICAgX2NyZWF0ZUlmTm90RXhpc3RzKHRoaXMsIHRoaXMuI2h0dHBSZXF1ZXN0LCBkb2N1bWVudCwgb3B0aW9ucylcbiAgICApO1xuICB9XG4gIGNyZWF0ZU9yUmVwbGFjZShkb2N1bWVudCwgb3B0aW9ucykge1xuICAgIHJldHVybiBsYXN0VmFsdWVGcm9tKFxuICAgICAgX2NyZWF0ZU9yUmVwbGFjZSh0aGlzLCB0aGlzLiNodHRwUmVxdWVzdCwgZG9jdW1lbnQsIG9wdGlvbnMpXG4gICAgKTtcbiAgfVxuICBkZWxldGUoc2VsZWN0aW9uLCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIGxhc3RWYWx1ZUZyb20oX2RlbGV0ZSh0aGlzLCB0aGlzLiNodHRwUmVxdWVzdCwgc2VsZWN0aW9uLCBvcHRpb25zKSk7XG4gIH1cbiAgbXV0YXRlKG9wZXJhdGlvbnMsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gbGFzdFZhbHVlRnJvbShfbXV0YXRlKHRoaXMsIHRoaXMuI2h0dHBSZXF1ZXN0LCBvcGVyYXRpb25zLCBvcHRpb25zKSk7XG4gIH1cbiAgLyoqXG4gICAqIENyZWF0ZSBhIG5ldyBidWlsZGFibGUgcGF0Y2ggb2Ygb3BlcmF0aW9ucyB0byBwZXJmb3JtXG4gICAqXG4gICAqIEBwYXJhbSBzZWxlY3Rpb24gLSBEb2N1bWVudCBJRCwgYW4gYXJyYXkgb2YgZG9jdW1lbnQgSURzLCBvciBhbiBvYmplY3Qgd2l0aCBgcXVlcnlgIGFuZCBvcHRpb25hbCBgcGFyYW1zYCwgZGVmaW5pbmcgd2hpY2ggZG9jdW1lbnQocykgdG8gcGF0Y2hcbiAgICogQHBhcmFtIG9wZXJhdGlvbnMgLSBPcHRpb25hbCBvYmplY3Qgb2YgcGF0Y2ggb3BlcmF0aW9ucyB0byBpbml0aWFsaXplIHRoZSBwYXRjaCBpbnN0YW5jZSB3aXRoXG4gICAqIEByZXR1cm5zIFBhdGNoIGluc3RhbmNlIC0gY2FsbCBgLmNvbW1pdCgpYCB0byBwZXJmb3JtIHRoZSBvcGVyYXRpb25zIGRlZmluZWRcbiAgICovXG4gIHBhdGNoKGRvY3VtZW50SWQsIG9wZXJhdGlvbnMpIHtcbiAgICByZXR1cm4gbmV3IFBhdGNoKGRvY3VtZW50SWQsIG9wZXJhdGlvbnMsIHRoaXMpO1xuICB9XG4gIC8qKlxuICAgKiBDcmVhdGUgYSBuZXcgdHJhbnNhY3Rpb24gb2YgbXV0YXRpb25zXG4gICAqXG4gICAqIEBwYXJhbSBvcGVyYXRpb25zIC0gT3B0aW9uYWwgYXJyYXkgb2YgbXV0YXRpb24gb3BlcmF0aW9ucyB0byBpbml0aWFsaXplIHRoZSB0cmFuc2FjdGlvbiBpbnN0YW5jZSB3aXRoXG4gICAqL1xuICB0cmFuc2FjdGlvbihvcGVyYXRpb25zKSB7XG4gICAgcmV0dXJuIG5ldyBUcmFuc2FjdGlvbihvcGVyYXRpb25zLCB0aGlzKTtcbiAgfVxuICAvKipcbiAgICogUGVyZm9ybSBhY3Rpb24gb3BlcmF0aW9ucyBhZ2FpbnN0IHRoZSBjb25maWd1cmVkIGRhdGFzZXRcbiAgICogUmV0dXJucyBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB0byB0aGUgdHJhbnNhY3Rpb24gcmVzdWx0XG4gICAqXG4gICAqIEBwYXJhbSBvcGVyYXRpb25zIC0gQWN0aW9uIG9wZXJhdGlvbihzKSB0byBleGVjdXRlXG4gICAqIEBwYXJhbSBvcHRpb25zIC0gQWN0aW9uIG9wdGlvbnNcbiAgICovXG4gIGFjdGlvbihvcGVyYXRpb25zLCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIGxhc3RWYWx1ZUZyb20oX2FjdGlvbih0aGlzLCB0aGlzLiNodHRwUmVxdWVzdCwgb3BlcmF0aW9ucywgb3B0aW9ucykpO1xuICB9XG4gIC8qKlxuICAgKiBQZXJmb3JtIGEgcmVxdWVzdCBhZ2FpbnN0IHRoZSBTYW5pdHkgQVBJXG4gICAqIE5PVEU6IE9ubHkgdXNlIHRoaXMgZm9yIFNhbml0eSBBUEkgZW5kcG9pbnRzLCBub3QgZm9yIHlvdXIgb3duIEFQSXMhXG4gICAqXG4gICAqIEBwYXJhbSBvcHRpb25zIC0gUmVxdWVzdCBvcHRpb25zXG4gICAqIEByZXR1cm5zIFByb21pc2UgcmVzb2x2aW5nIHRvIHRoZSByZXNwb25zZSBib2R5XG4gICAqL1xuICByZXF1ZXN0KG9wdGlvbnMpIHtcbiAgICByZXR1cm4gbGFzdFZhbHVlRnJvbShfcmVxdWVzdCh0aGlzLCB0aGlzLiNodHRwUmVxdWVzdCwgb3B0aW9ucykpO1xuICB9XG4gIC8qKlxuICAgKiBQZXJmb3JtIGFuIEhUVFAgcmVxdWVzdCBhIGAvZGF0YWAgc3ViLWVuZHBvaW50XG4gICAqIE5PVEU6IENvbnNpZGVyZWQgaW50ZXJuYWwsIHRodXMgbWFya2VkIGFzIGRlcHJlY2F0ZWQuIFVzZSBgcmVxdWVzdGAgaW5zdGVhZC5cbiAgICpcbiAgICogQGRlcHJlY2F0ZWQgLSBVc2UgYHJlcXVlc3QoKWAgb3IgeW91ciBvd24gSFRUUCBsaWJyYXJ5IGluc3RlYWRcbiAgICogQHBhcmFtIGVuZHBvaW50IC0gRW5kcG9pbnQgdG8gaGl0IChtdXRhdGUsIHF1ZXJ5IGV0YylcbiAgICogQHBhcmFtIGJvZHkgLSBSZXF1ZXN0IGJvZHlcbiAgICogQHBhcmFtIG9wdGlvbnMgLSBSZXF1ZXN0IG9wdGlvbnNcbiAgICogQGludGVybmFsXG4gICAqL1xuICBkYXRhUmVxdWVzdChlbmRwb2ludCwgYm9keSwgb3B0aW9ucykge1xuICAgIHJldHVybiBsYXN0VmFsdWVGcm9tKF9kYXRhUmVxdWVzdCh0aGlzLCB0aGlzLiNodHRwUmVxdWVzdCwgZW5kcG9pbnQsIGJvZHksIG9wdGlvbnMpKTtcbiAgfVxuICAvKipcbiAgICogR2V0IGEgU2FuaXR5IEFQSSBVUkwgZm9yIHRoZSBVUkkgcHJvdmlkZWRcbiAgICpcbiAgICogQHBhcmFtIHVyaSAtIFVSSS9wYXRoIHRvIGJ1aWxkIFVSTCBmb3JcbiAgICogQHBhcmFtIGNhblVzZUNkbiAtIFdoZXRoZXIgb3Igbm90IHRvIGFsbG93IHVzaW5nIHRoZSBBUEkgQ0ROIGZvciB0aGlzIHJvdXRlXG4gICAqL1xuICBnZXRVcmwodXJpLCBjYW5Vc2VDZG4pIHtcbiAgICByZXR1cm4gX2dldFVybCh0aGlzLCB1cmksIGNhblVzZUNkbik7XG4gIH1cbiAgLyoqXG4gICAqIEdldCBhIFNhbml0eSBBUEkgVVJMIGZvciB0aGUgZGF0YSBvcGVyYXRpb24gYW5kIHBhdGggcHJvdmlkZWRcbiAgICpcbiAgICogQHBhcmFtIG9wZXJhdGlvbiAtIERhdGEgb3BlcmF0aW9uIChlZyBgcXVlcnlgLCBgbXV0YXRlYCwgYGxpc3RlbmAgb3Igc2ltaWxhcilcbiAgICogQHBhcmFtIHBhdGggLSBQYXRoIHRvIGFwcGVuZCBhZnRlciB0aGUgb3BlcmF0aW9uXG4gICAqL1xuICBnZXREYXRhVXJsKG9wZXJhdGlvbiwgcGF0aCkge1xuICAgIHJldHVybiBfZ2V0RGF0YVVybCh0aGlzLCBvcGVyYXRpb24sIHBhdGgpO1xuICB9XG59XG5mdW5jdGlvbiBkZWZpbmVDcmVhdGVDbGllbnRFeHBvcnRzKGVudk1pZGRsZXdhcmUsIENsYXNzQ29uc3RydWN0b3IpIHtcbiAgcmV0dXJuIHsgcmVxdWVzdGVyOiBkZWZpbmVIdHRwUmVxdWVzdChlbnZNaWRkbGV3YXJlKSwgY3JlYXRlQ2xpZW50OiAoY29uZmlnKSA9PiB7XG4gICAgY29uc3QgY2xpZW50UmVxdWVzdGVyID0gZGVmaW5lSHR0cFJlcXVlc3QoZW52TWlkZGxld2FyZSk7XG4gICAgcmV0dXJuIG5ldyBDbGFzc0NvbnN0cnVjdG9yKFxuICAgICAgKG9wdGlvbnMsIHJlcXVlc3RlcjIpID0+IChyZXF1ZXN0ZXIyIHx8IGNsaWVudFJlcXVlc3Rlcikoe1xuICAgICAgICBtYXhSZWRpcmVjdHM6IDAsXG4gICAgICAgIG1heFJldHJpZXM6IGNvbmZpZy5tYXhSZXRyaWVzLFxuICAgICAgICByZXRyeURlbGF5OiBjb25maWcucmV0cnlEZWxheSxcbiAgICAgICAgLi4ub3B0aW9uc1xuICAgICAgfSksXG4gICAgICBjb25maWdcbiAgICApO1xuICB9IH07XG59XG5mdW5jdGlvbiBkZWZpbmVEZXByZWNhdGVkQ3JlYXRlQ2xpZW50KGNyZWF0ZUNsaWVudDIpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKGNvbmZpZykge1xuICAgIHJldHVybiBwcmludE5vRGVmYXVsdEV4cG9ydCgpLCBjcmVhdGVDbGllbnQyKGNvbmZpZyk7XG4gIH07XG59XG52YXIgbmFtZSA9IFwiQHNhbml0eS9jbGllbnRcIiwgdmVyc2lvbiA9IFwiNi4yNS4wXCI7XG5jb25zdCBtaWRkbGV3YXJlID0gW1xuICBkZWJ1Zyh7IHZlcmJvc2U6ICEwLCBuYW1lc3BhY2U6IFwic2FuaXR5OmNsaWVudFwiIH0pLFxuICBoZWFkZXJzKHsgXCJVc2VyLUFnZW50XCI6IGAke25hbWV9ICR7dmVyc2lvbn1gIH0pLFxuICAvLyBFbmFibGUga2VlcC1hbGl2ZSwgYW5kIGluIGFkZGl0aW9uIGxpbWl0IHRoZSBudW1iZXIgb2Ygc29ja2V0cyB0aGF0IGNhbiBiZSBvcGVuZWQuXG4gIC8vIFRoaXMgYXZvaWRzIG9wZW5pbmcgdG9vIG1hbnkgY29ubmVjdGlvbnMgdG8gdGhlIHNlcnZlciBpZiBzb21lb25lIHRyaWVzIHRvIGV4ZWN1dGVcbiAgLy8gYSBidW5jaCBvZiByZXF1ZXN0cyBpbiBwYXJhbGxlbC4gSXQncyByZWNvbW1lbmRlZCB0byBoYXZlIGEgY29uY3VycmVuY3kgbGltaXRcbiAgLy8gYXQgYSBcImhpZ2hlciBsaW1pdFwiIChpLmUuIHlvdSBzaG91bGRuJ3QgYWN0dWFsbHkgZXhlY3V0ZSBodW5kcmVkcyBvZiByZXF1ZXN0cyBpbiBwYXJhbGxlbCksXG4gIC8vIGFuZCB0aGlzIGlzIG1haW5seSB0byBtaW5pbWl6ZSB0aGUgaW1wYWN0IGZvciB0aGUgbmV0d29yayBhbmQgc2VydmVyLlxuICAvL1xuICAvLyBXZSdyZSBjdXJyZW50bHkgbWF0Y2hpbmcgdGhlIHNhbWUgZGVmYXVsdHMgYXMgYnJvd3NlcnM6XG4gIC8vIGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzI2MDAzNzU2L2lzLXRoZXJlLWEtbGltaXQtcHJhY3RpY2FsLW9yLW90aGVyd2lzZS10by10aGUtbnVtYmVyLW9mLXdlYi1zb2NrZXRzLWEtcGFnZS1vcFxuICBhZ2VudCh7XG4gICAga2VlcEFsaXZlOiAhMCxcbiAgICBtYXhTb2NrZXRzOiAzMCxcbiAgICBtYXhUb3RhbFNvY2tldHM6IDI1NlxuICB9KVxuXSwgZXhwID0gZGVmaW5lQ3JlYXRlQ2xpZW50RXhwb3J0cyhtaWRkbGV3YXJlLCBTYW5pdHlDbGllbnQpLCByZXF1ZXN0ZXIgPSBleHAucmVxdWVzdGVyLCBjcmVhdGVDbGllbnQgPSBleHAuY3JlYXRlQ2xpZW50LCBkZXByZWNhdGVkQ3JlYXRlQ2xpZW50ID0gZGVmaW5lRGVwcmVjYXRlZENyZWF0ZUNsaWVudChjcmVhdGVDbGllbnQpO1xuZXhwb3J0IHtcbiAgQmFzZVBhdGNoLFxuICBCYXNlVHJhbnNhY3Rpb24sXG4gIENoYW5uZWxFcnJvcixcbiAgQ2xpZW50RXJyb3IsXG4gIENvbm5lY3Rpb25GYWlsZWRFcnJvcixcbiAgQ29yc09yaWdpbkVycm9yLFxuICBEaXNjb25uZWN0RXJyb3IsXG4gIE1lc3NhZ2VFcnJvcixcbiAgTWVzc2FnZVBhcnNlRXJyb3IsXG4gIE9ic2VydmFibGVQYXRjaCxcbiAgT2JzZXJ2YWJsZVNhbml0eUNsaWVudCxcbiAgT2JzZXJ2YWJsZVRyYW5zYWN0aW9uLFxuICBQYXRjaCxcbiAgU2FuaXR5Q2xpZW50LFxuICBTZXJ2ZXJFcnJvcixcbiAgVHJhbnNhY3Rpb24sXG4gIGNvbm5lY3RFdmVudFNvdXJjZSxcbiAgY3JlYXRlQ2xpZW50LFxuICBkZXByZWNhdGVkQ3JlYXRlQ2xpZW50IGFzIGRlZmF1bHQsXG4gIHJlcXVlc3RlcixcbiAgYWRhcHRlciBhcyB1bnN0YWJsZV9fYWRhcHRlcixcbiAgZW52aXJvbm1lbnQgYXMgdW5zdGFibGVfX2Vudmlyb25tZW50LFxuICB2YWxpZGF0ZUFwaVBlcnNwZWN0aXZlXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/client/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/diff-match-patch/dist/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@sanity/diff-match-patch/dist/index.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DIFF_DELETE: () => (/* binding */ DIFF_DELETE),\n/* harmony export */   DIFF_EQUAL: () => (/* binding */ DIFF_EQUAL),\n/* harmony export */   DIFF_INSERT: () => (/* binding */ DIFF_INSERT),\n/* harmony export */   adjustIndiciesToUcs2: () => (/* binding */ adjustIndiciesToUcs2),\n/* harmony export */   applyPatches: () => (/* binding */ apply),\n/* harmony export */   cleanupEfficiency: () => (/* binding */ cleanupEfficiency),\n/* harmony export */   cleanupSemantic: () => (/* binding */ cleanupSemantic),\n/* harmony export */   makeDiff: () => (/* binding */ diff),\n/* harmony export */   makePatches: () => (/* binding */ make),\n/* harmony export */   match: () => (/* binding */ match),\n/* harmony export */   parsePatch: () => (/* binding */ parse),\n/* harmony export */   stringifyPatch: () => (/* binding */ stringifyPatch),\n/* harmony export */   stringifyPatches: () => (/* binding */ stringify)\n/* harmony export */ });\nfunction cloneDiff(diff2) {\n  const [type, patch] = diff2;\n  return [type, patch];\n}\nfunction getCommonOverlap(textA, textB) {\n  let text1 = textA, text2 = textB;\n  const text1Length = text1.length, text2Length = text2.length;\n  if (text1Length === 0 || text2Length === 0)\n    return 0;\n  text1Length > text2Length ? text1 = text1.substring(text1Length - text2Length) : text1Length < text2Length && (text2 = text2.substring(0, text1Length));\n  const textLength = Math.min(text1Length, text2Length);\n  if (text1 === text2)\n    return textLength;\n  let best = 0, length = 1;\n  for (let found = 0; found !== -1; ) {\n    const pattern = text1.substring(textLength - length);\n    if (found = text2.indexOf(pattern), found === -1)\n      return best;\n    length += found, (found === 0 || text1.substring(textLength - length) === text2.substring(0, length)) && (best = length, length++);\n  }\n  return best;\n}\nfunction getCommonPrefix(text1, text2) {\n  if (!text1 || !text2 || text1[0] !== text2[0])\n    return 0;\n  let pointerMin = 0, pointerMax = Math.min(text1.length, text2.length), pointerMid = pointerMax, pointerStart = 0;\n  for (; pointerMin < pointerMid; )\n    text1.substring(pointerStart, pointerMid) === text2.substring(pointerStart, pointerMid) ? (pointerMin = pointerMid, pointerStart = pointerMin) : pointerMax = pointerMid, pointerMid = Math.floor((pointerMax - pointerMin) / 2 + pointerMin);\n  return pointerMid;\n}\nfunction getCommonSuffix(text1, text2) {\n  if (!text1 || !text2 || text1[text1.length - 1] !== text2[text2.length - 1])\n    return 0;\n  let pointerMin = 0, pointerMax = Math.min(text1.length, text2.length), pointerMid = pointerMax, pointerEnd = 0;\n  for (; pointerMin < pointerMid; )\n    text1.substring(text1.length - pointerMid, text1.length - pointerEnd) === text2.substring(text2.length - pointerMid, text2.length - pointerEnd) ? (pointerMin = pointerMid, pointerEnd = pointerMin) : pointerMax = pointerMid, pointerMid = Math.floor((pointerMax - pointerMin) / 2 + pointerMin);\n  return pointerMid;\n}\nfunction isHighSurrogate(char) {\n  const charCode = char.charCodeAt(0);\n  return charCode >= 55296 && charCode <= 56319;\n}\nfunction isLowSurrogate(char) {\n  const charCode = char.charCodeAt(0);\n  return charCode >= 56320 && charCode <= 57343;\n}\nfunction bisect(text1, text2, deadline) {\n  const text1Length = text1.length, text2Length = text2.length, maxD = Math.ceil((text1Length + text2Length) / 2), vOffset = maxD, vLength = 2 * maxD, v1 = new Array(vLength), v2 = new Array(vLength);\n  for (let x = 0; x < vLength; x++)\n    v1[x] = -1, v2[x] = -1;\n  v1[vOffset + 1] = 0, v2[vOffset + 1] = 0;\n  const delta = text1Length - text2Length, front = delta % 2 !== 0;\n  let k1start = 0, k1end = 0, k2start = 0, k2end = 0;\n  for (let d = 0; d < maxD && !(Date.now() > deadline); d++) {\n    for (let k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n      const k1Offset = vOffset + k1;\n      let x1;\n      k1 === -d || k1 !== d && v1[k1Offset - 1] < v1[k1Offset + 1] ? x1 = v1[k1Offset + 1] : x1 = v1[k1Offset - 1] + 1;\n      let y1 = x1 - k1;\n      for (; x1 < text1Length && y1 < text2Length && text1.charAt(x1) === text2.charAt(y1); )\n        x1++, y1++;\n      if (v1[k1Offset] = x1, x1 > text1Length)\n        k1end += 2;\n      else if (y1 > text2Length)\n        k1start += 2;\n      else if (front) {\n        const k2Offset = vOffset + delta - k1;\n        if (k2Offset >= 0 && k2Offset < vLength && v2[k2Offset] !== -1) {\n          const x2 = text1Length - v2[k2Offset];\n          if (x1 >= x2)\n            return bisectSplit(text1, text2, x1, y1, deadline);\n        }\n      }\n    }\n    for (let k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n      const k2Offset = vOffset + k2;\n      let x2;\n      k2 === -d || k2 !== d && v2[k2Offset - 1] < v2[k2Offset + 1] ? x2 = v2[k2Offset + 1] : x2 = v2[k2Offset - 1] + 1;\n      let y2 = x2 - k2;\n      for (; x2 < text1Length && y2 < text2Length && text1.charAt(text1Length - x2 - 1) === text2.charAt(text2Length - y2 - 1); )\n        x2++, y2++;\n      if (v2[k2Offset] = x2, x2 > text1Length)\n        k2end += 2;\n      else if (y2 > text2Length)\n        k2start += 2;\n      else if (!front) {\n        const k1Offset = vOffset + delta - k2;\n        if (k1Offset >= 0 && k1Offset < vLength && v1[k1Offset] !== -1) {\n          const x1 = v1[k1Offset], y1 = vOffset + x1 - k1Offset;\n          if (x2 = text1Length - x2, x1 >= x2)\n            return bisectSplit(text1, text2, x1, y1, deadline);\n        }\n      }\n    }\n  }\n  return [\n    [DIFF_DELETE, text1],\n    [DIFF_INSERT, text2]\n  ];\n}\nfunction bisectSplit(text1, text2, x, y, deadline) {\n  const text1a = text1.substring(0, x), text2a = text2.substring(0, y), text1b = text1.substring(x), text2b = text2.substring(y), diffs = doDiff(text1a, text2a, { checkLines: !1, deadline }), diffsb = doDiff(text1b, text2b, { checkLines: !1, deadline });\n  return diffs.concat(diffsb);\n}\nfunction findHalfMatch(text1, text2, timeout = 1) {\n  if (timeout <= 0)\n    return null;\n  const longText = text1.length > text2.length ? text1 : text2, shortText = text1.length > text2.length ? text2 : text1;\n  if (longText.length < 4 || shortText.length * 2 < longText.length)\n    return null;\n  const halfMatch1 = halfMatchI(longText, shortText, Math.ceil(longText.length / 4)), halfMatch2 = halfMatchI(longText, shortText, Math.ceil(longText.length / 2));\n  let halfMatch;\n  if (halfMatch1 && halfMatch2)\n    halfMatch = halfMatch1[4].length > halfMatch2[4].length ? halfMatch1 : halfMatch2;\n  else {\n    if (!halfMatch1 && !halfMatch2)\n      return null;\n    halfMatch2 ? halfMatch1 || (halfMatch = halfMatch2) : halfMatch = halfMatch1;\n  }\n  if (!halfMatch)\n    throw new Error(\"Unable to find a half match.\");\n  let text1A, text1B, text2A, text2B;\n  text1.length > text2.length ? (text1A = halfMatch[0], text1B = halfMatch[1], text2A = halfMatch[2], text2B = halfMatch[3]) : (text2A = halfMatch[0], text2B = halfMatch[1], text1A = halfMatch[2], text1B = halfMatch[3]);\n  const midCommon = halfMatch[4];\n  return [text1A, text1B, text2A, text2B, midCommon];\n}\nfunction halfMatchI(longText, shortText, i) {\n  const seed = longText.slice(i, i + Math.floor(longText.length / 4));\n  let j = -1, bestCommon = \"\", bestLongTextA, bestLongTextB, bestShortTextA, bestShortTextB;\n  for (; (j = shortText.indexOf(seed, j + 1)) !== -1; ) {\n    const prefixLength = getCommonPrefix(longText.slice(i), shortText.slice(j)), suffixLength = getCommonSuffix(longText.slice(0, i), shortText.slice(0, j));\n    bestCommon.length < suffixLength + prefixLength && (bestCommon = shortText.slice(j - suffixLength, j) + shortText.slice(j, j + prefixLength), bestLongTextA = longText.slice(0, i - suffixLength), bestLongTextB = longText.slice(i + prefixLength), bestShortTextA = shortText.slice(0, j - suffixLength), bestShortTextB = shortText.slice(j + prefixLength));\n  }\n  return bestCommon.length * 2 >= longText.length ? [\n    bestLongTextA || \"\",\n    bestLongTextB || \"\",\n    bestShortTextA || \"\",\n    bestShortTextB || \"\",\n    bestCommon || \"\"\n  ] : null;\n}\nfunction charsToLines(diffs, lineArray) {\n  for (let x = 0; x < diffs.length; x++) {\n    const chars = diffs[x][1], text = [];\n    for (let y = 0; y < chars.length; y++)\n      text[y] = lineArray[chars.charCodeAt(y)];\n    diffs[x][1] = text.join(\"\");\n  }\n}\nfunction linesToChars(textA, textB) {\n  const lineArray = [], lineHash = {};\n  lineArray[0] = \"\";\n  function diffLinesToMunge(text) {\n    let chars = \"\", lineStart = 0, lineEnd = -1, lineArrayLength = lineArray.length;\n    for (; lineEnd < text.length - 1; ) {\n      lineEnd = text.indexOf(`\n`, lineStart), lineEnd === -1 && (lineEnd = text.length - 1);\n      let line = text.slice(lineStart, lineEnd + 1);\n      (lineHash.hasOwnProperty ? lineHash.hasOwnProperty(line) : lineHash[line] !== void 0) ? chars += String.fromCharCode(lineHash[line]) : (lineArrayLength === maxLines && (line = text.slice(lineStart), lineEnd = text.length), chars += String.fromCharCode(lineArrayLength), lineHash[line] = lineArrayLength, lineArray[lineArrayLength++] = line), lineStart = lineEnd + 1;\n    }\n    return chars;\n  }\n  let maxLines = 4e4;\n  const chars1 = diffLinesToMunge(textA);\n  maxLines = 65535;\n  const chars2 = diffLinesToMunge(textB);\n  return { chars1, chars2, lineArray };\n}\nfunction doLineModeDiff(textA, textB, opts) {\n  let text1 = textA, text2 = textB;\n  const a = linesToChars(text1, text2);\n  text1 = a.chars1, text2 = a.chars2;\n  const linearray = a.lineArray;\n  let diffs = doDiff(text1, text2, {\n    checkLines: !1,\n    deadline: opts.deadline\n  });\n  charsToLines(diffs, linearray), diffs = cleanupSemantic(diffs), diffs.push([DIFF_EQUAL, \"\"]);\n  let pointer = 0, countDelete = 0, countInsert = 0, textDelete = \"\", textInsert = \"\";\n  for (; pointer < diffs.length; ) {\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        countInsert++, textInsert += diffs[pointer][1];\n        break;\n      case DIFF_DELETE:\n        countDelete++, textDelete += diffs[pointer][1];\n        break;\n      case DIFF_EQUAL:\n        if (countDelete >= 1 && countInsert >= 1) {\n          diffs.splice(pointer - countDelete - countInsert, countDelete + countInsert), pointer = pointer - countDelete - countInsert;\n          const aa = doDiff(textDelete, textInsert, {\n            checkLines: !1,\n            deadline: opts.deadline\n          });\n          for (let j = aa.length - 1; j >= 0; j--)\n            diffs.splice(pointer, 0, aa[j]);\n          pointer += aa.length;\n        }\n        countInsert = 0, countDelete = 0, textDelete = \"\", textInsert = \"\";\n        break;\n      default:\n        throw new Error(\"Unknown diff operation.\");\n    }\n    pointer++;\n  }\n  return diffs.pop(), diffs;\n}\nfunction computeDiff(text1, text2, opts) {\n  let diffs;\n  if (!text1)\n    return [[DIFF_INSERT, text2]];\n  if (!text2)\n    return [[DIFF_DELETE, text1]];\n  const longtext = text1.length > text2.length ? text1 : text2, shorttext = text1.length > text2.length ? text2 : text1, i = longtext.indexOf(shorttext);\n  if (i !== -1)\n    return diffs = [\n      [DIFF_INSERT, longtext.substring(0, i)],\n      [DIFF_EQUAL, shorttext],\n      [DIFF_INSERT, longtext.substring(i + shorttext.length)]\n    ], text1.length > text2.length && (diffs[0][0] = DIFF_DELETE, diffs[2][0] = DIFF_DELETE), diffs;\n  if (shorttext.length === 1)\n    return [\n      [DIFF_DELETE, text1],\n      [DIFF_INSERT, text2]\n    ];\n  const halfMatch = findHalfMatch(text1, text2);\n  if (halfMatch) {\n    const text1A = halfMatch[0], text1B = halfMatch[1], text2A = halfMatch[2], text2B = halfMatch[3], midCommon = halfMatch[4], diffsA = doDiff(text1A, text2A, opts), diffsB = doDiff(text1B, text2B, opts);\n    return diffsA.concat([[DIFF_EQUAL, midCommon]], diffsB);\n  }\n  return opts.checkLines && text1.length > 100 && text2.length > 100 ? doLineModeDiff(text1, text2, opts) : bisect(text1, text2, opts.deadline);\n}\nvar __defProp$2 = Object.defineProperty, __getOwnPropSymbols$2 = Object.getOwnPropertySymbols, __hasOwnProp$2 = Object.prototype.hasOwnProperty, __propIsEnum$2 = Object.prototype.propertyIsEnumerable, __defNormalProp$2 = (obj, key, value) => key in obj ? __defProp$2(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __spreadValues$2 = (a, b) => {\n  for (var prop in b || (b = {}))\n    __hasOwnProp$2.call(b, prop) && __defNormalProp$2(a, prop, b[prop]);\n  if (__getOwnPropSymbols$2)\n    for (var prop of __getOwnPropSymbols$2(b))\n      __propIsEnum$2.call(b, prop) && __defNormalProp$2(a, prop, b[prop]);\n  return a;\n};\nconst DIFF_DELETE = -1, DIFF_INSERT = 1, DIFF_EQUAL = 0;\nfunction diff(textA, textB, opts) {\n  if (textA === null || textB === null)\n    throw new Error(\"Null input. (diff)\");\n  const diffs = doDiff(textA, textB, createInternalOpts(opts || {}));\n  return adjustDiffForSurrogatePairs(diffs), diffs;\n}\nfunction doDiff(textA, textB, options) {\n  let text1 = textA, text2 = textB;\n  if (text1 === text2)\n    return text1 ? [[DIFF_EQUAL, text1]] : [];\n  let commonlength = getCommonPrefix(text1, text2);\n  const commonprefix = text1.substring(0, commonlength);\n  text1 = text1.substring(commonlength), text2 = text2.substring(commonlength), commonlength = getCommonSuffix(text1, text2);\n  const commonsuffix = text1.substring(text1.length - commonlength);\n  text1 = text1.substring(0, text1.length - commonlength), text2 = text2.substring(0, text2.length - commonlength);\n  let diffs = computeDiff(text1, text2, options);\n  return commonprefix && diffs.unshift([DIFF_EQUAL, commonprefix]), commonsuffix && diffs.push([DIFF_EQUAL, commonsuffix]), diffs = cleanupMerge(diffs), diffs;\n}\nfunction createDeadLine(timeout) {\n  let t = 1;\n  return typeof timeout < \"u\" && (t = timeout <= 0 ? Number.MAX_VALUE : timeout), Date.now() + t * 1e3;\n}\nfunction createInternalOpts(opts) {\n  return __spreadValues$2({\n    checkLines: !0,\n    deadline: createDeadLine(opts.timeout || 1)\n  }, opts);\n}\nfunction combineChar(data, char, dir) {\n  return dir === 1 ? data + char : char + data;\n}\nfunction splitChar(data, dir) {\n  return dir === 1 ? [data.substring(0, data.length - 1), data[data.length - 1]] : [data.substring(1), data[0]];\n}\nfunction hasSharedChar(diffs, i, j, dir) {\n  return dir === 1 ? diffs[i][1][diffs[i][1].length - 1] === diffs[j][1][diffs[j][1].length - 1] : diffs[i][1][0] === diffs[j][1][0];\n}\nfunction deisolateChar(diffs, i, dir) {\n  const inv = dir === 1 ? -1 : 1;\n  let insertIdx = null, deleteIdx = null, j = i + dir;\n  for (; j >= 0 && j < diffs.length && (insertIdx === null || deleteIdx === null); j += dir) {\n    const [op, text2] = diffs[j];\n    if (text2.length !== 0) {\n      if (op === DIFF_INSERT) {\n        insertIdx === null && (insertIdx = j);\n        continue;\n      } else if (op === DIFF_DELETE) {\n        deleteIdx === null && (deleteIdx = j);\n        continue;\n      } else if (op === DIFF_EQUAL) {\n        if (insertIdx === null && deleteIdx === null) {\n          const [rest, char2] = splitChar(diffs[i][1], dir);\n          diffs[i][1] = rest, diffs[j][1] = combineChar(diffs[j][1], char2, inv);\n          return;\n        }\n        break;\n      }\n    }\n  }\n  if (insertIdx !== null && deleteIdx !== null && hasSharedChar(diffs, insertIdx, deleteIdx, dir)) {\n    const [insertText, insertChar] = splitChar(diffs[insertIdx][1], inv), [deleteText] = splitChar(diffs[deleteIdx][1], inv);\n    diffs[insertIdx][1] = insertText, diffs[deleteIdx][1] = deleteText, diffs[i][1] = combineChar(diffs[i][1], insertChar, dir);\n    return;\n  }\n  const [text, char] = splitChar(diffs[i][1], dir);\n  diffs[i][1] = text, insertIdx === null ? (diffs.splice(j, 0, [DIFF_INSERT, char]), deleteIdx !== null && deleteIdx >= j && deleteIdx++) : diffs[insertIdx][1] = combineChar(diffs[insertIdx][1], char, inv), deleteIdx === null ? diffs.splice(j, 0, [DIFF_DELETE, char]) : diffs[deleteIdx][1] = combineChar(diffs[deleteIdx][1], char, inv);\n}\nfunction adjustDiffForSurrogatePairs(diffs) {\n  for (let i = 0; i < diffs.length; i++) {\n    const [diffType, diffText] = diffs[i];\n    if (diffText.length === 0) continue;\n    const firstChar = diffText[0], lastChar = diffText[diffText.length - 1];\n    isHighSurrogate(lastChar) && diffType === DIFF_EQUAL && deisolateChar(diffs, i, 1), isLowSurrogate(firstChar) && diffType === DIFF_EQUAL && deisolateChar(diffs, i, -1);\n  }\n  for (let i = 0; i < diffs.length; i++)\n    diffs[i][1].length === 0 && diffs.splice(i, 1);\n}\nfunction cleanupSemantic(rawDiffs) {\n  let diffs = rawDiffs.map((diff2) => cloneDiff(diff2)), hasChanges = !1;\n  const equalities = [];\n  let equalitiesLength = 0, lastEquality = null, pointer = 0, lengthInsertions1 = 0, lengthDeletions1 = 0, lengthInsertions2 = 0, lengthDeletions2 = 0;\n  for (; pointer < diffs.length; )\n    diffs[pointer][0] === DIFF_EQUAL ? (equalities[equalitiesLength++] = pointer, lengthInsertions1 = lengthInsertions2, lengthDeletions1 = lengthDeletions2, lengthInsertions2 = 0, lengthDeletions2 = 0, lastEquality = diffs[pointer][1]) : (diffs[pointer][0] === DIFF_INSERT ? lengthInsertions2 += diffs[pointer][1].length : lengthDeletions2 += diffs[pointer][1].length, lastEquality && lastEquality.length <= Math.max(lengthInsertions1, lengthDeletions1) && lastEquality.length <= Math.max(lengthInsertions2, lengthDeletions2) && (diffs.splice(equalities[equalitiesLength - 1], 0, [DIFF_DELETE, lastEquality]), diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT, equalitiesLength--, equalitiesLength--, pointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1, lengthInsertions1 = 0, lengthDeletions1 = 0, lengthInsertions2 = 0, lengthDeletions2 = 0, lastEquality = null, hasChanges = !0)), pointer++;\n  for (hasChanges && (diffs = cleanupMerge(diffs)), diffs = cleanupSemanticLossless(diffs), pointer = 1; pointer < diffs.length; ) {\n    if (diffs[pointer - 1][0] === DIFF_DELETE && diffs[pointer][0] === DIFF_INSERT) {\n      const deletion = diffs[pointer - 1][1], insertion = diffs[pointer][1], overlapLength1 = getCommonOverlap(deletion, insertion), overlapLength2 = getCommonOverlap(insertion, deletion);\n      overlapLength1 >= overlapLength2 ? (overlapLength1 >= deletion.length / 2 || overlapLength1 >= insertion.length / 2) && (diffs.splice(pointer, 0, [DIFF_EQUAL, insertion.substring(0, overlapLength1)]), diffs[pointer - 1][1] = deletion.substring(0, deletion.length - overlapLength1), diffs[pointer + 1][1] = insertion.substring(overlapLength1), pointer++) : (overlapLength2 >= deletion.length / 2 || overlapLength2 >= insertion.length / 2) && (diffs.splice(pointer, 0, [DIFF_EQUAL, deletion.substring(0, overlapLength2)]), diffs[pointer - 1][0] = DIFF_INSERT, diffs[pointer - 1][1] = insertion.substring(0, insertion.length - overlapLength2), diffs[pointer + 1][0] = DIFF_DELETE, diffs[pointer + 1][1] = deletion.substring(overlapLength2), pointer++), pointer++;\n    }\n    pointer++;\n  }\n  return diffs;\n}\nconst nonAlphaNumericRegex = /[^a-zA-Z0-9]/, whitespaceRegex = /\\s/, linebreakRegex = /[\\r\\n]/, blanklineEndRegex = /\\n\\r?\\n$/, blanklineStartRegex = /^\\r?\\n\\r?\\n/;\nfunction cleanupSemanticLossless(rawDiffs) {\n  const diffs = rawDiffs.map((diff2) => cloneDiff(diff2));\n  function diffCleanupSemanticScore(one, two) {\n    if (!one || !two)\n      return 6;\n    const char1 = one.charAt(one.length - 1), char2 = two.charAt(0), nonAlphaNumeric1 = char1.match(nonAlphaNumericRegex), nonAlphaNumeric2 = char2.match(nonAlphaNumericRegex), whitespace1 = nonAlphaNumeric1 && char1.match(whitespaceRegex), whitespace2 = nonAlphaNumeric2 && char2.match(whitespaceRegex), lineBreak1 = whitespace1 && char1.match(linebreakRegex), lineBreak2 = whitespace2 && char2.match(linebreakRegex), blankLine1 = lineBreak1 && one.match(blanklineEndRegex), blankLine2 = lineBreak2 && two.match(blanklineStartRegex);\n    return blankLine1 || blankLine2 ? 5 : lineBreak1 || lineBreak2 ? 4 : nonAlphaNumeric1 && !whitespace1 && whitespace2 ? 3 : whitespace1 || whitespace2 ? 2 : nonAlphaNumeric1 || nonAlphaNumeric2 ? 1 : 0;\n  }\n  let pointer = 1;\n  for (; pointer < diffs.length - 1; ) {\n    if (diffs[pointer - 1][0] === DIFF_EQUAL && diffs[pointer + 1][0] === DIFF_EQUAL) {\n      let equality1 = diffs[pointer - 1][1], edit = diffs[pointer][1], equality2 = diffs[pointer + 1][1];\n      const commonOffset = getCommonSuffix(equality1, edit);\n      if (commonOffset) {\n        const commonString = edit.substring(edit.length - commonOffset);\n        equality1 = equality1.substring(0, equality1.length - commonOffset), edit = commonString + edit.substring(0, edit.length - commonOffset), equality2 = commonString + equality2;\n      }\n      let bestEquality1 = equality1, bestEdit = edit, bestEquality2 = equality2, bestScore = diffCleanupSemanticScore(equality1, edit) + diffCleanupSemanticScore(edit, equality2);\n      for (; edit.charAt(0) === equality2.charAt(0); ) {\n        equality1 += edit.charAt(0), edit = edit.substring(1) + equality2.charAt(0), equality2 = equality2.substring(1);\n        const score = diffCleanupSemanticScore(equality1, edit) + diffCleanupSemanticScore(edit, equality2);\n        score >= bestScore && (bestScore = score, bestEquality1 = equality1, bestEdit = edit, bestEquality2 = equality2);\n      }\n      diffs[pointer - 1][1] !== bestEquality1 && (bestEquality1 ? diffs[pointer - 1][1] = bestEquality1 : (diffs.splice(pointer - 1, 1), pointer--), diffs[pointer][1] = bestEdit, bestEquality2 ? diffs[pointer + 1][1] = bestEquality2 : (diffs.splice(pointer + 1, 1), pointer--));\n    }\n    pointer++;\n  }\n  return diffs;\n}\nfunction cleanupMerge(rawDiffs) {\n  let diffs = rawDiffs.map((diff2) => cloneDiff(diff2));\n  diffs.push([DIFF_EQUAL, \"\"]);\n  let pointer = 0, countDelete = 0, countInsert = 0, textDelete = \"\", textInsert = \"\", commonlength;\n  for (; pointer < diffs.length; )\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        countInsert++, textInsert += diffs[pointer][1], pointer++;\n        break;\n      case DIFF_DELETE:\n        countDelete++, textDelete += diffs[pointer][1], pointer++;\n        break;\n      case DIFF_EQUAL:\n        countDelete + countInsert > 1 ? (countDelete !== 0 && countInsert !== 0 && (commonlength = getCommonPrefix(textInsert, textDelete), commonlength !== 0 && (pointer - countDelete - countInsert > 0 && diffs[pointer - countDelete - countInsert - 1][0] === DIFF_EQUAL ? diffs[pointer - countDelete - countInsert - 1][1] += textInsert.substring(\n          0,\n          commonlength\n        ) : (diffs.splice(0, 0, [DIFF_EQUAL, textInsert.substring(0, commonlength)]), pointer++), textInsert = textInsert.substring(commonlength), textDelete = textDelete.substring(commonlength)), commonlength = getCommonSuffix(textInsert, textDelete), commonlength !== 0 && (diffs[pointer][1] = textInsert.substring(textInsert.length - commonlength) + diffs[pointer][1], textInsert = textInsert.substring(0, textInsert.length - commonlength), textDelete = textDelete.substring(0, textDelete.length - commonlength))), pointer -= countDelete + countInsert, diffs.splice(pointer, countDelete + countInsert), textDelete.length && (diffs.splice(pointer, 0, [DIFF_DELETE, textDelete]), pointer++), textInsert.length && (diffs.splice(pointer, 0, [DIFF_INSERT, textInsert]), pointer++), pointer++) : pointer !== 0 && diffs[pointer - 1][0] === DIFF_EQUAL ? (diffs[pointer - 1][1] += diffs[pointer][1], diffs.splice(pointer, 1)) : pointer++, countInsert = 0, countDelete = 0, textDelete = \"\", textInsert = \"\";\n        break;\n      default:\n        throw new Error(\"Unknown diff operation\");\n    }\n  diffs[diffs.length - 1][1] === \"\" && diffs.pop();\n  let hasChanges = !1;\n  for (pointer = 1; pointer < diffs.length - 1; )\n    diffs[pointer - 1][0] === DIFF_EQUAL && diffs[pointer + 1][0] === DIFF_EQUAL && (diffs[pointer][1].substring(diffs[pointer][1].length - diffs[pointer - 1][1].length) === diffs[pointer - 1][1] ? (diffs[pointer][1] = diffs[pointer - 1][1] + diffs[pointer][1].substring(0, diffs[pointer][1].length - diffs[pointer - 1][1].length), diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1], diffs.splice(pointer - 1, 1), hasChanges = !0) : diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) === diffs[pointer + 1][1] && (diffs[pointer - 1][1] += diffs[pointer + 1][1], diffs[pointer][1] = diffs[pointer][1].substring(diffs[pointer + 1][1].length) + diffs[pointer + 1][1], diffs.splice(pointer + 1, 1), hasChanges = !0)), pointer++;\n  return hasChanges && (diffs = cleanupMerge(diffs)), diffs;\n}\nfunction trueCount(...args) {\n  return args.reduce((n, bool) => n + (bool ? 1 : 0), 0);\n}\nfunction cleanupEfficiency(rawDiffs, editCost = 4) {\n  let diffs = rawDiffs.map((diff2) => cloneDiff(diff2)), hasChanges = !1;\n  const equalities = [];\n  let equalitiesLength = 0, lastEquality = null, pointer = 0, preIns = !1, preDel = !1, postIns = !1, postDel = !1;\n  for (; pointer < diffs.length; )\n    diffs[pointer][0] === DIFF_EQUAL ? (diffs[pointer][1].length < editCost && (postIns || postDel) ? (equalities[equalitiesLength++] = pointer, preIns = postIns, preDel = postDel, lastEquality = diffs[pointer][1]) : (equalitiesLength = 0, lastEquality = null), postIns = !1, postDel = !1) : (diffs[pointer][0] === DIFF_DELETE ? postDel = !0 : postIns = !0, lastEquality && (preIns && preDel && postIns && postDel || lastEquality.length < editCost / 2 && trueCount(preIns, preDel, postIns, postDel) === 3) && (diffs.splice(equalities[equalitiesLength - 1], 0, [DIFF_DELETE, lastEquality]), diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT, equalitiesLength--, lastEquality = null, preIns && preDel ? (postIns = !0, postDel = !0, equalitiesLength = 0) : (equalitiesLength--, pointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1, postIns = !1, postDel = !1), hasChanges = !0)), pointer++;\n  return hasChanges && (diffs = cleanupMerge(diffs)), diffs;\n}\nvar __defProp$1 = Object.defineProperty, __getOwnPropSymbols$1 = Object.getOwnPropertySymbols, __hasOwnProp$1 = Object.prototype.hasOwnProperty, __propIsEnum$1 = Object.prototype.propertyIsEnumerable, __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __spreadValues$1 = (a, b) => {\n  for (var prop in b || (b = {}))\n    __hasOwnProp$1.call(b, prop) && __defNormalProp$1(a, prop, b[prop]);\n  if (__getOwnPropSymbols$1)\n    for (var prop of __getOwnPropSymbols$1(b))\n      __propIsEnum$1.call(b, prop) && __defNormalProp$1(a, prop, b[prop]);\n  return a;\n};\nconst DEFAULT_OPTIONS = {\n  /**\n   * At what point is no match declared (0.0 = perfection, 1.0 = very loose).\n   */\n  threshold: 0.5,\n  /**\n   * How far to search for a match (0 = exact location, 1000+ = broad match).\n   * A match this many characters away from the expected location will add\n   * 1.0 to the score (0.0 is a perfect match).\n   */\n  distance: 1e3\n};\nfunction applyDefaults(options) {\n  return __spreadValues$1(__spreadValues$1({}, DEFAULT_OPTIONS), options);\n}\nconst MAX_BITS$1 = 32;\nfunction bitap(text, pattern, loc, opts = {}) {\n  if (pattern.length > MAX_BITS$1)\n    throw new Error(\"Pattern too long for this browser.\");\n  const options = applyDefaults(opts), s = getAlphabetFromPattern(pattern);\n  function getBitapScore(e, x) {\n    const accuracy = e / pattern.length, proximity = Math.abs(loc - x);\n    return options.distance ? accuracy + proximity / options.distance : proximity ? 1 : accuracy;\n  }\n  let scoreThreshold = options.threshold, bestLoc = text.indexOf(pattern, loc);\n  bestLoc !== -1 && (scoreThreshold = Math.min(getBitapScore(0, bestLoc), scoreThreshold), bestLoc = text.lastIndexOf(pattern, loc + pattern.length), bestLoc !== -1 && (scoreThreshold = Math.min(getBitapScore(0, bestLoc), scoreThreshold)));\n  const matchmask = 1 << pattern.length - 1;\n  bestLoc = -1;\n  let binMin, binMid, binMax = pattern.length + text.length, lastRd = [];\n  for (let d = 0; d < pattern.length; d++) {\n    for (binMin = 0, binMid = binMax; binMin < binMid; )\n      getBitapScore(d, loc + binMid) <= scoreThreshold ? binMin = binMid : binMax = binMid, binMid = Math.floor((binMax - binMin) / 2 + binMin);\n    binMax = binMid;\n    let start = Math.max(1, loc - binMid + 1);\n    const finish = Math.min(loc + binMid, text.length) + pattern.length, rd = new Array(finish + 2);\n    rd[finish + 1] = (1 << d) - 1;\n    for (let j = finish; j >= start; j--) {\n      const charMatch = s[text.charAt(j - 1)];\n      if (d === 0 ? rd[j] = (rd[j + 1] << 1 | 1) & charMatch : rd[j] = (rd[j + 1] << 1 | 1) & charMatch | ((lastRd[j + 1] | lastRd[j]) << 1 | 1) | lastRd[j + 1], rd[j] & matchmask) {\n        const score = getBitapScore(d, j - 1);\n        if (score <= scoreThreshold)\n          if (scoreThreshold = score, bestLoc = j - 1, bestLoc > loc)\n            start = Math.max(1, 2 * loc - bestLoc);\n          else\n            break;\n      }\n    }\n    if (getBitapScore(d + 1, loc) > scoreThreshold)\n      break;\n    lastRd = rd;\n  }\n  return bestLoc;\n}\nfunction getAlphabetFromPattern(pattern) {\n  const s = {};\n  for (let i = 0; i < pattern.length; i++)\n    s[pattern.charAt(i)] = 0;\n  for (let i = 0; i < pattern.length; i++)\n    s[pattern.charAt(i)] |= 1 << pattern.length - i - 1;\n  return s;\n}\nfunction match(text, pattern, searchLocation) {\n  if (text === null || pattern === null || searchLocation === null)\n    throw new Error(\"Null input. (match())\");\n  const loc = Math.max(0, Math.min(searchLocation, text.length));\n  if (text === pattern)\n    return 0;\n  if (text.length) {\n    if (text.substring(loc, loc + pattern.length) === pattern)\n      return loc;\n  } else return -1;\n  return bitap(text, pattern, loc);\n}\nfunction diffText1(diffs) {\n  const text = [];\n  for (let x = 0; x < diffs.length; x++)\n    diffs[x][0] !== DIFF_INSERT && (text[x] = diffs[x][1]);\n  return text.join(\"\");\n}\nfunction diffText2(diffs) {\n  const text = [];\n  for (let x = 0; x < diffs.length; x++)\n    diffs[x][0] !== DIFF_DELETE && (text[x] = diffs[x][1]);\n  return text.join(\"\");\n}\nfunction levenshtein(diffs) {\n  let leven = 0, insertions = 0, deletions = 0;\n  for (let x = 0; x < diffs.length; x++) {\n    const op = diffs[x][0], data = diffs[x][1];\n    switch (op) {\n      case DIFF_INSERT:\n        insertions += data.length;\n        break;\n      case DIFF_DELETE:\n        deletions += data.length;\n        break;\n      case DIFF_EQUAL:\n        leven += Math.max(insertions, deletions), insertions = 0, deletions = 0;\n        break;\n      default:\n        throw new Error(\"Unknown diff operation.\");\n    }\n  }\n  return leven += Math.max(insertions, deletions), leven;\n}\nfunction xIndex(diffs, loc) {\n  let chars1 = 0, chars2 = 0, lastChars1 = 0, lastChars2 = 0, x;\n  for (x = 0; x < diffs.length && (diffs[x][0] !== DIFF_INSERT && (chars1 += diffs[x][1].length), diffs[x][0] !== DIFF_DELETE && (chars2 += diffs[x][1].length), !(chars1 > loc)); x++)\n    lastChars1 = chars1, lastChars2 = chars2;\n  return diffs.length !== x && diffs[x][0] === DIFF_DELETE ? lastChars2 : lastChars2 + (loc - lastChars1);\n}\nfunction countUtf8Bytes(str) {\n  let bytes = 0;\n  for (let i = 0; i < str.length; i++) {\n    const codePoint = str.codePointAt(i);\n    if (typeof codePoint > \"u\")\n      throw new Error(\"Failed to get codepoint\");\n    bytes += utf8len(codePoint);\n  }\n  return bytes;\n}\nfunction adjustIndiciesToUcs2(patches, base, options = {}) {\n  let byteOffset = 0, idx = 0;\n  function advanceTo(target) {\n    for (; byteOffset < target; ) {\n      const codePoint = base.codePointAt(idx);\n      if (typeof codePoint > \"u\")\n        return idx;\n      byteOffset += utf8len(codePoint), codePoint > 65535 ? idx += 2 : idx += 1;\n    }\n    if (!options.allowExceedingIndices && byteOffset !== target)\n      throw new Error(\"Failed to determine byte offset\");\n    return idx;\n  }\n  const adjusted = [];\n  for (const patch of patches)\n    adjusted.push({\n      diffs: patch.diffs.map((diff2) => cloneDiff(diff2)),\n      start1: advanceTo(patch.start1),\n      start2: advanceTo(patch.start2),\n      utf8Start1: patch.utf8Start1,\n      utf8Start2: patch.utf8Start2,\n      length1: patch.length1,\n      length2: patch.length2,\n      utf8Length1: patch.utf8Length1,\n      utf8Length2: patch.utf8Length2\n    });\n  return adjusted;\n}\nfunction utf8len(codePoint) {\n  return codePoint <= 127 ? 1 : codePoint <= 2047 ? 2 : codePoint <= 65535 ? 3 : 4;\n}\nconst MAX_BITS = 32, DEFAULT_MARGIN = 4;\nfunction addPadding(patches, margin = DEFAULT_MARGIN) {\n  const paddingLength = margin;\n  let nullPadding = \"\";\n  for (let x = 1; x <= paddingLength; x++)\n    nullPadding += String.fromCharCode(x);\n  for (const p of patches)\n    p.start1 += paddingLength, p.start2 += paddingLength, p.utf8Start1 += paddingLength, p.utf8Start2 += paddingLength;\n  let patch = patches[0], diffs = patch.diffs;\n  if (diffs.length === 0 || diffs[0][0] !== DIFF_EQUAL)\n    diffs.unshift([DIFF_EQUAL, nullPadding]), patch.start1 -= paddingLength, patch.start2 -= paddingLength, patch.utf8Start1 -= paddingLength, patch.utf8Start2 -= paddingLength, patch.length1 += paddingLength, patch.length2 += paddingLength, patch.utf8Length1 += paddingLength, patch.utf8Length2 += paddingLength;\n  else if (paddingLength > diffs[0][1].length) {\n    const firstDiffLength = diffs[0][1].length, extraLength = paddingLength - firstDiffLength;\n    diffs[0][1] = nullPadding.substring(firstDiffLength) + diffs[0][1], patch.start1 -= extraLength, patch.start2 -= extraLength, patch.utf8Start1 -= extraLength, patch.utf8Start2 -= extraLength, patch.length1 += extraLength, patch.length2 += extraLength, patch.utf8Length1 += extraLength, patch.utf8Length2 += extraLength;\n  }\n  if (patch = patches[patches.length - 1], diffs = patch.diffs, diffs.length === 0 || diffs[diffs.length - 1][0] !== DIFF_EQUAL)\n    diffs.push([DIFF_EQUAL, nullPadding]), patch.length1 += paddingLength, patch.length2 += paddingLength, patch.utf8Length1 += paddingLength, patch.utf8Length2 += paddingLength;\n  else if (paddingLength > diffs[diffs.length - 1][1].length) {\n    const extraLength = paddingLength - diffs[diffs.length - 1][1].length;\n    diffs[diffs.length - 1][1] += nullPadding.substring(0, extraLength), patch.length1 += extraLength, patch.length2 += extraLength, patch.utf8Length1 += extraLength, patch.utf8Length2 += extraLength;\n  }\n  return nullPadding;\n}\nfunction createPatchObject(start1, start2) {\n  return {\n    diffs: [],\n    start1,\n    start2,\n    utf8Start1: start1,\n    utf8Start2: start2,\n    length1: 0,\n    length2: 0,\n    utf8Length1: 0,\n    utf8Length2: 0\n  };\n}\nfunction splitMax(patches, margin = DEFAULT_MARGIN) {\n  const patchSize = MAX_BITS;\n  for (let x = 0; x < patches.length; x++) {\n    if (patches[x].length1 <= patchSize)\n      continue;\n    const bigpatch = patches[x];\n    patches.splice(x--, 1);\n    let start1 = bigpatch.start1, start2 = bigpatch.start2, preContext = \"\";\n    for (; bigpatch.diffs.length !== 0; ) {\n      const patch = createPatchObject(start1 - preContext.length, start2 - preContext.length);\n      let empty = !0;\n      if (preContext !== \"\") {\n        const precontextByteCount = countUtf8Bytes(preContext);\n        patch.length1 = preContext.length, patch.utf8Length1 = precontextByteCount, patch.length2 = preContext.length, patch.utf8Length2 = precontextByteCount, patch.diffs.push([DIFF_EQUAL, preContext]);\n      }\n      for (; bigpatch.diffs.length !== 0 && patch.length1 < patchSize - margin; ) {\n        const diffType = bigpatch.diffs[0][0];\n        let diffText = bigpatch.diffs[0][1], diffTextByteCount = countUtf8Bytes(diffText);\n        if (diffType === DIFF_INSERT) {\n          patch.length2 += diffText.length, patch.utf8Length2 += diffTextByteCount, start2 += diffText.length;\n          const diff2 = bigpatch.diffs.shift();\n          diff2 && patch.diffs.push(diff2), empty = !1;\n        } else diffType === DIFF_DELETE && patch.diffs.length === 1 && patch.diffs[0][0] === DIFF_EQUAL && diffText.length > 2 * patchSize ? (patch.length1 += diffText.length, patch.utf8Length1 += diffTextByteCount, start1 += diffText.length, empty = !1, patch.diffs.push([diffType, diffText]), bigpatch.diffs.shift()) : (diffText = diffText.substring(0, patchSize - patch.length1 - margin), diffTextByteCount = countUtf8Bytes(diffText), patch.length1 += diffText.length, patch.utf8Length1 += diffTextByteCount, start1 += diffText.length, diffType === DIFF_EQUAL ? (patch.length2 += diffText.length, patch.utf8Length2 += diffTextByteCount, start2 += diffText.length) : empty = !1, patch.diffs.push([diffType, diffText]), diffText === bigpatch.diffs[0][1] ? bigpatch.diffs.shift() : bigpatch.diffs[0][1] = bigpatch.diffs[0][1].substring(diffText.length));\n      }\n      preContext = diffText2(patch.diffs), preContext = preContext.substring(preContext.length - margin);\n      const postContext = diffText1(bigpatch.diffs).substring(0, margin), postContextByteCount = countUtf8Bytes(postContext);\n      postContext !== \"\" && (patch.length1 += postContext.length, patch.length2 += postContext.length, patch.utf8Length1 += postContextByteCount, patch.utf8Length2 += postContextByteCount, patch.diffs.length !== 0 && patch.diffs[patch.diffs.length - 1][0] === DIFF_EQUAL ? patch.diffs[patch.diffs.length - 1][1] += postContext : patch.diffs.push([DIFF_EQUAL, postContext])), empty || patches.splice(++x, 0, patch);\n    }\n  }\n}\nfunction apply(patches, originalText, opts = {}) {\n  if (typeof patches == \"string\")\n    throw new Error(\"Patches must be an array - pass the patch to `parsePatch()` first\");\n  let text = originalText;\n  if (patches.length === 0)\n    return [text, []];\n  const parsed = adjustIndiciesToUcs2(patches, text, {\n    allowExceedingIndices: opts.allowExceedingIndices\n  }), margin = opts.margin || DEFAULT_MARGIN, deleteThreshold = opts.deleteThreshold || 0.4, nullPadding = addPadding(parsed, margin);\n  text = nullPadding + text + nullPadding, splitMax(parsed, margin);\n  let delta = 0;\n  const results = [];\n  for (let x = 0; x < parsed.length; x++) {\n    const expectedLoc = parsed[x].start2 + delta, text1 = diffText1(parsed[x].diffs);\n    let startLoc, endLoc = -1;\n    if (text1.length > MAX_BITS ? (startLoc = match(text, text1.substring(0, MAX_BITS), expectedLoc), startLoc !== -1 && (endLoc = match(\n      text,\n      text1.substring(text1.length - MAX_BITS),\n      expectedLoc + text1.length - MAX_BITS\n    ), (endLoc === -1 || startLoc >= endLoc) && (startLoc = -1))) : startLoc = match(text, text1, expectedLoc), startLoc === -1)\n      results[x] = !1, delta -= parsed[x].length2 - parsed[x].length1;\n    else {\n      results[x] = !0, delta = startLoc - expectedLoc;\n      let text2;\n      if (endLoc === -1 ? text2 = text.substring(startLoc, startLoc + text1.length) : text2 = text.substring(startLoc, endLoc + MAX_BITS), text1 === text2)\n        text = text.substring(0, startLoc) + diffText2(parsed[x].diffs) + text.substring(startLoc + text1.length);\n      else {\n        let diffs = diff(text1, text2, { checkLines: !1 });\n        if (text1.length > MAX_BITS && levenshtein(diffs) / text1.length > deleteThreshold)\n          results[x] = !1;\n        else {\n          diffs = cleanupSemanticLossless(diffs);\n          let index1 = 0, index2 = 0;\n          for (let y = 0; y < parsed[x].diffs.length; y++) {\n            const mod = parsed[x].diffs[y];\n            mod[0] !== DIFF_EQUAL && (index2 = xIndex(diffs, index1)), mod[0] === DIFF_INSERT ? text = text.substring(0, startLoc + index2) + mod[1] + text.substring(startLoc + index2) : mod[0] === DIFF_DELETE && (text = text.substring(0, startLoc + index2) + text.substring(startLoc + xIndex(diffs, index1 + mod[1].length))), mod[0] !== DIFF_DELETE && (index1 += mod[1].length);\n          }\n        }\n      }\n    }\n  }\n  return text = text.substring(nullPadding.length, text.length - nullPadding.length), [text, results];\n}\nvar __defProp = Object.defineProperty, __getOwnPropSymbols = Object.getOwnPropertySymbols, __hasOwnProp = Object.prototype.hasOwnProperty, __propIsEnum = Object.prototype.propertyIsEnumerable, __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    __hasOwnProp.call(b, prop) && __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b))\n      __propIsEnum.call(b, prop) && __defNormalProp(a, prop, b[prop]);\n  return a;\n};\nconst DEFAULT_OPTS = {\n  margin: 4\n};\nfunction getDefaultOpts(opts = {}) {\n  return __spreadValues(__spreadValues({}, DEFAULT_OPTS), opts);\n}\nfunction make(a, b, options) {\n  if (typeof a == \"string\" && typeof b == \"string\") {\n    let diffs = diff(a, b, { checkLines: !0 });\n    return diffs.length > 2 && (diffs = cleanupSemantic(diffs), diffs = cleanupEfficiency(diffs)), _make(a, diffs, getDefaultOpts(options));\n  }\n  if (a && Array.isArray(a) && typeof b > \"u\")\n    return _make(diffText1(a), a, getDefaultOpts(options));\n  if (typeof a == \"string\" && b && Array.isArray(b))\n    return _make(a, b, getDefaultOpts(options));\n  throw new Error(\"Unknown call format to make()\");\n}\nfunction _make(textA, diffs, options) {\n  if (diffs.length === 0)\n    return [];\n  const patches = [];\n  let patch = createPatchObject(0, 0), patchDiffLength = 0, charCount1 = 0, charCount2 = 0, utf8Count1 = 0, utf8Count2 = 0, prepatchText = textA, postpatchText = textA;\n  for (let x = 0; x < diffs.length; x++) {\n    const currentDiff = diffs[x], [diffType, diffText] = currentDiff, diffTextLength = diffText.length, diffByteLength = countUtf8Bytes(diffText);\n    switch (!patchDiffLength && diffType !== DIFF_EQUAL && (patch.start1 = charCount1, patch.start2 = charCount2, patch.utf8Start1 = utf8Count1, patch.utf8Start2 = utf8Count2), diffType) {\n      case DIFF_INSERT:\n        patch.diffs[patchDiffLength++] = currentDiff, patch.length2 += diffTextLength, patch.utf8Length2 += diffByteLength, postpatchText = postpatchText.substring(0, charCount2) + diffText + postpatchText.substring(charCount2);\n        break;\n      case DIFF_DELETE:\n        patch.length1 += diffTextLength, patch.utf8Length1 += diffByteLength, patch.diffs[patchDiffLength++] = currentDiff, postpatchText = postpatchText.substring(0, charCount2) + postpatchText.substring(charCount2 + diffTextLength);\n        break;\n      case DIFF_EQUAL:\n        diffTextLength <= 2 * options.margin && patchDiffLength && diffs.length !== x + 1 ? (patch.diffs[patchDiffLength++] = currentDiff, patch.length1 += diffTextLength, patch.length2 += diffTextLength, patch.utf8Length1 += diffByteLength, patch.utf8Length2 += diffByteLength) : diffTextLength >= 2 * options.margin && patchDiffLength && (addContext(patch, prepatchText, options), patches.push(patch), patch = createPatchObject(-1, -1), patchDiffLength = 0, prepatchText = postpatchText, charCount1 = charCount2, utf8Count1 = utf8Count2);\n        break;\n      default:\n        throw new Error(\"Unknown diff type\");\n    }\n    diffType !== DIFF_INSERT && (charCount1 += diffTextLength, utf8Count1 += diffByteLength), diffType !== DIFF_DELETE && (charCount2 += diffTextLength, utf8Count2 += diffByteLength);\n  }\n  return patchDiffLength && (addContext(patch, prepatchText, options), patches.push(patch)), patches;\n}\nfunction addContext(patch, text, opts) {\n  if (text.length === 0)\n    return;\n  let pattern = text.substring(patch.start2, patch.start2 + patch.length1), padding = 0;\n  for (; text.indexOf(pattern) !== text.lastIndexOf(pattern) && pattern.length < MAX_BITS - opts.margin - opts.margin; )\n    padding += opts.margin, pattern = text.substring(patch.start2 - padding, patch.start2 + patch.length1 + padding);\n  padding += opts.margin;\n  let prefixStart = patch.start2 - padding;\n  prefixStart >= 1 && isLowSurrogate(text[prefixStart]) && prefixStart--;\n  const prefix = text.substring(prefixStart, patch.start2);\n  prefix && patch.diffs.unshift([DIFF_EQUAL, prefix]);\n  const prefixLength = prefix.length, prefixUtf8Length = countUtf8Bytes(prefix);\n  let suffixEnd = patch.start2 + patch.length1 + padding;\n  suffixEnd < text.length && isLowSurrogate(text[suffixEnd]) && suffixEnd++;\n  const suffix = text.substring(patch.start2 + patch.length1, suffixEnd);\n  suffix && patch.diffs.push([DIFF_EQUAL, suffix]);\n  const suffixLength = suffix.length, suffixUtf8Length = countUtf8Bytes(suffix);\n  patch.start1 -= prefixLength, patch.start2 -= prefixLength, patch.utf8Start1 -= prefixUtf8Length, patch.utf8Start2 -= prefixUtf8Length, patch.length1 += prefixLength + suffixLength, patch.length2 += prefixLength + suffixLength, patch.utf8Length1 += prefixUtf8Length + suffixUtf8Length, patch.utf8Length2 += prefixUtf8Length + suffixUtf8Length;\n}\nconst patchHeader = /^@@ -(\\d+),?(\\d*) \\+(\\d+),?(\\d*) @@$/;\nfunction parse(textline) {\n  if (!textline)\n    return [];\n  const patches = [], lines = textline.split(`\n`);\n  let textPointer = 0;\n  for (; textPointer < lines.length; ) {\n    const m = lines[textPointer].match(patchHeader);\n    if (!m)\n      throw new Error(`Invalid patch string: ${lines[textPointer]}`);\n    const patch = createPatchObject(toInt(m[1]), toInt(m[3]));\n    for (patches.push(patch), m[2] === \"\" ? (patch.start1--, patch.utf8Start1--, patch.length1 = 1, patch.utf8Length1 = 1) : m[2] === \"0\" ? (patch.length1 = 0, patch.utf8Length1 = 0) : (patch.start1--, patch.utf8Start1--, patch.utf8Length1 = toInt(m[2]), patch.length1 = patch.utf8Length1), m[4] === \"\" ? (patch.start2--, patch.utf8Start2--, patch.length2 = 1, patch.utf8Length2 = 1) : m[4] === \"0\" ? (patch.length2 = 0, patch.utf8Length2 = 0) : (patch.start2--, patch.utf8Start2--, patch.utf8Length2 = toInt(m[4]), patch.length2 = patch.utf8Length2), textPointer++; textPointer < lines.length; ) {\n      const currentLine = lines[textPointer], sign = currentLine.charAt(0);\n      if (sign === \"@\")\n        break;\n      if (sign === \"\") {\n        textPointer++;\n        continue;\n      }\n      let line;\n      try {\n        line = decodeURI(currentLine.slice(1));\n      } catch (ex) {\n        throw new Error(`Illegal escape in parse: ${currentLine}`);\n      }\n      const utf8Diff = countUtf8Bytes(line) - line.length;\n      if (sign === \"-\")\n        patch.diffs.push([DIFF_DELETE, line]), patch.length1 -= utf8Diff;\n      else if (sign === \"+\")\n        patch.diffs.push([DIFF_INSERT, line]), patch.length2 -= utf8Diff;\n      else if (sign === \" \")\n        patch.diffs.push([DIFF_EQUAL, line]), patch.length1 -= utf8Diff, patch.length2 -= utf8Diff;\n      else\n        throw new Error(`Invalid patch mode \"${sign}\" in: ${line}`);\n      textPointer++;\n    }\n  }\n  return patches;\n}\nfunction toInt(num) {\n  return parseInt(num, 10);\n}\nfunction stringify(patches) {\n  return patches.map(stringifyPatch).join(\"\");\n}\nfunction stringifyPatch(patch) {\n  const { utf8Length1, utf8Length2, utf8Start1, utf8Start2, diffs } = patch;\n  let coords1;\n  utf8Length1 === 0 ? coords1 = `${utf8Start1},0` : utf8Length1 === 1 ? coords1 = `${utf8Start1 + 1}` : coords1 = `${utf8Start1 + 1},${utf8Length1}`;\n  let coords2;\n  utf8Length2 === 0 ? coords2 = `${utf8Start2},0` : utf8Length2 === 1 ? coords2 = `${utf8Start2 + 1}` : coords2 = `${utf8Start2 + 1},${utf8Length2}`;\n  const text = [`@@ -${coords1} +${coords2} @@\n`];\n  let op;\n  for (let x = 0; x < diffs.length; x++) {\n    switch (diffs[x][0]) {\n      case DIFF_INSERT:\n        op = \"+\";\n        break;\n      case DIFF_DELETE:\n        op = \"-\";\n        break;\n      case DIFF_EQUAL:\n        op = \" \";\n        break;\n      default:\n        throw new Error(\"Unknown patch operation.\");\n    }\n    text[x + 1] = `${op + encodeURI(diffs[x][1])}\n`;\n  }\n  return text.join(\"\").replace(/%20/g, \" \");\n}\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/diff-match-patch/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/next-loader/dist/_chunks-es/PresentationComlink.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@sanity/next-loader/dist/_chunks-es/PresentationComlink.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ PresentationComlink)\n/* harmony export */ });\n/* harmony import */ var _sanity_comlink__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sanity/comlink */ \"(ssr)/./node_modules/@sanity/next-loader/node_modules/@sanity/comlink/dist/index.js\");\n/* harmony import */ var _sanity_next_loader_server_actions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sanity/next-loader/server-actions */ \"(ssr)/./node_modules/@sanity/next-loader/dist/server-actions.js\");\n/* harmony import */ var _sanity_presentation_comlink__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sanity/presentation-comlink */ \"(ssr)/./node_modules/@sanity/presentation-comlink/dist/index.js\");\n/* harmony import */ var next_navigation_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/navigation.js */ \"(ssr)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var use_effect_event__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! use-effect-event */ \"(ssr)/./node_modules/use-effect-event/dist/index.js\");\n/* harmony import */ var _context_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./context.js */ \"(ssr)/./node_modules/@sanity/next-loader/dist/_chunks-es/context.js\");\n\n\n\n\n\n\n\nfunction PresentationComlink(props) {\n  const { draftModeEnabled, draftModePerspective } = props, router = (0,next_navigation_js__WEBPACK_IMPORTED_MODULE_0__.useRouter)(), handlePerspectiveChange = (0,use_effect_event__WEBPACK_IMPORTED_MODULE_2__.useEffectEvent)(\n    (perspective, signal) => {\n      draftModeEnabled && perspective !== draftModePerspective && (0,_sanity_next_loader_server_actions__WEBPACK_IMPORTED_MODULE_3__.setPerspectiveCookie)(perspective).then(() => {\n        signal.aborted || router.refresh();\n      }).catch((reason) => console.error(\"Failed to set the preview perspective cookie\", reason));\n    }\n  );\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    const comlink = (0,_sanity_comlink__WEBPACK_IMPORTED_MODULE_4__.createNode)(\n      {\n        name: \"loaders\",\n        connectTo: \"presentation\"\n      },\n      (0,_sanity_comlink__WEBPACK_IMPORTED_MODULE_4__.createNodeMachine)().provide({\n        actors: (0,_sanity_presentation_comlink__WEBPACK_IMPORTED_MODULE_5__.createCompatibilityActors)()\n      })\n    );\n    let controller;\n    comlink.on(\"loader/perspective\", (data) => {\n      controller?.abort(), controller = new AbortController(), handlePerspectiveChange(data.perspective, controller.signal);\n    });\n    const stop = comlink.start();\n    return (0,_context_js__WEBPACK_IMPORTED_MODULE_6__.setComlink)(comlink), () => {\n      stop();\n    };\n  }, [handlePerspectiveChange]), null;\n}\nPresentationComlink.displayName = \"PresentationComlink\";\n\n//# sourceMappingURL=PresentationComlink.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9uZXh0LWxvYWRlci9kaXN0L19jaHVua3MtZXMvUHJlc2VudGF0aW9uQ29tbGluay5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFnRTtBQUNVO0FBQ0Q7QUFDMUI7QUFDYjtBQUNnQjtBQUNSO0FBQzFDO0FBQ0EsVUFBVSx5Q0FBeUMsa0JBQWtCLDZEQUFTLDhCQUE4QixnRUFBYztBQUMxSDtBQUNBLGtFQUFrRSx3RkFBb0I7QUFDdEY7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLFNBQVMsZ0RBQVM7QUFDbEIsb0JBQW9CLDJEQUFVO0FBQzlCO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxNQUFNLGtFQUFpQjtBQUN2QixnQkFBZ0IsdUZBQXlCO0FBQ3pDLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLFdBQVcsdURBQVU7QUFDckI7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBR0U7QUFDRiIsInNvdXJjZXMiOlsiL21lZGlhL2F3YWlzL05ldyBWb2x1bWUvR292ZXJOT3IgSG91c2UgL2hhY2thdGhvbi0zL3NlY29uZFRpbWVzL2hhY2thdGhvbi1iYW5kYWdlL25vZGVfbW9kdWxlcy9Ac2FuaXR5L25leHQtbG9hZGVyL2Rpc3QvX2NodW5rcy1lcy9QcmVzZW50YXRpb25Db21saW5rLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZU5vZGUsIGNyZWF0ZU5vZGVNYWNoaW5lIH0gZnJvbSBcIkBzYW5pdHkvY29tbGlua1wiO1xuaW1wb3J0IHsgc2V0UGVyc3BlY3RpdmVDb29raWUgfSBmcm9tIFwiQHNhbml0eS9uZXh0LWxvYWRlci9zZXJ2ZXItYWN0aW9uc1wiO1xuaW1wb3J0IHsgY3JlYXRlQ29tcGF0aWJpbGl0eUFjdG9ycyB9IGZyb20gXCJAc2FuaXR5L3ByZXNlbnRhdGlvbi1jb21saW5rXCI7XG5pbXBvcnQgeyB1c2VSb3V0ZXIgfSBmcm9tIFwibmV4dC9uYXZpZ2F0aW9uLmpzXCI7XG5pbXBvcnQgeyB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHVzZUVmZmVjdEV2ZW50IH0gZnJvbSBcInVzZS1lZmZlY3QtZXZlbnRcIjtcbmltcG9ydCB7IHNldENvbWxpbmsgfSBmcm9tIFwiLi9jb250ZXh0LmpzXCI7XG5mdW5jdGlvbiBQcmVzZW50YXRpb25Db21saW5rKHByb3BzKSB7XG4gIGNvbnN0IHsgZHJhZnRNb2RlRW5hYmxlZCwgZHJhZnRNb2RlUGVyc3BlY3RpdmUgfSA9IHByb3BzLCByb3V0ZXIgPSB1c2VSb3V0ZXIoKSwgaGFuZGxlUGVyc3BlY3RpdmVDaGFuZ2UgPSB1c2VFZmZlY3RFdmVudChcbiAgICAocGVyc3BlY3RpdmUsIHNpZ25hbCkgPT4ge1xuICAgICAgZHJhZnRNb2RlRW5hYmxlZCAmJiBwZXJzcGVjdGl2ZSAhPT0gZHJhZnRNb2RlUGVyc3BlY3RpdmUgJiYgc2V0UGVyc3BlY3RpdmVDb29raWUocGVyc3BlY3RpdmUpLnRoZW4oKCkgPT4ge1xuICAgICAgICBzaWduYWwuYWJvcnRlZCB8fCByb3V0ZXIucmVmcmVzaCgpO1xuICAgICAgfSkuY2F0Y2goKHJlYXNvbikgPT4gY29uc29sZS5lcnJvcihcIkZhaWxlZCB0byBzZXQgdGhlIHByZXZpZXcgcGVyc3BlY3RpdmUgY29va2llXCIsIHJlYXNvbikpO1xuICAgIH1cbiAgKTtcbiAgcmV0dXJuIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3QgY29tbGluayA9IGNyZWF0ZU5vZGUoXG4gICAgICB7XG4gICAgICAgIG5hbWU6IFwibG9hZGVyc1wiLFxuICAgICAgICBjb25uZWN0VG86IFwicHJlc2VudGF0aW9uXCJcbiAgICAgIH0sXG4gICAgICBjcmVhdGVOb2RlTWFjaGluZSgpLnByb3ZpZGUoe1xuICAgICAgICBhY3RvcnM6IGNyZWF0ZUNvbXBhdGliaWxpdHlBY3RvcnMoKVxuICAgICAgfSlcbiAgICApO1xuICAgIGxldCBjb250cm9sbGVyO1xuICAgIGNvbWxpbmsub24oXCJsb2FkZXIvcGVyc3BlY3RpdmVcIiwgKGRhdGEpID0+IHtcbiAgICAgIGNvbnRyb2xsZXI/LmFib3J0KCksIGNvbnRyb2xsZXIgPSBuZXcgQWJvcnRDb250cm9sbGVyKCksIGhhbmRsZVBlcnNwZWN0aXZlQ2hhbmdlKGRhdGEucGVyc3BlY3RpdmUsIGNvbnRyb2xsZXIuc2lnbmFsKTtcbiAgICB9KTtcbiAgICBjb25zdCBzdG9wID0gY29tbGluay5zdGFydCgpO1xuICAgIHJldHVybiBzZXRDb21saW5rKGNvbWxpbmspLCAoKSA9PiB7XG4gICAgICBzdG9wKCk7XG4gICAgfTtcbiAgfSwgW2hhbmRsZVBlcnNwZWN0aXZlQ2hhbmdlXSksIG51bGw7XG59XG5QcmVzZW50YXRpb25Db21saW5rLmRpc3BsYXlOYW1lID0gXCJQcmVzZW50YXRpb25Db21saW5rXCI7XG5leHBvcnQge1xuICBQcmVzZW50YXRpb25Db21saW5rIGFzIGRlZmF1bHRcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1QcmVzZW50YXRpb25Db21saW5rLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/next-loader/dist/_chunks-es/PresentationComlink.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/next-loader/dist/_chunks-es/RefreshOnFocus.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@sanity/next-loader/dist/_chunks-es/RefreshOnFocus.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RefreshOnFocus)\n/* harmony export */ });\n/* harmony import */ var next_navigation_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/navigation.js */ \"(ssr)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n\n\nconst focusThrottleInterval = 5e3;\nfunction RefreshOnFocus() {\n  const router = (0,next_navigation_js__WEBPACK_IMPORTED_MODULE_0__.useRouter)();\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    const controller = new AbortController();\n    let nextFocusRevalidatedAt = 0;\n    const callback = () => {\n      const now = Date.now();\n      now > nextFocusRevalidatedAt && document.visibilityState !== \"hidden\" && (router.refresh(), nextFocusRevalidatedAt = now + focusThrottleInterval);\n    }, { signal } = controller;\n    return document.addEventListener(\"visibilitychange\", callback, { passive: !0, signal }), window.addEventListener(\"focus\", callback, { passive: !0, signal }), () => controller.abort();\n  }, [router]), null;\n}\nRefreshOnFocus.displayName = \"RefreshOnFocus\";\n\n//# sourceMappingURL=RefreshOnFocus.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9uZXh0LWxvYWRlci9kaXN0L19jaHVua3MtZXMvUmVmcmVzaE9uRm9jdXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQStDO0FBQ2I7QUFDbEM7QUFDQTtBQUNBLGlCQUFpQiw2REFBUztBQUMxQixTQUFTLGdEQUFTO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLLElBQUksU0FBUztBQUNsQixxRUFBcUUscUJBQXFCLGdEQUFnRCxxQkFBcUI7QUFDL0osR0FBRztBQUNIO0FBQ0E7QUFHRTtBQUNGIiwic291cmNlcyI6WyIvbWVkaWEvYXdhaXMvTmV3IFZvbHVtZS9Hb3Zlck5PciBIb3VzZSAvaGFja2F0aG9uLTMvc2Vjb25kVGltZXMvaGFja2F0aG9uLWJhbmRhZ2Uvbm9kZV9tb2R1bGVzL0BzYW5pdHkvbmV4dC1sb2FkZXIvZGlzdC9fY2h1bmtzLWVzL1JlZnJlc2hPbkZvY3VzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZVJvdXRlciB9IGZyb20gXCJuZXh0L25hdmlnYXRpb24uanNcIjtcbmltcG9ydCB7IHVzZUVmZmVjdCB9IGZyb20gXCJyZWFjdFwiO1xuY29uc3QgZm9jdXNUaHJvdHRsZUludGVydmFsID0gNWUzO1xuZnVuY3Rpb24gUmVmcmVzaE9uRm9jdXMoKSB7XG4gIGNvbnN0IHJvdXRlciA9IHVzZVJvdXRlcigpO1xuICByZXR1cm4gdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBjb250cm9sbGVyID0gbmV3IEFib3J0Q29udHJvbGxlcigpO1xuICAgIGxldCBuZXh0Rm9jdXNSZXZhbGlkYXRlZEF0ID0gMDtcbiAgICBjb25zdCBjYWxsYmFjayA9ICgpID0+IHtcbiAgICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7XG4gICAgICBub3cgPiBuZXh0Rm9jdXNSZXZhbGlkYXRlZEF0ICYmIGRvY3VtZW50LnZpc2liaWxpdHlTdGF0ZSAhPT0gXCJoaWRkZW5cIiAmJiAocm91dGVyLnJlZnJlc2goKSwgbmV4dEZvY3VzUmV2YWxpZGF0ZWRBdCA9IG5vdyArIGZvY3VzVGhyb3R0bGVJbnRlcnZhbCk7XG4gICAgfSwgeyBzaWduYWwgfSA9IGNvbnRyb2xsZXI7XG4gICAgcmV0dXJuIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJ2aXNpYmlsaXR5Y2hhbmdlXCIsIGNhbGxiYWNrLCB7IHBhc3NpdmU6ICEwLCBzaWduYWwgfSksIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwiZm9jdXNcIiwgY2FsbGJhY2ssIHsgcGFzc2l2ZTogITAsIHNpZ25hbCB9KSwgKCkgPT4gY29udHJvbGxlci5hYm9ydCgpO1xuICB9LCBbcm91dGVyXSksIG51bGw7XG59XG5SZWZyZXNoT25Gb2N1cy5kaXNwbGF5TmFtZSA9IFwiUmVmcmVzaE9uRm9jdXNcIjtcbmV4cG9ydCB7XG4gIFJlZnJlc2hPbkZvY3VzIGFzIGRlZmF1bHRcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1SZWZyZXNoT25Gb2N1cy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/next-loader/dist/_chunks-es/RefreshOnFocus.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/next-loader/dist/_chunks-es/RefreshOnMount.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@sanity/next-loader/dist/_chunks-es/RefreshOnMount.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RefreshOnMount)\n/* harmony export */ });\n/* harmony import */ var next_navigation_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/navigation.js */ \"(ssr)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n\n\nfunction RefreshOnMount() {\n  const router = (0,next_navigation_js__WEBPACK_IMPORTED_MODULE_0__.useRouter)(), [mounted, mount] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useReducer)(() => !0, !1);\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    mounted || (mount(), router.refresh());\n  }, [mounted, router]), null;\n}\nRefreshOnMount.displayName = \"RefreshOnMount\";\n\n//# sourceMappingURL=RefreshOnMount.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9uZXh0LWxvYWRlci9kaXN0L19jaHVua3MtZXMvUmVmcmVzaE9uTW91bnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQStDO0FBQ0Q7QUFDOUM7QUFDQSxpQkFBaUIsNkRBQVMsdUJBQXVCLGlEQUFVO0FBQzNELFNBQVMsZ0RBQVM7QUFDbEI7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIi9tZWRpYS9hd2Fpcy9OZXcgVm9sdW1lL0dvdmVyTk9yIEhvdXNlIC9oYWNrYXRob24tMy9zZWNvbmRUaW1lcy9oYWNrYXRob24tYmFuZGFnZS9ub2RlX21vZHVsZXMvQHNhbml0eS9uZXh0LWxvYWRlci9kaXN0L19jaHVua3MtZXMvUmVmcmVzaE9uTW91bnQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSBcIm5leHQvbmF2aWdhdGlvbi5qc1wiO1xuaW1wb3J0IHsgdXNlUmVkdWNlciwgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCI7XG5mdW5jdGlvbiBSZWZyZXNoT25Nb3VudCgpIHtcbiAgY29uc3Qgcm91dGVyID0gdXNlUm91dGVyKCksIFttb3VudGVkLCBtb3VudF0gPSB1c2VSZWR1Y2VyKCgpID0+ICEwLCAhMSk7XG4gIHJldHVybiB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIG1vdW50ZWQgfHwgKG1vdW50KCksIHJvdXRlci5yZWZyZXNoKCkpO1xuICB9LCBbbW91bnRlZCwgcm91dGVyXSksIG51bGw7XG59XG5SZWZyZXNoT25Nb3VudC5kaXNwbGF5TmFtZSA9IFwiUmVmcmVzaE9uTW91bnRcIjtcbmV4cG9ydCB7XG4gIFJlZnJlc2hPbk1vdW50IGFzIGRlZmF1bHRcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1SZWZyZXNoT25Nb3VudC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/next-loader/dist/_chunks-es/RefreshOnMount.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/next-loader/dist/_chunks-es/RefreshOnReconnect.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@sanity/next-loader/dist/_chunks-es/RefreshOnReconnect.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RefreshOnReconnect)\n/* harmony export */ });\n/* harmony import */ var next_navigation_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/navigation.js */ \"(ssr)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n\n\nfunction RefreshOnReconnect() {\n  const router = (0,next_navigation_js__WEBPACK_IMPORTED_MODULE_0__.useRouter)();\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    const controller = new AbortController(), { signal } = controller;\n    return window.addEventListener(\"online\", () => router.refresh(), { passive: !0, signal }), () => controller.abort();\n  }, [router]), null;\n}\nRefreshOnReconnect.displayName = \"RefreshOnReconnect\";\n\n//# sourceMappingURL=RefreshOnReconnect.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9uZXh0LWxvYWRlci9kaXN0L19jaHVua3MtZXMvUmVmcmVzaE9uUmVjb25uZWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUErQztBQUNiO0FBQ2xDO0FBQ0EsaUJBQWlCLDZEQUFTO0FBQzFCLFNBQVMsZ0RBQVM7QUFDbEIsZ0RBQWdELFNBQVM7QUFDekQsdUVBQXVFLHFCQUFxQjtBQUM1RixHQUFHO0FBQ0g7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIi9tZWRpYS9hd2Fpcy9OZXcgVm9sdW1lL0dvdmVyTk9yIEhvdXNlIC9oYWNrYXRob24tMy9zZWNvbmRUaW1lcy9oYWNrYXRob24tYmFuZGFnZS9ub2RlX21vZHVsZXMvQHNhbml0eS9uZXh0LWxvYWRlci9kaXN0L19jaHVua3MtZXMvUmVmcmVzaE9uUmVjb25uZWN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZVJvdXRlciB9IGZyb20gXCJuZXh0L25hdmlnYXRpb24uanNcIjtcbmltcG9ydCB7IHVzZUVmZmVjdCB9IGZyb20gXCJyZWFjdFwiO1xuZnVuY3Rpb24gUmVmcmVzaE9uUmVjb25uZWN0KCkge1xuICBjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKTtcbiAgcmV0dXJuIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3QgY29udHJvbGxlciA9IG5ldyBBYm9ydENvbnRyb2xsZXIoKSwgeyBzaWduYWwgfSA9IGNvbnRyb2xsZXI7XG4gICAgcmV0dXJuIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwib25saW5lXCIsICgpID0+IHJvdXRlci5yZWZyZXNoKCksIHsgcGFzc2l2ZTogITAsIHNpZ25hbCB9KSwgKCkgPT4gY29udHJvbGxlci5hYm9ydCgpO1xuICB9LCBbcm91dGVyXSksIG51bGw7XG59XG5SZWZyZXNoT25SZWNvbm5lY3QuZGlzcGxheU5hbWUgPSBcIlJlZnJlc2hPblJlY29ubmVjdFwiO1xuZXhwb3J0IHtcbiAgUmVmcmVzaE9uUmVjb25uZWN0IGFzIGRlZmF1bHRcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1SZWZyZXNoT25SZWNvbm5lY3QuanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/next-loader/dist/_chunks-es/RefreshOnReconnect.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/next-loader/dist/_chunks-es/SanityLiveStream.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@sanity/next-loader/dist/_chunks-es/SanityLiveStream.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("var react__WEBPACK_IMPORTED_MODULE_1___namespace_cache;\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SanityLiveStream)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var _sanity_client_stega__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sanity/client/stega */ \"(ssr)/./node_modules/@sanity/client/dist/_chunks-es/stegaEncodeSourceMap.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var use_effect_event__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! use-effect-event */ \"(ssr)/./node_modules/use-effect-event/dist/index.js\");\n/* harmony import */ var _context_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./context.js */ \"(ssr)/./node_modules/@sanity/next-loader/dist/_chunks-es/context.js\");\n\n\n\n\n\n\nfunction getDefaultExportFromCjs(x) {\n  return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, \"default\") ? x.default : x;\n}\nvar fastDeepEqual, hasRequiredFastDeepEqual;\nfunction requireFastDeepEqual() {\n  return hasRequiredFastDeepEqual || (hasRequiredFastDeepEqual = 1, fastDeepEqual = function equal(a, b) {\n    if (a === b) return !0;\n    if (a && b && typeof a == \"object\" && typeof b == \"object\") {\n      if (a.constructor !== b.constructor) return !1;\n      var length, i, keys;\n      if (Array.isArray(a)) {\n        if (length = a.length, length != b.length) return !1;\n        for (i = length; i-- !== 0; )\n          if (!equal(a[i], b[i])) return !1;\n        return !0;\n      }\n      if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n      if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n      if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n      if (keys = Object.keys(a), length = keys.length, length !== Object.keys(b).length) return !1;\n      for (i = length; i-- !== 0; )\n        if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return !1;\n      for (i = length; i-- !== 0; ) {\n        var key = keys[i];\n        if (!equal(a[key], b[key])) return !1;\n      }\n      return !0;\n    }\n    return a !== a && b !== b;\n  }), fastDeepEqual;\n}\nvar fastDeepEqualExports = requireFastDeepEqual(), isEqual = /* @__PURE__ */ getDefaultExportFromCjs(fastDeepEqualExports);\nconst use = \"use\" in /*#__PURE__*/ (react__WEBPACK_IMPORTED_MODULE_1___namespace_cache || (react__WEBPACK_IMPORTED_MODULE_1___namespace_cache = __webpack_require__.t(react__WEBPACK_IMPORTED_MODULE_1__, 2))) ? (\n  // @ts-expect-error this is fine\n  react__WEBPACK_IMPORTED_MODULE_1__.use\n) : () => {\n  throw new TypeError(\"SanityLiveStream requires a React version with React.use()\");\n}, LISTEN_HEARTBEAT_INTERVAL = 1e3;\nfunction SanityLiveStream(props) {\n  const { query, dataset, params = {}, perspective, projectId, stega } = props, subscribe = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((listener) => (_context_js__WEBPACK_IMPORTED_MODULE_2__.comlinkListeners.add(listener), () => _context_js__WEBPACK_IMPORTED_MODULE_2__.comlinkListeners.delete(listener)), []), comlink$1 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useSyncExternalStore)(\n    subscribe,\n    () => _context_js__WEBPACK_IMPORTED_MODULE_2__.comlink,\n    () => null\n  ), [children, setChildren] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(void 0), handleQueryHeartbeat = (0,use_effect_event__WEBPACK_IMPORTED_MODULE_3__.useEffectEvent)((comlink2) => {\n    comlink2.post(\"loader/query-listen\", {\n      projectId,\n      dataset,\n      perspective,\n      query,\n      params,\n      heartbeat: LISTEN_HEARTBEAT_INTERVAL\n    });\n  }), handleQueryChange = (0,use_effect_event__WEBPACK_IMPORTED_MODULE_3__.useEffectEvent)(\n    (event) => {\n      if (isEqual(\n        {\n          projectId,\n          dataset,\n          query,\n          params\n        },\n        {\n          projectId: event.projectId,\n          dataset: event.dataset,\n          query: event.query,\n          params: event.params\n        }\n      )) {\n        const { result, resultSourceMap, tags } = event, data = stega ? (0,_sanity_client_stega__WEBPACK_IMPORTED_MODULE_4__.stegaEncodeSourceMap)(result, resultSourceMap, { enabled: !0, studioUrl: \"/\" }) : result;\n        console.groupCollapsed(\"rendering with server action\"), props.children({\n          data,\n          sourceMap: resultSourceMap,\n          tags: tags || []\n        }).then(\n          (children2) => {\n            console.log(\"setChildren(children)\"), setChildren(children2);\n          },\n          (reason) => {\n            console.error(\"rendering with server action: render children error\", reason);\n          }\n        ).finally(() => console.groupEnd());\n      }\n    }\n  );\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (!comlink$1) return;\n    const unsubscribe = comlink$1.on(\"loader/query-change\", handleQueryChange), interval = setInterval(() => handleQueryHeartbeat(comlink$1), LISTEN_HEARTBEAT_INTERVAL);\n    return () => {\n      clearInterval(interval), unsubscribe();\n    };\n  }, [comlink$1, handleQueryChange, handleQueryHeartbeat]), !comlink$1 || children === void 0 ? use(props.initial) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children });\n}\nSanityLiveStream.displayName = \"SanityLiveStream\";\n\n//# sourceMappingURL=SanityLiveStream.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9uZXh0LWxvYWRlci9kaXN0L19jaHVua3MtZXMvU2FuaXR5TGl2ZVN0cmVhbS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQWtEO0FBQ1U7QUFDN0I7QUFDZ0Q7QUFDN0I7QUFDTztBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsV0FBVztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixXQUFXO0FBQ2xDO0FBQ0EsdUJBQXVCLFdBQVc7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxZQUFZLGtNQUFjO0FBQzFCO0FBQ0EsRUFBRSxzQ0FBUztBQUNYO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSxVQUFVLDJCQUEyQixrQ0FBa0MscUJBQXFCLGtEQUFXLGdCQUFnQix5REFBZ0Isc0JBQXNCLHlEQUFnQixxQ0FBcUMsMkRBQW9CO0FBQ3RPO0FBQ0EsVUFBVSxnREFBTztBQUNqQjtBQUNBLCtCQUErQiwrQ0FBUSxpQ0FBaUMsZ0VBQWM7QUFDdEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRyx1QkFBdUIsZ0VBQWM7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsZ0NBQWdDLHdCQUF3QiwwRUFBb0IsNEJBQTRCLDZCQUE2QjtBQUNySjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxnREFBUztBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRyxrSUFBa0ksc0RBQUcsQ0FBQyx1REFBUSxJQUFJLFVBQVU7QUFDL0o7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIi9tZWRpYS9hd2Fpcy9OZXcgVm9sdW1lL0dvdmVyTk9yIEhvdXNlIC9oYWNrYXRob24tMy9zZWNvbmRUaW1lcy9oYWNrYXRob24tYmFuZGFnZS9ub2RlX21vZHVsZXMvQHNhbml0eS9uZXh0LWxvYWRlci9kaXN0L19jaHVua3MtZXMvU2FuaXR5TGl2ZVN0cmVhbS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBqc3gsIEZyYWdtZW50IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5pbXBvcnQgeyBzdGVnYUVuY29kZVNvdXJjZU1hcCB9IGZyb20gXCJAc2FuaXR5L2NsaWVudC9zdGVnYVwiO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB1c2VDYWxsYmFjaywgdXNlU3luY0V4dGVybmFsU3RvcmUsIHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHVzZUVmZmVjdEV2ZW50IH0gZnJvbSBcInVzZS1lZmZlY3QtZXZlbnRcIjtcbmltcG9ydCB7IGNvbWxpbmtMaXN0ZW5lcnMsIGNvbWxpbmsgfSBmcm9tIFwiLi9jb250ZXh0LmpzXCI7XG5mdW5jdGlvbiBnZXREZWZhdWx0RXhwb3J0RnJvbUNqcyh4KSB7XG4gIHJldHVybiB4ICYmIHguX19lc01vZHVsZSAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoeCwgXCJkZWZhdWx0XCIpID8geC5kZWZhdWx0IDogeDtcbn1cbnZhciBmYXN0RGVlcEVxdWFsLCBoYXNSZXF1aXJlZEZhc3REZWVwRXF1YWw7XG5mdW5jdGlvbiByZXF1aXJlRmFzdERlZXBFcXVhbCgpIHtcbiAgcmV0dXJuIGhhc1JlcXVpcmVkRmFzdERlZXBFcXVhbCB8fCAoaGFzUmVxdWlyZWRGYXN0RGVlcEVxdWFsID0gMSwgZmFzdERlZXBFcXVhbCA9IGZ1bmN0aW9uIGVxdWFsKGEsIGIpIHtcbiAgICBpZiAoYSA9PT0gYikgcmV0dXJuICEwO1xuICAgIGlmIChhICYmIGIgJiYgdHlwZW9mIGEgPT0gXCJvYmplY3RcIiAmJiB0eXBlb2YgYiA9PSBcIm9iamVjdFwiKSB7XG4gICAgICBpZiAoYS5jb25zdHJ1Y3RvciAhPT0gYi5jb25zdHJ1Y3RvcikgcmV0dXJuICExO1xuICAgICAgdmFyIGxlbmd0aCwgaSwga2V5cztcbiAgICAgIGlmIChBcnJheS5pc0FycmF5KGEpKSB7XG4gICAgICAgIGlmIChsZW5ndGggPSBhLmxlbmd0aCwgbGVuZ3RoICE9IGIubGVuZ3RoKSByZXR1cm4gITE7XG4gICAgICAgIGZvciAoaSA9IGxlbmd0aDsgaS0tICE9PSAwOyApXG4gICAgICAgICAgaWYgKCFlcXVhbChhW2ldLCBiW2ldKSkgcmV0dXJuICExO1xuICAgICAgICByZXR1cm4gITA7XG4gICAgICB9XG4gICAgICBpZiAoYS5jb25zdHJ1Y3RvciA9PT0gUmVnRXhwKSByZXR1cm4gYS5zb3VyY2UgPT09IGIuc291cmNlICYmIGEuZmxhZ3MgPT09IGIuZmxhZ3M7XG4gICAgICBpZiAoYS52YWx1ZU9mICE9PSBPYmplY3QucHJvdG90eXBlLnZhbHVlT2YpIHJldHVybiBhLnZhbHVlT2YoKSA9PT0gYi52YWx1ZU9mKCk7XG4gICAgICBpZiAoYS50b1N0cmluZyAhPT0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZykgcmV0dXJuIGEudG9TdHJpbmcoKSA9PT0gYi50b1N0cmluZygpO1xuICAgICAgaWYgKGtleXMgPSBPYmplY3Qua2V5cyhhKSwgbGVuZ3RoID0ga2V5cy5sZW5ndGgsIGxlbmd0aCAhPT0gT2JqZWN0LmtleXMoYikubGVuZ3RoKSByZXR1cm4gITE7XG4gICAgICBmb3IgKGkgPSBsZW5ndGg7IGktLSAhPT0gMDsgKVxuICAgICAgICBpZiAoIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChiLCBrZXlzW2ldKSkgcmV0dXJuICExO1xuICAgICAgZm9yIChpID0gbGVuZ3RoOyBpLS0gIT09IDA7ICkge1xuICAgICAgICB2YXIga2V5ID0ga2V5c1tpXTtcbiAgICAgICAgaWYgKCFlcXVhbChhW2tleV0sIGJba2V5XSkpIHJldHVybiAhMTtcbiAgICAgIH1cbiAgICAgIHJldHVybiAhMDtcbiAgICB9XG4gICAgcmV0dXJuIGEgIT09IGEgJiYgYiAhPT0gYjtcbiAgfSksIGZhc3REZWVwRXF1YWw7XG59XG52YXIgZmFzdERlZXBFcXVhbEV4cG9ydHMgPSByZXF1aXJlRmFzdERlZXBFcXVhbCgpLCBpc0VxdWFsID0gLyogQF9fUFVSRV9fICovIGdldERlZmF1bHRFeHBvcnRGcm9tQ2pzKGZhc3REZWVwRXF1YWxFeHBvcnRzKTtcbmNvbnN0IHVzZSA9IFwidXNlXCIgaW4gUmVhY3QgPyAoXG4gIC8vIEB0cy1leHBlY3QtZXJyb3IgdGhpcyBpcyBmaW5lXG4gIFJlYWN0LnVzZVxuKSA6ICgpID0+IHtcbiAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlNhbml0eUxpdmVTdHJlYW0gcmVxdWlyZXMgYSBSZWFjdCB2ZXJzaW9uIHdpdGggUmVhY3QudXNlKClcIik7XG59LCBMSVNURU5fSEVBUlRCRUFUX0lOVEVSVkFMID0gMWUzO1xuZnVuY3Rpb24gU2FuaXR5TGl2ZVN0cmVhbShwcm9wcykge1xuICBjb25zdCB7IHF1ZXJ5LCBkYXRhc2V0LCBwYXJhbXMgPSB7fSwgcGVyc3BlY3RpdmUsIHByb2plY3RJZCwgc3RlZ2EgfSA9IHByb3BzLCBzdWJzY3JpYmUgPSB1c2VDYWxsYmFjaygobGlzdGVuZXIpID0+IChjb21saW5rTGlzdGVuZXJzLmFkZChsaXN0ZW5lciksICgpID0+IGNvbWxpbmtMaXN0ZW5lcnMuZGVsZXRlKGxpc3RlbmVyKSksIFtdKSwgY29tbGluayQxID0gdXNlU3luY0V4dGVybmFsU3RvcmUoXG4gICAgc3Vic2NyaWJlLFxuICAgICgpID0+IGNvbWxpbmssXG4gICAgKCkgPT4gbnVsbFxuICApLCBbY2hpbGRyZW4sIHNldENoaWxkcmVuXSA9IHVzZVN0YXRlKHZvaWQgMCksIGhhbmRsZVF1ZXJ5SGVhcnRiZWF0ID0gdXNlRWZmZWN0RXZlbnQoKGNvbWxpbmsyKSA9PiB7XG4gICAgY29tbGluazIucG9zdChcImxvYWRlci9xdWVyeS1saXN0ZW5cIiwge1xuICAgICAgcHJvamVjdElkLFxuICAgICAgZGF0YXNldCxcbiAgICAgIHBlcnNwZWN0aXZlLFxuICAgICAgcXVlcnksXG4gICAgICBwYXJhbXMsXG4gICAgICBoZWFydGJlYXQ6IExJU1RFTl9IRUFSVEJFQVRfSU5URVJWQUxcbiAgICB9KTtcbiAgfSksIGhhbmRsZVF1ZXJ5Q2hhbmdlID0gdXNlRWZmZWN0RXZlbnQoXG4gICAgKGV2ZW50KSA9PiB7XG4gICAgICBpZiAoaXNFcXVhbChcbiAgICAgICAge1xuICAgICAgICAgIHByb2plY3RJZCxcbiAgICAgICAgICBkYXRhc2V0LFxuICAgICAgICAgIHF1ZXJ5LFxuICAgICAgICAgIHBhcmFtc1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgcHJvamVjdElkOiBldmVudC5wcm9qZWN0SWQsXG4gICAgICAgICAgZGF0YXNldDogZXZlbnQuZGF0YXNldCxcbiAgICAgICAgICBxdWVyeTogZXZlbnQucXVlcnksXG4gICAgICAgICAgcGFyYW1zOiBldmVudC5wYXJhbXNcbiAgICAgICAgfVxuICAgICAgKSkge1xuICAgICAgICBjb25zdCB7IHJlc3VsdCwgcmVzdWx0U291cmNlTWFwLCB0YWdzIH0gPSBldmVudCwgZGF0YSA9IHN0ZWdhID8gc3RlZ2FFbmNvZGVTb3VyY2VNYXAocmVzdWx0LCByZXN1bHRTb3VyY2VNYXAsIHsgZW5hYmxlZDogITAsIHN0dWRpb1VybDogXCIvXCIgfSkgOiByZXN1bHQ7XG4gICAgICAgIGNvbnNvbGUuZ3JvdXBDb2xsYXBzZWQoXCJyZW5kZXJpbmcgd2l0aCBzZXJ2ZXIgYWN0aW9uXCIpLCBwcm9wcy5jaGlsZHJlbih7XG4gICAgICAgICAgZGF0YSxcbiAgICAgICAgICBzb3VyY2VNYXA6IHJlc3VsdFNvdXJjZU1hcCxcbiAgICAgICAgICB0YWdzOiB0YWdzIHx8IFtdXG4gICAgICAgIH0pLnRoZW4oXG4gICAgICAgICAgKGNoaWxkcmVuMikgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJzZXRDaGlsZHJlbihjaGlsZHJlbilcIiksIHNldENoaWxkcmVuKGNoaWxkcmVuMik7XG4gICAgICAgICAgfSxcbiAgICAgICAgICAocmVhc29uKSA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFwicmVuZGVyaW5nIHdpdGggc2VydmVyIGFjdGlvbjogcmVuZGVyIGNoaWxkcmVuIGVycm9yXCIsIHJlYXNvbik7XG4gICAgICAgICAgfVxuICAgICAgICApLmZpbmFsbHkoKCkgPT4gY29uc29sZS5ncm91cEVuZCgpKTtcbiAgICAgIH1cbiAgICB9XG4gICk7XG4gIHJldHVybiB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmICghY29tbGluayQxKSByZXR1cm47XG4gICAgY29uc3QgdW5zdWJzY3JpYmUgPSBjb21saW5rJDEub24oXCJsb2FkZXIvcXVlcnktY2hhbmdlXCIsIGhhbmRsZVF1ZXJ5Q2hhbmdlKSwgaW50ZXJ2YWwgPSBzZXRJbnRlcnZhbCgoKSA9PiBoYW5kbGVRdWVyeUhlYXJ0YmVhdChjb21saW5rJDEpLCBMSVNURU5fSEVBUlRCRUFUX0lOVEVSVkFMKTtcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgY2xlYXJJbnRlcnZhbChpbnRlcnZhbCksIHVuc3Vic2NyaWJlKCk7XG4gICAgfTtcbiAgfSwgW2NvbWxpbmskMSwgaGFuZGxlUXVlcnlDaGFuZ2UsIGhhbmRsZVF1ZXJ5SGVhcnRiZWF0XSksICFjb21saW5rJDEgfHwgY2hpbGRyZW4gPT09IHZvaWQgMCA/IHVzZShwcm9wcy5pbml0aWFsKSA6IC8qIEBfX1BVUkVfXyAqLyBqc3goRnJhZ21lbnQsIHsgY2hpbGRyZW4gfSk7XG59XG5TYW5pdHlMaXZlU3RyZWFtLmRpc3BsYXlOYW1lID0gXCJTYW5pdHlMaXZlU3RyZWFtXCI7XG5leHBvcnQge1xuICBTYW5pdHlMaXZlU3RyZWFtIGFzIGRlZmF1bHRcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TYW5pdHlMaXZlU3RyZWFtLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/next-loader/dist/_chunks-es/SanityLiveStream.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/next-loader/dist/_chunks-es/context.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@sanity/next-loader/dist/_chunks-es/context.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   comlink: () => (/* binding */ comlink),\n/* harmony export */   comlinkListeners: () => (/* binding */ comlinkListeners),\n/* harmony export */   environment: () => (/* binding */ environment),\n/* harmony export */   environmentListeners: () => (/* binding */ environmentListeners),\n/* harmony export */   perspective: () => (/* binding */ perspective),\n/* harmony export */   perspectiveListeners: () => (/* binding */ perspectiveListeners),\n/* harmony export */   setComlink: () => (/* binding */ setComlink),\n/* harmony export */   setEnvironment: () => (/* binding */ setEnvironment),\n/* harmony export */   setPerspective: () => (/* binding */ setPerspective)\n/* harmony export */ });\nconst perspectiveListeners = /* @__PURE__ */ new Set();\nlet perspective = \"checking\";\nfunction setPerspective(nextPerspective) {\n  if (perspective !== nextPerspective) {\n    perspective = nextPerspective;\n    for (const onPerspectiveChange of perspectiveListeners)\n      onPerspectiveChange();\n  }\n}\nconst environmentListeners = /* @__PURE__ */ new Set();\nlet environment = \"checking\";\nfunction setEnvironment(nextEnvironment) {\n  environment = nextEnvironment;\n  for (const onEnvironmentChange of environmentListeners)\n    onEnvironmentChange();\n}\nconst comlinkListeners = /* @__PURE__ */ new Set();\nlet comlink = null;\nfunction setComlink(nextComlink) {\n  comlink = nextComlink;\n  for (const onComlinkChange of comlinkListeners)\n    onComlinkChange();\n}\n\n//# sourceMappingURL=context.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9uZXh0LWxvYWRlci9kaXN0L19jaHVua3MtZXMvY29udGV4dC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBV0U7QUFDRiIsInNvdXJjZXMiOlsiL21lZGlhL2F3YWlzL05ldyBWb2x1bWUvR292ZXJOT3IgSG91c2UgL2hhY2thdGhvbi0zL3NlY29uZFRpbWVzL2hhY2thdGhvbi1iYW5kYWdlL25vZGVfbW9kdWxlcy9Ac2FuaXR5L25leHQtbG9hZGVyL2Rpc3QvX2NodW5rcy1lcy9jb250ZXh0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHBlcnNwZWN0aXZlTGlzdGVuZXJzID0gLyogQF9fUFVSRV9fICovIG5ldyBTZXQoKTtcbmxldCBwZXJzcGVjdGl2ZSA9IFwiY2hlY2tpbmdcIjtcbmZ1bmN0aW9uIHNldFBlcnNwZWN0aXZlKG5leHRQZXJzcGVjdGl2ZSkge1xuICBpZiAocGVyc3BlY3RpdmUgIT09IG5leHRQZXJzcGVjdGl2ZSkge1xuICAgIHBlcnNwZWN0aXZlID0gbmV4dFBlcnNwZWN0aXZlO1xuICAgIGZvciAoY29uc3Qgb25QZXJzcGVjdGl2ZUNoYW5nZSBvZiBwZXJzcGVjdGl2ZUxpc3RlbmVycylcbiAgICAgIG9uUGVyc3BlY3RpdmVDaGFuZ2UoKTtcbiAgfVxufVxuY29uc3QgZW52aXJvbm1lbnRMaXN0ZW5lcnMgPSAvKiBAX19QVVJFX18gKi8gbmV3IFNldCgpO1xubGV0IGVudmlyb25tZW50ID0gXCJjaGVja2luZ1wiO1xuZnVuY3Rpb24gc2V0RW52aXJvbm1lbnQobmV4dEVudmlyb25tZW50KSB7XG4gIGVudmlyb25tZW50ID0gbmV4dEVudmlyb25tZW50O1xuICBmb3IgKGNvbnN0IG9uRW52aXJvbm1lbnRDaGFuZ2Ugb2YgZW52aXJvbm1lbnRMaXN0ZW5lcnMpXG4gICAgb25FbnZpcm9ubWVudENoYW5nZSgpO1xufVxuY29uc3QgY29tbGlua0xpc3RlbmVycyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgU2V0KCk7XG5sZXQgY29tbGluayA9IG51bGw7XG5mdW5jdGlvbiBzZXRDb21saW5rKG5leHRDb21saW5rKSB7XG4gIGNvbWxpbmsgPSBuZXh0Q29tbGluaztcbiAgZm9yIChjb25zdCBvbkNvbWxpbmtDaGFuZ2Ugb2YgY29tbGlua0xpc3RlbmVycylcbiAgICBvbkNvbWxpbmtDaGFuZ2UoKTtcbn1cbmV4cG9ydCB7XG4gIGNvbWxpbmssXG4gIGNvbWxpbmtMaXN0ZW5lcnMsXG4gIGVudmlyb25tZW50LFxuICBlbnZpcm9ubWVudExpc3RlbmVycyxcbiAgcGVyc3BlY3RpdmUsXG4gIHBlcnNwZWN0aXZlTGlzdGVuZXJzLFxuICBzZXRDb21saW5rLFxuICBzZXRFbnZpcm9ubWVudCxcbiAgc2V0UGVyc3BlY3RpdmVcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb250ZXh0LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/next-loader/dist/_chunks-es/context.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/next-loader/dist/_chunks-es/isCorsOriginError.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@sanity/next-loader/dist/_chunks-es/isCorsOriginError.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isCorsOriginError: () => (/* binding */ isCorsOriginError)\n/* harmony export */ });\n/* harmony import */ var _sanity_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sanity/client */ \"(ssr)/./node_modules/@sanity/client/dist/index.js\");\n\nfunction isCorsOriginError(error) {\n  return error instanceof _sanity_client__WEBPACK_IMPORTED_MODULE_0__.CorsOriginError;\n}\n\n//# sourceMappingURL=isCorsOriginError.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9uZXh0LWxvYWRlci9kaXN0L19jaHVua3MtZXMvaXNDb3JzT3JpZ2luRXJyb3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBaUQ7QUFDakQ7QUFDQSwwQkFBMEIsMkRBQWU7QUFDekM7QUFHRTtBQUNGIiwic291cmNlcyI6WyIvbWVkaWEvYXdhaXMvTmV3IFZvbHVtZS9Hb3Zlck5PciBIb3VzZSAvaGFja2F0aG9uLTMvc2Vjb25kVGltZXMvaGFja2F0aG9uLWJhbmRhZ2Uvbm9kZV9tb2R1bGVzL0BzYW5pdHkvbmV4dC1sb2FkZXIvZGlzdC9fY2h1bmtzLWVzL2lzQ29yc09yaWdpbkVycm9yLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvcnNPcmlnaW5FcnJvciB9IGZyb20gXCJAc2FuaXR5L2NsaWVudFwiO1xuZnVuY3Rpb24gaXNDb3JzT3JpZ2luRXJyb3IoZXJyb3IpIHtcbiAgcmV0dXJuIGVycm9yIGluc3RhbmNlb2YgQ29yc09yaWdpbkVycm9yO1xufVxuZXhwb3J0IHtcbiAgaXNDb3JzT3JpZ2luRXJyb3Jcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pc0NvcnNPcmlnaW5FcnJvci5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/next-loader/dist/_chunks-es/isCorsOriginError.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/next-loader/dist/client-components/live-stream.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@sanity/next-loader/dist/client-components/live-stream.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SanityLiveStreamLazyClientComponent)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dynamic */ \"(ssr)/./node_modules/next/dist/api/app-dynamic.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\nconst SanityLiveStreamClientComponent = (0,next_dynamic__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(()=>__webpack_require__.e(/*! import() */ \"vendor-chunks/@sanity\").then(__webpack_require__.bind(__webpack_require__, /*! ../_chunks-es/SanityLiveStream.js */ \"(ssr)/./node_modules/@sanity/next-loader/dist/_chunks-es/SanityLiveStream.js\")), {\n    loadableGenerated: {\n        modules: [\n            \"../node_modules/@sanity/next-loader/dist/client-components/live-stream.js -> \" + \"../_chunks-es/SanityLiveStream.js\"\n        ]\n    },\n    ssr: !1\n});\nfunction SanityLiveStreamLazyClientComponent(props) {\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SanityLiveStreamClientComponent, {\n        ...props\n    });\n}\n //# sourceMappingURL=live-stream.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9uZXh0LWxvYWRlci9kaXN0L2NsaWVudC1jb21wb25lbnRzL2xpdmUtc3RyZWFtLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBU0EsTUFBTSxrQ0FBa0Msd0RBQU8sQ0FBQyxJQUFNLDJPQUE0QixFQUFFOzs7Ozs7SUFBQyxLQUFLOztBQUVuRixTQUFTLG9DQUFvQyxPQUErQztJQUMxRiw4RUFBQyxpQ0FBaUM7UUFBQSxHQUFHO0lBQU87QUFDckQiLCJzb3VyY2VzIjpbIi9tZWRpYS9hd2Fpcy9OZXcgVm9sdW1lL0dvdmVyTk9yIEhvdXNlIC9oYWNrYXRob24tMy9zcmMvY2xpZW50LWNvbXBvbmVudHMvbGl2ZS1zdHJlYW0vU2FuaXR5TGl2ZVN0cmVhbUxhenkudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGhpcyBmaWxlIHdvcmtzIGFyb3VuZCBhIG5ldyByZXN0cmljdGlvbiBpbiBOZXh0IHYxNSB3aGVyZSBzZXJ2ZXIgY29tcG9uZW50cyBhcmUgbm90IGFsbG93ZWRcbiAqIHRvIHVzZSBkeW5hbWljKCgpID0+IGltcG9ydCgnLi4uKSwge3NzcjogZmFsc2V9KVxuICogb25seSBDbGllbnQgQ29tcG9uZW50cyBjYW4gc2V0IHNzcjogZmFsc2UuXG4gKi9cblxuaW1wb3J0IGR5bmFtaWMgZnJvbSAnbmV4dC9keW5hbWljJ1xuaW1wb3J0IHR5cGUge1Nhbml0eUxpdmVTdHJlYW1Qcm9wc30gZnJvbSAnLi9TYW5pdHlMaXZlU3RyZWFtJ1xuXG5jb25zdCBTYW5pdHlMaXZlU3RyZWFtQ2xpZW50Q29tcG9uZW50ID0gZHluYW1pYygoKSA9PiBpbXBvcnQoJy4vU2FuaXR5TGl2ZVN0cmVhbScpLCB7c3NyOiBmYWxzZX0pXG5cbmV4cG9ydCBmdW5jdGlvbiBTYW5pdHlMaXZlU3RyZWFtTGF6eUNsaWVudENvbXBvbmVudChwcm9wczogU2FuaXR5TGl2ZVN0cmVhbVByb3BzKTogUmVhY3QuUmVhY3ROb2RlIHtcbiAgcmV0dXJuIDxTYW5pdHlMaXZlU3RyZWFtQ2xpZW50Q29tcG9uZW50IHsuLi5wcm9wc30gLz5cbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/next-loader/dist/client-components/live-stream.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/next-loader/dist/client-components/live.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@sanity/next-loader/dist/client-components/live.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SanityLive)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var _sanity_client__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sanity/client */ \"(ssr)/./node_modules/@sanity/client/dist/index.js\");\n/* harmony import */ var _sanity_next_loader_server_actions__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sanity/next-loader/server-actions */ \"(ssr)/./node_modules/@sanity/next-loader/dist/server-actions.js\");\n/* harmony import */ var _sanity_presentation_comlink__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @sanity/presentation-comlink */ \"(ssr)/./node_modules/@sanity/presentation-comlink/dist/index.js\");\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dynamic */ \"(ssr)/./node_modules/next/dist/api/app-dynamic.js\");\n/* harmony import */ var next_navigation_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/navigation.js */ \"(ssr)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var use_effect_event__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! use-effect-event */ \"(ssr)/./node_modules/use-effect-event/dist/index.js\");\n/* harmony import */ var _chunks_es_context_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../_chunks-es/context.js */ \"(ssr)/./node_modules/@sanity/next-loader/dist/_chunks-es/context.js\");\n/* harmony import */ var _chunks_es_isCorsOriginError_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../_chunks-es/isCorsOriginError.js */ \"(ssr)/./node_modules/@sanity/next-loader/dist/_chunks-es/isCorsOriginError.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\n\n\n\n\n\n\n\n\nconst PresentationComlink = (0,next_dynamic__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(()=>__webpack_require__.e(/*! import() */ \"vendor-chunks/@sanity\").then(__webpack_require__.bind(__webpack_require__, /*! ../_chunks-es/PresentationComlink.js */ \"(ssr)/./node_modules/@sanity/next-loader/dist/_chunks-es/PresentationComlink.js\")), {\n    loadableGenerated: {\n        modules: [\n            \"../node_modules/@sanity/next-loader/dist/client-components/live.js -> \" + \"../_chunks-es/PresentationComlink.js\"\n        ]\n    },\n    ssr: !1\n}), RefreshOnMount = (0,next_dynamic__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(()=>__webpack_require__.e(/*! import() */ \"vendor-chunks/@sanity\").then(__webpack_require__.bind(__webpack_require__, /*! ../_chunks-es/RefreshOnMount.js */ \"(ssr)/./node_modules/@sanity/next-loader/dist/_chunks-es/RefreshOnMount.js\")), {\n    loadableGenerated: {\n        modules: [\n            \"../node_modules/@sanity/next-loader/dist/client-components/live.js -> \" + \"../_chunks-es/RefreshOnMount.js\"\n        ]\n    },\n    ssr: !1\n}), RefreshOnFocus = (0,next_dynamic__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(()=>__webpack_require__.e(/*! import() */ \"vendor-chunks/@sanity\").then(__webpack_require__.bind(__webpack_require__, /*! ../_chunks-es/RefreshOnFocus.js */ \"(ssr)/./node_modules/@sanity/next-loader/dist/_chunks-es/RefreshOnFocus.js\")), {\n    loadableGenerated: {\n        modules: [\n            \"../node_modules/@sanity/next-loader/dist/client-components/live.js -> \" + \"../_chunks-es/RefreshOnFocus.js\"\n        ]\n    },\n    ssr: !1\n}), RefreshOnReconnect = (0,next_dynamic__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(()=>__webpack_require__.e(/*! import() */ \"vendor-chunks/@sanity\").then(__webpack_require__.bind(__webpack_require__, /*! ../_chunks-es/RefreshOnReconnect.js */ \"(ssr)/./node_modules/@sanity/next-loader/dist/_chunks-es/RefreshOnReconnect.js\")), {\n    loadableGenerated: {\n        modules: [\n            \"../node_modules/@sanity/next-loader/dist/client-components/live.js -> \" + \"../_chunks-es/RefreshOnReconnect.js\"\n        ]\n    },\n    ssr: !1\n}), handleError = (error)=>{\n    (0,_chunks_es_isCorsOriginError_js__WEBPACK_IMPORTED_MODULE_4__.isCorsOriginError)(error) ? console.warn(`Sanity Live is unable to connect to the Sanity API as the current origin - ${window.origin} - is not in the list of allowed CORS origins for this Sanity Project.`, error.addOriginUrl && \"Add it here:\", error.addOriginUrl?.toString()) : console.error(error);\n};\nfunction SanityLive(props) {\n    const { projectId, dataset, apiHost, apiVersion, useProjectHostname, token, requestTagPrefix, // handleDraftModeAction,\n    draftModeEnabled, draftModePerspective, refreshOnMount = !1, refreshOnFocus = draftModeEnabled ? !1 :  true ? !0 : 0, refreshOnReconnect = !0, tag, onError = handleError } = props, client = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)({\n        \"SanityLive.useMemo[client]\": ()=>(0,_sanity_client__WEBPACK_IMPORTED_MODULE_5__.createClient)({\n                projectId,\n                dataset,\n                apiHost,\n                apiVersion,\n                useProjectHostname,\n                ignoreBrowserTokenWarning: !0,\n                token,\n                useCdn: !1,\n                requestTagPrefix\n            })\n    }[\"SanityLive.useMemo[client]\"], [\n        apiHost,\n        apiVersion,\n        dataset,\n        projectId,\n        requestTagPrefix,\n        token,\n        useProjectHostname\n    ]), router = (0,next_navigation_js__WEBPACK_IMPORTED_MODULE_2__.useRouter)(), handleLiveEvent = (0,use_effect_event__WEBPACK_IMPORTED_MODULE_6__.useEffectEvent)({\n        \"SanityLive.useEffectEvent[handleLiveEvent]\": (event)=>{\n             true && event.type === \"welcome\" ? console.info(\"Sanity is live with\", token ? \"automatic revalidation for draft content changes as well as published content\" : draftModeEnabled ? \"automatic revalidation for only published content. Provide a `browserToken` to `defineLive` to support draft content outside of Presentation Tool.\" : \"automatic revalidation of published content\") : event.type === \"message\" ? (0,_sanity_next_loader_server_actions__WEBPACK_IMPORTED_MODULE_7__.revalidateSyncTags)(event.tags) : event.type === \"restart\" && router.refresh();\n        }\n    }[\"SanityLive.useEffectEvent[handleLiveEvent]\"]);\n    (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)({\n        \"SanityLive.useEffect\": ()=>{\n            const subscription = client.live.events({\n                includeDrafts: !!token,\n                tag\n            }).subscribe({\n                next: {\n                    \"SanityLive.useEffect.subscription\": (event)=>{\n                        (event.type === \"message\" || event.type === \"restart\" || event.type === \"welcome\") && handleLiveEvent(event);\n                    }\n                }[\"SanityLive.useEffect.subscription\"],\n                error: {\n                    \"SanityLive.useEffect.subscription\": (err)=>{\n                        onError(err);\n                    }\n                }[\"SanityLive.useEffect.subscription\"]\n            });\n            return ({\n                \"SanityLive.useEffect\": ()=>subscription.unsubscribe()\n            })[\"SanityLive.useEffect\"];\n        }\n    }[\"SanityLive.useEffect\"], [\n        client.live,\n        handleLiveEvent,\n        onError,\n        tag,\n        token\n    ]), (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)({\n        \"SanityLive.useEffect\": ()=>{\n            draftModeEnabled && draftModePerspective ? (0,_chunks_es_context_js__WEBPACK_IMPORTED_MODULE_8__.setPerspective)(draftModePerspective) : (0,_chunks_es_context_js__WEBPACK_IMPORTED_MODULE_8__.setPerspective)(\"unknown\");\n        }\n    }[\"SanityLive.useEffect\"], [\n        draftModeEnabled,\n        draftModePerspective\n    ]);\n    const [loadComlink, setLoadComlink] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(!1);\n    (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)({\n        \"SanityLive.useEffect\": ()=>{\n            if (!(0,_sanity_presentation_comlink__WEBPACK_IMPORTED_MODULE_9__.isMaybePresentation)()) {\n                if (draftModeEnabled && token) {\n                    (0,_chunks_es_context_js__WEBPACK_IMPORTED_MODULE_8__.setEnvironment)(\"live\");\n                    return;\n                }\n                if (draftModeEnabled) {\n                    (0,_chunks_es_context_js__WEBPACK_IMPORTED_MODULE_8__.setEnvironment)(\"static\");\n                    return;\n                }\n                (0,_chunks_es_context_js__WEBPACK_IMPORTED_MODULE_8__.setEnvironment)(\"unknown\");\n            }\n        }\n    }[\"SanityLive.useEffect\"], [\n        draftModeEnabled,\n        token\n    ]), (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)({\n        \"SanityLive.useEffect\": ()=>{\n            if (!(0,_sanity_presentation_comlink__WEBPACK_IMPORTED_MODULE_9__.isMaybePresentation)()) return;\n            const controller = new AbortController(), timeout = setTimeout({\n                \"SanityLive.useEffect.timeout\": ()=>(0,_chunks_es_context_js__WEBPACK_IMPORTED_MODULE_8__.setEnvironment)(\"live\")\n            }[\"SanityLive.useEffect.timeout\"], 3e3);\n            return window.addEventListener(\"message\", {\n                \"SanityLive.useEffect\": ({ data })=>{\n                    data && typeof data == \"object\" && \"domain\" in data && data.domain === \"sanity/channels\" && \"from\" in data && data.from === \"presentation\" && (clearTimeout(timeout), (0,_chunks_es_context_js__WEBPACK_IMPORTED_MODULE_8__.setEnvironment)((0,_sanity_presentation_comlink__WEBPACK_IMPORTED_MODULE_9__.isMaybePreviewWindow)() ? \"presentation-window\" : \"presentation-iframe\"), setLoadComlink(!0), controller.abort());\n                }\n            }[\"SanityLive.useEffect\"], {\n                signal: controller.signal\n            }), ({\n                \"SanityLive.useEffect\": ()=>{\n                    clearTimeout(timeout), controller.abort();\n                }\n            })[\"SanityLive.useEffect\"];\n        }\n    }[\"SanityLive.useEffect\"], []);\n    const draftModeEnabledWarnRef = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)(void 0);\n    return (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)({\n        \"SanityLive.useEffect\": ()=>{\n            if (draftModeEnabled) return clearTimeout(draftModeEnabledWarnRef.current), ({\n                \"SanityLive.useEffect\": ()=>{\n                    draftModeEnabledWarnRef.current = setTimeout({\n                        \"SanityLive.useEffect\": ()=>{\n                            console.warn(\"Sanity Live: Draft mode was enabled, but is now being disabled\");\n                        }\n                    }[\"SanityLive.useEffect\"]);\n                }\n            })[\"SanityLive.useEffect\"];\n        }\n    }[\"SanityLive.useEffect\"], [\n        draftModeEnabled\n    ]), /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            draftModeEnabled && loadComlink && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PresentationComlink, {\n                draftModeEnabled,\n                draftModePerspective\n            }),\n            !draftModeEnabled && refreshOnMount && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(RefreshOnMount, {}),\n            !draftModeEnabled && refreshOnFocus && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(RefreshOnFocus, {}),\n            !draftModeEnabled && refreshOnReconnect && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(RefreshOnReconnect, {})\n        ]\n    });\n}\nSanityLive.displayName = \"SanityLive\";\n //# sourceMappingURL=live.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/next-loader/dist/client-components/live.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/next-loader/dist/server-actions.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@sanity/next-loader/dist/server-actions.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   revalidateSyncTags: () => (/* binding */ revalidateSyncTags),
/* harmony export */   setPerspectiveCookie: () => (/* binding */ setPerspectiveCookie)
/* harmony export */ });
/* harmony import */ var private_next_rsc_action_client_wrapper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! private-next-rsc-action-client-wrapper */ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-client-wrapper.js");
/* __next_internal_action_entry_do_not_use__ {"7f819735203160e7e22e2ef4afa67c6d5172248e92":"setPerspectiveCookie","7faaf08e057fc174ba647c29a180bb15fba7da76cc":"revalidateSyncTags"} */ 
var revalidateSyncTags = /*#__PURE__*/ (0,private_next_rsc_action_client_wrapper__WEBPACK_IMPORTED_MODULE_0__.createServerReference)("7faaf08e057fc174ba647c29a180bb15fba7da76cc", private_next_rsc_action_client_wrapper__WEBPACK_IMPORTED_MODULE_0__.callServer, void 0, private_next_rsc_action_client_wrapper__WEBPACK_IMPORTED_MODULE_0__.findSourceMapURL, "revalidateSyncTags");
var setPerspectiveCookie = /*#__PURE__*/ (0,private_next_rsc_action_client_wrapper__WEBPACK_IMPORTED_MODULE_0__.createServerReference)("7f819735203160e7e22e2ef4afa67c6d5172248e92", private_next_rsc_action_client_wrapper__WEBPACK_IMPORTED_MODULE_0__.callServer, void 0, private_next_rsc_action_client_wrapper__WEBPACK_IMPORTED_MODULE_0__.findSourceMapURL, "setPerspectiveCookie");
 //# sourceMappingURL=server-actions.js.map


/***/ }),

/***/ "(ssr)/./node_modules/@sanity/next-loader/node_modules/@sanity/comlink/dist/index.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@sanity/next-loader/node_modules/@sanity/comlink/dist/index.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DOMAIN: () => (/* binding */ DOMAIN),\n/* harmony export */   FETCH_TIMEOUT_DEFAULT: () => (/* binding */ FETCH_TIMEOUT_DEFAULT),\n/* harmony export */   HANDSHAKE_INTERVAL: () => (/* binding */ HANDSHAKE_INTERVAL),\n/* harmony export */   HANDSHAKE_MSG_TYPES: () => (/* binding */ HANDSHAKE_MSG_TYPES),\n/* harmony export */   HEARTBEAT_INTERVAL: () => (/* binding */ HEARTBEAT_INTERVAL),\n/* harmony export */   INTERNAL_MSG_TYPES: () => (/* binding */ INTERNAL_MSG_TYPES),\n/* harmony export */   MSG_DISCONNECT: () => (/* binding */ MSG_DISCONNECT),\n/* harmony export */   MSG_HANDSHAKE_ACK: () => (/* binding */ MSG_HANDSHAKE_ACK),\n/* harmony export */   MSG_HANDSHAKE_SYN: () => (/* binding */ MSG_HANDSHAKE_SYN),\n/* harmony export */   MSG_HANDSHAKE_SYN_ACK: () => (/* binding */ MSG_HANDSHAKE_SYN_ACK),\n/* harmony export */   MSG_HEARTBEAT: () => (/* binding */ MSG_HEARTBEAT),\n/* harmony export */   MSG_RESPONSE: () => (/* binding */ MSG_RESPONSE),\n/* harmony export */   RESPONSE_TIMEOUT_DEFAULT: () => (/* binding */ RESPONSE_TIMEOUT_DEFAULT),\n/* harmony export */   createConnection: () => (/* binding */ createConnection),\n/* harmony export */   createConnectionMachine: () => (/* binding */ createConnectionMachine),\n/* harmony export */   createController: () => (/* binding */ createController),\n/* harmony export */   createListenLogic: () => (/* binding */ createListenLogic),\n/* harmony export */   createNode: () => (/* binding */ createNode),\n/* harmony export */   createNodeMachine: () => (/* binding */ createNodeMachine),\n/* harmony export */   createRequestMachine: () => (/* binding */ createRequestMachine)\n/* harmony export */ });\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! uuid */ \"(ssr)/./node_modules/uuid/dist/esm/v4.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! xstate */ \"(ssr)/./node_modules/xstate/actors/dist/xstate-actors.development.esm.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! xstate */ \"(ssr)/./node_modules/xstate/dist/xstate.development.esm.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! xstate */ \"(ssr)/./node_modules/xstate/dist/log-0acd9069.development.esm.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! xstate */ \"(ssr)/./node_modules/xstate/dist/raise-1db27a82.development.esm.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/defer.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/fromEvent.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/map.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/util/pipe.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/filter.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/bufferCount.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/concatMap.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/take.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/empty.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/takeUntil.js\");\n\n\n\nconst listenInputFromContext = (config) => ({\n  context\n}) => {\n  const { count, include, exclude, responseType = \"message.received\" } = config;\n  return {\n    count,\n    domain: context.domain,\n    from: context.connectTo,\n    include: include ? Array.isArray(include) ? include : [include] : [],\n    exclude: exclude ? Array.isArray(exclude) ? exclude : [exclude] : [],\n    responseType,\n    target: context.target,\n    to: context.name\n  };\n}, listenFilter = (input) => (event) => {\n  const { data } = event;\n  return (input.include.length ? input.include.includes(data.type) : !0) && (input.exclude.length ? !input.exclude.includes(data.type) : !0) && data.domain === input.domain && data.from === input.from && data.to === input.to && (!input.target || event.source === input.target);\n}, eventToMessage = (type) => (event) => ({\n  type,\n  message: event\n}), messageEvents$ = (0,rxjs__WEBPACK_IMPORTED_MODULE_0__.defer)(\n  () => (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.fromEvent)(window, \"message\")\n), createListenLogic = (compatMap) => (0,xstate__WEBPACK_IMPORTED_MODULE_2__.fromEventObservable)(({ input }) => messageEvents$.pipe(\n  compatMap ? (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.map)(compatMap) : (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.pipe)(),\n  (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.filter)(listenFilter(input)),\n  (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.map)(eventToMessage(input.responseType)),\n  input.count ? (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.pipe)(\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.bufferCount)(input.count),\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_7__.concatMap)((arr) => arr),\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_8__.take)(input.count)\n  ) : (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.pipe)()\n)), DOMAIN = \"sanity/comlink\", RESPONSE_TIMEOUT_DEFAULT = 3e3, FETCH_TIMEOUT_DEFAULT = 1e4, HEARTBEAT_INTERVAL = 1e3, HANDSHAKE_INTERVAL = 500, MSG_RESPONSE = \"comlink/response\", MSG_HEARTBEAT = \"comlink/heartbeat\", MSG_DISCONNECT = \"comlink/disconnect\", MSG_HANDSHAKE_SYN = \"comlink/handshake/syn\", MSG_HANDSHAKE_SYN_ACK = \"comlink/handshake/syn-ack\", MSG_HANDSHAKE_ACK = \"comlink/handshake/ack\", HANDSHAKE_MSG_TYPES = [\n  MSG_HANDSHAKE_SYN,\n  MSG_HANDSHAKE_SYN_ACK,\n  MSG_HANDSHAKE_ACK\n], INTERNAL_MSG_TYPES = [\n  MSG_RESPONSE,\n  MSG_DISCONNECT,\n  MSG_HEARTBEAT,\n  ...HANDSHAKE_MSG_TYPES\n], throwOnEvent = (message) => (source) => source.pipe(\n  (0,rxjs__WEBPACK_IMPORTED_MODULE_8__.take)(1),\n  (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.map)(() => {\n    throw new Error(message);\n  })\n), createRequestMachine = () => (0,xstate__WEBPACK_IMPORTED_MODULE_9__.setup)({\n  types: {},\n  actors: {\n    listen: (0,xstate__WEBPACK_IMPORTED_MODULE_2__.fromEventObservable)(\n      ({\n        input\n      }) => {\n        const abortSignal$ = input.signal ? (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.fromEvent)(input.signal, \"abort\").pipe(\n          throwOnEvent(`Request ${input.requestId} aborted`)\n        ) : rxjs__WEBPACK_IMPORTED_MODULE_10__.EMPTY, messageFilter = (event) => event.data?.type === MSG_RESPONSE && event.data?.responseTo === input.requestId && !!event.source && input.sources.has(event.source);\n        return (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.fromEvent)(window, \"message\").pipe(\n          (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.filter)(messageFilter),\n          (0,rxjs__WEBPACK_IMPORTED_MODULE_8__.take)(input.sources.size),\n          (0,rxjs__WEBPACK_IMPORTED_MODULE_11__.takeUntil)(abortSignal$)\n        );\n      }\n    )\n  },\n  actions: {\n    \"send message\": ({ context }, params) => {\n      const { sources, targetOrigin } = context, { message } = params;\n      sources.forEach((source) => {\n        source.postMessage(message, { targetOrigin });\n      });\n    },\n    \"on success\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.c)(\n      ({ context }) => context.parentRef,\n      ({ context, self }) => (context.response && context.resolvable?.resolve(context.response), {\n        type: \"request.success\",\n        requestId: self.id,\n        response: context.response,\n        responseTo: context.responseTo\n      })\n    ),\n    \"on fail\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.c)(\n      ({ context }) => context.parentRef,\n      ({ context, self }) => (context.suppressWarnings || console.warn(\n        `[@sanity/comlink] Received no response to message '${context.type}' on client '${context.from}' (ID: '${context.id}').`\n      ), context.resolvable?.reject(new Error(\"No response received\")), { type: \"request.failed\", requestId: self.id })\n    ),\n    \"on abort\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.c)(\n      ({ context }) => context.parentRef,\n      ({ context, self }) => (context.resolvable?.reject(new Error(\"Request aborted\")), { type: \"request.aborted\", requestId: self.id })\n    )\n  },\n  guards: {\n    expectsResponse: ({ context }) => context.expectResponse\n  },\n  delays: {\n    initialTimeout: 0,\n    responseTimeout: ({ context }) => context.responseTimeout ?? RESPONSE_TIMEOUT_DEFAULT\n  }\n}).createMachine({\n  /** @xstate-layout N4IgpgJg5mDOIC5QAoC2BDAxgCwJYDswBKAOlwgBswBiAD1gBd0GwT0AzFgJ2QNwdzoKAFVyowAewCuDItTRY8hUuSoBtAAwBdRKAAOE2P1wT8ukLUQBGAEwBWEgBYAnK+eOAzB7sB2DzY8rABoQAE9rDQc3V0cNTw8fAA4NHwBfVJCFHAJiElgwfAgCKGpNHSQQAyMBU3NLBDsrDxI7DTaAjQA2OOcNDxDwhHsNJx9Ou0TOq2cJxP9HdMyMbOU8gqL8ErUrcv1DY1qK+sbm1vaPLp6+gcRnGydo9wDGycWQLKVc9AB3dGNN6jiWCwdAwMrmKoHMxHRCJRKOEiJHwuZKBZwXKzBMKIGyYkhtAkXOweTqOHw2RJvD45Ug-P4CAH0JgsNicMA8LhwAz4fKicTSWTyZafWm-f5QcEVSE1aGgepwhFIlF9aYYrGDC4+JzEppjGzOUkeGbpDIgfASCBwczU5QQ-YyuqIAC0nRuCBd+IJXu9KSpwppZEoYDt1RMsosiEcNjdVjiJEeGisiSTHkcVgWpptuXyhWKIahjqGzi1BqRJINnVcdkcbuTLS9VYC8ISfsUAbp4vzDphCHJIyjBvJNlxNmRNexQ3sJGH43GPj8jWJrZWuXYfyoEC7YcLsbrgRsjkcvkmdgNbopVhIPhVfnsh8ClMz-tWsCkmEwcHgUvt257u8v+6Hse4xnhOdZnImVidPqCRNB4JqpEAA */\n  context: ({ input }) => ({\n    channelId: input.channelId,\n    data: input.data,\n    domain: input.domain,\n    expectResponse: input.expectResponse ?? !1,\n    from: input.from,\n    id: `msg-${(0,uuid__WEBPACK_IMPORTED_MODULE_13__[\"default\"])()}`,\n    parentRef: input.parentRef,\n    resolvable: input.resolvable,\n    response: null,\n    responseTimeout: input.responseTimeout,\n    responseTo: input.responseTo,\n    signal: input.signal,\n    sources: input.sources instanceof Set ? input.sources : /* @__PURE__ */ new Set([input.sources]),\n    suppressWarnings: input.suppressWarnings,\n    targetOrigin: input.targetOrigin,\n    to: input.to,\n    type: input.type\n  }),\n  initial: \"idle\",\n  on: {\n    abort: \".aborted\"\n  },\n  states: {\n    idle: {\n      after: {\n        initialTimeout: [\n          {\n            target: \"sending\"\n          }\n        ]\n      }\n    },\n    sending: {\n      entry: {\n        type: \"send message\",\n        params: ({ context }) => {\n          const { channelId, data, domain, from, id, responseTo, to, type } = context;\n          return { message: {\n            channelId,\n            data,\n            domain,\n            from,\n            id,\n            to,\n            type,\n            responseTo\n          } };\n        }\n      },\n      always: [\n        {\n          guard: \"expectsResponse\",\n          target: \"awaiting\"\n        },\n        \"success\"\n      ]\n    },\n    awaiting: {\n      invoke: {\n        id: \"listen for response\",\n        src: \"listen\",\n        input: ({ context }) => ({\n          requestId: context.id,\n          sources: context.sources,\n          signal: context.signal\n        }),\n        onError: \"aborted\"\n      },\n      after: {\n        responseTimeout: \"failed\"\n      },\n      on: {\n        message: {\n          actions: (0,xstate__WEBPACK_IMPORTED_MODULE_12__.a)({\n            response: ({ event }) => event.data.data,\n            responseTo: ({ event }) => event.data.responseTo\n          }),\n          target: \"success\"\n        }\n      }\n    },\n    failed: {\n      type: \"final\",\n      entry: \"on fail\"\n    },\n    success: {\n      type: \"final\",\n      entry: \"on success\"\n    },\n    aborted: {\n      type: \"final\",\n      entry: \"on abort\"\n    }\n  },\n  output: ({ context, self }) => ({\n    requestId: self.id,\n    response: context.response,\n    responseTo: context.responseTo\n  })\n}), sendBackAtInterval = (0,xstate__WEBPACK_IMPORTED_MODULE_2__.fromCallback)(({ sendBack, input }) => {\n  const send = () => {\n    sendBack(input.event);\n  };\n  input.immediate && send();\n  const interval = setInterval(send, input.interval);\n  return () => {\n    clearInterval(interval);\n  };\n}), createConnectionMachine = () => (0,xstate__WEBPACK_IMPORTED_MODULE_9__.setup)({\n  types: {},\n  actors: {\n    requestMachine: createRequestMachine(),\n    listen: createListenLogic(),\n    sendBackAtInterval\n  },\n  actions: {\n    \"buffer message\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.b)(({ enqueue }) => {\n      enqueue.assign({\n        buffer: ({ event, context }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"post\"), [...context.buffer, event.data])\n      }), enqueue.emit(({ event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"post\"), {\n        type: \"buffer.added\",\n        message: event.data\n      }));\n    }),\n    \"create request\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.a)({\n      requests: ({ context, event, self, spawn }) => {\n        (0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"request\");\n        const requests = (Array.isArray(event.data) ? event.data : [event.data]).map((request) => {\n          const id = `req-${(0,uuid__WEBPACK_IMPORTED_MODULE_13__[\"default\"])()}`;\n          return spawn(\"requestMachine\", {\n            id,\n            input: {\n              channelId: context.channelId,\n              data: request.data,\n              domain: context.domain,\n              expectResponse: request.expectResponse,\n              from: context.name,\n              parentRef: self,\n              responseTo: request.responseTo,\n              sources: context.target,\n              targetOrigin: context.targetOrigin,\n              to: context.connectTo,\n              type: request.type\n            }\n          });\n        });\n        return [...context.requests, ...requests];\n      }\n    }),\n    \"emit received message\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.b)(({ enqueue }) => {\n      enqueue.emit(({ event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"message.received\"), {\n        type: \"message\",\n        message: event.message.data\n      }));\n    }),\n    \"emit status\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.e)((_, params) => ({\n      type: \"status\",\n      status: params.status\n    })),\n    \"post message\": (0,xstate__WEBPACK_IMPORTED_MODULE_14__.O)(({ event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"post\"), {\n      type: \"request\",\n      data: {\n        data: event.data.data,\n        expectResponse: !0,\n        type: event.data.type\n      }\n    })),\n    \"remove request\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.b)(({ context, enqueue, event }) => {\n      (0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, [\"request.success\", \"request.failed\", \"request.aborted\"]), (0,xstate__WEBPACK_IMPORTED_MODULE_14__.R)(event.requestId), enqueue.assign({ requests: context.requests.filter(({ id }) => id !== event.requestId) });\n    }),\n    respond: (0,xstate__WEBPACK_IMPORTED_MODULE_14__.O)(({ event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"response\"), {\n      type: \"request\",\n      data: {\n        data: event.data,\n        type: MSG_RESPONSE,\n        responseTo: event.respondTo\n      }\n    })),\n    \"send handshake ack\": (0,xstate__WEBPACK_IMPORTED_MODULE_14__.O)({\n      type: \"request\",\n      data: { type: MSG_HANDSHAKE_ACK }\n    }),\n    \"send disconnect\": (0,xstate__WEBPACK_IMPORTED_MODULE_14__.O)(() => ({\n      type: \"request\",\n      data: { type: MSG_DISCONNECT }\n    })),\n    \"send handshake syn\": (0,xstate__WEBPACK_IMPORTED_MODULE_14__.O)({\n      type: \"request\",\n      data: { type: MSG_HANDSHAKE_SYN }\n    }),\n    \"send pending messages\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.b)(({ enqueue }) => {\n      enqueue.raise(({ context }) => ({\n        type: \"request\",\n        data: context.buffer.map(({ data, type }) => ({ data, type }))\n      })), enqueue.emit(({ context }) => ({\n        type: \"buffer.flushed\",\n        messages: context.buffer\n      })), enqueue.assign({\n        buffer: []\n      });\n    }),\n    \"set target\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.a)({\n      target: ({ event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"target.set\"), event.target)\n    })\n  },\n  guards: {\n    \"has target\": ({ context }) => !!context.target,\n    \"should send heartbeats\": ({ context }) => context.heartbeat\n  }\n}).createMachine({\n  /** @xstate-layout N4IgpgJg5mDOIC5QGMAWBDAdpsAbAxAC7oBOMhAdLGIQNoAMAuoqAA4D2sAloV+5ixAAPRAHZRAJgoAWABz0ArHICMy2QGZZCgJwAaEAE9EE+tIrb6ANgkLl46fTuj1AXxf60WHARJgAjgCucJSwAcjIcLAMzEggHNy8-IIiCKLS2hQS6qb2yurisrL6RgjK9LIyCuqq0g7WstZuHhjYePi+gcEUAGboXLiQ0YLxPHwCsSmiCgoykpayDtqS6trqxYjKEk0gnq24FFwQA-jI-DjIdEzDnKNJExuOZpZ12eq29OrSCuupypYUojUaTKCnm5Wk2123gORzA+HilxibBuiXGoBSGnUAIU4gU9FWamUtR+lmUM1EllBEkslMUEnpkJa0JaEFgGAA1lxMFB8LADJghrERqjkhtshk3mTtNo5OpqpYfqCKhTptoqpY1WUtu4dky8BQWWz0Jzue1-EFYIjrgkxqLSupqRRPpoPqJtLI0hIioZENJJE7NnJ8ZYHVk1YyvPrDRyuTyEYLkTa7uixVlMh81KGFhS1j6EPkZlpVjTphr8mkI3sDVhWTHTQBbSLoGAUXwRLgAN0GVyFKNt91KimUFEKXvKC2s9R+6X+jipnzJeSqEJ1UKjNaNJp5EC4sFOrQuCbifeTwg2cgoym0RPxDtqkj0eaB9Ao8zSolMEivZVcq71+33c5CEgeFOCtXskzRM8EDxKRpmkSw3QJbQsmpH5tHmV8JHSbJpDsakV2aSMALOMALhAjoLXAxNbiglI-SxWw1Vw0QNDw0Qfg9KQ7EJSxHHxApK2hQCyOAiAzVgDhMGoI9hX7FMEHSF8cWkelpHURCbBsb481xAEgT9BQJCmWQsiE-URPI8TG1gWBmzAVsyLATtuyRY9ILtWoKmlL82Kqd0tAVJ91LMHFZDKIkVlkNVZHMkiDzE-Adz3UjDx7GiRQHCKnheD53k+HSSkDDIwpBVTqQwuKKEssSDTAUhCAAI3qyg0DIrd8Fkk86MQUMnVM+RynoegTDJH48hGp0vR-FDRqqKqasgOqGua9AQjATAd1NSiul6fpXOtWi7Wy19cslD4vnG7IX3oVjVDUVYEJQqrksW8SdstLqPKy0wKgG1RhtMWogqKhoMjkWp6XxUyFBe3c3tAz70vco6fq+V8PTkGUFzdQqNnELEM2yClrwwzQ4ZShKQJqr7UYU98AS0W9pT4z5pHG0yXwMkNNTyGk3B1TB2AgOBBDXXBDsyhSFG9EovQqN5i1JeRcKqw4Bkl+ToMx8x0j+EaqQ9XMSkBURMgMkEwQWKro2NWNNdPFJAzN0lJGM4slDxhBEJfXyplBd03wW1KxIdnrBxBh4JAyW75C8rJpmDqmIGWkgmpasPjqUcaHooMLHA0uU1UkJOgKW1B6rT1bWor5At0zgcTAkK7hrz1irB0D8cW0UvRPLyv07WqgNq2qAG+l9SnXUz0UOXD5xuMs3Y4+DVJBX7UiKrV6Q8gcfoJO54rFefLLqfJYX1WKYNLxL4NO1NwgA */\n  id: \"connection\",\n  context: ({ input }) => ({\n    id: input.id || `${input.name}-${(0,uuid__WEBPACK_IMPORTED_MODULE_13__[\"default\"])()}`,\n    buffer: [],\n    channelId: `chn-${(0,uuid__WEBPACK_IMPORTED_MODULE_13__[\"default\"])()}`,\n    connectTo: input.connectTo,\n    domain: input.domain ?? DOMAIN,\n    heartbeat: input.heartbeat ?? !1,\n    name: input.name,\n    requests: [],\n    target: input.target,\n    targetOrigin: input.targetOrigin\n  }),\n  on: {\n    \"target.set\": {\n      actions: \"set target\"\n    },\n    \"request.success\": {\n      actions: \"remove request\"\n    },\n    \"request.failed\": {\n      actions: \"remove request\"\n    }\n  },\n  initial: \"idle\",\n  states: {\n    idle: {\n      entry: [{ type: \"emit status\", params: { status: \"idle\" } }],\n      on: {\n        connect: {\n          target: \"handshaking\",\n          guard: \"has target\"\n        },\n        post: {\n          actions: \"buffer message\"\n        }\n      }\n    },\n    handshaking: {\n      id: \"handshaking\",\n      entry: [{ type: \"emit status\", params: { status: \"handshaking\" } }],\n      invoke: [\n        {\n          id: \"send syn\",\n          src: \"sendBackAtInterval\",\n          input: () => ({\n            event: { type: \"syn\" },\n            interval: HANDSHAKE_INTERVAL,\n            immediate: !0\n          })\n        },\n        {\n          id: \"listen for handshake\",\n          src: \"listen\",\n          input: (input) => listenInputFromContext({\n            include: MSG_HANDSHAKE_SYN_ACK,\n            count: 1\n          })(input)\n          /* Below would maybe be more readable than transitioning to\n          'connected' on 'message', and 'ack' on exit but having onDone when\n          using passing invocations currently breaks XState Editor */\n          // onDone: {\n          //   target: 'connected',\n          //   actions: 'ack',\n          // },\n        }\n      ],\n      on: {\n        syn: {\n          actions: \"send handshake syn\"\n        },\n        request: {\n          actions: \"create request\"\n        },\n        post: {\n          actions: \"buffer message\"\n        },\n        \"message.received\": {\n          target: \"connected\"\n        },\n        disconnect: {\n          target: \"disconnected\"\n        }\n      },\n      exit: \"send handshake ack\"\n    },\n    connected: {\n      entry: [\"send pending messages\", { type: \"emit status\", params: { status: \"connected\" } }],\n      invoke: {\n        id: \"listen for messages\",\n        src: \"listen\",\n        input: listenInputFromContext({\n          exclude: [MSG_RESPONSE, MSG_HEARTBEAT]\n        })\n      },\n      on: {\n        post: {\n          actions: \"post message\"\n        },\n        request: {\n          actions: \"create request\"\n        },\n        response: {\n          actions: \"respond\"\n        },\n        \"message.received\": {\n          actions: \"emit received message\"\n        },\n        disconnect: {\n          target: \"disconnected\"\n        }\n      },\n      initial: \"heartbeat\",\n      states: {\n        heartbeat: {\n          initial: \"checking\",\n          states: {\n            checking: {\n              always: {\n                guard: \"should send heartbeats\",\n                target: \"sending\"\n              }\n            },\n            sending: {\n              on: {\n                \"request.failed\": {\n                  target: \"#handshaking\"\n                }\n              },\n              invoke: {\n                id: \"send heartbeat\",\n                src: \"sendBackAtInterval\",\n                input: () => ({\n                  event: { type: \"post\", data: { type: MSG_HEARTBEAT, data: void 0 } },\n                  interval: 2e3,\n                  immediate: !1\n                })\n              }\n            }\n          }\n        }\n      }\n    },\n    disconnected: {\n      id: \"disconnected\",\n      entry: [\"send disconnect\", { type: \"emit status\", params: { status: \"disconnected\" } }],\n      on: {\n        request: {\n          actions: \"create request\"\n        },\n        post: {\n          actions: \"buffer message\"\n        },\n        connect: {\n          target: \"handshaking\",\n          guard: \"has target\"\n        }\n      }\n    }\n  }\n}), createConnection = (input, machine = createConnectionMachine()) => {\n  const id = input.id || `${input.name}-${(0,uuid__WEBPACK_IMPORTED_MODULE_13__[\"default\"])()}`, actor = (0,xstate__WEBPACK_IMPORTED_MODULE_14__.A)(machine, {\n    input: { ...input, id }\n  }), eventHandlers = /* @__PURE__ */ new Map(), unhandledMessages = /* @__PURE__ */ new Map(), on = (type, handler, options) => {\n    const handlers = eventHandlers.get(type) || /* @__PURE__ */ new Set();\n    eventHandlers.has(type) || eventHandlers.set(type, handlers), handlers.add(handler);\n    const unhandledMessagesForType = unhandledMessages.get(type);\n    if (unhandledMessagesForType) {\n      const replayCount = options?.replay ?? 1;\n      Array.from(unhandledMessagesForType).slice(-replayCount).forEach(async ({ data, id: id2 }) => {\n        const response = await handler(data);\n        response && actor.send({\n          type: \"response\",\n          respondTo: id2,\n          data: response\n        });\n      }), unhandledMessages.delete(type);\n    }\n    return () => {\n      handlers.delete(handler);\n    };\n  }, connect = () => {\n    actor.send({ type: \"connect\" });\n  }, disconnect = () => {\n    actor.send({ type: \"disconnect\" });\n  }, onStatus = (handler, filter2) => {\n    const { unsubscribe } = actor.on(\"status\", (event) => {\n      filter2 && event.status !== filter2 || handler(event.status);\n    });\n    return unsubscribe;\n  }, setTarget = (target) => {\n    actor.send({ type: \"target.set\", target });\n  }, post = (type, data) => {\n    const _data = { type, data };\n    actor.send({ type: \"post\", data: _data });\n  };\n  actor.on(\"message\", async ({ message }) => {\n    const handlers = eventHandlers.get(message.type);\n    if (handlers) {\n      handlers.forEach(async (handler) => {\n        const response = await handler(message.data);\n        response && actor.send({ type: \"response\", respondTo: message.id, data: response });\n      });\n      return;\n    }\n    const unhandledMessagesForType = unhandledMessages.get(message.type);\n    unhandledMessagesForType ? unhandledMessagesForType.add(message) : unhandledMessages.set(message.type, /* @__PURE__ */ new Set([message]));\n  });\n  const stop = () => {\n    actor.stop();\n  }, start = () => (actor.start(), stop);\n  return {\n    actor,\n    connect,\n    disconnect,\n    id,\n    name: input.name,\n    machine,\n    on,\n    onStatus,\n    post,\n    setTarget,\n    start,\n    stop,\n    get target() {\n      return actor.getSnapshot().context.target;\n    }\n  };\n}, cleanupConnection = (connection) => {\n  connection.disconnect(), setTimeout(() => {\n    connection.stop();\n  }, 0);\n}, noop = () => {\n}, createController = (input) => {\n  const { targetOrigin } = input, targets = /* @__PURE__ */ new Set(), channels = /* @__PURE__ */ new Set();\n  return {\n    addTarget: (target) => {\n      if (targets.has(target))\n        return noop;\n      if (!targets.size || !channels.size)\n        return targets.add(target), channels.forEach((channel) => {\n          channel.connections.forEach((connection) => {\n            connection.setTarget(target), connection.connect();\n          });\n        }), () => {\n          targets.delete(target), channels.forEach((channel) => {\n            channel.connections.forEach((connection) => {\n              connection.target === target && connection.disconnect();\n            });\n          });\n        };\n      targets.add(target);\n      const targetConnections = /* @__PURE__ */ new Set();\n      return channels.forEach((channel) => {\n        const connection = createConnection(\n          {\n            ...channel.input,\n            target,\n            targetOrigin\n          },\n          channel.machine\n        );\n        targetConnections.add(connection), channel.connections.add(connection), channel.subscribers.forEach(({ type, handler, unsubscribers }) => {\n          unsubscribers.push(connection.on(type, handler));\n        }), channel.internalEventSubscribers.forEach(({ type, handler, unsubscribers }) => {\n          unsubscribers.push(connection.actor.on(type, handler).unsubscribe);\n        }), channel.statusSubscribers.forEach(({ handler, unsubscribers }) => {\n          unsubscribers.push(\n            connection.onStatus((status) => handler({ connection: connection.id, status }))\n          );\n        }), connection.start(), connection.connect();\n      }), () => {\n        targets.delete(target), targetConnections.forEach((connection) => {\n          cleanupConnection(connection), channels.forEach((channel) => {\n            channel.connections.delete(connection);\n          });\n        });\n      };\n    },\n    createChannel: (input2, machine = createConnectionMachine()) => {\n      const channel = {\n        connections: /* @__PURE__ */ new Set(),\n        input: input2,\n        internalEventSubscribers: /* @__PURE__ */ new Set(),\n        machine,\n        statusSubscribers: /* @__PURE__ */ new Set(),\n        subscribers: /* @__PURE__ */ new Set()\n      };\n      channels.add(channel);\n      const { connections, internalEventSubscribers, statusSubscribers, subscribers } = channel;\n      if (targets.size)\n        targets.forEach((target) => {\n          const connection = createConnection(\n            {\n              ...input2,\n              target,\n              targetOrigin\n            },\n            machine\n          );\n          connections.add(connection);\n        });\n      else {\n        const connection = createConnection({ ...input2, targetOrigin }, machine);\n        connections.add(connection);\n      }\n      const post = (...params) => {\n        const [type, data] = params;\n        connections.forEach((connection) => {\n          connection.post(type, data);\n        });\n      }, on = (type, handler) => {\n        const unsubscribers = [];\n        connections.forEach((connection) => {\n          unsubscribers.push(connection.on(type, handler));\n        });\n        const subscriber = { type, handler, unsubscribers };\n        return subscribers.add(subscriber), () => {\n          unsubscribers.forEach((unsub) => unsub()), subscribers.delete(subscriber);\n        };\n      }, onInternalEvent = (type, handler) => {\n        const unsubscribers = [];\n        connections.forEach((connection) => {\n          unsubscribers.push(connection.actor.on(type, handler).unsubscribe);\n        });\n        const subscriber = { type, handler, unsubscribers };\n        return internalEventSubscribers.add(subscriber), () => {\n          unsubscribers.forEach((unsub) => unsub()), internalEventSubscribers.delete(subscriber);\n        };\n      }, onStatus = (handler) => {\n        const unsubscribers = [];\n        connections.forEach((connection) => {\n          unsubscribers.push(\n            connection.onStatus((status) => handler({ connection: connection.id, status }))\n          );\n        });\n        const subscriber = { handler, unsubscribers };\n        return statusSubscribers.add(subscriber), () => {\n          unsubscribers.forEach((unsub) => unsub()), statusSubscribers.delete(subscriber);\n        };\n      }, stop = () => {\n        const connections2 = channel.connections;\n        connections2.forEach(cleanupConnection), connections2.clear(), channels.delete(channel);\n      };\n      return {\n        on,\n        onInternalEvent,\n        onStatus,\n        post,\n        start: () => (connections.forEach((connection) => {\n          connection.start(), connection.connect();\n        }), stop),\n        stop\n      };\n    },\n    destroy: () => {\n      channels.forEach(({ connections }) => {\n        connections.forEach(cleanupConnection), connections.clear();\n      }), channels.clear(), targets.clear();\n    }\n  };\n}, createNodeMachine = () => (0,xstate__WEBPACK_IMPORTED_MODULE_9__.setup)({\n  types: {},\n  actors: {\n    requestMachine: createRequestMachine(),\n    listen: createListenLogic()\n  },\n  actions: {\n    \"buffer handshake\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.a)({\n      handshakeBuffer: ({ event, context }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"message.received\"), [...context.handshakeBuffer, event])\n    }),\n    \"buffer message\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.b)(({ enqueue }) => {\n      enqueue.assign({\n        buffer: ({ event, context }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"post\"), [\n          ...context.buffer,\n          {\n            data: event.data,\n            resolvable: event.resolvable,\n            options: event.options\n          }\n        ])\n      }), enqueue.emit(({ event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"post\"), {\n        type: \"buffer.added\",\n        message: event.data\n      }));\n    }),\n    \"create request\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.a)({\n      requests: ({ context, event, self, spawn }) => {\n        (0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"request\");\n        const requests = (Array.isArray(event.data) ? event.data : [event.data]).map((request) => {\n          const id = `req-${(0,uuid__WEBPACK_IMPORTED_MODULE_13__[\"default\"])()}`;\n          return spawn(\"requestMachine\", {\n            id,\n            input: {\n              channelId: context.channelId,\n              data: request.data,\n              domain: context.domain,\n              expectResponse: request.expectResponse,\n              from: context.name,\n              parentRef: self,\n              resolvable: request.resolvable,\n              responseTimeout: request.options?.responseTimeout,\n              responseTo: request.responseTo,\n              signal: request.options?.signal,\n              sources: context.target,\n              suppressWarnings: request.options?.suppressWarnings,\n              targetOrigin: context.targetOrigin,\n              to: context.connectTo,\n              type: request.type\n            }\n          });\n        });\n        return [...context.requests, ...requests];\n      }\n    }),\n    \"emit heartbeat\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.e)(() => ({\n      type: \"heartbeat\"\n    })),\n    \"emit received message\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.b)(({ enqueue }) => {\n      enqueue.emit(({ event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"message.received\"), {\n        type: \"message\",\n        message: event.message.data\n      }));\n    }),\n    \"emit status\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.e)((_, params) => ({\n      type: \"status\",\n      status: params.status\n    })),\n    \"post message\": (0,xstate__WEBPACK_IMPORTED_MODULE_14__.O)(({ event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"post\"), {\n      type: \"request\",\n      data: {\n        data: event.data.data,\n        expectResponse: !!event.resolvable,\n        type: event.data.type,\n        resolvable: event.resolvable,\n        options: event.options\n      }\n    })),\n    \"process pending handshakes\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.b)(({ context, enqueue }) => {\n      context.handshakeBuffer.forEach((event) => enqueue.raise(event)), enqueue.assign({\n        handshakeBuffer: []\n      });\n    }),\n    \"remove request\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.b)(({ context, enqueue, event }) => {\n      (0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, [\"request.success\", \"request.failed\", \"request.aborted\"]), (0,xstate__WEBPACK_IMPORTED_MODULE_14__.R)(event.requestId), enqueue.assign({ requests: context.requests.filter(({ id }) => id !== event.requestId) });\n    }),\n    \"send response\": (0,xstate__WEBPACK_IMPORTED_MODULE_14__.O)(({ event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, [\"message.received\", \"heartbeat.received\"]), {\n      type: \"request\",\n      data: {\n        type: MSG_RESPONSE,\n        responseTo: event.message.data.id,\n        data: void 0\n      }\n    })),\n    \"send handshake syn ack\": (0,xstate__WEBPACK_IMPORTED_MODULE_14__.O)({\n      type: \"request\",\n      data: { type: MSG_HANDSHAKE_SYN_ACK }\n    }),\n    \"send pending messages\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.b)(({ enqueue }) => {\n      enqueue.raise(({ context }) => ({\n        type: \"request\",\n        data: context.buffer.map(({ data, resolvable, options }) => ({\n          data: data.data,\n          type: data.type,\n          expectResponse: !!resolvable,\n          resolvable,\n          options\n        }))\n      })), enqueue.emit(({ context }) => ({\n        type: \"buffer.flushed\",\n        messages: context.buffer.map(({ data }) => data)\n      })), enqueue.assign({\n        buffer: []\n      });\n    }),\n    \"set connection config\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.a)({\n      channelId: ({ event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"handshake.syn\"), event.message.data.channelId),\n      target: ({ event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"handshake.syn\"), event.message.source || void 0),\n      targetOrigin: ({ event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"handshake.syn\"), event.message.origin)\n    })\n  },\n  guards: {\n    hasSource: ({ context }) => context.target !== null\n  }\n}).createMachine({\n  /** @xstate-layout N4IgpgJg5mDOIC5QDsD2EwGIBOYCOArnAC4B0sBAxpXLANoAMAuoqAA6qwCWxXqyrEAA9EAVgYAWUgEYJDUQA4JAZmUSJC0coDsAGhABPRNIYLSErdOkBOAGzbx227YUBfV-rQYc+IrDIAZgCGXAA2kIwsSCAc3Lz8giIIoiakqgBMDKbp2tYS0srp+kYI0ununuhgpFwQ4ZgQ-NVcyABuqADW1V7NdWAILe2UQfHIkZGCsTx8AtFJ6aKipAzWOtrpC7Z5BUWGiNoK6aS26RLW2tLaqkqqFSA9NX2YALa0QTCkuDRcrRHMk5xpgk5ogJLZSNZIVDoVCFLZiohbIVSLkXLZRHZDgxbHcHrV6rFiBNolNRolEVJbCsdGUzsoyhiEcllOC1DowelVmVrOUPPcqqQABZBZAQWDCjotKANJo1NqdboC4Wi8VBSXIKADeXDUbjf4kwFkkEILbg8RZMHKOzWKzKJkHJa086Xa4qZS4pUisUSqU+QgkYnsQ0zcnJaRLDbpZwKNQSBYspm2MEyC5KTnaDSSd18h7K71q32EwMxYPA0BJFLKY5yZxIrKSURM0RnFHSBTrQqQ9babQejBCr2q9XSiBcWCUfjIMCUIn6oNxEPGtTWFFR0RUy7iGzt+3Ip0XURXVZKPvVCfIKczyB+vyzqLzoGzcuIG0MGTyCztjRtjaJjbHVMNAUTdu1PUhz0vYhryLOcSwXMthBfK0ZGsLQGBZekCi0Jso1IdI23WG04zOE4wIg6coIgBox3Imdi1JRdnxNOxSHNSQkWtW0mTjMxMQ7fDzgcbNKn7WjKJeN4Pi+MAfj+e84MfUMFHbZZwxOHZNDyO09gQOQjmAhZJCM9IMjIycKOvQUwCCbBiAAI2sshpNkiB6NLJ9EIQBQbWOdJlMhYCUjbJkchXGsFmsJQMVsWl3BzKp4GiHoAXgjykgAWmkZZ6xy3LZF2EobCy6xsQWJQ42kE4FjA-EwBSxTjSRUhDgqkzgO2BxdykU4AvXFQ-KjMC8yHKV6qNJi6WOdcypcZsXGxe0JG0XySKjM5lKsMyLwsiAxsYzylDfONznUEqrmi+1ThkHqXDONbULi1wgA */\n  id: \"node\",\n  context: ({ input }) => ({\n    buffer: [],\n    channelId: null,\n    connectTo: input.connectTo,\n    domain: input.domain ?? DOMAIN,\n    handshakeBuffer: [],\n    name: input.name,\n    requests: [],\n    target: void 0,\n    targetOrigin: null\n  }),\n  // Always listen for handshake syn messages. The channel could have\n  // disconnected without being able to notify the node, and so need to\n  // re-establish the connection.\n  invoke: {\n    id: \"listen for handshake syn\",\n    src: \"listen\",\n    input: listenInputFromContext({\n      include: MSG_HANDSHAKE_SYN,\n      responseType: \"handshake.syn\"\n    })\n  },\n  on: {\n    \"request.success\": {\n      actions: \"remove request\"\n    },\n    \"request.failed\": {\n      actions: \"remove request\"\n    },\n    \"request.aborted\": {\n      actions: \"remove request\"\n    },\n    \"handshake.syn\": {\n      actions: \"set connection config\",\n      target: \".handshaking\"\n    }\n  },\n  initial: \"idle\",\n  states: {\n    idle: {\n      entry: [{ type: \"emit status\", params: { status: \"idle\" } }],\n      on: {\n        post: {\n          actions: \"buffer message\"\n        }\n      }\n    },\n    handshaking: {\n      guard: \"hasSource\",\n      entry: [\"send handshake syn ack\", { type: \"emit status\", params: { status: \"handshaking\" } }],\n      invoke: [\n        {\n          id: \"listen for handshake ack\",\n          src: \"listen\",\n          input: listenInputFromContext({\n            include: MSG_HANDSHAKE_ACK,\n            count: 1,\n            // Override the default `message.received` responseType to prevent\n            // buffering the ack message. We transition to the connected state\n            // using onDone instead of listening to this event using `on`\n            responseType: \"handshake.complete\"\n          }),\n          onDone: \"connected\"\n        },\n        {\n          id: \"listen for disconnect\",\n          src: \"listen\",\n          input: listenInputFromContext({\n            include: MSG_DISCONNECT,\n            count: 1,\n            responseType: \"disconnect\"\n          })\n        },\n        {\n          id: \"listen for messages\",\n          src: \"listen\",\n          input: listenInputFromContext({\n            exclude: [\n              MSG_DISCONNECT,\n              MSG_HANDSHAKE_SYN,\n              MSG_HANDSHAKE_ACK,\n              MSG_HEARTBEAT,\n              MSG_RESPONSE\n            ]\n          })\n        }\n      ],\n      on: {\n        request: {\n          actions: \"create request\"\n        },\n        post: {\n          actions: \"buffer message\"\n        },\n        \"message.received\": {\n          actions: \"buffer handshake\"\n        },\n        disconnect: {\n          target: \"idle\"\n        }\n      }\n    },\n    connected: {\n      entry: [\n        \"process pending handshakes\",\n        \"send pending messages\",\n        { type: \"emit status\", params: { status: \"connected\" } }\n      ],\n      invoke: [\n        {\n          id: \"listen for messages\",\n          src: \"listen\",\n          input: listenInputFromContext({\n            exclude: [\n              MSG_DISCONNECT,\n              MSG_HANDSHAKE_SYN,\n              MSG_HANDSHAKE_ACK,\n              MSG_HEARTBEAT,\n              MSG_RESPONSE\n            ]\n          })\n        },\n        {\n          id: \"listen for heartbeat\",\n          src: \"listen\",\n          input: listenInputFromContext({\n            include: MSG_HEARTBEAT,\n            responseType: \"heartbeat.received\"\n          })\n        },\n        {\n          id: \"listen for disconnect\",\n          src: \"listen\",\n          input: listenInputFromContext({\n            include: MSG_DISCONNECT,\n            count: 1,\n            responseType: \"disconnect\"\n          })\n        }\n      ],\n      on: {\n        request: {\n          actions: \"create request\"\n        },\n        post: {\n          actions: \"post message\"\n        },\n        disconnect: {\n          target: \"idle\"\n        },\n        \"message.received\": {\n          actions: [\"send response\", \"emit received message\"]\n        },\n        \"heartbeat.received\": {\n          actions: [\"send response\", \"emit heartbeat\"]\n        }\n      }\n    }\n  }\n}), createNode = (input, machine = createNodeMachine()) => {\n  const actor = (0,xstate__WEBPACK_IMPORTED_MODULE_14__.A)(machine, {\n    input\n  }), eventHandlers = /* @__PURE__ */ new Map(), unhandledMessages = /* @__PURE__ */ new Map(), on = (type, handler, options) => {\n    const handlers = eventHandlers.get(type) || /* @__PURE__ */ new Set();\n    eventHandlers.has(type) || eventHandlers.set(type, handlers), handlers.add(handler);\n    const unhandledMessagesForType = unhandledMessages.get(type);\n    if (unhandledMessagesForType) {\n      const replayCount = options?.replay ?? 1;\n      Array.from(unhandledMessagesForType).slice(-replayCount).forEach(({ data }) => handler(data)), unhandledMessages.delete(type);\n    }\n    return () => {\n      handlers.delete(handler);\n    };\n  };\n  let cachedStatus;\n  const onStatus = (handler, filter2) => {\n    const { unsubscribe } = actor.on(\n      \"status\",\n      (event) => {\n        cachedStatus = event.status, !(filter2 && event.status !== filter2) && handler(event.status);\n      }\n    );\n    return cachedStatus && handler(cachedStatus), unsubscribe;\n  }, post = (type, data) => {\n    const _data = { type, data };\n    actor.send({ type: \"post\", data: _data });\n  }, fetch = (type, data, options) => {\n    const { responseTimeout = FETCH_TIMEOUT_DEFAULT, signal, suppressWarnings } = options || {}, resolvable = Promise.withResolvers(), _data = { type, data };\n    return actor.send({\n      type: \"post\",\n      data: _data,\n      resolvable,\n      options: { responseTimeout, signal, suppressWarnings }\n    }), resolvable.promise;\n  };\n  actor.on(\"message\", ({ message }) => {\n    const handlers = eventHandlers.get(message.type);\n    if (handlers) {\n      handlers.forEach((handler) => handler(message.data));\n      return;\n    }\n    const unhandledMessagesForType = unhandledMessages.get(message.type);\n    unhandledMessagesForType ? unhandledMessagesForType.add(message) : unhandledMessages.set(message.type, /* @__PURE__ */ new Set([message]));\n  });\n  const stop = () => {\n    actor.stop();\n  };\n  return {\n    actor,\n    fetch,\n    machine,\n    on,\n    onStatus,\n    post,\n    start: () => (actor.start(), stop),\n    stop\n  };\n};\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/next-loader/node_modules/@sanity/comlink/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/presentation-comlink/dist/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@sanity/presentation-comlink/dist/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MSG_RESPONSE: () => (/* reexport safe */ _sanity_comlink__WEBPACK_IMPORTED_MODULE_0__.MSG_RESPONSE),\n/* harmony export */   createCompatibilityActors: () => (/* binding */ createCompatibilityActors),\n/* harmony export */   isMaybePresentation: () => (/* binding */ isMaybePresentation),\n/* harmony export */   isMaybePreviewIframe: () => (/* binding */ isMaybePreviewIframe),\n/* harmony export */   isMaybePreviewWindow: () => (/* binding */ isMaybePreviewWindow)\n/* harmony export */ });\n/* harmony import */ var _sanity_comlink__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sanity/comlink */ \"(ssr)/./node_modules/@sanity/presentation-comlink/node_modules/@sanity/comlink/dist/index.js\");\n\n\nconst channelsToComlinkMap = {\n  \"handshake/syn\": _sanity_comlink__WEBPACK_IMPORTED_MODULE_0__.MSG_HANDSHAKE_SYN,\n  \"handshake/syn-ack\": _sanity_comlink__WEBPACK_IMPORTED_MODULE_0__.MSG_HANDSHAKE_SYN_ACK,\n  \"handshake/ack\": _sanity_comlink__WEBPACK_IMPORTED_MODULE_0__.MSG_HANDSHAKE_ACK,\n  \"channel/response\": _sanity_comlink__WEBPACK_IMPORTED_MODULE_0__.MSG_RESPONSE,\n  \"channel/heartbeat\": _sanity_comlink__WEBPACK_IMPORTED_MODULE_0__.MSG_HEARTBEAT,\n  \"channel/disconnect\": _sanity_comlink__WEBPACK_IMPORTED_MODULE_0__.MSG_DISCONNECT,\n  \"overlay/focus\": \"visual-editing/focus\",\n  \"overlay/navigate\": \"visual-editing/navigate\",\n  \"overlay/toggle\": \"visual-editing/toggle\",\n  \"presentation/toggleOverlay\": \"presentation/toggle-overlay\"\n}, comlinkToChannelsMap = {\n  [_sanity_comlink__WEBPACK_IMPORTED_MODULE_0__.MSG_HANDSHAKE_SYN]: \"handshake/syn\",\n  [_sanity_comlink__WEBPACK_IMPORTED_MODULE_0__.MSG_HANDSHAKE_SYN_ACK]: \"handshake/syn-ack\",\n  [_sanity_comlink__WEBPACK_IMPORTED_MODULE_0__.MSG_HANDSHAKE_ACK]: \"handshake/ack\",\n  [_sanity_comlink__WEBPACK_IMPORTED_MODULE_0__.MSG_RESPONSE]: \"channel/response\",\n  [_sanity_comlink__WEBPACK_IMPORTED_MODULE_0__.MSG_HEARTBEAT]: \"channel/heartbeat\",\n  [_sanity_comlink__WEBPACK_IMPORTED_MODULE_0__.MSG_DISCONNECT]: \"channel/disconnect\",\n  \"visual-editing/focus\": \"overlay/focus\",\n  \"visual-editing/navigate\": \"overlay/navigate\",\n  \"visual-editing/toggle\": \"overlay/toggle\",\n  \"presentation/toggle-overlay\": \"presentation/toggleOverlay\"\n}, convertToComlinkEvent = (event) => {\n  const { data } = event;\n  return data && typeof data == \"object\" && \"domain\" in data && \"type\" in data && \"from\" in data && \"to\" in data && (data.domain === \"sanity/channels\" && (data.domain = _sanity_comlink__WEBPACK_IMPORTED_MODULE_0__.DOMAIN), data.to === \"overlays\" && (data.to = \"visual-editing\"), data.from === \"overlays\" && (data.from = \"visual-editing\"), data.channelId = data.connectionId, delete data.connectionId, data.type = channelsToComlinkMap[data.type] ?? data.type), event;\n}, convertToChannelsMessage = (comlinkMessage) => {\n  const { channelId, ...rest } = comlinkMessage, message = { ...rest, connectionId: channelId };\n  return message.domain === _sanity_comlink__WEBPACK_IMPORTED_MODULE_0__.DOMAIN && (message.domain = \"sanity/channels\"), message.to === \"visual-editing\" && (message.to = \"overlays\"), message.from === \"visual-editing\" && (message.from = \"overlays\"), message.type = comlinkToChannelsMap[message.type] ?? message.type, message.type === \"channel/response\" && message.responseTo && !message.data && (message.data = { responseTo: message.responseTo }), (message.type === \"handshake/syn\" || message.type === \"handshake/syn-ack\" || message.type === \"handshake/ack\") && (message.data = { id: message.connectionId }), message;\n}, sendAsChannelsMessage = ({ context }, params) => {\n  const { sources, targetOrigin } = context, message = convertToChannelsMessage(params.message);\n  sources.forEach((source) => {\n    source.postMessage(message, { targetOrigin });\n  });\n}, createCompatibilityActors = () => ({\n  listen: (0,_sanity_comlink__WEBPACK_IMPORTED_MODULE_0__.createListenLogic)(convertToComlinkEvent),\n  requestMachine: (0,_sanity_comlink__WEBPACK_IMPORTED_MODULE_0__.createRequestMachine)().provide({\n    actions: {\n      \"send message\": sendAsChannelsMessage\n    }\n  })\n});\nfunction isMaybePreviewIframe() {\n  return window.self !== window.top;\n}\nfunction isMaybePreviewWindow() {\n  return !!window.opener;\n}\nfunction isMaybePresentation() {\n  return isMaybePreviewIframe() || isMaybePreviewWindow();\n}\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9wcmVzZW50YXRpb24tY29tbGluay9kaXN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUE0TDtBQUM1SDtBQUNoRTtBQUNBLG1CQUFtQiw4REFBaUI7QUFDcEMsdUJBQXVCLGtFQUFxQjtBQUM1QyxtQkFBbUIsOERBQWlCO0FBQ3BDLHNCQUFzQix5REFBWTtBQUNsQyx1QkFBdUIsMERBQWE7QUFDcEMsd0JBQXdCLDJEQUFjO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELEdBQUcsOERBQWlCO0FBQ3BCLEdBQUcsa0VBQXFCO0FBQ3hCLEdBQUcsOERBQWlCO0FBQ3BCLEdBQUcseURBQVk7QUFDZixHQUFHLDBEQUFhO0FBQ2hCLEdBQUcsMkRBQWM7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsVUFBVSxPQUFPO0FBQ2pCLHlLQUF5SyxtREFBTTtBQUMvSyxDQUFDO0FBQ0QsVUFBVSxxQkFBcUIsOEJBQThCO0FBQzdELDRCQUE0QixtREFBTSw2VUFBNlUsZ0NBQWdDLHVJQUF1SSwwQkFBMEI7QUFDaGpCLENBQUMsNkJBQTZCLFNBQVM7QUFDdkMsVUFBVSx3QkFBd0I7QUFDbEM7QUFDQSxrQ0FBa0MsY0FBYztBQUNoRCxHQUFHO0FBQ0gsQ0FBQztBQUNELFVBQVUsa0VBQWlCO0FBQzNCLGtCQUFrQixxRUFBb0I7QUFDdEM7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFPRTtBQUNGIiwic291cmNlcyI6WyIvbWVkaWEvYXdhaXMvTmV3IFZvbHVtZS9Hb3Zlck5PciBIb3VzZSAvaGFja2F0aG9uLTMvc2Vjb25kVGltZXMvaGFja2F0aG9uLWJhbmRhZ2Uvbm9kZV9tb2R1bGVzL0BzYW5pdHkvcHJlc2VudGF0aW9uLWNvbWxpbmsvZGlzdC9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVMaXN0ZW5Mb2dpYywgY3JlYXRlUmVxdWVzdE1hY2hpbmUsIERPTUFJTiwgTVNHX0hBTkRTSEFLRV9TWU4sIE1TR19IQU5EU0hBS0VfU1lOX0FDSywgTVNHX0hBTkRTSEFLRV9BQ0ssIE1TR19SRVNQT05TRSwgTVNHX0hFQVJUQkVBVCwgTVNHX0RJU0NPTk5FQ1QgfSBmcm9tIFwiQHNhbml0eS9jb21saW5rXCI7XG5pbXBvcnQgeyBNU0dfUkVTUE9OU0UgYXMgTVNHX1JFU1BPTlNFMiB9IGZyb20gXCJAc2FuaXR5L2NvbWxpbmtcIjtcbmNvbnN0IGNoYW5uZWxzVG9Db21saW5rTWFwID0ge1xuICBcImhhbmRzaGFrZS9zeW5cIjogTVNHX0hBTkRTSEFLRV9TWU4sXG4gIFwiaGFuZHNoYWtlL3N5bi1hY2tcIjogTVNHX0hBTkRTSEFLRV9TWU5fQUNLLFxuICBcImhhbmRzaGFrZS9hY2tcIjogTVNHX0hBTkRTSEFLRV9BQ0ssXG4gIFwiY2hhbm5lbC9yZXNwb25zZVwiOiBNU0dfUkVTUE9OU0UsXG4gIFwiY2hhbm5lbC9oZWFydGJlYXRcIjogTVNHX0hFQVJUQkVBVCxcbiAgXCJjaGFubmVsL2Rpc2Nvbm5lY3RcIjogTVNHX0RJU0NPTk5FQ1QsXG4gIFwib3ZlcmxheS9mb2N1c1wiOiBcInZpc3VhbC1lZGl0aW5nL2ZvY3VzXCIsXG4gIFwib3ZlcmxheS9uYXZpZ2F0ZVwiOiBcInZpc3VhbC1lZGl0aW5nL25hdmlnYXRlXCIsXG4gIFwib3ZlcmxheS90b2dnbGVcIjogXCJ2aXN1YWwtZWRpdGluZy90b2dnbGVcIixcbiAgXCJwcmVzZW50YXRpb24vdG9nZ2xlT3ZlcmxheVwiOiBcInByZXNlbnRhdGlvbi90b2dnbGUtb3ZlcmxheVwiXG59LCBjb21saW5rVG9DaGFubmVsc01hcCA9IHtcbiAgW01TR19IQU5EU0hBS0VfU1lOXTogXCJoYW5kc2hha2Uvc3luXCIsXG4gIFtNU0dfSEFORFNIQUtFX1NZTl9BQ0tdOiBcImhhbmRzaGFrZS9zeW4tYWNrXCIsXG4gIFtNU0dfSEFORFNIQUtFX0FDS106IFwiaGFuZHNoYWtlL2Fja1wiLFxuICBbTVNHX1JFU1BPTlNFXTogXCJjaGFubmVsL3Jlc3BvbnNlXCIsXG4gIFtNU0dfSEVBUlRCRUFUXTogXCJjaGFubmVsL2hlYXJ0YmVhdFwiLFxuICBbTVNHX0RJU0NPTk5FQ1RdOiBcImNoYW5uZWwvZGlzY29ubmVjdFwiLFxuICBcInZpc3VhbC1lZGl0aW5nL2ZvY3VzXCI6IFwib3ZlcmxheS9mb2N1c1wiLFxuICBcInZpc3VhbC1lZGl0aW5nL25hdmlnYXRlXCI6IFwib3ZlcmxheS9uYXZpZ2F0ZVwiLFxuICBcInZpc3VhbC1lZGl0aW5nL3RvZ2dsZVwiOiBcIm92ZXJsYXkvdG9nZ2xlXCIsXG4gIFwicHJlc2VudGF0aW9uL3RvZ2dsZS1vdmVybGF5XCI6IFwicHJlc2VudGF0aW9uL3RvZ2dsZU92ZXJsYXlcIlxufSwgY29udmVydFRvQ29tbGlua0V2ZW50ID0gKGV2ZW50KSA9PiB7XG4gIGNvbnN0IHsgZGF0YSB9ID0gZXZlbnQ7XG4gIHJldHVybiBkYXRhICYmIHR5cGVvZiBkYXRhID09IFwib2JqZWN0XCIgJiYgXCJkb21haW5cIiBpbiBkYXRhICYmIFwidHlwZVwiIGluIGRhdGEgJiYgXCJmcm9tXCIgaW4gZGF0YSAmJiBcInRvXCIgaW4gZGF0YSAmJiAoZGF0YS5kb21haW4gPT09IFwic2FuaXR5L2NoYW5uZWxzXCIgJiYgKGRhdGEuZG9tYWluID0gRE9NQUlOKSwgZGF0YS50byA9PT0gXCJvdmVybGF5c1wiICYmIChkYXRhLnRvID0gXCJ2aXN1YWwtZWRpdGluZ1wiKSwgZGF0YS5mcm9tID09PSBcIm92ZXJsYXlzXCIgJiYgKGRhdGEuZnJvbSA9IFwidmlzdWFsLWVkaXRpbmdcIiksIGRhdGEuY2hhbm5lbElkID0gZGF0YS5jb25uZWN0aW9uSWQsIGRlbGV0ZSBkYXRhLmNvbm5lY3Rpb25JZCwgZGF0YS50eXBlID0gY2hhbm5lbHNUb0NvbWxpbmtNYXBbZGF0YS50eXBlXSA/PyBkYXRhLnR5cGUpLCBldmVudDtcbn0sIGNvbnZlcnRUb0NoYW5uZWxzTWVzc2FnZSA9IChjb21saW5rTWVzc2FnZSkgPT4ge1xuICBjb25zdCB7IGNoYW5uZWxJZCwgLi4ucmVzdCB9ID0gY29tbGlua01lc3NhZ2UsIG1lc3NhZ2UgPSB7IC4uLnJlc3QsIGNvbm5lY3Rpb25JZDogY2hhbm5lbElkIH07XG4gIHJldHVybiBtZXNzYWdlLmRvbWFpbiA9PT0gRE9NQUlOICYmIChtZXNzYWdlLmRvbWFpbiA9IFwic2FuaXR5L2NoYW5uZWxzXCIpLCBtZXNzYWdlLnRvID09PSBcInZpc3VhbC1lZGl0aW5nXCIgJiYgKG1lc3NhZ2UudG8gPSBcIm92ZXJsYXlzXCIpLCBtZXNzYWdlLmZyb20gPT09IFwidmlzdWFsLWVkaXRpbmdcIiAmJiAobWVzc2FnZS5mcm9tID0gXCJvdmVybGF5c1wiKSwgbWVzc2FnZS50eXBlID0gY29tbGlua1RvQ2hhbm5lbHNNYXBbbWVzc2FnZS50eXBlXSA/PyBtZXNzYWdlLnR5cGUsIG1lc3NhZ2UudHlwZSA9PT0gXCJjaGFubmVsL3Jlc3BvbnNlXCIgJiYgbWVzc2FnZS5yZXNwb25zZVRvICYmICFtZXNzYWdlLmRhdGEgJiYgKG1lc3NhZ2UuZGF0YSA9IHsgcmVzcG9uc2VUbzogbWVzc2FnZS5yZXNwb25zZVRvIH0pLCAobWVzc2FnZS50eXBlID09PSBcImhhbmRzaGFrZS9zeW5cIiB8fCBtZXNzYWdlLnR5cGUgPT09IFwiaGFuZHNoYWtlL3N5bi1hY2tcIiB8fCBtZXNzYWdlLnR5cGUgPT09IFwiaGFuZHNoYWtlL2Fja1wiKSAmJiAobWVzc2FnZS5kYXRhID0geyBpZDogbWVzc2FnZS5jb25uZWN0aW9uSWQgfSksIG1lc3NhZ2U7XG59LCBzZW5kQXNDaGFubmVsc01lc3NhZ2UgPSAoeyBjb250ZXh0IH0sIHBhcmFtcykgPT4ge1xuICBjb25zdCB7IHNvdXJjZXMsIHRhcmdldE9yaWdpbiB9ID0gY29udGV4dCwgbWVzc2FnZSA9IGNvbnZlcnRUb0NoYW5uZWxzTWVzc2FnZShwYXJhbXMubWVzc2FnZSk7XG4gIHNvdXJjZXMuZm9yRWFjaCgoc291cmNlKSA9PiB7XG4gICAgc291cmNlLnBvc3RNZXNzYWdlKG1lc3NhZ2UsIHsgdGFyZ2V0T3JpZ2luIH0pO1xuICB9KTtcbn0sIGNyZWF0ZUNvbXBhdGliaWxpdHlBY3RvcnMgPSAoKSA9PiAoe1xuICBsaXN0ZW46IGNyZWF0ZUxpc3RlbkxvZ2ljKGNvbnZlcnRUb0NvbWxpbmtFdmVudCksXG4gIHJlcXVlc3RNYWNoaW5lOiBjcmVhdGVSZXF1ZXN0TWFjaGluZSgpLnByb3ZpZGUoe1xuICAgIGFjdGlvbnM6IHtcbiAgICAgIFwic2VuZCBtZXNzYWdlXCI6IHNlbmRBc0NoYW5uZWxzTWVzc2FnZVxuICAgIH1cbiAgfSlcbn0pO1xuZnVuY3Rpb24gaXNNYXliZVByZXZpZXdJZnJhbWUoKSB7XG4gIHJldHVybiB3aW5kb3cuc2VsZiAhPT0gd2luZG93LnRvcDtcbn1cbmZ1bmN0aW9uIGlzTWF5YmVQcmV2aWV3V2luZG93KCkge1xuICByZXR1cm4gISF3aW5kb3cub3BlbmVyO1xufVxuZnVuY3Rpb24gaXNNYXliZVByZXNlbnRhdGlvbigpIHtcbiAgcmV0dXJuIGlzTWF5YmVQcmV2aWV3SWZyYW1lKCkgfHwgaXNNYXliZVByZXZpZXdXaW5kb3coKTtcbn1cbmV4cG9ydCB7XG4gIE1TR19SRVNQT05TRTIgYXMgTVNHX1JFU1BPTlNFLFxuICBjcmVhdGVDb21wYXRpYmlsaXR5QWN0b3JzLFxuICBpc01heWJlUHJlc2VudGF0aW9uLFxuICBpc01heWJlUHJldmlld0lmcmFtZSxcbiAgaXNNYXliZVByZXZpZXdXaW5kb3dcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/presentation-comlink/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/presentation-comlink/node_modules/@sanity/comlink/dist/index.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@sanity/presentation-comlink/node_modules/@sanity/comlink/dist/index.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DOMAIN: () => (/* binding */ DOMAIN),\n/* harmony export */   FETCH_TIMEOUT_DEFAULT: () => (/* binding */ FETCH_TIMEOUT_DEFAULT),\n/* harmony export */   HANDSHAKE_INTERVAL: () => (/* binding */ HANDSHAKE_INTERVAL),\n/* harmony export */   HANDSHAKE_MSG_TYPES: () => (/* binding */ HANDSHAKE_MSG_TYPES),\n/* harmony export */   HEARTBEAT_INTERVAL: () => (/* binding */ HEARTBEAT_INTERVAL),\n/* harmony export */   INTERNAL_MSG_TYPES: () => (/* binding */ INTERNAL_MSG_TYPES),\n/* harmony export */   MSG_DISCONNECT: () => (/* binding */ MSG_DISCONNECT),\n/* harmony export */   MSG_HANDSHAKE_ACK: () => (/* binding */ MSG_HANDSHAKE_ACK),\n/* harmony export */   MSG_HANDSHAKE_SYN: () => (/* binding */ MSG_HANDSHAKE_SYN),\n/* harmony export */   MSG_HANDSHAKE_SYN_ACK: () => (/* binding */ MSG_HANDSHAKE_SYN_ACK),\n/* harmony export */   MSG_HEARTBEAT: () => (/* binding */ MSG_HEARTBEAT),\n/* harmony export */   MSG_RESPONSE: () => (/* binding */ MSG_RESPONSE),\n/* harmony export */   RESPONSE_TIMEOUT_DEFAULT: () => (/* binding */ RESPONSE_TIMEOUT_DEFAULT),\n/* harmony export */   createConnection: () => (/* binding */ createConnection),\n/* harmony export */   createConnectionMachine: () => (/* binding */ createConnectionMachine),\n/* harmony export */   createController: () => (/* binding */ createController),\n/* harmony export */   createListenLogic: () => (/* binding */ createListenLogic),\n/* harmony export */   createNode: () => (/* binding */ createNode),\n/* harmony export */   createNodeMachine: () => (/* binding */ createNodeMachine),\n/* harmony export */   createRequestMachine: () => (/* binding */ createRequestMachine)\n/* harmony export */ });\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! uuid */ \"(ssr)/./node_modules/uuid/dist/esm/v4.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! xstate */ \"(ssr)/./node_modules/xstate/actors/dist/xstate-actors.development.esm.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! xstate */ \"(ssr)/./node_modules/xstate/dist/xstate.development.esm.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! xstate */ \"(ssr)/./node_modules/xstate/dist/log-0acd9069.development.esm.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! xstate */ \"(ssr)/./node_modules/xstate/dist/raise-1db27a82.development.esm.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/defer.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/fromEvent.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/map.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/util/pipe.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/filter.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/bufferCount.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/concatMap.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/take.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/empty.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/takeUntil.js\");\n\n\n\nconst listenInputFromContext = (config) => ({\n  context\n}) => {\n  const { count, include, exclude, responseType = \"message.received\" } = config;\n  return {\n    count,\n    domain: context.domain,\n    from: context.connectTo,\n    include: include ? Array.isArray(include) ? include : [include] : [],\n    exclude: exclude ? Array.isArray(exclude) ? exclude : [exclude] : [],\n    responseType,\n    target: context.target,\n    to: context.name\n  };\n}, listenFilter = (input) => (event) => {\n  const { data } = event;\n  return (input.include.length ? input.include.includes(data.type) : !0) && (input.exclude.length ? !input.exclude.includes(data.type) : !0) && data.domain === input.domain && data.from === input.from && data.to === input.to && (!input.target || event.source === input.target);\n}, eventToMessage = (type) => (event) => ({\n  type,\n  message: event\n}), messageEvents$ = (0,rxjs__WEBPACK_IMPORTED_MODULE_0__.defer)(\n  () => (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.fromEvent)(window, \"message\")\n), createListenLogic = (compatMap) => (0,xstate__WEBPACK_IMPORTED_MODULE_2__.fromEventObservable)(({ input }) => messageEvents$.pipe(\n  compatMap ? (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.map)(compatMap) : (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.pipe)(),\n  (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.filter)(listenFilter(input)),\n  (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.map)(eventToMessage(input.responseType)),\n  input.count ? (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.pipe)(\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.bufferCount)(input.count),\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_7__.concatMap)((arr) => arr),\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_8__.take)(input.count)\n  ) : (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.pipe)()\n)), DOMAIN = \"sanity/comlink\", RESPONSE_TIMEOUT_DEFAULT = 3e3, FETCH_TIMEOUT_DEFAULT = 1e4, HEARTBEAT_INTERVAL = 1e3, HANDSHAKE_INTERVAL = 500, MSG_RESPONSE = \"comlink/response\", MSG_HEARTBEAT = \"comlink/heartbeat\", MSG_DISCONNECT = \"comlink/disconnect\", MSG_HANDSHAKE_SYN = \"comlink/handshake/syn\", MSG_HANDSHAKE_SYN_ACK = \"comlink/handshake/syn-ack\", MSG_HANDSHAKE_ACK = \"comlink/handshake/ack\", HANDSHAKE_MSG_TYPES = [\n  MSG_HANDSHAKE_SYN,\n  MSG_HANDSHAKE_SYN_ACK,\n  MSG_HANDSHAKE_ACK\n], INTERNAL_MSG_TYPES = [\n  MSG_RESPONSE,\n  MSG_DISCONNECT,\n  MSG_HEARTBEAT,\n  ...HANDSHAKE_MSG_TYPES\n], throwOnEvent = (message) => (source) => source.pipe(\n  (0,rxjs__WEBPACK_IMPORTED_MODULE_8__.take)(1),\n  (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.map)(() => {\n    throw new Error(message);\n  })\n), createRequestMachine = () => (0,xstate__WEBPACK_IMPORTED_MODULE_9__.setup)({\n  types: {},\n  actors: {\n    listen: (0,xstate__WEBPACK_IMPORTED_MODULE_2__.fromEventObservable)(\n      ({\n        input\n      }) => {\n        const abortSignal$ = input.signal ? (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.fromEvent)(input.signal, \"abort\").pipe(\n          throwOnEvent(`Request ${input.requestId} aborted`)\n        ) : rxjs__WEBPACK_IMPORTED_MODULE_10__.EMPTY, messageFilter = (event) => event.data?.type === MSG_RESPONSE && event.data?.responseTo === input.requestId && !!event.source && input.sources.has(event.source);\n        return (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.fromEvent)(window, \"message\").pipe(\n          (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.filter)(messageFilter),\n          (0,rxjs__WEBPACK_IMPORTED_MODULE_8__.take)(input.sources.size),\n          (0,rxjs__WEBPACK_IMPORTED_MODULE_11__.takeUntil)(abortSignal$)\n        );\n      }\n    )\n  },\n  actions: {\n    \"send message\": ({ context }, params) => {\n      const { sources, targetOrigin } = context, { message } = params;\n      sources.forEach((source) => {\n        source.postMessage(message, { targetOrigin });\n      });\n    },\n    \"on success\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.c)(\n      ({ context }) => context.parentRef,\n      ({ context, self }) => (context.response && context.resolvable?.resolve(context.response), {\n        type: \"request.success\",\n        requestId: self.id,\n        response: context.response,\n        responseTo: context.responseTo\n      })\n    ),\n    \"on fail\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.c)(\n      ({ context }) => context.parentRef,\n      ({ context, self }) => (context.suppressWarnings || console.warn(\n        `[@sanity/comlink] Received no response to message '${context.type}' on client '${context.from}' (ID: '${context.id}').`\n      ), context.resolvable?.reject(new Error(\"No response received\")), { type: \"request.failed\", requestId: self.id })\n    ),\n    \"on abort\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.c)(\n      ({ context }) => context.parentRef,\n      ({ context, self }) => (context.resolvable?.reject(new Error(\"Request aborted\")), { type: \"request.aborted\", requestId: self.id })\n    )\n  },\n  guards: {\n    expectsResponse: ({ context }) => context.expectResponse\n  },\n  delays: {\n    initialTimeout: 0,\n    responseTimeout: ({ context }) => context.responseTimeout ?? RESPONSE_TIMEOUT_DEFAULT\n  }\n}).createMachine({\n  /** @xstate-layout N4IgpgJg5mDOIC5QAoC2BDAxgCwJYDswBKAOlwgBswBiAD1gBd0GwT0AzFgJ2QNwdzoKAFVyowAewCuDItTRY8hUuSoBtAAwBdRKAAOE2P1wT8ukLUQBGAEwBWEgBYAnK+eOAzB7sB2DzY8rABoQAE9rDQc3V0cNTw8fAA4NHwBfVJCFHAJiElgwfAgCKGpNHSQQAyMBU3NLBDsrDxI7DTaAjQA2OOcNDxDwhHsNJx9Ou0TOq2cJxP9HdMyMbOU8gqL8ErUrcv1DY1qK+sbm1vaPLp6+gcRnGydo9wDGycWQLKVc9AB3dGNN6jiWCwdAwMrmKoHMxHRCJRKOEiJHwuZKBZwXKzBMKIGyYkhtAkXOweTqOHw2RJvD45Ug-P4CAH0JgsNicMA8LhwAz4fKicTSWTyZafWm-f5QcEVSE1aGgepwhFIlF9aYYrGDC4+JzEppjGzOUkeGbpDIgfASCBwczU5QQ-YyuqIAC0nRuCBd+IJXu9KSpwppZEoYDt1RMsosiEcNjdVjiJEeGisiSTHkcVgWpptuXyhWKIahjqGzi1BqRJINnVcdkcbuTLS9VYC8ISfsUAbp4vzDphCHJIyjBvJNlxNmRNexQ3sJGH43GPj8jWJrZWuXYfyoEC7YcLsbrgRsjkcvkmdgNbopVhIPhVfnsh8ClMz-tWsCkmEwcHgUvt257u8v+6Hse4xnhOdZnImVidPqCRNB4JqpEAA */\n  context: ({ input }) => ({\n    channelId: input.channelId,\n    data: input.data,\n    domain: input.domain,\n    expectResponse: input.expectResponse ?? !1,\n    from: input.from,\n    id: `msg-${(0,uuid__WEBPACK_IMPORTED_MODULE_13__[\"default\"])()}`,\n    parentRef: input.parentRef,\n    resolvable: input.resolvable,\n    response: null,\n    responseTimeout: input.responseTimeout,\n    responseTo: input.responseTo,\n    signal: input.signal,\n    sources: input.sources instanceof Set ? input.sources : /* @__PURE__ */ new Set([input.sources]),\n    suppressWarnings: input.suppressWarnings,\n    targetOrigin: input.targetOrigin,\n    to: input.to,\n    type: input.type\n  }),\n  initial: \"idle\",\n  on: {\n    abort: \".aborted\"\n  },\n  states: {\n    idle: {\n      after: {\n        initialTimeout: [\n          {\n            target: \"sending\"\n          }\n        ]\n      }\n    },\n    sending: {\n      entry: {\n        type: \"send message\",\n        params: ({ context }) => {\n          const { channelId, data, domain, from, id, responseTo, to, type } = context;\n          return { message: {\n            channelId,\n            data,\n            domain,\n            from,\n            id,\n            to,\n            type,\n            responseTo\n          } };\n        }\n      },\n      always: [\n        {\n          guard: \"expectsResponse\",\n          target: \"awaiting\"\n        },\n        \"success\"\n      ]\n    },\n    awaiting: {\n      invoke: {\n        id: \"listen for response\",\n        src: \"listen\",\n        input: ({ context }) => ({\n          requestId: context.id,\n          sources: context.sources,\n          signal: context.signal\n        }),\n        onError: \"aborted\"\n      },\n      after: {\n        responseTimeout: \"failed\"\n      },\n      on: {\n        message: {\n          actions: (0,xstate__WEBPACK_IMPORTED_MODULE_12__.a)({\n            response: ({ event }) => event.data.data,\n            responseTo: ({ event }) => event.data.responseTo\n          }),\n          target: \"success\"\n        }\n      }\n    },\n    failed: {\n      type: \"final\",\n      entry: \"on fail\"\n    },\n    success: {\n      type: \"final\",\n      entry: \"on success\"\n    },\n    aborted: {\n      type: \"final\",\n      entry: \"on abort\"\n    }\n  },\n  output: ({ context, self }) => ({\n    requestId: self.id,\n    response: context.response,\n    responseTo: context.responseTo\n  })\n}), sendBackAtInterval = (0,xstate__WEBPACK_IMPORTED_MODULE_2__.fromCallback)(({ sendBack, input }) => {\n  const send = () => {\n    sendBack(input.event);\n  };\n  input.immediate && send();\n  const interval = setInterval(send, input.interval);\n  return () => {\n    clearInterval(interval);\n  };\n}), createConnectionMachine = () => (0,xstate__WEBPACK_IMPORTED_MODULE_9__.setup)({\n  types: {},\n  actors: {\n    requestMachine: createRequestMachine(),\n    listen: createListenLogic(),\n    sendBackAtInterval\n  },\n  actions: {\n    \"buffer message\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.b)(({ enqueue }) => {\n      enqueue.assign({\n        buffer: ({ event, context }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"post\"), [...context.buffer, event.data])\n      }), enqueue.emit(({ event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"post\"), {\n        type: \"buffer.added\",\n        message: event.data\n      }));\n    }),\n    \"create request\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.a)({\n      requests: ({ context, event, self, spawn }) => {\n        (0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"request\");\n        const requests = (Array.isArray(event.data) ? event.data : [event.data]).map((request) => {\n          const id = `req-${(0,uuid__WEBPACK_IMPORTED_MODULE_13__[\"default\"])()}`;\n          return spawn(\"requestMachine\", {\n            id,\n            input: {\n              channelId: context.channelId,\n              data: request.data,\n              domain: context.domain,\n              expectResponse: request.expectResponse,\n              from: context.name,\n              parentRef: self,\n              responseTo: request.responseTo,\n              sources: context.target,\n              targetOrigin: context.targetOrigin,\n              to: context.connectTo,\n              type: request.type\n            }\n          });\n        });\n        return [...context.requests, ...requests];\n      }\n    }),\n    \"emit received message\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.b)(({ enqueue }) => {\n      enqueue.emit(({ event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"message.received\"), {\n        type: \"message\",\n        message: event.message.data\n      }));\n    }),\n    \"emit status\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.e)((_, params) => ({\n      type: \"status\",\n      status: params.status\n    })),\n    \"post message\": (0,xstate__WEBPACK_IMPORTED_MODULE_14__.O)(({ event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"post\"), {\n      type: \"request\",\n      data: {\n        data: event.data.data,\n        expectResponse: !0,\n        type: event.data.type\n      }\n    })),\n    \"remove request\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.b)(({ context, enqueue, event }) => {\n      (0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, [\"request.success\", \"request.failed\", \"request.aborted\"]), (0,xstate__WEBPACK_IMPORTED_MODULE_14__.R)(event.requestId), enqueue.assign({ requests: context.requests.filter(({ id }) => id !== event.requestId) });\n    }),\n    respond: (0,xstate__WEBPACK_IMPORTED_MODULE_14__.O)(({ event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"response\"), {\n      type: \"request\",\n      data: {\n        data: event.data,\n        type: MSG_RESPONSE,\n        responseTo: event.respondTo\n      }\n    })),\n    \"send handshake ack\": (0,xstate__WEBPACK_IMPORTED_MODULE_14__.O)({\n      type: \"request\",\n      data: { type: MSG_HANDSHAKE_ACK }\n    }),\n    \"send disconnect\": (0,xstate__WEBPACK_IMPORTED_MODULE_14__.O)(() => ({\n      type: \"request\",\n      data: { type: MSG_DISCONNECT }\n    })),\n    \"send handshake syn\": (0,xstate__WEBPACK_IMPORTED_MODULE_14__.O)({\n      type: \"request\",\n      data: { type: MSG_HANDSHAKE_SYN }\n    }),\n    \"send pending messages\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.b)(({ enqueue }) => {\n      enqueue.raise(({ context }) => ({\n        type: \"request\",\n        data: context.buffer.map(({ data, type }) => ({ data, type }))\n      })), enqueue.emit(({ context }) => ({\n        type: \"buffer.flushed\",\n        messages: context.buffer\n      })), enqueue.assign({\n        buffer: []\n      });\n    }),\n    \"set target\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.a)({\n      target: ({ event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"target.set\"), event.target)\n    })\n  },\n  guards: {\n    \"has target\": ({ context }) => !!context.target,\n    \"should send heartbeats\": ({ context }) => context.heartbeat\n  }\n}).createMachine({\n  /** @xstate-layout N4IgpgJg5mDOIC5QGMAWBDAdpsAbAxAC7oBOMhAdLGIQNoAMAuoqAA4D2sAloV+5ixAAPRAHZRAJgoAWABz0ArHICMy2QGZZCgJwAaEAE9EE+tIrb6ANgkLl46fTuj1AXxf60WHARJgAjgCucJSwAcjIcLAMzEggHNy8-IIiCKLS2hQS6qb2yurisrL6RgjK9LIyCuqq0g7WstZuHhjYePi+gcEUAGboXLiQ0YLxPHwCsSmiCgoykpayDtqS6trqxYjKEk0gnq24FFwQA-jI-DjIdEzDnKNJExuOZpZ12eq29OrSCuupypYUojUaTKCnm5Wk2123gORzA+HilxibBuiXGoBSGnUAIU4gU9FWamUtR+lmUM1EllBEkslMUEnpkJa0JaEFgGAA1lxMFB8LADJghrERqjkhtshk3mTtNo5OpqpYfqCKhTptoqpY1WUtu4dky8BQWWz0Jzue1-EFYIjrgkxqLSupqRRPpoPqJtLI0hIioZENJJE7NnJ8ZYHVk1YyvPrDRyuTyEYLkTa7uixVlMh81KGFhS1j6EPkZlpVjTphr8mkI3sDVhWTHTQBbSLoGAUXwRLgAN0GVyFKNt91KimUFEKXvKC2s9R+6X+jipnzJeSqEJ1UKjNaNJp5EC4sFOrQuCbifeTwg2cgoym0RPxDtqkj0eaB9Ao8zSolMEivZVcq71+33c5CEgeFOCtXskzRM8EDxKRpmkSw3QJbQsmpH5tHmV8JHSbJpDsakV2aSMALOMALhAjoLXAxNbiglI-SxWw1Vw0QNDw0Qfg9KQ7EJSxHHxApK2hQCyOAiAzVgDhMGoI9hX7FMEHSF8cWkelpHURCbBsb481xAEgT9BQJCmWQsiE-URPI8TG1gWBmzAVsyLATtuyRY9ILtWoKmlL82Kqd0tAVJ91LMHFZDKIkVlkNVZHMkiDzE-Adz3UjDx7GiRQHCKnheD53k+HSSkDDIwpBVTqQwuKKEssSDTAUhCAAI3qyg0DIrd8Fkk86MQUMnVM+RynoegTDJH48hGp0vR-FDRqqKqasgOqGua9AQjATAd1NSiul6fpXOtWi7Wy19cslD4vnG7IX3oVjVDUVYEJQqrksW8SdstLqPKy0wKgG1RhtMWogqKhoMjkWp6XxUyFBe3c3tAz70vco6fq+V8PTkGUFzdQqNnELEM2yClrwwzQ4ZShKQJqr7UYU98AS0W9pT4z5pHG0yXwMkNNTyGk3B1TB2AgOBBDXXBDsyhSFG9EovQqN5i1JeRcKqw4Bkl+ToMx8x0j+EaqQ9XMSkBURMgMkEwQWKro2NWNNdPFJAzN0lJGM4slDxhBEJfXyplBd03wW1KxIdnrBxBh4JAyW75C8rJpmDqmIGWkgmpasPjqUcaHooMLHA0uU1UkJOgKW1B6rT1bWor5At0zgcTAkK7hrz1irB0D8cW0UvRPLyv07WqgNq2qAG+l9SnXUz0UOXD5xuMs3Y4+DVJBX7UiKrV6Q8gcfoJO54rFefLLqfJYX1WKYNLxL4NO1NwgA */\n  id: \"connection\",\n  context: ({ input }) => ({\n    id: input.id || `${input.name}-${(0,uuid__WEBPACK_IMPORTED_MODULE_13__[\"default\"])()}`,\n    buffer: [],\n    channelId: `chn-${(0,uuid__WEBPACK_IMPORTED_MODULE_13__[\"default\"])()}`,\n    connectTo: input.connectTo,\n    domain: input.domain ?? DOMAIN,\n    heartbeat: input.heartbeat ?? !1,\n    name: input.name,\n    requests: [],\n    target: input.target,\n    targetOrigin: input.targetOrigin\n  }),\n  on: {\n    \"target.set\": {\n      actions: \"set target\"\n    },\n    \"request.success\": {\n      actions: \"remove request\"\n    },\n    \"request.failed\": {\n      actions: \"remove request\"\n    }\n  },\n  initial: \"idle\",\n  states: {\n    idle: {\n      entry: [{ type: \"emit status\", params: { status: \"idle\" } }],\n      on: {\n        connect: {\n          target: \"handshaking\",\n          guard: \"has target\"\n        },\n        post: {\n          actions: \"buffer message\"\n        }\n      }\n    },\n    handshaking: {\n      id: \"handshaking\",\n      entry: [{ type: \"emit status\", params: { status: \"handshaking\" } }],\n      invoke: [\n        {\n          id: \"send syn\",\n          src: \"sendBackAtInterval\",\n          input: () => ({\n            event: { type: \"syn\" },\n            interval: HANDSHAKE_INTERVAL,\n            immediate: !0\n          })\n        },\n        {\n          id: \"listen for handshake\",\n          src: \"listen\",\n          input: (input) => listenInputFromContext({\n            include: MSG_HANDSHAKE_SYN_ACK,\n            count: 1\n          })(input)\n          /* Below would maybe be more readable than transitioning to\n          'connected' on 'message', and 'ack' on exit but having onDone when\n          using passing invocations currently breaks XState Editor */\n          // onDone: {\n          //   target: 'connected',\n          //   actions: 'ack',\n          // },\n        }\n      ],\n      on: {\n        syn: {\n          actions: \"send handshake syn\"\n        },\n        request: {\n          actions: \"create request\"\n        },\n        post: {\n          actions: \"buffer message\"\n        },\n        \"message.received\": {\n          target: \"connected\"\n        },\n        disconnect: {\n          target: \"disconnected\"\n        }\n      },\n      exit: \"send handshake ack\"\n    },\n    connected: {\n      entry: [\"send pending messages\", { type: \"emit status\", params: { status: \"connected\" } }],\n      invoke: {\n        id: \"listen for messages\",\n        src: \"listen\",\n        input: listenInputFromContext({\n          exclude: [MSG_RESPONSE, MSG_HEARTBEAT]\n        })\n      },\n      on: {\n        post: {\n          actions: \"post message\"\n        },\n        request: {\n          actions: \"create request\"\n        },\n        response: {\n          actions: \"respond\"\n        },\n        \"message.received\": {\n          actions: \"emit received message\"\n        },\n        disconnect: {\n          target: \"disconnected\"\n        }\n      },\n      initial: \"heartbeat\",\n      states: {\n        heartbeat: {\n          initial: \"checking\",\n          states: {\n            checking: {\n              always: {\n                guard: \"should send heartbeats\",\n                target: \"sending\"\n              }\n            },\n            sending: {\n              on: {\n                \"request.failed\": {\n                  target: \"#handshaking\"\n                }\n              },\n              invoke: {\n                id: \"send heartbeat\",\n                src: \"sendBackAtInterval\",\n                input: () => ({\n                  event: { type: \"post\", data: { type: MSG_HEARTBEAT, data: void 0 } },\n                  interval: 2e3,\n                  immediate: !1\n                })\n              }\n            }\n          }\n        }\n      }\n    },\n    disconnected: {\n      id: \"disconnected\",\n      entry: [\"send disconnect\", { type: \"emit status\", params: { status: \"disconnected\" } }],\n      on: {\n        request: {\n          actions: \"create request\"\n        },\n        post: {\n          actions: \"buffer message\"\n        },\n        connect: {\n          target: \"handshaking\",\n          guard: \"has target\"\n        }\n      }\n    }\n  }\n}), createConnection = (input, machine = createConnectionMachine()) => {\n  const id = input.id || `${input.name}-${(0,uuid__WEBPACK_IMPORTED_MODULE_13__[\"default\"])()}`, actor = (0,xstate__WEBPACK_IMPORTED_MODULE_14__.A)(machine, {\n    input: { ...input, id }\n  }), eventHandlers = /* @__PURE__ */ new Map(), unhandledMessages = /* @__PURE__ */ new Map(), on = (type, handler, options) => {\n    const handlers = eventHandlers.get(type) || /* @__PURE__ */ new Set();\n    eventHandlers.has(type) || eventHandlers.set(type, handlers), handlers.add(handler);\n    const unhandledMessagesForType = unhandledMessages.get(type);\n    if (unhandledMessagesForType) {\n      const replayCount = options?.replay ?? 1;\n      Array.from(unhandledMessagesForType).slice(-replayCount).forEach(async ({ data, id: id2 }) => {\n        const response = await handler(data);\n        response && actor.send({\n          type: \"response\",\n          respondTo: id2,\n          data: response\n        });\n      }), unhandledMessages.delete(type);\n    }\n    return () => {\n      handlers.delete(handler);\n    };\n  }, connect = () => {\n    actor.send({ type: \"connect\" });\n  }, disconnect = () => {\n    actor.send({ type: \"disconnect\" });\n  }, onStatus = (handler, filter2) => {\n    const { unsubscribe } = actor.on(\"status\", (event) => {\n      filter2 && event.status !== filter2 || handler(event.status);\n    });\n    return unsubscribe;\n  }, setTarget = (target) => {\n    actor.send({ type: \"target.set\", target });\n  }, post = (type, data) => {\n    const _data = { type, data };\n    actor.send({ type: \"post\", data: _data });\n  };\n  actor.on(\"message\", async ({ message }) => {\n    const handlers = eventHandlers.get(message.type);\n    if (handlers) {\n      handlers.forEach(async (handler) => {\n        const response = await handler(message.data);\n        response && actor.send({ type: \"response\", respondTo: message.id, data: response });\n      });\n      return;\n    }\n    const unhandledMessagesForType = unhandledMessages.get(message.type);\n    unhandledMessagesForType ? unhandledMessagesForType.add(message) : unhandledMessages.set(message.type, /* @__PURE__ */ new Set([message]));\n  });\n  const stop = () => {\n    actor.stop();\n  }, start = () => (actor.start(), stop);\n  return {\n    actor,\n    connect,\n    disconnect,\n    id,\n    name: input.name,\n    machine,\n    on,\n    onStatus,\n    post,\n    setTarget,\n    start,\n    stop,\n    get target() {\n      return actor.getSnapshot().context.target;\n    }\n  };\n}, cleanupConnection = (connection) => {\n  connection.disconnect(), setTimeout(() => {\n    connection.stop();\n  }, 0);\n}, noop = () => {\n}, createController = (input) => {\n  const { targetOrigin } = input, targets = /* @__PURE__ */ new Set(), channels = /* @__PURE__ */ new Set();\n  return {\n    addTarget: (target) => {\n      if (targets.has(target))\n        return noop;\n      if (!targets.size || !channels.size)\n        return targets.add(target), channels.forEach((channel) => {\n          channel.connections.forEach((connection) => {\n            connection.setTarget(target), connection.connect();\n          });\n        }), () => {\n          targets.delete(target), channels.forEach((channel) => {\n            channel.connections.forEach((connection) => {\n              connection.target === target && connection.disconnect();\n            });\n          });\n        };\n      targets.add(target);\n      const targetConnections = /* @__PURE__ */ new Set();\n      return channels.forEach((channel) => {\n        const connection = createConnection(\n          {\n            ...channel.input,\n            target,\n            targetOrigin\n          },\n          channel.machine\n        );\n        targetConnections.add(connection), channel.connections.add(connection), channel.subscribers.forEach(({ type, handler, unsubscribers }) => {\n          unsubscribers.push(connection.on(type, handler));\n        }), channel.internalEventSubscribers.forEach(({ type, handler, unsubscribers }) => {\n          unsubscribers.push(connection.actor.on(type, handler).unsubscribe);\n        }), channel.statusSubscribers.forEach(({ handler, unsubscribers }) => {\n          unsubscribers.push(\n            connection.onStatus((status) => handler({ connection: connection.id, status }))\n          );\n        }), connection.start(), connection.connect();\n      }), () => {\n        targets.delete(target), targetConnections.forEach((connection) => {\n          cleanupConnection(connection), channels.forEach((channel) => {\n            channel.connections.delete(connection);\n          });\n        });\n      };\n    },\n    createChannel: (input2, machine = createConnectionMachine()) => {\n      const channel = {\n        connections: /* @__PURE__ */ new Set(),\n        input: input2,\n        internalEventSubscribers: /* @__PURE__ */ new Set(),\n        machine,\n        statusSubscribers: /* @__PURE__ */ new Set(),\n        subscribers: /* @__PURE__ */ new Set()\n      };\n      channels.add(channel);\n      const { connections, internalEventSubscribers, statusSubscribers, subscribers } = channel;\n      if (targets.size)\n        targets.forEach((target) => {\n          const connection = createConnection(\n            {\n              ...input2,\n              target,\n              targetOrigin\n            },\n            machine\n          );\n          connections.add(connection);\n        });\n      else {\n        const connection = createConnection({ ...input2, targetOrigin }, machine);\n        connections.add(connection);\n      }\n      const post = (...params) => {\n        const [type, data] = params;\n        connections.forEach((connection) => {\n          connection.post(type, data);\n        });\n      }, on = (type, handler) => {\n        const unsubscribers = [];\n        connections.forEach((connection) => {\n          unsubscribers.push(connection.on(type, handler));\n        });\n        const subscriber = { type, handler, unsubscribers };\n        return subscribers.add(subscriber), () => {\n          unsubscribers.forEach((unsub) => unsub()), subscribers.delete(subscriber);\n        };\n      }, onInternalEvent = (type, handler) => {\n        const unsubscribers = [];\n        connections.forEach((connection) => {\n          unsubscribers.push(connection.actor.on(type, handler).unsubscribe);\n        });\n        const subscriber = { type, handler, unsubscribers };\n        return internalEventSubscribers.add(subscriber), () => {\n          unsubscribers.forEach((unsub) => unsub()), internalEventSubscribers.delete(subscriber);\n        };\n      }, onStatus = (handler) => {\n        const unsubscribers = [];\n        connections.forEach((connection) => {\n          unsubscribers.push(\n            connection.onStatus((status) => handler({ connection: connection.id, status }))\n          );\n        });\n        const subscriber = { handler, unsubscribers };\n        return statusSubscribers.add(subscriber), () => {\n          unsubscribers.forEach((unsub) => unsub()), statusSubscribers.delete(subscriber);\n        };\n      }, stop = () => {\n        const connections2 = channel.connections;\n        connections2.forEach(cleanupConnection), connections2.clear(), channels.delete(channel);\n      };\n      return {\n        on,\n        onInternalEvent,\n        onStatus,\n        post,\n        start: () => (connections.forEach((connection) => {\n          connection.start(), connection.connect();\n        }), stop),\n        stop\n      };\n    },\n    destroy: () => {\n      channels.forEach(({ connections }) => {\n        connections.forEach(cleanupConnection), connections.clear();\n      }), channels.clear(), targets.clear();\n    }\n  };\n}, createNodeMachine = () => (0,xstate__WEBPACK_IMPORTED_MODULE_9__.setup)({\n  types: {},\n  actors: {\n    requestMachine: createRequestMachine(),\n    listen: createListenLogic()\n  },\n  actions: {\n    \"buffer handshake\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.a)({\n      handshakeBuffer: ({ event, context }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"message.received\"), [...context.handshakeBuffer, event])\n    }),\n    \"buffer message\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.b)(({ enqueue }) => {\n      enqueue.assign({\n        buffer: ({ event, context }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"post\"), [\n          ...context.buffer,\n          {\n            data: event.data,\n            resolvable: event.resolvable,\n            options: event.options\n          }\n        ])\n      }), enqueue.emit(({ event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"post\"), {\n        type: \"buffer.added\",\n        message: event.data\n      }));\n    }),\n    \"create request\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.a)({\n      requests: ({ context, event, self, spawn }) => {\n        (0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"request\");\n        const requests = (Array.isArray(event.data) ? event.data : [event.data]).map((request) => {\n          const id = `req-${(0,uuid__WEBPACK_IMPORTED_MODULE_13__[\"default\"])()}`;\n          return spawn(\"requestMachine\", {\n            id,\n            input: {\n              channelId: context.channelId,\n              data: request.data,\n              domain: context.domain,\n              expectResponse: request.expectResponse,\n              from: context.name,\n              parentRef: self,\n              resolvable: request.resolvable,\n              responseTimeout: request.options?.responseTimeout,\n              responseTo: request.responseTo,\n              signal: request.options?.signal,\n              sources: context.target,\n              suppressWarnings: request.options?.suppressWarnings,\n              targetOrigin: context.targetOrigin,\n              to: context.connectTo,\n              type: request.type\n            }\n          });\n        });\n        return [...context.requests, ...requests];\n      }\n    }),\n    \"emit heartbeat\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.e)(() => ({\n      type: \"heartbeat\"\n    })),\n    \"emit received message\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.b)(({ enqueue }) => {\n      enqueue.emit(({ event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"message.received\"), {\n        type: \"message\",\n        message: event.message.data\n      }));\n    }),\n    \"emit status\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.e)((_, params) => ({\n      type: \"status\",\n      status: params.status\n    })),\n    \"post message\": (0,xstate__WEBPACK_IMPORTED_MODULE_14__.O)(({ event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"post\"), {\n      type: \"request\",\n      data: {\n        data: event.data.data,\n        expectResponse: !!event.resolvable,\n        type: event.data.type,\n        resolvable: event.resolvable,\n        options: event.options\n      }\n    })),\n    \"process pending handshakes\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.b)(({ context, enqueue }) => {\n      context.handshakeBuffer.forEach((event) => enqueue.raise(event)), enqueue.assign({\n        handshakeBuffer: []\n      });\n    }),\n    \"remove request\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.b)(({ context, enqueue, event }) => {\n      (0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, [\"request.success\", \"request.failed\", \"request.aborted\"]), (0,xstate__WEBPACK_IMPORTED_MODULE_14__.R)(event.requestId), enqueue.assign({ requests: context.requests.filter(({ id }) => id !== event.requestId) });\n    }),\n    \"send response\": (0,xstate__WEBPACK_IMPORTED_MODULE_14__.O)(({ event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, [\"message.received\", \"heartbeat.received\"]), {\n      type: \"request\",\n      data: {\n        type: MSG_RESPONSE,\n        responseTo: event.message.data.id,\n        data: void 0\n      }\n    })),\n    \"send handshake syn ack\": (0,xstate__WEBPACK_IMPORTED_MODULE_14__.O)({\n      type: \"request\",\n      data: { type: MSG_HANDSHAKE_SYN_ACK }\n    }),\n    \"send pending messages\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.b)(({ enqueue }) => {\n      enqueue.raise(({ context }) => ({\n        type: \"request\",\n        data: context.buffer.map(({ data, resolvable, options }) => ({\n          data: data.data,\n          type: data.type,\n          expectResponse: !!resolvable,\n          resolvable,\n          options\n        }))\n      })), enqueue.emit(({ context }) => ({\n        type: \"buffer.flushed\",\n        messages: context.buffer.map(({ data }) => data)\n      })), enqueue.assign({\n        buffer: []\n      });\n    }),\n    \"set connection config\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.a)({\n      channelId: ({ event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"handshake.syn\"), event.message.data.channelId),\n      target: ({ event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"handshake.syn\"), event.message.source || void 0),\n      targetOrigin: ({ event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"handshake.syn\"), event.message.origin)\n    })\n  },\n  guards: {\n    hasSource: ({ context }) => context.target !== null\n  }\n}).createMachine({\n  /** @xstate-layout N4IgpgJg5mDOIC5QDsD2EwGIBOYCOArnAC4B0sBAxpXLANoAMAuoqAA6qwCWxXqyrEAA9EAVgYAWUgEYJDUQA4JAZmUSJC0coDsAGhABPRNIYLSErdOkBOAGzbx227YUBfV-rQYc+IrDIAZgCGXAA2kIwsSCAc3Lz8giIIoiakqgBMDKbp2tYS0srp+kYI0ununuhgpFwQ4ZgQ-NVcyABuqADW1V7NdWAILe2UQfHIkZGCsTx8AtFJ6aKipAzWOtrpC7Z5BUWGiNoK6aS26RLW2tLaqkqqFSA9NX2YALa0QTCkuDRcrRHMk5xpgk5ogJLZSNZIVDoVCFLZiohbIVSLkXLZRHZDgxbHcHrV6rFiBNolNRolEVJbCsdGUzsoyhiEcllOC1DowelVmVrOUPPcqqQABZBZAQWDCjotKANJo1NqdboC4Wi8VBSXIKADeXDUbjf4kwFkkEILbg8RZMHKOzWKzKJkHJa086Xa4qZS4pUisUSqU+QgkYnsQ0zcnJaRLDbpZwKNQSBYspm2MEyC5KTnaDSSd18h7K71q32EwMxYPA0BJFLKY5yZxIrKSURM0RnFHSBTrQqQ9babQejBCr2q9XSiBcWCUfjIMCUIn6oNxEPGtTWFFR0RUy7iGzt+3Ip0XURXVZKPvVCfIKczyB+vyzqLzoGzcuIG0MGTyCztjRtjaJjbHVMNAUTdu1PUhz0vYhryLOcSwXMthBfK0ZGsLQGBZekCi0Jso1IdI23WG04zOE4wIg6coIgBox3Imdi1JRdnxNOxSHNSQkWtW0mTjMxMQ7fDzgcbNKn7WjKJeN4Pi+MAfj+e84MfUMFHbZZwxOHZNDyO09gQOQjmAhZJCM9IMjIycKOvQUwCCbBiAAI2sshpNkiB6NLJ9EIQBQbWOdJlMhYCUjbJkchXGsFmsJQMVsWl3BzKp4GiHoAXgjykgAWmkZZ6xy3LZF2EobCy6xsQWJQ42kE4FjA-EwBSxTjSRUhDgqkzgO2BxdykU4AvXFQ-KjMC8yHKV6qNJi6WOdcypcZsXGxe0JG0XySKjM5lKsMyLwsiAxsYzylDfONznUEqrmi+1ThkHqXDONbULi1wgA */\n  id: \"node\",\n  context: ({ input }) => ({\n    buffer: [],\n    channelId: null,\n    connectTo: input.connectTo,\n    domain: input.domain ?? DOMAIN,\n    handshakeBuffer: [],\n    name: input.name,\n    requests: [],\n    target: void 0,\n    targetOrigin: null\n  }),\n  // Always listen for handshake syn messages. The channel could have\n  // disconnected without being able to notify the node, and so need to\n  // re-establish the connection.\n  invoke: {\n    id: \"listen for handshake syn\",\n    src: \"listen\",\n    input: listenInputFromContext({\n      include: MSG_HANDSHAKE_SYN,\n      responseType: \"handshake.syn\"\n    })\n  },\n  on: {\n    \"request.success\": {\n      actions: \"remove request\"\n    },\n    \"request.failed\": {\n      actions: \"remove request\"\n    },\n    \"request.aborted\": {\n      actions: \"remove request\"\n    },\n    \"handshake.syn\": {\n      actions: \"set connection config\",\n      target: \".handshaking\"\n    }\n  },\n  initial: \"idle\",\n  states: {\n    idle: {\n      entry: [{ type: \"emit status\", params: { status: \"idle\" } }],\n      on: {\n        post: {\n          actions: \"buffer message\"\n        }\n      }\n    },\n    handshaking: {\n      guard: \"hasSource\",\n      entry: [\"send handshake syn ack\", { type: \"emit status\", params: { status: \"handshaking\" } }],\n      invoke: [\n        {\n          id: \"listen for handshake ack\",\n          src: \"listen\",\n          input: listenInputFromContext({\n            include: MSG_HANDSHAKE_ACK,\n            count: 1,\n            // Override the default `message.received` responseType to prevent\n            // buffering the ack message. We transition to the connected state\n            // using onDone instead of listening to this event using `on`\n            responseType: \"handshake.complete\"\n          }),\n          onDone: \"connected\"\n        },\n        {\n          id: \"listen for disconnect\",\n          src: \"listen\",\n          input: listenInputFromContext({\n            include: MSG_DISCONNECT,\n            count: 1,\n            responseType: \"disconnect\"\n          })\n        },\n        {\n          id: \"listen for messages\",\n          src: \"listen\",\n          input: listenInputFromContext({\n            exclude: [\n              MSG_DISCONNECT,\n              MSG_HANDSHAKE_SYN,\n              MSG_HANDSHAKE_ACK,\n              MSG_HEARTBEAT,\n              MSG_RESPONSE\n            ]\n          })\n        }\n      ],\n      on: {\n        request: {\n          actions: \"create request\"\n        },\n        post: {\n          actions: \"buffer message\"\n        },\n        \"message.received\": {\n          actions: \"buffer handshake\"\n        },\n        disconnect: {\n          target: \"idle\"\n        }\n      }\n    },\n    connected: {\n      entry: [\n        \"process pending handshakes\",\n        \"send pending messages\",\n        { type: \"emit status\", params: { status: \"connected\" } }\n      ],\n      invoke: [\n        {\n          id: \"listen for messages\",\n          src: \"listen\",\n          input: listenInputFromContext({\n            exclude: [\n              MSG_DISCONNECT,\n              MSG_HANDSHAKE_SYN,\n              MSG_HANDSHAKE_ACK,\n              MSG_HEARTBEAT,\n              MSG_RESPONSE\n            ]\n          })\n        },\n        {\n          id: \"listen for heartbeat\",\n          src: \"listen\",\n          input: listenInputFromContext({\n            include: MSG_HEARTBEAT,\n            responseType: \"heartbeat.received\"\n          })\n        },\n        {\n          id: \"listen for disconnect\",\n          src: \"listen\",\n          input: listenInputFromContext({\n            include: MSG_DISCONNECT,\n            count: 1,\n            responseType: \"disconnect\"\n          })\n        }\n      ],\n      on: {\n        request: {\n          actions: \"create request\"\n        },\n        post: {\n          actions: \"post message\"\n        },\n        disconnect: {\n          target: \"idle\"\n        },\n        \"message.received\": {\n          actions: [\"send response\", \"emit received message\"]\n        },\n        \"heartbeat.received\": {\n          actions: [\"send response\", \"emit heartbeat\"]\n        }\n      }\n    }\n  }\n}), createNode = (input, machine = createNodeMachine()) => {\n  const actor = (0,xstate__WEBPACK_IMPORTED_MODULE_14__.A)(machine, {\n    input\n  }), eventHandlers = /* @__PURE__ */ new Map(), unhandledMessages = /* @__PURE__ */ new Map(), on = (type, handler, options) => {\n    const handlers = eventHandlers.get(type) || /* @__PURE__ */ new Set();\n    eventHandlers.has(type) || eventHandlers.set(type, handlers), handlers.add(handler);\n    const unhandledMessagesForType = unhandledMessages.get(type);\n    if (unhandledMessagesForType) {\n      const replayCount = options?.replay ?? 1;\n      Array.from(unhandledMessagesForType).slice(-replayCount).forEach(({ data }) => handler(data)), unhandledMessages.delete(type);\n    }\n    return () => {\n      handlers.delete(handler);\n    };\n  };\n  let cachedStatus;\n  const onStatus = (handler, filter2) => {\n    const { unsubscribe } = actor.on(\n      \"status\",\n      (event) => {\n        cachedStatus = event.status, !(filter2 && event.status !== filter2) && handler(event.status);\n      }\n    );\n    return cachedStatus && handler(cachedStatus), unsubscribe;\n  }, post = (type, data) => {\n    const _data = { type, data };\n    actor.send({ type: \"post\", data: _data });\n  }, fetch = (type, data, options) => {\n    const { responseTimeout = FETCH_TIMEOUT_DEFAULT, signal, suppressWarnings } = options || {}, resolvable = Promise.withResolvers(), _data = { type, data };\n    return actor.send({\n      type: \"post\",\n      data: _data,\n      resolvable,\n      options: { responseTimeout, signal, suppressWarnings }\n    }), resolvable.promise;\n  };\n  actor.on(\"message\", ({ message }) => {\n    const handlers = eventHandlers.get(message.type);\n    if (handlers) {\n      handlers.forEach((handler) => handler(message.data));\n      return;\n    }\n    const unhandledMessagesForType = unhandledMessages.get(message.type);\n    unhandledMessagesForType ? unhandledMessagesForType.add(message) : unhandledMessages.set(message.type, /* @__PURE__ */ new Set([message]));\n  });\n  const stop = () => {\n    actor.stop();\n  };\n  return {\n    actor,\n    fetch,\n    machine,\n    on,\n    onStatus,\n    post,\n    start: () => (actor.start(), stop),\n    stop\n  };\n};\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/presentation-comlink/node_modules/@sanity/comlink/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/visual-editing-csm/dist/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/@sanity/visual-editing-csm/dist/index.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DRAFTS_PREFIX: () => (/* binding */ DRAFTS_PREFIX),\n/* harmony export */   createDataAttribute: () => (/* binding */ createDataAttribute),\n/* harmony export */   decodeSanityNodeData: () => (/* binding */ decodeSanityNodeData),\n/* harmony export */   encodeSanityNodeData: () => (/* binding */ encodeSanityNodeData),\n/* harmony export */   pathToUrlString: () => (/* binding */ pathToUrlString),\n/* harmony export */   urlStringToPath: () => (/* binding */ urlStringToPath)\n/* harmony export */ });\n/* harmony import */ var _sanity_client_csm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sanity/client/csm */ \"(ssr)/./node_modules/@sanity/client/dist/_chunks-es/resolveEditInfo.js\");\n/* harmony import */ var valibot__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! valibot */ \"(ssr)/./node_modules/valibot/dist/index.js\");\n\n\nconst DRAFTS_PREFIX = \"drafts.\", lengthyStr$1 = (0,valibot__WEBPACK_IMPORTED_MODULE_0__.pipe)((0,valibot__WEBPACK_IMPORTED_MODULE_0__.string)(), (0,valibot__WEBPACK_IMPORTED_MODULE_0__.minLength)(1)), optionalLengthyStr = (0,valibot__WEBPACK_IMPORTED_MODULE_0__.optional)(lengthyStr$1), sanityNodeSchema = (0,valibot__WEBPACK_IMPORTED_MODULE_0__.object)({\n  baseUrl: lengthyStr$1,\n  dataset: optionalLengthyStr,\n  id: lengthyStr$1,\n  path: lengthyStr$1,\n  projectId: optionalLengthyStr,\n  tool: optionalLengthyStr,\n  type: optionalLengthyStr,\n  workspace: optionalLengthyStr,\n  isDraft: (0,valibot__WEBPACK_IMPORTED_MODULE_0__.optional)((0,valibot__WEBPACK_IMPORTED_MODULE_0__.string)())\n});\nfunction isValidSanityNode(node) {\n  return (0,valibot__WEBPACK_IMPORTED_MODULE_0__.is)(sanityNodeSchema, node);\n}\nfunction isArray(value) {\n  return value !== null && Array.isArray(value);\n}\nfunction pathToUrlString(path) {\n  let str = \"\";\n  for (const segment of path) {\n    if (typeof segment == \"string\") {\n      str && (str += \".\"), str += segment;\n      continue;\n    }\n    if (typeof segment == \"number\") {\n      str && (str += \":\"), str += `${segment}`;\n      continue;\n    }\n    if (isArray(segment)) {\n      str && (str += \":\"), str += `${segment.join(\",\")}}`;\n      continue;\n    }\n    if (segment._key) {\n      str && (str += \":\"), str += `${segment._key}`;\n      continue;\n    }\n  }\n  return str;\n}\nfunction encodeSanityNodeData(node) {\n  const { id: _id, path, baseUrl, tool, workspace, type } = node;\n  return isValidSanityNode(node) ? [\n    [\"id\", (0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_1__.getPublishedId)(_id)],\n    [\"type\", type],\n    [\"path\", pathToUrlString(_sanity_client_csm__WEBPACK_IMPORTED_MODULE_1__.studioPath.fromString(path))],\n    [\"base\", encodeURIComponent(baseUrl)],\n    [\"workspace\", workspace],\n    [\"tool\", tool],\n    [\"isDraft\", _id.startsWith(DRAFTS_PREFIX)]\n  ].filter(([, value]) => !!value).map((part) => {\n    const [key, value] = part;\n    return value === !0 ? key : part.join(\"=\");\n  }).join(\";\") : void 0;\n}\nfunction createDataAttribute(props) {\n  function normalizePath(path) {\n    return path ? typeof path == \"string\" ? _sanity_client_csm__WEBPACK_IMPORTED_MODULE_1__.studioPath.fromString(path) : path : [];\n  }\n  function toString(props2) {\n    if (!props2.id) throw new Error(\"`id` is required to create a data attribute\");\n    if (!props2.type) throw new Error(\"`type` is required to create a data attribute\");\n    if (!props2.path || !props2.path.length)\n      throw new Error(\"`path` is required to create a data attribute\");\n    const attrs = {\n      baseUrl: props2.baseUrl || \"/\",\n      workspace: props2.workspace,\n      tool: props2.tool,\n      type: props2.type,\n      id: props2.id,\n      path: typeof props2.path == \"string\" ? props2.path : _sanity_client_csm__WEBPACK_IMPORTED_MODULE_1__.studioPath.toString(props2.path)\n    };\n    return encodeSanityNodeData(attrs);\n  }\n  const DataAttribute = (path) => toString({\n    ...props,\n    path: [...normalizePath(props.path), ...normalizePath(path)]\n  });\n  return DataAttribute.toString = function() {\n    return toString(props);\n  }, DataAttribute.combine = function(attrs) {\n    return createDataAttribute({\n      ...props,\n      ...attrs\n    });\n  }, DataAttribute.scope = function(path) {\n    return createDataAttribute({\n      ...props,\n      path: [...normalizePath(props.path), ...normalizePath(path)]\n    });\n  }, DataAttribute;\n}\nconst RE_SEGMENT_WITH_INDEX = /^([\\w-]+):(0|[1-9][0-9]*)$/, RE_SEGMENT_WITH_TUPLE = /^([\\w-]+):([0-9]+),([0-9]+)$/, RE_SEGMENT_WITH_KEY = /^([\\w-]+):([\\w-]+)$/;\nfunction urlStringToPath(str) {\n  const path = [];\n  for (const segment of str.split(\".\")) {\n    const withIndex = RE_SEGMENT_WITH_INDEX.exec(segment);\n    if (withIndex) {\n      path.push(withIndex[1], Number(withIndex[2]));\n      continue;\n    }\n    const withTuple = RE_SEGMENT_WITH_TUPLE.exec(segment);\n    if (withTuple) {\n      path.push(withTuple[1], [Number(withTuple[2]), Number(withTuple[3])]);\n      continue;\n    }\n    const withKey = RE_SEGMENT_WITH_KEY.exec(segment);\n    if (withKey) {\n      path.push(withKey[1], { _key: withKey[2] });\n      continue;\n    }\n    path.push(segment);\n  }\n  return path;\n}\nconst lengthyStr = (0,valibot__WEBPACK_IMPORTED_MODULE_0__.pipe)((0,valibot__WEBPACK_IMPORTED_MODULE_0__.string)(), (0,valibot__WEBPACK_IMPORTED_MODULE_0__.minLength)(1)), sanityLegacyNodeSchema = (0,valibot__WEBPACK_IMPORTED_MODULE_0__.object)({\n  origin: lengthyStr,\n  href: lengthyStr,\n  data: (0,valibot__WEBPACK_IMPORTED_MODULE_0__.optional)((0,valibot__WEBPACK_IMPORTED_MODULE_0__.record)((0,valibot__WEBPACK_IMPORTED_MODULE_0__.string)(), (0,valibot__WEBPACK_IMPORTED_MODULE_0__.unknown)()))\n});\nfunction decodeSanityString(str) {\n  const data = str.split(\";\").reduce((acc, segment) => {\n    const [key, value] = segment.split(\"=\");\n    if (!key || segment.includes(\"=\") && !value) return acc;\n    switch (key) {\n      case \"id\":\n        acc.id = value;\n        break;\n      case \"type\":\n        acc.type = value;\n        break;\n      case \"path\":\n        acc.path = _sanity_client_csm__WEBPACK_IMPORTED_MODULE_1__.studioPath.toString(urlStringToPath(value));\n        break;\n      case \"base\":\n        acc.baseUrl = decodeURIComponent(value);\n        break;\n      case \"tool\":\n        acc.tool = value;\n        break;\n      case \"workspace\":\n        acc.workspace = value;\n        break;\n      case \"projectId\":\n        acc.projectId = value;\n        break;\n      case \"dataset\":\n        acc.dataset = value;\n        break;\n      case \"isDraft\":\n        acc.isDraft = \"\";\n        break;\n    }\n    return acc;\n  }, {});\n  if (isValidSanityNode(data))\n    return data;\n}\nfunction decodeSanityObject(data) {\n  const sanityNode = (0,valibot__WEBPACK_IMPORTED_MODULE_0__.safeParse)(sanityNodeSchema, data);\n  if (sanityNode.success)\n    return sanityNode.output;\n  const sanityLegacyNode = (0,valibot__WEBPACK_IMPORTED_MODULE_0__.safeParse)(sanityLegacyNodeSchema, data);\n  if (sanityLegacyNode.success)\n    try {\n      const url = new URL(\n        sanityLegacyNode.output.href,\n        typeof document > \"u\" ? \"https://example.com\" : location.origin\n      );\n      return url.searchParams.size > 0 ? (0,valibot__WEBPACK_IMPORTED_MODULE_0__.parse)(sanityNodeSchema, Object.fromEntries(url.searchParams.entries())) : sanityLegacyNode.output;\n    } catch (err) {\n      return console.error(\"Failed to parse sanity node\", err), sanityLegacyNode.output;\n    }\n}\nfunction decodeSanityNodeData(data) {\n  if (typeof data == \"object\" && data !== null)\n    return decodeSanityObject(data);\n  try {\n    const obj = JSON.parse(data);\n    return decodeSanityObject(obj);\n  } catch {\n    return decodeSanityString(data);\n  }\n}\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/visual-editing-csm/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/visual-editing/dist/_chunks-es/PointerEvents.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@sanity/visual-editing/dist/_chunks-es/PointerEvents.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (/* binding */ vo),\n/* harmony export */   B: () => (/* binding */ kC),\n/* harmony export */   C: () => (/* binding */ fi),\n/* harmony export */   D: () => (/* binding */ Pi),\n/* harmony export */   E: () => (/* binding */ Xi),\n/* harmony export */   F: () => (/* binding */ fC),\n/* harmony export */   H: () => (/* binding */ vM),\n/* harmony export */   I: () => (/* binding */ kR),\n/* harmony export */   L: () => (/* binding */ Ck),\n/* harmony export */   M: () => (/* binding */ TM),\n/* harmony export */   P: () => (/* binding */ LR),\n/* harmony export */   R: () => (/* binding */ is),\n/* harmony export */   S: () => (/* binding */ vs),\n/* harmony export */   T: () => (/* binding */ cC),\n/* harmony export */   U: () => (/* binding */ al),\n/* harmony export */   a: () => (/* binding */ va),\n/* harmony export */   b: () => (/* binding */ wa),\n/* harmony export */   c: () => (/* binding */ CR),\n/* harmony export */   d: () => (/* binding */ co),\n/* harmony export */   e: () => (/* binding */ es),\n/* harmony export */   f: () => (/* binding */ Mo),\n/* harmony export */   g: () => (/* binding */ KM),\n/* harmony export */   h: () => (/* binding */ xo),\n/* harmony export */   i: () => (/* binding */ eS),\n/* harmony export */   j: () => (/* binding */ Wk),\n/* harmony export */   k: () => (/* binding */ LM),\n/* harmony export */   l: () => (/* binding */ aC),\n/* harmony export */   m: () => (/* binding */ gC),\n/* harmony export */   n: () => (/* binding */ lL),\n/* harmony export */   o: () => (/* binding */ SM),\n/* harmony export */   p: () => (/* binding */ $M),\n/* harmony export */   q: () => (/* binding */ VC),\n/* harmony export */   r: () => (/* binding */ xi),\n/* harmony export */   s: () => (/* binding */ vb),\n/* harmony export */   t: () => (/* binding */ pb),\n/* harmony export */   u: () => (/* binding */ xb),\n/* harmony export */   v: () => (/* binding */ ny),\n/* harmony export */   w: () => (/* binding */ Ak),\n/* harmony export */   x: () => (/* binding */ mk),\n/* harmony export */   y: () => (/* binding */ pk)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-dom */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-dom.js\");\n/* harmony import */ var use_effect_event__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! use-effect-event */ \"(ssr)/./node_modules/use-effect-event/dist/index.js\");\nconst H={_version:2,avatar:{sizes:[{distance:-4,size:19},{distance:-4,size:25},{distance:-8,size:33},{distance:-12,size:49}],focusRing:{offset:1,width:1}},button:{textWeight:\"medium\",border:{width:1},focusRing:{offset:-1,width:1}},card:{border:{width:1},focusRing:{offset:-1,width:1},shadow:{outline:.5}},container:[320,640,960,1280,1600,1920],media:[360,600,900,1200,1800,2400],layer:{dialog:{zOffset:600},popover:{zOffset:400},tooltip:{zOffset:200}},radius:[0,1,3,6,9,12,21],shadow:[null,{umbra:[0,0,0,0],penumbra:[0,0,0,0],ambient:[0,0,0,0]},{umbra:[0,3,5,-2],penumbra:[0,6,10,0],ambient:[0,1,18,1]},{umbra:[0,7,8,-4],penumbra:[0,12,17,2],ambient:[0,5,22,4]},{umbra:[0,9,11,-5],penumbra:[0,18,28,2],ambient:[0,7,34,6]},{umbra:[0,11,15,-7],penumbra:[0,24,38,3],ambient:[0,9,46,8]}],space:[0,4,8,12,20,32,52,84,136,220],input:{border:{width:1},checkbox:{size:17,focusRing:{offset:-1,width:1}},radio:{size:17,markSize:9,focusRing:{offset:-1,width:1}},switch:{width:25,height:17,padding:5,transitionDurationMs:150,transitionTimingFunction:\"ease-out\",focusRing:{offset:1,width:1}},select:{focusRing:{offset:-1,width:1}},text:{focusRing:{offset:-1,width:1}}},style:{button:{root:{transition:\"background-color 100ms,border-color 100ms,color 100ms\"}}}},T=/* @__PURE__ */new WeakMap;function $(e){const t=T.get(e);if(t)return t;const n=N(e,e.card.enabled),r={_blend:e._blend||(e.dark?\"screen\":\"multiply\"),_dark:e.dark,accent:n.accent,avatar:n.avatar,backdrop:e.base.shadow.ambient,badge:n.badge,bg:e.base.bg,border:e.base.border,button:{default:A(e,e.button.default),ghost:A(e,e.button.ghost),bleed:A(e,e.button.bleed)},code:n.code,fg:e.base.fg,focusRing:e.base.focusRing,icon:n.muted.fg,input:{default:I(e.input.default),invalid:I(e.input.invalid)},kbd:n.kbd,link:n.link,muted:{...n.muted,bg:e.selectable?.default.enabled.bg2||e.base.bg},selectable:A(e,e.selectable||e.muted),shadow:e.base.shadow,skeleton:{from:e.skeleton?.from||e.base.border,to:e.skeleton?.to||e.base.border},syntax:e.syntax};return T.set(e,r),r}function A(e,t){return{default:{enabled:N(e,t.default.enabled),hovered:N(e,t.default.hovered),pressed:N(e,t.default.pressed),selected:N(e,t.default.selected),disabled:N(e,t.default.disabled)},neutral:{enabled:N(e,t.default.enabled),hovered:N(e,t.default.hovered),pressed:N(e,t.default.pressed),selected:N(e,t.default.selected),disabled:N(e,t.default.disabled)},primary:{enabled:N(e,t.primary.enabled),hovered:N(e,t.primary.hovered),pressed:N(e,t.primary.pressed),selected:N(e,t.primary.selected),disabled:N(e,t.primary.disabled)},suggest:{enabled:N(e,t.primary.enabled),hovered:N(e,t.primary.hovered),pressed:N(e,t.primary.pressed),selected:N(e,t.primary.selected),disabled:N(e,t.primary.disabled)},positive:{enabled:N(e,t.positive.enabled),hovered:N(e,t.positive.hovered),pressed:N(e,t.positive.pressed),selected:N(e,t.positive.selected),disabled:N(e,t.positive.disabled)},caution:{enabled:N(e,t.caution.enabled),hovered:N(e,t.caution.hovered),pressed:N(e,t.caution.pressed),selected:N(e,t.caution.selected),disabled:N(e,t.caution.disabled)},critical:{enabled:N(e,t.critical.enabled),hovered:N(e,t.critical.hovered),pressed:N(e,t.critical.pressed),selected:N(e,t.critical.selected),disabled:N(e,t.critical.disabled)}}}function N(e,t){return{...t,avatar:{gray:{bg:e.spot.gray,fg:e.base.bg},blue:{bg:e.spot.blue,fg:e.base.bg},purple:{bg:e.spot.purple,fg:e.base.bg},magenta:{bg:e.spot.magenta,fg:e.base.bg},red:{bg:e.spot.red,fg:e.base.bg},orange:{bg:e.spot.orange,fg:e.base.bg},yellow:{bg:e.spot.yellow,fg:e.base.bg},green:{bg:e.spot.green,fg:e.base.bg},cyan:{bg:e.spot.cyan,fg:e.base.bg}},badge:{default:{bg:e.muted.default.enabled.bg,fg:e.muted.default.enabled.fg,dot:e.muted.default.enabled.muted.fg,icon:e.muted.default.enabled.muted.fg},neutral:{bg:e.muted.transparent.enabled.bg,fg:e.muted.transparent.enabled.fg,dot:e.muted.transparent.enabled.muted.fg,icon:e.muted.transparent.enabled.muted.fg},primary:{bg:e.muted.primary.enabled.bg,fg:e.muted.primary.enabled.fg,dot:e.muted.primary.enabled.muted.fg,icon:e.muted.primary.enabled.muted.fg},suggest:{bg:e.muted.primary.enabled.bg,fg:e.muted.primary.enabled.fg,dot:e.muted.primary.enabled.muted.fg,icon:e.muted.primary.enabled.muted.fg},positive:{bg:e.muted.positive.enabled.bg,fg:e.muted.positive.enabled.fg,dot:e.muted.positive.enabled.muted.fg,icon:e.muted.positive.enabled.muted.fg},caution:{bg:e.muted.caution.enabled.bg,fg:e.muted.caution.enabled.fg,dot:e.muted.caution.enabled.muted.fg,icon:e.muted.caution.enabled.muted.fg},critical:{bg:e.muted.critical.enabled.bg,fg:e.muted.critical.enabled.fg,dot:e.muted.critical.enabled.muted.fg,icon:e.muted.critical.enabled.muted.fg}},kbd:{bg:e.muted.default.enabled.bg,fg:e.muted.default.enabled.fg,border:e.muted.default.enabled.border},muted:{...e.muted.default.enabled.muted,bg:t.bg2||t.bg},skeleton:{from:t.skeleton?.from||t.border,to:t.skeleton?.to||t.border}}}function I(e){return{enabled:P(e.enabled),disabled:P(e.disabled),readOnly:P(e.readOnly),hovered:P(e.hovered)}}function P(e){return{bg:e.bg,border:e.border,fg:e.fg,muted:{bg:e.bg2},placeholder:e.placeholder}}const F=/* @__PURE__ */new WeakMap;function j(e){if(e.sanity.v2?._resolved)return e.sanity.v2;const t=F.get(e);if(t)return t;const n={_version:2,_resolved:!0,avatar:{...H.avatar,...e.sanity.avatar},button:{...H.button,...e.sanity.button},card:H.card,color:$(e.sanity.color),container:e.sanity.container,font:e.sanity.fonts,input:{...H.input,...e.sanity.input,checkbox:{...H.input.checkbox,...e.sanity.input.checkbox},radio:{...H.input.radio,...e.sanity.input.radio},switch:{...H.input.switch,...e.sanity.input.switch}},layer:e.sanity.layer??H.layer,media:e.sanity.media,radius:e.sanity.radius,shadow:e.sanity.shadows,space:e.sanity.space,style:e.sanity.styles};return F.set(e,n),n}const B=[\"gray\",\"blue\",\"purple\",\"magenta\",\"red\",\"orange\",\"yellow\",\"green\",\"cyan\"],D=[\"50\",\"100\",\"200\",\"300\",\"400\",\"500\",\"600\",\"700\",\"800\",\"900\",\"950\"],O={code:{family:\"ui-monospace, SFMono-Regular, SF Mono, Menlo, Consolas, Liberation Mono, monospace\",weights:{regular:400,medium:500,semibold:600,bold:700},sizes:[{ascenderHeight:4,descenderHeight:4,fontSize:10,iconSize:17,lineHeight:15,letterSpacing:0},{ascenderHeight:5,descenderHeight:5,fontSize:13,iconSize:21,lineHeight:19,letterSpacing:0},{ascenderHeight:6,descenderHeight:6,fontSize:16,iconSize:25,lineHeight:23,letterSpacing:0},{ascenderHeight:7,descenderHeight:7,fontSize:19,iconSize:29,lineHeight:27,letterSpacing:0},{ascenderHeight:8,descenderHeight:8,fontSize:22,iconSize:33,lineHeight:31,letterSpacing:0}]},heading:{family:'Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", \"Liberation Sans\", Helvetica, Arial, system-ui, sans-serif',weights:{regular:700,medium:800,semibold:900,bold:900},sizes:[{ascenderHeight:5,descenderHeight:5,fontSize:13,iconSize:17,lineHeight:19,letterSpacing:0},{ascenderHeight:6,descenderHeight:6,fontSize:16,iconSize:25,lineHeight:23,letterSpacing:0},{ascenderHeight:7,descenderHeight:7,fontSize:21,iconSize:33,lineHeight:29,letterSpacing:0},{ascenderHeight:8,descenderHeight:8,fontSize:27,iconSize:41,lineHeight:35,letterSpacing:0},{ascenderHeight:9.5,descenderHeight:8.5,fontSize:33,iconSize:49,lineHeight:41,letterSpacing:0},{ascenderHeight:10.5,descenderHeight:9.5,fontSize:38,iconSize:53,lineHeight:47,letterSpacing:0}]},label:{family:'Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", \"Liberation Sans\", system-ui, sans-serif',weights:{regular:600,medium:700,semibold:800,bold:900},sizes:[{ascenderHeight:2,descenderHeight:2,fontSize:8.1,iconSize:13,lineHeight:10,letterSpacing:.5},{ascenderHeight:2,descenderHeight:2,fontSize:9.5,iconSize:15,lineHeight:11,letterSpacing:.5},{ascenderHeight:2,descenderHeight:2,fontSize:10.8,iconSize:17,lineHeight:12,letterSpacing:.5},{ascenderHeight:2,descenderHeight:2,fontSize:12.25,iconSize:19,lineHeight:13,letterSpacing:.5},{ascenderHeight:2,descenderHeight:2,fontSize:13.6,iconSize:21,lineHeight:14,letterSpacing:.5},{ascenderHeight:2,descenderHeight:2,fontSize:15,iconSize:23,lineHeight:15,letterSpacing:.5}]},text:{family:'Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", \"Liberation Sans\", Helvetica, Arial, system-ui, sans-serif',weights:{regular:400,medium:500,semibold:600,bold:700},sizes:[{ascenderHeight:4,descenderHeight:4,fontSize:10,iconSize:17,lineHeight:15,letterSpacing:0},{ascenderHeight:5,descenderHeight:5,fontSize:13,iconSize:21,lineHeight:19,letterSpacing:0},{ascenderHeight:6,descenderHeight:6,fontSize:15,iconSize:25,lineHeight:23,letterSpacing:0},{ascenderHeight:7,descenderHeight:7,fontSize:18,iconSize:29,lineHeight:27,letterSpacing:0},{ascenderHeight:8,descenderHeight:8,fontSize:21,iconSize:33,lineHeight:31,letterSpacing:0}]}};function z(e){return 2===e._version}const _=/* @__PURE__ */new WeakMap,W=/* @__PURE__ */new WeakMap;function q(e){const t=W.get(e);if(t)return t;const{avatar:n,button:r,color:o,container:i,font:a,input:s,media:l,radius:c,shadow:d,space:u,style:h}=e;return{_version:0,avatar:n,button:r,container:i,color:{light:{transparent:Z(o.light.transparent),default:Z(o.light.default),primary:Z(o.light.primary),positive:Z(o.light.positive),caution:Z(o.light.caution),critical:Z(o.light.critical)},dark:{transparent:Z(o.dark.transparent),default:Z(o.dark.default),primary:Z(o.dark.primary),positive:Z(o.dark.positive),caution:Z(o.dark.caution),critical:Z(o.dark.critical)}},focusRing:s.text.focusRing,fonts:a,input:s,media:l,radius:c,shadows:d,space:u,styles:h,v2:e}}function Z(e){return{base:{bg:e.bg,fg:e.fg,border:e.border,focusRing:e.focusRing,shadow:e.shadow},button:e.button,card:e.selectable.default,dark:e._dark,input:{default:U(e.input.default),invalid:U(e.input.invalid)},muted:{...e.button.ghost,transparent:e.button.ghost.default},solid:{...e.button.default,transparent:e.button.default.default},selectable:e.selectable,spot:{gray:e.avatar.gray.bg,blue:e.avatar.blue.bg,purple:e.avatar.purple.bg,magenta:e.avatar.magenta.bg,red:e.avatar.red.bg,orange:e.avatar.orange.bg,yellow:e.avatar.yellow.bg,green:e.avatar.green.bg,cyan:e.avatar.cyan.bg},syntax:e.syntax}}function U(e){return{enabled:G(e.enabled),disabled:G(e.disabled),readOnly:G(e.readOnly),hovered:G(e.hovered)}}function G(e){return{bg:e.bg,bg2:e.muted.bg,border:e.border,fg:e.fg,placeholder:e.placeholder}}const Y=[\"multiply\",\"screen\"],X=[\"transparent\",\"default\",\"neutral\",\"primary\",\"suggest\",\"positive\",\"caution\",\"critical\"],K=[\"default\",\"neutral\",\"primary\",\"suggest\",\"positive\",\"caution\",\"critical\"],J=[\"enabled\",\"hovered\",\"pressed\",\"selected\",\"disabled\"],Q=[\"default\",\"ghost\",\"bleed\"],ee=[\"default\",\"invalid\"],te=[\"enabled\",\"hovered\",\"readOnly\",\"disabled\"];function ne(e){return D.includes(e)}function re(e){return/^\\d+%$/.test(e)}function oe(e){const t=e.split(\"/\");let n=t.shift()||\"\";const[r,o]=n.split(\" \");if(ne(r)){const e=r,n=t.shift()||\"\";return re(o)?{type:\"color\",tint:e,mix:Number(o.slice(0,-1))/100}:ie(n)?{type:\"color\",tint:e,opacity:Number(n)}:{type:\"color\",tint:e}}if(function(e){return\"black\"===e||\"white\"===e}(r)){const e=r,n=t.shift()||\"\";return re(o)?{type:\"color\",key:e,mix:Number(o.slice(0,-1))/100}:ie(n)?{type:\"color\",key:e,opacity:Number(n)}:{type:\"color\",key:e}}if(function(e){return B.includes(e)}(r)){const e=r;n=t.shift()||\"\";const[o,i]=n.split(\" \");if(ne(o)){const n=o,r=t.shift()||\"\";return re(i)?{type:\"color\",hue:e,tint:n,mix:Number(i.slice(0,-1))/100}:ie(r)?{type:\"color\",hue:e,tint:n,opacity:Number(r)}:{type:\"color\",hue:e,tint:n}}return{type:\"hue\",value:e}}if(function(e){return Y.includes(e)}(r))return{type:\"blendMode\",value:r}}function ie(e){return\"0\"===e||/^0\\.[0-9]+$/.test(e)||\"1\"===e}const ae=[\"500\",\"500\"];function se(e,t=ae){const{hue:n,scheme:r}=e,o=oe(t[\"light\"===r?0:1]);if(!o||\"color\"!==o.type)throw new Error(`Invalid color token: ${t[0]}`);return function(e){let t=\"\";return t=\"black\"===e.key||\"white\"===e.key?e.key:`${e.hue}/${e.tint}`,void 0!==e.mix?`${t} ${100*e.mix}%`:(void 0!==e.opacity&&(t+=`/${e.opacity}`),t)}({...o,hue:o.hue||n})}const le={base:{\"*\":{_blend:[\"multiply\",\"screen\"],accent:{fg:[\"purple/600\",\"purple/400\"]},avatar:{\"*\":{_blend:[\"screen\",\"multiply\"],bg:[\"500\",\"400\"],fg:[\"white\",\"black\"]}},backdrop:[\"gray/200/0.5\",\"black/0.5\"],badge:{\"*\":{bg:[\"100\",\"900\"],fg:[\"600\",\"400\"],icon:[\"500\",\"500\"],dot:[\"500\",\"500\"]},positive:{bg:[\"200 50%\",\"900\"],fg:[\"600\",\"500\"]},caution:{bg:[\"200 50%\",\"900\"],fg:[\"600\",\"500\"]}},bg:[\"50\",\"950\"],border:[\"200\",\"800\"],code:{bg:[\"50\",\"950\"],fg:[\"600\",\"400\"]},fg:[\"800\",\"200\"],focusRing:[\"blue/500\",\"blue/500\"],icon:[\"600\",\"400\"],kbd:{bg:[\"white\",\"black\"],fg:[\"600\",\"400\"],border:[\"200\",\"800\"]},link:{fg:[\"blue/600\",\"blue/300\"]},muted:{bg:[\"50\",\"950\"],fg:[\"700 75%\",\"300 75%\"]},shadow:{outline:[\"500/0.3\",\"500/0.4\"],umbra:[\"gray/500/0.1\",\"black/0.2\"],penumbra:[\"gray/500/0.07\",\"black/0.14\"],ambient:[\"gray/500/0.06\",\"black/0.12\"]},skeleton:{from:[\"100\",\"900\"],to:[\"100 50%\",\"900 50%\"]}},transparent:{bg:[\"50\",\"black\"]},default:{bg:[\"white\",\"950\"],fg:[\"800\",\"200\"],muted:{fg:[\"600\",\"400\"]}},primary:{_hue:\"blue\"},suggest:{_hue:\"purple\"},positive:{_hue:\"green\",shadow:{outline:[\"500/0.4\",\"500/0.4\"]}},caution:{_hue:\"yellow\",shadow:{outline:[\"600/0.3\",\"500/0.4\"]}},critical:{_hue:\"red\"}},button:{default:{\"*\":{\"*\":{_blend:[\"screen\",\"multiply\"],accent:{fg:[\"purple/300\",\"purple/700\"]},avatar:{\"*\":{_blend:[\"screen\",\"multiply\"],bg:[\"500\",\"400\"],fg:[\"white\",\"black\"]}},badge:{\"*\":{bg:[\"900\",\"100\"],fg:[\"400\",\"600\"],dot:[\"500\",\"500\"],icon:[\"500\",\"500\"]}},bg:[\"500\",\"400\"],border:[\"500/0\",\"400/0\"],code:{bg:[\"500 20%\",\"400 20%\"],fg:[\"200\",\"600\"]},fg:[\"white\",\"black\"],icon:[\"100 70%\",\"900 70%\"],kbd:{bg:[\"black\",\"white\"],fg:[\"200\",\"600\"],border:[\"800\",\"200\"]},link:{fg:[\"blue/200\",\"blue/600\"]},muted:{bg:[\"950\",\"50\"],fg:[\"100 70%\",\"900 70%\"]},skeleton:{from:[\"900\",\"100\"],to:[\"900 50%\",\"100 50%\"]}},hovered:{bg:[\"600\",\"300\"],border:[\"700/0\",\"300/0\"]},pressed:{bg:[\"700\",\"300\"]},selected:{bg:[\"700\",\"300\"]},disabled:{_hue:\"gray\",accent:{fg:[\"100 70%\",\"900 70%\"]},avatar:{\"*\":{_blend:[\"screen\",\"multiply\"],bg:[\"gray/500\",\"gray/400\"],fg:[\"white\",\"black\"]}},badge:{\"*\":{bg:[\"gray/700\",\"gray/300\"],fg:[\"white\",\"black\"],dot:[\"white\",\"black\"],icon:[\"white\",\"black\"]}},bg:[\"300\",\"600\"],code:{bg:[\"950\",\"50\"],fg:[\"300\",\"600\"]},fg:[\"300\",\"600\"],muted:{bg:[\"950\",\"50\"],fg:[\"300\",\"600\"]},kbd:{bg:[\"black\",\"white\"],fg:[\"white\",\"black\"],border:[\"700\",\"300\"]},link:{fg:[\"100 70%\",\"900 70%\"]}}},default:{\"*\":{avatar:{\"*\":{_blend:[\"screen\",\"multiply\"],bg:[\"500\",\"400\"],fg:[\"white\",\"black\"]}},bg:[\"800\",\"200\"],muted:{bg:[\"950\",\"50\"],fg:[\"400\",\"600\"]}},hovered:{bg:[\"900\",\"100\"]},pressed:{bg:[\"black\",\"white\"]},selected:{bg:[\"black\",\"white\"]}}},ghost:{\"*\":{\"*\":{_blend:[\"multiply\",\"screen\"],accent:{fg:[\"purple/700 60%\",\"purple/300 70%\"]},avatar:{\"*\":{_blend:[\"screen\",\"multiply\"],bg:[\"500\",\"400\"],fg:[\"white\",\"black\"]}},badge:{\"*\":{bg:[\"100\",\"900\"],fg:[\"600\",\"400\"],dot:[\"500\",\"500\"],icon:[\"500\",\"500\"]}},bg:[\"50\",\"950\"],border:[\"100\",\"900\"],code:{bg:[\"500 10%\",\"400 10%\"],fg:[\"700 60%\",\"400 60%\"]},fg:[\"600\",\"400\"],icon:[\"700 60%\",\"300 60%\"],kbd:{bg:[\"white\",\"black\"],fg:[\"600\",\"400\"],border:[\"200\",\"800\"]},link:{fg:[\"blue/700 60%\",\"blue/300 60%\"]},muted:{bg:[\"100\",\"950\"],fg:[\"700 60%\",\"300 60%\"]},skeleton:{from:[\"100\",\"900\"],to:[\"100 50%\",\"900 50%\"]}},hovered:{bg:[\"100\",\"900\"],fg:[\"700\",\"300\"]},pressed:{bg:[\"200\",\"800\"],fg:[\"800\",\"200\"]},selected:{bg:[\"200\",\"800\"],fg:[\"800\",\"200\"]},disabled:{_hue:\"gray\",accent:{fg:[\"200\",\"800\"]},avatar:{\"*\":{_blend:[\"screen\",\"multiply\"],bg:[\"gray/100\",\"gray/900\"],fg:[\"white\",\"black\"]}},badge:{\"*\":{_hue:\"gray\",bg:[\"50\",\"950\"],fg:[\"gray/200\",\"gray/800\"],dot:[\"gray/200\",\"gray/800\"],icon:[\"gray/200\",\"gray/800\"]}},border:[\"100\",\"900\"],code:{bg:[\"50\",\"950\"],fg:[\"200\",\"800\"]},fg:[\"400\",\"600\"],icon:[\"300\",\"700\"],muted:{fg:[\"300\",\"700\"]},kbd:{bg:[\"white\",\"black\"],fg:[\"200\",\"800\"],border:[\"100\",\"900\"]},link:{fg:[\"200\",\"800\"]}}},positive:{\"*\":{border:[\"600 20%\",\"800\"]}},caution:{\"*\":{border:[\"600 20%\",\"800\"]}}},bleed:{\"*\":{\"*\":{_blend:[\"multiply\",\"screen\"],accent:{fg:[\"purple/700 70%\",\"purple/300 70%\"]},avatar:{\"*\":{_blend:[\"screen\",\"multiply\"],bg:[\"500\",\"400\"],fg:[\"white\",\"black\"]}},badge:{\"*\":{bg:[\"100\",\"900\"],fg:[\"600\",\"400\"],dot:[\"500\",\"500\"],icon:[\"500\",\"500\"]}},bg:[\"white\",\"black\"],border:[\"white/0\",\"black/0\"],code:{bg:[\"50\",\"950\"],fg:[\"700 75%\",\"300 75%\"]},fg:[\"700\",\"300\"],icon:[\"700 75%\",\"300 75%\"],kbd:{bg:[\"white\",\"black\"],fg:[\"700\",\"300\"],border:[\"200\",\"800\"]},link:{fg:[\"blue/700 70%\",\"blue/300 70%\"]},muted:{bg:[\"100\",\"950\"],fg:[\"700 75%\",\"300 75%\"]},skeleton:{from:[\"100\",\"900\"],to:[\"100 50%\",\"900 50%\"]}},hovered:{bg:[\"50\",\"950\"],fg:[\"800\",\"200\"],icon:[\"800 70%\",\"300 70%\"]},pressed:{bg:[\"100\",\"900\"],fg:[\"800\",\"200\"],icon:[\"800 70%\",\"200 70%\"]},selected:{bg:[\"100\",\"900\"],fg:[\"800\",\"200\"],icon:[\"800 60%\",\"200 60%\"]},disabled:{_hue:\"gray\",accent:{fg:[\"200\",\"800\"]},avatar:{\"*\":{_blend:[\"screen\",\"multiply\"],bg:[\"gray/100\",\"gray/900\"],fg:[\"white\",\"black\"]}},badge:{\"*\":{_hue:\"gray\",bg:[\"50\",\"950\"],fg:[\"gray/200\",\"gray/800\"],dot:[\"gray/200\",\"gray/800\"],icon:[\"gray/200\",\"gray/800\"]}},code:{bg:[\"50\",\"950\"],fg:[\"200\",\"800\"]},fg:[\"400\",\"600\"],icon:[\"300\",\"700\"],muted:{fg:[\"400\",\"600\"]},kbd:{bg:[\"white\",\"black\"],fg:[\"200\",\"800\"],border:[\"100\",\"900\"]},link:{fg:[\"200\",\"800\"]}}}}},input:{\"*\":{\"*\":{_blend:[\"multiply\",\"screen\"],bg:[\"white\",\"black\"],border:[\"200\",\"700\"],fg:[\"black\",\"200\"],muted:{bg:[\"50\",\"950\"]},placeholder:[\"400\",\"600\"]},hovered:{border:[\"300\",\"700\"]},readOnly:{bg:[\"50\",\"950\"],border:[\"200\",\"800\"],fg:[\"800\",\"200\"]},disabled:{bg:[\"50\",\"950\"],fg:[\"400\",\"600\"],border:[\"100\",\"900\"],placeholder:[\"200\",\"800 50%\"]}},invalid:{\"*\":{_hue:\"red\",bg:[\"100\",\"950\"]}}},selectable:{\"*\":{\"*\":{_blend:[\"multiply\",\"screen\"],accent:{fg:[\"purple/700 70%\",\"purple/300 70%\"]},avatar:{\"*\":{_blend:[\"screen\",\"multiply\"],bg:[\"500\",\"400\"],fg:[\"white\",\"black\"]}},badge:{\"*\":{bg:[\"100\",\"900\"],fg:[\"600\",\"400\"],dot:[\"500\",\"500\"],icon:[\"500\",\"500\"]}},bg:[\"white\",\"black\"],border:[\"200\",\"800\"],code:{bg:[\"50\",\"950\"],fg:[\"600\",\"400\"]},fg:[\"700\",\"300\"],icon:[\"700 75%\",\"300 75%\"],kbd:{bg:[\"white\",\"black\"],fg:[\"600\",\"400\"],border:[\"200\",\"800\"]},link:{fg:[\"blue/700 70%\",\"blue/300 70%\"]},muted:{bg:[\"50\",\"950\"],fg:[\"700 75%\",\"300 75%\"]},skeleton:{from:[\"100\",\"900\"],to:[\"100 50%\",\"900 50%\"]}},hovered:{bg:[\"50\",\"950\"]},pressed:{bg:[\"100\",\"900\"]},selected:{_blend:[\"screen\",\"multiply\"],accent:{fg:[\"purple/300\",\"purple/700\"]},avatar:{\"*\":{_blend:[\"multiply\",\"screen\"],bg:[\"white\",\"black\"],fg:[\"black\",\"white\"]}},badge:{\"*\":{bg:[\"900\",\"100\"],fg:[\"400\",\"600\"],dot:[\"500\",\"500\"],icon:[\"500\",\"500\"]}},bg:[\"500\",\"400\"],border:[\"500 20%\",\"400 20%\"],code:{bg:[\"500 20%\",\"400 20%\"],fg:[\"200\",\"600\"]},fg:[\"white\",\"black\"],icon:[\"100 70%\",\"900 70%\"],kbd:{bg:[\"black\",\"white\"],fg:[\"200\",\"600\"],border:[\"800\",\"200\"]},link:{fg:[\"blue/200\",\"blue/600\"]},muted:{bg:[\"500 10%\",\"400 10%\"],fg:[\"100 70%\",\"900 70%\"]},skeleton:{from:[\"900\",\"100\"],to:[\"900 50%\",\"100 50%\"]}},disabled:{_hue:\"gray\",accent:{fg:[\"200\",\"800\"]},avatar:{\"*\":{_blend:[\"screen\",\"multiply\"],bg:[\"gray/100\",\"gray/900\"],fg:[\"white\",\"black\"]}},badge:{\"*\":{_hue:\"gray\",bg:[\"50\",\"950\"],fg:[\"gray/200\",\"gray/800\"],dot:[\"gray/200\",\"gray/800\"],icon:[\"gray/200\",\"gray/800\"]}},border:[\"100\",\"900\"],code:{bg:[\"50\",\"950\"],fg:[\"200\",\"800\"]},fg:[\"200\",\"800\"],icon:[\"200\",\"800\"],kbd:{bg:[\"white\",\"black\"],fg:[\"200\",\"800\"],border:[\"100\",\"900\"]},link:{fg:[\"200\",\"800\"]},muted:{bg:[\"50 50%\",\"950 50%\"],fg:[\"200\",\"800\"]}}},default:{selected:{_hue:\"blue\"}},critical:{disabled:{bg:[\"50 50%\",\"950 50%\"]}}},syntax:{atrule:[\"purple/600\",\"purple/400\"],attrName:[\"green/600\",\"green/400\"],attrValue:[\"yellow/600\",\"yellow/400\"],attribute:[\"yellow/600\",\"yellow/400\"],boolean:[\"purple/600\",\"purple/400\"],builtin:[\"purple/600\",\"purple/400\"],cdata:[\"yellow/600\",\"yellow/400\"],char:[\"yellow/600\",\"yellow/400\"],class:[\"orange/600\",\"orange/400\"],className:[\"cyan/600\",\"cyan/400\"],comment:[\"gray/400\",\"gray/600\"],constant:[\"purple/600\",\"purple/400\"],deleted:[\"red/600\",\"red/400\"],entity:[\"red/600\",\"red/400\"],function:[\"green/600\",\"green/400\"],hexcode:[\"blue/600\",\"blue/400\"],id:[\"purple/600\",\"purple/400\"],important:[\"purple/600\",\"purple/400\"],inserted:[\"yellow/600\",\"yellow/400\"],keyword:[\"magenta/600\",\"magenta/400\"],number:[\"purple/600\",\"purple/400\"],operator:[\"magenta/600\",\"magenta/400\"],property:[\"blue/600\",\"blue/400\"],pseudoClass:[\"yellow/600\",\"yellow/400\"],pseudoElement:[\"yellow/600\",\"yellow/400\"],punctuation:[\"gray/600\",\"gray/400\"],regex:[\"blue/600\",\"blue/400\"],selector:[\"red/600\",\"red/400\"],string:[\"yellow/600\",\"yellow/400\"],symbol:[\"purple/600\",\"purple/400\"],tag:[\"red/600\",\"red/400\"],unit:[\"orange/600\",\"orange/400\"],url:[\"red/600\",\"red/400\"],variable:[\"red/600\",\"red/400\"]}};function ce(e){return!(!e||\"object\"!=typeof e||Array.isArray(e))}function de(...e){const t=e.filter(Boolean);return 0===t.length?{}:t.reduce(ue,{})}function ue(e,t){for(const n of Object.keys(t)){const r=e[n],o=t[n];ce(r)&&ce(o)?e[n]=de(r,o):e[n]=o}return e}function he(e){const t=de(le,e);return{base:fe(t),button:me(t),input:ye(t),selectable:Ce(t),syntax:t.syntax}}function fe(e){const t={};for(const n of X)t[n]=pe(e,n);return t}function pe(e,t){const n=de(e?.base?.[\"*\"],e?.base?.[t]),r=n._hue||e?.base?.[t]?._hue||\"gray\";return{...n,_hue:r,avatar:B.reduce(((e,t)=>({...e,[t]:de({_hue:t},n.avatar?.[\"*\"],n.avatar?.[t])})),{}),badge:K.reduce(((t,o)=>({...t,[o]:{_hue:e?.base?.[o]?._hue||r,...n.badge?.[\"*\"],...n.badge?.[o]}})),{})}}function me(e){const t={};for(const n of Q)t[n]=ge(e,n);return t}function ge(e,t){const n={};for(const r of K)n[r]=ve(e,t,r);return n}function ve(e,t,n){const r={};for(const o of J)r[o]=we(e,n,t,o);return r}function we(e,t,n,r){const o=de(e?.button?.[n]?.[\"*\"]?.[\"*\"],e?.button?.[n]?.[t]?.[\"*\"],e?.button?.[n]?.[\"*\"]?.[r],e?.button?.[n]?.[t]?.[r]),i=o._hue||e?.base?.[t]?._hue;return{...o,_hue:i,avatar:B.reduce(((e,t)=>({...e,[t]:de({_hue:t},o.avatar?.[\"*\"],o.avatar?.[t])})),{}),badge:K.reduce(((t,n)=>({...t,[n]:{_hue:e?.base?.[n]?._hue||i,...o.badge?.[\"*\"],...o.badge?.[n]}})),{})}}function ye(e){const t={};for(const n of ee)t[n]=be(e,n);return t}function be(e,t){const n={};for(const r of te)n[r]=xe(e,t,r);return n}function xe(e,t,n){const r=de(e?.input?.[\"*\"]?.[\"*\"],e?.input?.[t]?.[\"*\"],e?.input?.[\"*\"]?.[n],e?.input?.[t]?.[n]),o=r._hue||e?.input?.[t]?._hue;return{...r,_hue:o}}function Ce(e){const t={};for(const n of K)t[n]=ke(e,n);return t}function ke(e,t){const n={_hue:e?.selectable?.[t]?._hue||e?.base?.[t]?._hue};for(const r of J)n[r]=Le(e,t,r);return n}function Le(e,t,n){const r=de(e?.selectable?.[\"*\"]?.[\"*\"],e?.selectable?.[t]?.[\"*\"],e?.selectable?.[\"*\"]?.[n],e?.selectable?.[t]?.[n]),o=r._hue||e?.base?.[t]?._hue;return{...r,_hue:o,avatar:B.reduce(((e,t)=>({...e,[t]:de({_hue:t},r.avatar?.[\"*\"],r.avatar?.[t])})),{}),badge:K.reduce(((t,n)=>({...t,[n]:{_hue:e?.base?.[n]?._hue||o,...r.badge?.[\"*\"],...r.badge?.[n]}})),{})}}function Me(e,t){const{scheme:n}=e,r={};for(const e of X)r[e]=Se({scheme:n,tone:e},t);return r}function Se(e,t){const{scheme:n,tone:r}=e,o=t?.color?.base?.[r],i={hue:o?._hue||\"gray\",scheme:n};return{_blend:(o?._blend||[\"multiply\",\"screen\"])[\"light\"===n?0:1],_dark:\"dark\"===n,accent:{fg:se(i,o?.accent?.fg)},avatar:Ve({scheme:n},o),backdrop:se(i,o?.backdrop),badge:He(o?.badge,{scheme:n},t),bg:se(i,o?.bg),border:se(i,o?.border),button:$e({scheme:n,tone:r},t),code:{bg:se(i,o?.code?.bg),fg:se(i,o?.code?.fg)},fg:se(i,o?.fg),focusRing:se(i,o?.focusRing),icon:se(i,o?.icon),input:Pe({scheme:n,tone:r},t),kbd:{bg:se(i,o?.kbd?.bg),fg:se(i,o?.kbd?.fg),border:se(i,o?.kbd?.border)},link:{fg:se(i,o?.link?.fg)},muted:{bg:se(i,o?.muted?.bg),fg:se(i,o?.muted?.fg)},selectable:Be({scheme:n,tone:r},t),shadow:Re({scheme:n,tone:r},t),skeleton:{from:se(i,o?.skeleton?.from),to:se(i,o?.skeleton?.to)},syntax:ze({scheme:n},t)}}function Re(e,t){const{scheme:n,tone:r}=e,o=t?.color?.base?.[r],i={hue:o?._hue||\"gray\",scheme:n};return{outline:se(i,o?.shadow?.outline),umbra:se(i,o?.shadow?.umbra),penumbra:se(i,o?.shadow?.penumbra),ambient:se(i,o?.shadow?.ambient)}}function Ve(e,t){const{scheme:n}=e;return{gray:Ee({color:\"gray\",scheme:n},t),blue:Ee({color:\"blue\",scheme:n},t),purple:Ee({color:\"purple\",scheme:n},t),magenta:Ee({color:\"magenta\",scheme:n},t),red:Ee({color:\"red\",scheme:n},t),orange:Ee({color:\"orange\",scheme:n},t),yellow:Ee({color:\"yellow\",scheme:n},t),green:Ee({color:\"green\",scheme:n},t),cyan:Ee({color:\"cyan\",scheme:n},t)}}function Ee(e,t){const{color:n,scheme:r}=e,o=t?.avatar?.[n],i={hue:o?._hue||\"gray\",scheme:r};return{_blend:(o?._blend||[\"screen\",\"multiply\"])[\"light\"===r?0:1],bg:se(i,o?.bg),fg:se(i,o?.fg)}}function He(e,t,n){const{scheme:r}=t,o={};for(const t of K)o[t]=Te(e,{scheme:r,tone:t},n);return o}function Te(e,t,n){const{scheme:r,tone:o}=t,i=e?.[o],a={hue:i?._hue||n?.color?.base?.[o]?._hue||\"gray\",scheme:r};return{bg:se(a,i?.bg),fg:se(a,i?.fg),dot:se(a,i?.dot),icon:se(a,i?.icon)}}function $e(e,t){const{scheme:n,tone:r}=e,o={};for(const e of Q)o[e]=Ae({cardTone:r,scheme:n,mode:e},t);return o}function Ae(e,t){const{cardTone:n,mode:r,scheme:o}=e,i={};for(const e of K)i[e]=Ne({cardTone:n,mode:r,scheme:o,tone:e},t);return i}function Ne(e,t){const{cardTone:n,mode:r,scheme:o,tone:i}=e,a={};for(const e of J)a[e]=Ie({cardTone:n,mode:r,tone:i,scheme:o,state:e},t);return a}function Ie(e,t){const{cardTone:n,mode:r,tone:o,scheme:i,state:a}=e,s=t?.color?.base?.[n],l=t?.color?.button?.[r]?.[o]?.[a],c={hue:l?._hue||s?._hue||\"gray\",scheme:i};return{_blend:(l?._blend||[\"screen\",\"multiply\"])[\"light\"===i?0:1],accent:{fg:se(c,l?.accent?.fg)},avatar:Ve({scheme:i},l),badge:He(l?.badge,{scheme:i},t),bg:se(c,l?.bg),border:se(c,l?.border),code:{bg:se(c,l?.code?.bg),fg:se(c,l?.code?.fg)},fg:se(c,l?.fg),icon:se(c,l?.icon),muted:{bg:se(c,l?.muted?.bg),fg:se(c,l?.muted?.fg)},kbd:{bg:se(c,l?.kbd?.bg),fg:se(c,l?.kbd?.fg),border:se(c,l?.kbd?.border)},link:{fg:se(c,l?.link?.fg)},skeleton:{from:se(c,l?.skeleton?.from),to:se(c,l?.skeleton?.to)}}}function Pe(e,t){const{scheme:n,tone:r}=e;return{default:Fe({mode:\"default\",scheme:n,tone:r},t),invalid:Fe({mode:\"invalid\",scheme:n,tone:r},t)}}function Fe(e,t){const{mode:n,scheme:r,tone:o}=e;return{enabled:je({mode:n,scheme:r,state:\"enabled\",cardTone:o},t),hovered:je({mode:n,scheme:r,state:\"hovered\",cardTone:o},t),readOnly:je({mode:n,scheme:r,state:\"readOnly\",cardTone:o},t),disabled:je({mode:n,scheme:r,state:\"disabled\",cardTone:o},t)}}function je(e,t){const{cardTone:n,mode:r,scheme:o,state:i}=e,a=t?.color?.base?.[n],s=t?.color?.input?.[r]?.[i],l={hue:s?._hue||a?._hue||\"gray\",scheme:o};return{_blend:(s?._blend||[\"screen\",\"multiply\"])[\"light\"===o?0:1],bg:se(l,s?.bg),border:se(l,s?.border),fg:se(l,s?.fg),muted:{bg:se(l,s?.muted?.bg)},placeholder:se(l,s?.placeholder)}}function Be(e,t){const{scheme:n,tone:r}=e,o={};for(const e of K)o[e]=De({cardTone:r,scheme:n,tone:e},t);return o}function De(e,t){const{cardTone:n,scheme:r,tone:o}=e,i={};for(const e of J)i[e]=Oe({cardTone:n,tone:o,scheme:r,state:e},t);return i}function Oe(e,t){const{cardTone:n,scheme:r,state:o,tone:i}=e,a=t?.color?.base?.[n],s=t?.color?.selectable?.[i]?.[o],l={hue:s?._hue||a?._hue||\"gray\",scheme:r};return{_blend:(s?._blend||[\"screen\",\"multiply\"])[\"light\"===r?0:1],accent:{fg:se(l,s?.accent?.fg)},avatar:Ve({scheme:r},s),badge:He(s?.badge,{scheme:r},t),bg:se(l,s?.bg),border:se(l,s?.border),code:{bg:se(l,s?.code?.bg),fg:se(l,s?.code?.fg)},fg:se(l,s?.fg),icon:se(l,s?.icon),muted:{bg:se(l,s?.muted?.bg),fg:se(l,s?.muted?.fg)},kbd:{bg:se(l,s?.kbd?.bg),fg:se(l,s?.kbd?.fg),border:se(l,s?.kbd?.border)},link:{fg:se(l,s?.link?.fg)},skeleton:{from:se(l,s?.skeleton?.from),to:se(l,s?.skeleton?.to)}}}function ze(e,t){const{scheme:n}=e,r=t?.color?.syntax,o={hue:\"gray\",scheme:n};return{atrule:se(o,r?.atrule),attrName:se(o,r?.attrName),attrValue:se(o,r?.attrValue),attribute:se(o,r?.attribute),boolean:se(o,r?.boolean),builtin:se(o,r?.builtin),cdata:se(o,r?.cdata),char:se(o,r?.char),class:se(o,r?.class),className:se(o,r?.className),comment:se(o,r?.comment),constant:se(o,r?.constant),deleted:se(o,r?.deleted),doctype:se(o,r?.doctype),entity:se(o,r?.entity),function:se(o,r?.function),hexcode:se(o,r?.hexcode),id:se(o,r?.id),important:se(o,r?.important),inserted:se(o,r?.inserted),keyword:se(o,r?.keyword),number:se(o,r?.number),operator:se(o,r?.operator),prolog:se(o,r?.prolog),property:se(o,r?.property),pseudoClass:se(o,r?.pseudoClass),pseudoElement:se(o,r?.pseudoElement),punctuation:se(o,r?.punctuation),regex:se(o,r?.regex),selector:se(o,r?.selector),string:se(o,r?.string),symbol:se(o,r?.symbol),tag:se(o,r?.tag),unit:se(o,r?.unit),url:se(o,r?.url),variable:se(o,r?.variable)}}const _e={black:{title:\"Black\",hex:\"#0d0e12\"},white:{title:\"White\",hex:\"#ffffff\"},gray:{50:{title:\"Gray 50\",hex:\"#f6f6f8\"},100:{title:\"Gray 100\",hex:\"#eeeef1\"},200:{title:\"Gray 200\",hex:\"#e3e4e8\"},300:{title:\"Gray 300\",hex:\"#bbbdc9\"},400:{title:\"Gray 400\",hex:\"#9499ad\"},500:{title:\"Gray 500\",hex:\"#727892\"},600:{title:\"Gray 600\",hex:\"#515870\"},700:{title:\"Gray 700\",hex:\"#383d51\"},800:{title:\"Gray 800\",hex:\"#252837\"},900:{title:\"Gray 900\",hex:\"#1b1d27\"},950:{title:\"Gray 950\",hex:\"#13141b\"}},blue:{50:{title:\"Blue 50\",hex:\"#f5f8ff\"},100:{title:\"Blue 100\",hex:\"#e5edff\"},200:{title:\"Blue 200\",hex:\"#dbe5ff\"},300:{title:\"Blue 300\",hex:\"#a8bfff\"},400:{title:\"Blue 400\",hex:\"#7595ff\"},500:{title:\"Blue 500\",hex:\"#556bfc\"},600:{title:\"Blue 600\",hex:\"#4043e7\"},700:{title:\"Blue 700\",hex:\"#2927aa\"},800:{title:\"Blue 800\",hex:\"#192457\"},900:{title:\"Blue 900\",hex:\"#161a41\"},950:{title:\"Blue 950\",hex:\"#101228\"}},purple:{50:{title:\"Purple 50\",hex:\"#f8f5ff\"},100:{title:\"Purple 100\",hex:\"#f1ebff\"},200:{title:\"Purple 200\",hex:\"#ece1fe\"},300:{title:\"Purple 300\",hex:\"#ccb1fc\"},400:{title:\"Purple 400\",hex:\"#b087f7\"},500:{title:\"Purple 500\",hex:\"#8f57ef\"},600:{title:\"Purple 600\",hex:\"#721fe5\"},700:{title:\"Purple 700\",hex:\"#4c1a9e\"},800:{title:\"Purple 800\",hex:\"#2f1862\"},900:{title:\"Purple 900\",hex:\"#23173f\"},950:{title:\"Purple 950\",hex:\"#181128\"}},magenta:{50:{title:\"Magenta 50\",hex:\"#fef6f9\"},100:{title:\"Magenta 100\",hex:\"#fde8ef\"},200:{title:\"Magenta 200\",hex:\"#fcdee9\"},300:{title:\"Magenta 300\",hex:\"#f7abc5\"},400:{title:\"Magenta 400\",hex:\"#f0709b\"},500:{title:\"Magenta 500\",hex:\"#e72767\"},600:{title:\"Magenta 600\",hex:\"#b11651\"},700:{title:\"Magenta 700\",hex:\"#7c1342\"},800:{title:\"Magenta 800\",hex:\"#4b1130\"},900:{title:\"Magenta 900\",hex:\"#341325\"},950:{title:\"Magenta 950\",hex:\"#1f0f14\"}},red:{50:{title:\"Red 50\",hex:\"#fff6f5\"},100:{title:\"Red 100\",hex:\"#ffe7e5\"},200:{title:\"Red 200\",hex:\"#ffdedc\"},300:{title:\"Red 300\",hex:\"#fdada5\"},400:{title:\"Red 400\",hex:\"#f77769\"},500:{title:\"Red 500\",hex:\"#ef4434\"},600:{title:\"Red 600\",hex:\"#cc2819\"},700:{title:\"Red 700\",hex:\"#8b2018\"},800:{title:\"Red 800\",hex:\"#4d1714\"},900:{title:\"Red 900\",hex:\"#321615\"},950:{title:\"Red 950\",hex:\"#1e1011\"}},orange:{50:{title:\"Orange 50\",hex:\"#fff7f0\"},100:{title:\"Orange 100\",hex:\"#ffeadb\"},200:{title:\"Orange 200\",hex:\"#ffddc7\"},300:{title:\"Orange 300\",hex:\"#ffb685\"},400:{title:\"Orange 400\",hex:\"#ff8e42\"},500:{title:\"Orange 500\",hex:\"#fa6400\"},600:{title:\"Orange 600\",hex:\"#b14802\"},700:{title:\"Orange 700\",hex:\"#7c3404\"},800:{title:\"Orange 800\",hex:\"#461e07\"},900:{title:\"Orange 900\",hex:\"#32160b\"},950:{title:\"Orange 950\",hex:\"#21120d\"}},yellow:{50:{title:\"Yellow 50\",hex:\"#fefae1\"},100:{title:\"Yellow 100\",hex:\"#fcf3bb\"},200:{title:\"Yellow 200\",hex:\"#f9e994\"},300:{title:\"Yellow 300\",hex:\"#f7d455\"},400:{title:\"Yellow 400\",hex:\"#f9bc15\"},500:{title:\"Yellow 500\",hex:\"#d28a04\"},600:{title:\"Yellow 600\",hex:\"#965908\"},700:{title:\"Yellow 700\",hex:\"#653a0b\"},800:{title:\"Yellow 800\",hex:\"#3b220c\"},900:{title:\"Yellow 900\",hex:\"#271a11\"},950:{title:\"Yellow 950\",hex:\"#181410\"}},green:{50:{title:\"Green 50\",hex:\"#e7fef5\"},100:{title:\"Green 100\",hex:\"#c5fce8\"},200:{title:\"Green 200\",hex:\"#a9f9dc\"},300:{title:\"Green 300\",hex:\"#59f3ba\"},400:{title:\"Green 400\",hex:\"#0ff0a1\"},500:{title:\"Green 500\",hex:\"#04b97a\"},600:{title:\"Green 600\",hex:\"#01794f\"},700:{title:\"Green 700\",hex:\"#015133\"},800:{title:\"Green 800\",hex:\"#023120\"},900:{title:\"Green 900\",hex:\"#06231a\"},950:{title:\"Green 950\",hex:\"#071715\"}},cyan:{50:{title:\"Cyan 50\",hex:\"#e7fefe\"},100:{title:\"Cyan 100\",hex:\"#c5fcfc\"},200:{title:\"Cyan 200\",hex:\"#96f8f8\"},300:{title:\"Cyan 300\",hex:\"#62efef\"},400:{title:\"Cyan 400\",hex:\"#18e2e2\"},500:{title:\"Cyan 500\",hex:\"#04b8be\"},600:{title:\"Cyan 600\",hex:\"#037782\"},700:{title:\"Cyan 700\",hex:\"#024950\"},800:{title:\"Cyan 800\",hex:\"#042f34\"},900:{title:\"Cyan 900\",hex:\"#072227\"},950:{title:\"Cyan 950\",hex:\"#0d181c\"}}};function We(e,t,n){return e+(t-e)*n}function qe(e,t){return e*t}function Ze(e,t){return e+t-e*t}function Ue(e,t=0,n=1){return Math.min(n,Math.max(t,e))}function Ge(e,t,n,r,o){return function(e,t,n){return e*(1-n)+t*n}(n,r,function(e,t,n){return Ue((n-e)/(t-e))}(e,t,o))}function Ye(e){return Math.round(e)}function Xe(e){if(4===e.length){const t=e.slice(1,2),n=e.slice(2,3),r=e.slice(3,4);return{r:parseInt(t+t,16),g:parseInt(n+n,16),b:parseInt(r+r,16)}}return{r:parseInt(e.slice(1,3),16),g:parseInt(e.slice(3,5),16),b:parseInt(e.slice(5,7),16)}}function Ke(e){const t=Ye(Ue(Math.round(e.r),0,255)),n=Ye(Ue(Math.round(e.g),0,255)),r=Ye(Ue(Math.round(e.b),0,255));return\"a\"in e?`rgba(${t},${n},${r},${e.a})`:\"#\"+((1<<24)+(t<<16)+(n<<8)+r).toString(16).slice(1)}const Je=/hsl\\(\\s*(\\d+)\\s*,\\s*((\\d+(?:\\.\\d+)?)%)\\s*,\\s*((\\d+(?:\\.\\d+)?)%)\\s*\\)/i;function Qe(e){if(!e)return{r:0,g:0,b:0};if(\"string\"!=typeof e)throw new Error(\"parseColor: expected a string\");if(\"#\"===(t=e)[0]&&(4===t.length||7===t.length)&&function(e){for(const t of e)if(-1===\"0123456789ABCDEFabcdef\".indexOf(t))return!1;return!0}(t.slice(1)))return Xe(e);var t;if(e.startsWith(\"hsl(\"))return function(e){const t=e.s/100,n=e.l/100,r=(1-Math.abs(2*n-1))*t,o=r*(1-Math.abs(e.h/60%2-1)),i=n-r/2;let a=0,s=0,l=0;return 0<=e.h&&e.h<60?(a=r,s=o,l=0):60<=e.h&&e.h<120?(a=o,s=r,l=0):120<=e.h&&e.h<180?(a=0,s=r,l=o):180<=e.h&&e.h<240?(a=0,s=o,l=r):240<=e.h&&e.h<300?(a=o,s=0,l=r):300<=e.h&&e.h<360&&(a=r,s=0,l=o),{r:Math.round(255*(a+i)),g:Math.round(255*(s+i)),b:Math.round(255*(l+i))}}(function(e){const t=Je.exec(e);if(!t)throw new Error(`parseHsl: string is not a HSL color: \"${e}\"`);return{h:parseInt(t[1]),s:parseFloat(t[3]),l:parseFloat(t[5])}}(e));if(e.startsWith(\"rgba(\"))return function(e){const t=e.replace(/rgba\\(|\\)/g,\"\").split(\",\");return{r:parseInt(t[0]),g:parseInt(t[1]),b:parseInt(t[2]),a:parseFloat(t[3])}}(e);throw new Error(`parseColor: unexpected color format: \"${e}\"`)}const et=[0,255];function tt(e,t){const{bg:n,blendMode:r,colorPalette:o}=t;if(\"white\"===n)throw new Error(\"Cannot blend with white background\");const i=oe(e);if(!i||\"color\"!==i.type)throw new Error(`Invalid color token value: ${e}`);let a=\"\";if(\"black\"===i.key&&(a=nt(o.black)),\"white\"===i.key&&(a=nt(o.white)),i.hue&&i.tint&&(a=nt(o[i.hue][i.tint])),!a)throw new Error(`Invalid color token value: ${e}`);const s=a,l={blendMode:r,bg:n,black:nt(o.black),white:nt(o.white)};try{if(a=function(e,t){const{blendMode:n}=t,r=Qe(e),o=Qe(t.black),i=Qe(t.white),a=t.bg?Qe(t.bg):\"multiply\"===n?i:o,s={r:[o.r,i.r],g:[o.g,i.g],b:[o.b,i.b]},l={r:Ue(Ge(...s.r,...et,a.r),...et),g:Ue(Ge(...s.g,...et,a.g),...et),b:Ue(Ge(...s.b,...et,a.b),...et)},c={r:Ue(Ge(...s.r,...et,r.r),...et),g:Ue(Ge(...s.g,...et,r.g),...et),b:Ue(Ge(...s.b,...et,r.b),...et)},d=\"multiply\"===n?{r:255*qe((u=l).r/255,(h=c).r/255),g:255*qe(u.g/255,h.g/255),b:255*qe(u.b/255,h.b/255)}:function(e,t){return{r:255*Ze(e.r/255,t.r/255),g:255*Ze(e.g/255,t.g/255),b:255*Ze(e.b/255,t.b/255)}}(l,c);var u,h;return Ke({r:Ue(Ge(...et,...s.r,d.r),...s.r),g:Ue(Ge(...et,...s.g,d.g),...s.g),b:Ue(Ge(...et,...s.b,d.b),...s.b)})}(a,l),n&&void 0!==i.mix){const e=Xe(n),t=Xe(a);a=Ke((c=e,d=t,u=i.mix,{r:We(c.r,d.r,u),g:We(c.g,d.g,u),b:We(c.b,d.b,u)}))}}catch(e){throw console.warn(\"could not blend\",a,l),e}var c,d,u;return\"#aN\"===a&&(console.warn(`invalid color token value: ${e}`),a=s),void 0!==i.opacity&&(a=function(e,t){const n=Qe(e);return`rgba(${n.r},${n.g},${n.b},${t})`}(a,i.opacity)),a}function nt(e){return\"string\"==typeof e?e:e.hex}function rt(e,t){const n=_e;return{light:ot(n,e.light),dark:ot(n,e.dark)}}function ot(e,t){const n=Object.entries(t),[,r]=n.find((([e])=>\"transparent\"===e)),[,o]=n.find((([e])=>\"default\"===e)),i=it(r,{colorPalette:e}),a=it(o,{colorPalette:e}),s=a.bg;if(\"white\"===s)throw new Error(\"Cannot blend with white background\");return Object.fromEntries([[\"transparent\",i],[\"default\",a],...n.filter((([e])=>\"default\"!==e&&\"transparent\"!==e)).map((([t,n])=>[t,it(n,{bg:s,colorPalette:e})]))])}function it(e,t){const{colorPalette:n,bg:r}=t,o=e._blend||\"multiply\",i=tt(e.bg,{colorPalette:n,bg:r,blendMode:o}),a={colorPalette:n,bg:i,blendMode:o},s=function(e,t){return{default:ut(e.default,t),ghost:ut(e.ghost,t),bleed:ut(e.bleed,t)}}(e.button,{baseBg:i,blendMode:o,colorPalette:n}),l=function(e,t){const n={};for(const r of K)n[r]=vt(e[r],t);return n}(e.selectable,{colorPalette:n,baseBg:i,blendMode:o}),c={outline:tt(e.shadow.outline,a),umbra:tt(e.shadow.umbra,{...a,bg:void 0,colorPalette:{...n,black:\"#000000\"}}),penumbra:tt(e.shadow.penumbra,{...a,bg:void 0,colorPalette:{...n,black:\"#000000\"}}),ambient:tt(e.shadow.ambient,{...a,bg:void 0,colorPalette:{...n,black:\"#000000\"}})};return{_blend:o,_dark:e._dark,accent:{fg:tt(e.accent.fg,a)},avatar:st(e.avatar,{baseBg:i,colorPalette:n,blendMode:o}),backdrop:tt(e.backdrop,a),badge:ct(e.badge,{baseBg:i,colorPalette:n,blendMode:o}),bg:i,border:tt(e.border,a),button:s,code:{bg:tt(e.code.bg,a),fg:tt(e.code.fg,a)},fg:tt(e.fg,a),focusRing:tt(e.focusRing,a),icon:tt(e.icon,a),input:pt(e.input,{baseBg:i,colorPalette:n,blendMode:o}),kbd:at(e.kbd,{baseBg:i,colorPalette:n,blendMode:o}),link:{fg:tt(e.link.fg,a)},muted:{bg:tt(e.muted.bg,a),fg:tt(e.muted.fg,a)},shadow:c,skeleton:{from:tt(e.skeleton.from,a),to:tt(e.skeleton.to,a)},syntax:wt(e.syntax,{baseBg:i,colorPalette:n,blendMode:o}),selectable:l}}function at(e,t){const{baseBg:n,blendMode:r,colorPalette:o}=t,i={bg:n,blendMode:r,colorPalette:o},a=tt(e.bg,i),s={bg:a,blendMode:r,colorPalette:o};return{bg:a,fg:tt(e.fg,s),border:tt(e.border,s)}}function st(e,t){const n={};for(const r of B)n[r]=lt(e[r],t);return n}function lt(e,t){const{baseBg:n,blendMode:r,colorPalette:o}=t,i=e._blend||\"multiply\",a={bg:n,blendMode:r,colorPalette:o},s=tt(e.bg,a),l={bg:s,blendMode:i,colorPalette:o};return{_blend:i,bg:s,fg:tt(e.fg,l)}}function ct(e,t){const n={};for(const r of K)n[r]=dt(e[r],t);return n}function dt(e,t){const{baseBg:n,blendMode:r,colorPalette:o}=t,i=r,a={bg:n,blendMode:r,colorPalette:o},s=tt(e.bg,a),l={bg:s,blendMode:i,colorPalette:o};return{bg:s,dot:tt(e.dot,l),fg:tt(e.fg,l),icon:tt(e.icon,l)}}function ut(e,t){const n={};for(const r of K)n[r]=ht(e[r],t);return n}function ht(e,t){return{enabled:ft(e.enabled,t),hovered:ft(e.hovered,t),pressed:ft(e.pressed,t),selected:ft(e.selected,t),disabled:ft(e.disabled,t)}}function ft(e,t){const{baseBg:n,blendMode:r,colorPalette:o}=t,i=e._blend||\"multiply\",a={bg:n,blendMode:r,colorPalette:o},s=tt(e.bg,a),l={bg:s,blendMode:i,colorPalette:o};return{_blend:i,accent:{fg:tt(e.accent.fg,l)},avatar:st(e.avatar,{baseBg:s,colorPalette:o,blendMode:i}),badge:ct(e.badge,{baseBg:s,colorPalette:o,blendMode:i}),bg:s,border:tt(e.border,l),code:{bg:tt(e.code.bg,l),fg:tt(e.code.fg,l)},fg:tt(e.fg,l),icon:tt(e.icon,l),link:{fg:tt(e.link.fg,l)},muted:{bg:tt(e.muted.bg,l),fg:tt(e.muted.fg,l)},kbd:{bg:tt(e.kbd.bg,l),fg:tt(e.kbd.fg,l),border:tt(e.kbd.border,l)},skeleton:{from:tt(e.skeleton?.from,l),to:tt(e.skeleton?.to,l)}}}function pt(e,t){return{default:mt(e.default,t),invalid:mt(e.invalid,t)}}function mt(e,t){return{enabled:gt(e.enabled,t),hovered:gt(e.hovered,t),readOnly:gt(e.readOnly,t),disabled:gt(e.disabled,t)}}function gt(e,t){const{baseBg:n,blendMode:r,colorPalette:o}=t,i=e._blend||\"multiply\",a={colorPalette:o,bg:n,blendMode:r},s=tt(e.bg,a),l={colorPalette:o,bg:s,blendMode:i};return{_blend:i,bg:s,border:tt(e.border,l),fg:tt(e.fg,l),muted:{bg:tt(e.muted.bg,l)},placeholder:tt(e.placeholder,l)}}function vt(e,t){return{enabled:ft(e.enabled,t),hovered:ft(e.hovered,t),pressed:ft(e.pressed,t),selected:ft(e.selected,t),disabled:ft(e.disabled,t)}}function wt(e,t){const{colorPalette:n,baseBg:r,blendMode:o}=t,i={colorPalette:n,bg:r,blendMode:o};return{atrule:tt(e.atrule,i),attrName:tt(e.attrName,i),attrValue:tt(e.attrValue,i),attribute:tt(e.attribute,i),boolean:tt(e.boolean,i),builtin:tt(e.builtin,i),cdata:tt(e.cdata,i),char:tt(e.char,i),class:tt(e.class,i),className:tt(e.className,i),comment:tt(e.comment,i),constant:tt(e.constant,i),deleted:tt(e.deleted,i),doctype:tt(e.doctype,i),entity:tt(e.entity,i),function:tt(e.function,i),hexcode:tt(e.hexcode,i),id:tt(e.id,i),important:tt(e.important,i),inserted:tt(e.inserted,i),keyword:tt(e.keyword,i),number:tt(e.number,i),operator:tt(e.operator,i),prolog:tt(e.prolog,i),property:tt(e.property,i),pseudoClass:tt(e.pseudoClass,i),pseudoElement:tt(e.pseudoElement,i),punctuation:tt(e.punctuation,i),regex:tt(e.regex,i),selector:tt(e.selector,i),string:tt(e.string,i),symbol:tt(e.symbol,i),tag:tt(e.tag,i),unit:tt(e.unit,i),url:tt(e.url,i),variable:tt(e.variable,i)}}const yt=/* @__PURE__ */new Map;var bt=typeof globalThis<\"u\"?globalThis:typeof window<\"u\"?window:typeof global<\"u\"?global:typeof self<\"u\"?self:{};function xt(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,\"default\")?e.default:e}var Ct,kt,Lt,Mt={},St=function(){if(Ct)return Mt;function e(e){var t=/* @__PURE__ */Object.create(null);return e&&Object.keys(e).forEach((function(n){if(\"default\"!==n){var r=Object.getOwnPropertyDescriptor(e,n);Object.defineProperty(t,n,r.get?r:{enumerable:!0,get:function(){return e[n]}})}})),t.default=e,Object.freeze(t)}Ct=1;var t,n,r=/* @__PURE__ */e(react__WEBPACK_IMPORTED_MODULE_1__);const{useRef:i,useEffect:a,isValidElement:s}=r,l=null!==(t=r.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE)&&void 0!==t?t:r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,c=Symbol.for(\"react.memo_cache_sentinel\"),d=\"function\"==typeof(null===(n=r.__COMPILER_RUNTIME)||void 0===n?void 0:n.c)?r.__COMPILER_RUNTIME.c:function(e){return r.useMemo((()=>{const t=new Array(e);for(let n=0;n<e;n++)t[n]=c;return t[c]=!0,t}),[])},u={};[\"readContext\",\"useCallback\",\"useContext\",\"useEffect\",\"useImperativeHandle\",\"useInsertionEffect\",\"useLayoutEffect\",\"useMemo\",\"useReducer\",\"useRef\",\"useState\",\"useDebugValue\",\"useDeferredValue\",\"useTransition\",\"useMutableSource\",\"useSyncExternalStore\",\"useId\",\"unstable_isNewReconciler\",\"getCacheSignal\",\"getCacheForType\",\"useCacheRefresh\"].forEach((e=>{u[e]=()=>{throw new Error(`[React] Unexpected React hook call (${e}) from a React compiled function. Check that all hooks are called directly and named according to convention ('use[A-Z]') `)}}));let h=null;var f,p;function m(e){return l.ReactCurrentDispatcher.current=e,l.ReactCurrentDispatcher.current}u.useMemoCache=e=>{if(null==h)throw new Error(\"React Compiler internal invariant violation: unexpected null dispatcher\");return h.useMemoCache(e)},(p=f||(f={}))[p.PushGuardContext=0]=\"PushGuardContext\",p[p.PopGuardContext=1]=\"PopGuardContext\",p[p.PushExpectHook=2]=\"PushExpectHook\",p[p.PopExpectHook=3]=\"PopExpectHook\";const g=[],v=/* @__PURE__ */new Map,w=/* @__PURE__ */new Set;return Mt.$dispatcherGuard=function(e){const t=l.ReactCurrentDispatcher.current;if(e===f.PushGuardContext){if(g.push(t),1===g.length&&(h=t),t===u)throw new Error(\"[React] Unexpected call to custom hook or component from a React compiled function. Check that (1) all hooks are called directly and named according to convention ('use[A-Z]') and (2) components are returned as JSX instead of being directly invoked.\");m(u)}else if(e===f.PopGuardContext){const e=g.pop();if(null==e)throw new Error(\"React Compiler internal error: unexpected null in guard stack\");0===g.length&&(h=null),m(e)}else if(e===f.PushExpectHook)g.push(t),m(h);else{if(e!==f.PopExpectHook)throw new Error(\"React Compiler internal error: unreachable block\"+e);{const e=g.pop();if(null==e)throw new Error(\"React Compiler internal error: unexpected null in guard stack\");m(e)}}},Mt.$makeReadOnly=function(){throw new Error(\"TODO: implement $makeReadOnly in react-compiler-runtime\")},Mt.$reset=function(e){for(let t=0;t<e.length;t++)e[t]=c},Mt.$structuralCheck=function(e,t,n,r,o,i){function a(e,t,a,s){const l=`${r}:${i} [${o}] ${n}${a} changed from ${e} to ${t} at depth ${s}`;w.has(l)||(w.add(l),console.error(l))}!function e(t,n,r,o){if(!(o>2)){if(t===n)return;if(typeof t!=typeof n)a(\"type \"+typeof t,\"type \"+typeof n,r,o);else if(\"object\"==typeof t){const i=Array.isArray(t),l=Array.isArray(n);if(null===t&&null!==n)a(\"null\",\"type \"+typeof n,r,o);else if(null===n)a(\"type \"+typeof t,\"null\",r,o);else if(t instanceof Map)if(n instanceof Map)if(t.size!==n.size)a(`Map instance with size ${t.size}`,`Map instance with size ${n.size}`,r,o);else for(const[i,s]of t)n.has(i)?e(s,n.get(i),`${r}.get(${i})`,o+1):a(`Map instance with key ${i}`,`Map instance without key ${i}`,r,o);else a(\"Map instance\",\"other value\",r,o);else if(n instanceof Map)a(\"other value\",\"Map instance\",r,o);else if(t instanceof Set)if(n instanceof Set)if(t.size!==n.size)a(`Set instance with size ${t.size}`,`Set instance with size ${n.size}`,r,o);else for(const e of n)t.has(e)||a(`Set instance without element ${e}`,`Set instance with element ${e}`,r,o);else a(\"Set instance\",\"other value\",r,o);else if(n instanceof Set)a(\"other value\",\"Set instance\",r,o);else if(i||l)if(i!==l)a(\"type \"+(i?\"array\":\"object\"),\"type \"+(l?\"array\":\"object\"),r,o);else if(t.length!==n.length)a(`array with length ${t.length}`,`array with length ${n.length}`,r,o);else for(let i=0;i<t.length;i++)e(t[i],n[i],`${r}[${i}]`,o+1);else if(s(t)||s(n))s(t)!==s(n)?a(\"type \"+(s(t)?\"React element\":\"object\"),\"type \"+(s(n)?\"React element\":\"object\"),r,o):t.type!==n.type?a(`React element of type ${t.type}`,`React element of type ${n.type}`,r,o):e(t.props,n.props,`[props of ${r}]`,o+1);else{for(const e in n)e in t||a(`object without key ${e}`,`object with key ${e}`,r,o);for(const i in t)i in n?e(t[i],n[i],`${r}.${i}`,o+1):a(`object with key ${i}`,`object without key ${i}`,r,o)}}else{if(\"function\"==typeof t)return;isNaN(t)||isNaN(n)?isNaN(t)!==isNaN(n)&&a(isNaN(t)?\"NaN\":\"non-NaN value\",isNaN(n)?\"NaN\":\"non-NaN value\",r,o):t!==n&&a(t,n,r,o)}}}(e,t,\"\",0)},Mt.c=d,Mt.clearRenderCounterRegistry=function(){for(const e of v.values())e.forEach((e=>{e.count=0}))},Mt.renderCounterRegistry=v,Mt.useRenderCounter=function(e){const t=i(null);null!=t.current&&(t.current.count+=1),a((()=>{if(null==t.current){const n={count:0};(function(e,t){let n=v.get(e);null==n&&(n=/* @__PURE__ */new Set,v.set(e,n)),n.add(t)})(e,n),t.current=n}return()=>{null!==t.current&&function(e,t){const n=v.get(e);n?.delete(t)}(e,t.current)}}))},Mt}(),Rt={exports:{}},Vt={};\n/**\n* Copyright (c) Meta Platforms, Inc. and affiliates.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*\n* @lightSyntaxTransform\n* @noflow\n* @nolint\n* @preventMunge\n* @preserve-invariant-messages\n*/function Et(){return Lt||(Lt=1,Rt.exports=function(){if(kt)return Vt;kt=1;var e=Symbol.for(\"react.transitional.element\"),t=Symbol.for(\"react.portal\"),n=Symbol.for(\"react.fragment\"),r=Symbol.for(\"react.strict_mode\"),o=Symbol.for(\"react.profiler\"),i=Symbol.for(\"react.consumer\"),a=Symbol.for(\"react.context\"),s=Symbol.for(\"react.forward_ref\"),l=Symbol.for(\"react.suspense\"),c=Symbol.for(\"react.suspense_list\"),d=Symbol.for(\"react.memo\"),u=Symbol.for(\"react.lazy\"),h=Symbol.for(\"react.offscreen\"),f=Symbol.for(\"react.client.reference\");function p(h){if(\"object\"==typeof h&&null!==h){var f=h.$$typeof;switch(f){case e:switch(h=h.type){case n:case o:case r:case l:case c:return h;default:switch(h=h&&h.$$typeof){case a:case s:case u:case d:case i:return h;default:return f}}case t:return f}}}return Vt.ContextConsumer=i,Vt.ContextProvider=a,Vt.Element=e,Vt.ForwardRef=s,Vt.Fragment=n,Vt.Lazy=u,Vt.Memo=d,Vt.Portal=t,Vt.Profiler=o,Vt.StrictMode=r,Vt.Suspense=l,Vt.SuspenseList=c,Vt.isContextConsumer=function(e){return p(e)===i},Vt.isContextProvider=function(e){return p(e)===a},Vt.isElement=function(t){return\"object\"==typeof t&&null!==t&&t.$$typeof===e},Vt.isForwardRef=function(e){return p(e)===s},Vt.isFragment=function(e){return p(e)===n},Vt.isLazy=function(e){return p(e)===u},Vt.isMemo=function(e){return p(e)===d},Vt.isPortal=function(e){return p(e)===t},Vt.isProfiler=function(e){return p(e)===o},Vt.isStrictMode=function(e){return p(e)===r},Vt.isSuspense=function(e){return p(e)===l},Vt.isSuspenseList=function(e){return p(e)===c},Vt.isValidElementType=function(e){return\"string\"==typeof e||\"function\"==typeof e||e===n||e===o||e===r||e===l||e===c||e===h||\"object\"==typeof e&&null!==e&&(e.$$typeof===u||e.$$typeof===d||e.$$typeof===a||e.$$typeof===i||e.$$typeof===s||e.$$typeof===f||void 0!==e.getModuleId)},Vt.typeOf=p,Vt}()),Rt.exports}var Ht=/* @__PURE__ */Et(),Tt=/* @__PURE__ */xt(Ht),$t=function(){return $t=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},$t.apply(this,arguments)};function At(e,t,n){if(n||2===arguments.length)for(var r,o=0,i=t.length;o<i;o++)(r||!(o in t))&&(r||(r=Array.prototype.slice.call(t,0,o)),r[o]=t[o]);return e.concat(r||Array.prototype.slice.call(t))}var Nt=\"-ms-\",It=\"-moz-\",Pt=\"-webkit-\",Ft=\"comm\",jt=\"rule\",Bt=\"decl\",Dt=\"@keyframes\",Ot=Math.abs,zt=String.fromCharCode,_t=Object.assign;function Wt(e){return e.trim()}function qt(e,t){return(e=t.exec(e))?e[0]:e}function Zt(e,t,n){return e.replace(t,n)}function Ut(e,t,n){return e.indexOf(t,n)}function Gt(e,t){return 0|e.charCodeAt(t)}function Yt(e,t,n){return e.slice(t,n)}function Xt(e){return e.length}function Kt(e){return e.length}function Jt(e,t){return t.push(e),e}function Qt(e,t){return e.filter((function(e){return!qt(e,t)}))}var en=1,tn=1,nn=0,rn=0,on=0,an=\"\";function sn(e,t,n,r,o,i,a,s){return{value:e,root:t,parent:n,type:r,props:o,children:i,line:en,column:tn,length:a,return:\"\",siblings:s}}function ln(e,t){return _t(sn(\"\",null,null,\"\",null,null,0,e.siblings),e,{length:-e.length},t)}function cn(e){for(;e.root;)e=ln(e.root,{children:[e]});Jt(e,e.siblings)}function dn(){return on=rn<nn?Gt(an,rn++):0,tn++,10===on&&(tn=1,en++),on}function un(){return Gt(an,rn)}function hn(){return rn}function fn(e,t){return Yt(an,e,t)}function pn(e){switch(e){case 0:case 9:case 10:case 13:case 32:return 5;case 33:case 43:case 44:case 47:case 62:case 64:case 126:case 59:case 123:case 125:return 4;case 58:return 3;case 34:case 39:case 40:case 91:return 2;case 41:case 93:return 1}return 0}function mn(e){return Wt(fn(rn-1,wn(91===e?e+2:40===e?e+1:e)))}function gn(e){for(;(on=un())&&on<33;)dn();return pn(e)>2||pn(on)>3?\"\":\" \"}function vn(e,t){for(;--t&&dn()&&!(on<48||on>102||on>57&&on<65||on>70&&on<97););return fn(e,hn()+(t<6&&32==un()&&32==dn()))}function wn(e){for(;dn();)switch(on){case e:return rn;case 34:case 39:34!==e&&39!==e&&wn(on);break;case 40:41===e&&wn(e);break;case 92:dn()}return rn}function yn(e,t){for(;dn()&&e+on!==57&&(e+on!==84||47!==un()););return\"/*\"+fn(t,rn-1)+\"*\"+zt(47===e?e:dn())}function bn(e){for(;!pn(un());)dn();return fn(e,rn)}function xn(e){return function(e){return an=\"\",e}(Cn(\"\",null,null,null,[\"\"],e=function(e){return en=tn=1,nn=Xt(an=e),rn=0,[]}(e),0,[0],e))}function Cn(e,t,n,r,o,i,a,s,l){for(var c=0,d=0,u=a,h=0,f=0,p=0,m=1,g=1,v=1,w=0,y=\"\",b=o,x=i,C=r,k=y;g;)switch(p=w,w=dn()){case 40:if(108!=p&&58==Gt(k,u-1)){-1!=Ut(k+=Zt(mn(w),\"&\",\"&\\f\"),\"&\\f\",Ot(c?s[c-1]:0))&&(v=-1);break}case 34:case 39:case 91:k+=mn(w);break;case 9:case 10:case 13:case 32:k+=gn(p);break;case 92:k+=vn(hn()-1,7);continue;case 47:switch(un()){case 42:case 47:Jt(Ln(yn(dn(),hn()),t,n,l),l);break;default:k+=\"/\"}break;case 123*m:s[c++]=Xt(k)*v;case 125*m:case 59:case 0:switch(w){case 0:case 125:g=0;case 59+d:-1==v&&(k=Zt(k,/\\f/g,\"\")),f>0&&Xt(k)-u&&Jt(f>32?Mn(k+\";\",r,n,u-1,l):Mn(Zt(k,\" \",\"\")+\";\",r,n,u-2,l),l);break;case 59:k+=\";\";default:if(Jt(C=kn(k,t,n,c,d,o,s,y,b=[],x=[],u,i),i),123===w)if(0===d)Cn(k,t,C,C,b,i,u,s,x);else switch(99===h&&110===Gt(k,3)?100:h){case 100:case 108:case 109:case 115:Cn(e,C,C,r&&Jt(kn(e,C,C,0,0,o,s,y,o,b=[],u,x),x),o,x,u,s,r?b:x);break;default:Cn(k,C,C,C,[\"\"],x,0,s,x)}}c=d=f=0,m=v=1,y=k=\"\",u=a;break;case 58:u=1+Xt(k),f=p;default:if(m<1)if(123==w)--m;else if(125==w&&0==m++&&125==(on=rn>0?Gt(an,--rn):0,tn--,10===on&&(tn=1,en--),on))continue;switch(k+=zt(w),w*m){case 38:v=d>0?1:(k+=\"\\f\",-1);break;case 44:s[c++]=(Xt(k)-1)*v,v=1;break;case 64:45===un()&&(k+=mn(dn())),h=un(),d=u=Xt(y=k+=bn(hn())),w++;break;case 45:45===p&&2==Xt(k)&&(m=0)}}return i}function kn(e,t,n,r,o,i,a,s,l,c,d,u){for(var h=o-1,f=0===o?i:[\"\"],p=Kt(f),m=0,g=0,v=0;m<r;++m)for(var w=0,y=Yt(e,h+1,h=Ot(g=a[m])),b=e;w<p;++w)(b=Wt(g>0?f[w]+\" \"+y:Zt(y,/&\\f/g,f[w])))&&(l[v++]=b);return sn(e,t,n,0===o?jt:s,l,c,d,u)}function Ln(e,t,n,r){return sn(e,t,n,Ft,zt(on),Yt(e,2,-2),0,r)}function Mn(e,t,n,r,o){return sn(e,t,n,Bt,Yt(e,0,r),Yt(e,r+1,-1),r,o)}function Sn(e,t,n){switch(function(e,t){return 45^Gt(e,0)?(((t<<2^Gt(e,0))<<2^Gt(e,1))<<2^Gt(e,2))<<2^Gt(e,3):0}(e,t)){case 5103:return Pt+\"print-\"+e+e;case 5737:case 4201:case 3177:case 3433:case 1641:case 4457:case 2921:case 5572:case 6356:case 5844:case 3191:case 6645:case 3005:case 6391:case 5879:case 5623:case 6135:case 4599:case 4855:case 4215:case 6389:case 5109:case 5365:case 5621:case 3829:return Pt+e+e;case 4789:return It+e+e;case 5349:case 4246:case 4810:case 6968:case 2756:return Pt+e+It+e+Nt+e+e;case 5936:switch(Gt(e,t+11)){case 114:return Pt+e+Nt+Zt(e,/[svh]\\w+-[tblr]{2}/,\"tb\")+e;case 108:return Pt+e+Nt+Zt(e,/[svh]\\w+-[tblr]{2}/,\"tb-rl\")+e;case 45:return Pt+e+Nt+Zt(e,/[svh]\\w+-[tblr]{2}/,\"lr\")+e}case 6828:case 4268:case 2903:return Pt+e+Nt+e+e;case 6165:return Pt+e+Nt+\"flex-\"+e+e;case 5187:return Pt+e+Zt(e,/(\\w+).+(:[^]+)/,Pt+\"box-$1$2\"+Nt+\"flex-$1$2\")+e;case 5443:return Pt+e+Nt+\"flex-item-\"+Zt(e,/flex-|-self/g,\"\")+(qt(e,/flex-|baseline/)?\"\":Nt+\"grid-row-\"+Zt(e,/flex-|-self/g,\"\"))+e;case 4675:return Pt+e+Nt+\"flex-line-pack\"+Zt(e,/align-content|flex-|-self/g,\"\")+e;case 5548:return Pt+e+Nt+Zt(e,\"shrink\",\"negative\")+e;case 5292:return Pt+e+Nt+Zt(e,\"basis\",\"preferred-size\")+e;case 6060:return Pt+\"box-\"+Zt(e,\"-grow\",\"\")+Pt+e+Nt+Zt(e,\"grow\",\"positive\")+e;case 4554:return Pt+Zt(e,/([^-])(transform)/g,\"$1\"+Pt+\"$2\")+e;case 6187:return Zt(Zt(Zt(e,/(zoom-|grab)/,Pt+\"$1\"),/(image-set)/,Pt+\"$1\"),e,\"\")+e;case 5495:case 3959:return Zt(e,/(image-set\\([^]*)/,Pt+\"$1$`$1\");case 4968:return Zt(Zt(e,/(.+:)(flex-)?(.*)/,Pt+\"box-pack:$3\"+Nt+\"flex-pack:$3\"),/s.+-b[^;]+/,\"justify\")+Pt+e+e;case 4200:if(!qt(e,/flex-|baseline/))return Nt+\"grid-column-align\"+Yt(e,t)+e;break;case 2592:case 3360:return Nt+Zt(e,\"template-\",\"\")+e;case 4384:case 3616:return n&&n.some((function(e,n){return t=n,qt(e.props,/grid-\\w+-end/)}))?~Ut(e+(n=n[t].value),\"span\",0)?e:Nt+Zt(e,\"-start\",\"\")+e+Nt+\"grid-row-span:\"+(~Ut(n,\"span\",0)?qt(n,/\\d+/):+qt(n,/\\d+/)-+qt(e,/\\d+/))+\";\":Nt+Zt(e,\"-start\",\"\")+e;case 4896:case 4128:return n&&n.some((function(e){return qt(e.props,/grid-\\w+-start/)}))?e:Nt+Zt(Zt(e,\"-end\",\"-span\"),\"span \",\"\")+e;case 4095:case 3583:case 4068:case 2532:return Zt(e,/(.+)-inline(.+)/,Pt+\"$1$2\")+e;case 8116:case 7059:case 5753:case 5535:case 5445:case 5701:case 4933:case 4677:case 5533:case 5789:case 5021:case 4765:if(Xt(e)-1-t>6)switch(Gt(e,t+1)){case 109:if(45!==Gt(e,t+4))break;case 102:return Zt(e,/(.+:)(.+)-([^]+)/,\"$1\"+Pt+\"$2-$3$1\"+It+(108==Gt(e,t+3)?\"$3\":\"$2-$3\"))+e;case 115:return~Ut(e,\"stretch\",0)?Sn(Zt(e,\"stretch\",\"fill-available\"),t,n)+e:e}break;case 5152:case 5920:return Zt(e,/(.+?):(\\d+)(\\s*\\/\\s*(span)?\\s*(\\d+))?(.*)/,(function(t,n,r,o,i,a,s){return Nt+n+\":\"+r+s+(o?Nt+n+\"-span:\"+(i?a:+a-+r)+s:\"\")+e}));case 4949:if(121===Gt(e,t+6))return Zt(e,\":\",\":\"+Pt)+e;break;case 6444:switch(Gt(e,45===Gt(e,14)?18:11)){case 120:return Zt(e,/(.+:)([^;\\s!]+)(;|(\\s+)?!.+)?/,\"$1\"+Pt+(45===Gt(e,14)?\"inline-\":\"\")+\"box$3$1\"+Pt+\"$2$3$1\"+Nt+\"$2box$3\")+e;case 100:return Zt(e,\":\",\":\"+Nt)+e}break;case 5719:case 2647:case 2135:case 3927:case 2391:return Zt(e,\"scroll-\",\"scroll-snap-\")+e}return e}function Rn(e,t){for(var n=\"\",r=0;r<e.length;r++)n+=t(e[r],r,e,t)||\"\";return n}function Vn(e,t,n,r){switch(e.type){case\"@layer\":if(e.children.length)break;case\"@import\":case Bt:return e.return=e.return||e.value;case Ft:return\"\";case Dt:return e.return=e.value+\"{\"+Rn(e.children,r)+\"}\";case jt:if(!Xt(e.value=e.props.join(\",\")))return\"\"}return Xt(n=Rn(e.children,r))?e.return=e.value+\"{\"+n+\"}\":\"\"}function En(e,t,n,r){if(e.length>-1&&!e.return)switch(e.type){case Bt:return void(e.return=Sn(e.value,e.length,n));case Dt:return Rn([ln(e,{value:Zt(e.value,\"@\",\"@\"+Pt)})],r);case jt:if(e.length)return function(e,t){return e.map(t).join(\"\")}(n=e.props,(function(t){switch(qt(t,r=/(::plac\\w+|:read-\\w+)/)){case\":read-only\":case\":read-write\":cn(ln(e,{props:[Zt(t,/:(read-\\w+)/,\":-moz-$1\")]})),cn(ln(e,{props:[t]})),_t(e,{props:Qt(n,r)});break;case\"::placeholder\":cn(ln(e,{props:[Zt(t,/:(plac\\w+)/,\":\"+Pt+\"input-$1\")]})),cn(ln(e,{props:[Zt(t,/:(plac\\w+)/,\":-moz-$1\")]})),cn(ln(e,{props:[Zt(t,/:(plac\\w+)/,Nt+\"input-$1\")]})),cn(ln(e,{props:[t]})),_t(e,{props:Qt(n,r)})}return\"\"}))}}var Hn={animationIterationCount:1,aspectRatio:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1},Tn=typeof process<\"u\"&&void 0!==process.env&&(process.env.REACT_APP_SC_ATTR||process.env.SC_ATTR)||\"data-styled\",$n=\"active\",An=\"data-styled-version\",Nn=\"6.1.14\",In=\"/*!sc*/\\n\",Pn=typeof window<\"u\"&&\"HTMLElement\"in window,Fn=!!(\"boolean\"==typeof SC_DISABLE_SPEEDY?SC_DISABLE_SPEEDY:typeof process<\"u\"&&void 0!==process.env&&void 0!==process.env.REACT_APP_SC_DISABLE_SPEEDY&&\"\"!==process.env.REACT_APP_SC_DISABLE_SPEEDY?\"false\"!==process.env.REACT_APP_SC_DISABLE_SPEEDY&&process.env.REACT_APP_SC_DISABLE_SPEEDY:typeof process<\"u\"&&void 0!==process.env&&void 0!==process.env.SC_DISABLE_SPEEDY&&\"\"!==process.env.SC_DISABLE_SPEEDY&&\"false\"!==process.env.SC_DISABLE_SPEEDY&&process.env.SC_DISABLE_SPEEDY),jn=Object.freeze([]),Bn=Object.freeze({}),Dn=/* @__PURE__ */new Set([\"a\",\"abbr\",\"address\",\"area\",\"article\",\"aside\",\"audio\",\"b\",\"base\",\"bdi\",\"bdo\",\"big\",\"blockquote\",\"body\",\"br\",\"button\",\"canvas\",\"caption\",\"cite\",\"code\",\"col\",\"colgroup\",\"data\",\"datalist\",\"dd\",\"del\",\"details\",\"dfn\",\"dialog\",\"div\",\"dl\",\"dt\",\"em\",\"embed\",\"fieldset\",\"figcaption\",\"figure\",\"footer\",\"form\",\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"header\",\"hgroup\",\"hr\",\"html\",\"i\",\"iframe\",\"img\",\"input\",\"ins\",\"kbd\",\"keygen\",\"label\",\"legend\",\"li\",\"link\",\"main\",\"map\",\"mark\",\"menu\",\"menuitem\",\"meta\",\"meter\",\"nav\",\"noscript\",\"object\",\"ol\",\"optgroup\",\"option\",\"output\",\"p\",\"param\",\"picture\",\"pre\",\"progress\",\"q\",\"rp\",\"rt\",\"ruby\",\"s\",\"samp\",\"script\",\"section\",\"select\",\"small\",\"source\",\"span\",\"strong\",\"style\",\"sub\",\"summary\",\"sup\",\"table\",\"tbody\",\"td\",\"textarea\",\"tfoot\",\"th\",\"thead\",\"time\",\"tr\",\"track\",\"u\",\"ul\",\"use\",\"var\",\"video\",\"wbr\",\"circle\",\"clipPath\",\"defs\",\"ellipse\",\"foreignObject\",\"g\",\"image\",\"line\",\"linearGradient\",\"marker\",\"mask\",\"path\",\"pattern\",\"polygon\",\"polyline\",\"radialGradient\",\"rect\",\"stop\",\"svg\",\"text\",\"tspan\"]),On=/[!\"#$%&'()*+,./:;<=>?@[\\\\\\]^`{|}~-]+/g,zn=/(^-|-$)/g;function _n(e){return e.replace(On,\"-\").replace(zn,\"\")}var Wn=/(a)(d)/gi,qn=function(e){return String.fromCharCode(e+(e>25?39:97))};function Zn(e){var t,n=\"\";for(t=Math.abs(e);t>52;t=t/52|0)n=qn(t%52)+n;return(qn(t%52)+n).replace(Wn,\"$1-$2\")}var Un,Gn=function(e,t){for(var n=t.length;n;)e=33*e^t.charCodeAt(--n);return e},Yn=function(e){return Gn(5381,e)};function Xn(e){return Zn(Yn(e)>>>0)}function Kn(e){return\"string\"==typeof e&&!0}var Jn=\"function\"==typeof Symbol&&Symbol.for,Qn=Jn?Symbol.for(\"react.memo\"):60115,er=Jn?Symbol.for(\"react.forward_ref\"):60112,tr={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},nr={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},rr={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},or=((Un={})[er]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},Un[Qn]=rr,Un);function ir(e){return(\"type\"in(t=e)&&t.type.$$typeof)===Qn?rr:\"$$typeof\"in e?or[e.$$typeof]:tr;var t}var ar=Object.defineProperty,sr=Object.getOwnPropertyNames,lr=Object.getOwnPropertySymbols,cr=Object.getOwnPropertyDescriptor,dr=Object.getPrototypeOf,ur=Object.prototype;function hr(e,t,n){if(\"string\"!=typeof t){if(ur){var r=dr(t);r&&r!==ur&&hr(e,r,n)}var o=sr(t);lr&&(o=o.concat(lr(t)));for(var i=ir(e),a=ir(t),s=0;s<o.length;++s){var l=o[s];if(!(l in nr||n&&n[l]||a&&l in a||i&&l in i)){var c=cr(t,l);try{ar(e,l,c)}catch{}}}}return e}function fr(e){return\"function\"==typeof e}function pr(e){return\"object\"==typeof e&&\"styledComponentId\"in e}function mr(e,t){return e&&t?\"\".concat(e,\" \").concat(t):e||t||\"\"}function gr(e,t){if(0===e.length)return\"\";for(var n=e[0],r=1;r<e.length;r++)n+=e[r];return n}function vr(e){return null!==e&&\"object\"==typeof e&&e.constructor.name===Object.name&&!(\"props\"in e&&e.$$typeof)}function wr(e,t,n){if(void 0===n&&(n=!1),!n&&!vr(e)&&!Array.isArray(e))return t;if(Array.isArray(t))for(var r=0;r<t.length;r++)e[r]=wr(e[r],t[r]);else if(vr(t))for(var r in t)e[r]=wr(e[r],t[r]);return e}function yr(e,t){Object.defineProperty(e,\"toString\",{value:t})}function br(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];return new Error(\"An error occurred. See https://github.com/styled-components/styled-components/blob/main/packages/styled-components/src/utils/errors.md#\".concat(e,\" for more information.\").concat(t.length>0?\" Args: \".concat(t.join(\", \")):\"\"))}var xr=function(){function e(e){this.groupSizes=new Uint32Array(512),this.length=512,this.tag=e}return e.prototype.indexOfGroup=function(e){for(var t=0,n=0;n<e;n++)t+=this.groupSizes[n];return t},e.prototype.insertRules=function(e,t){if(e>=this.groupSizes.length){for(var n=this.groupSizes,r=n.length,o=r;e>=o;)if((o<<=1)<0)throw br(16,\"\".concat(e));this.groupSizes=new Uint32Array(o),this.groupSizes.set(n),this.length=o;for(var i=r;i<o;i++)this.groupSizes[i]=0}for(var a=this.indexOfGroup(e+1),s=(i=0,t.length);i<s;i++)this.tag.insertRule(a,t[i])&&(this.groupSizes[e]++,a++)},e.prototype.clearGroup=function(e){if(e<this.length){var t=this.groupSizes[e],n=this.indexOfGroup(e),r=n+t;this.groupSizes[e]=0;for(var o=n;o<r;o++)this.tag.deleteRule(n)}},e.prototype.getGroup=function(e){var t=\"\";if(e>=this.length||0===this.groupSizes[e])return t;for(var n=this.groupSizes[e],r=this.indexOfGroup(e),o=r+n,i=r;i<o;i++)t+=\"\".concat(this.tag.getRule(i)).concat(In);return t},e}(),Cr=/* @__PURE__ */new Map,kr=/* @__PURE__ */new Map,Lr=1,Mr=function(e){if(Cr.has(e))return Cr.get(e);for(;kr.has(Lr);)Lr++;var t=Lr++;return Cr.set(e,t),kr.set(t,e),t},Sr=function(e,t){Lr=t+1,Cr.set(e,t),kr.set(t,e)},Rr=\"style[\".concat(Tn,\"][\").concat(An,'=\"').concat(Nn,'\"]'),Vr=new RegExp(\"^\".concat(Tn,'\\\\.g(\\\\d+)\\\\[id=\"([\\\\w\\\\d-]+)\"\\\\].*?\"([^\"]*)')),Er=function(e,t,n){for(var r,o=n.split(\",\"),i=0,a=o.length;i<a;i++)(r=o[i])&&e.registerName(t,r)},Hr=function(e,t){for(var n,r=(null!==(n=t.textContent)&&void 0!==n?n:\"\").split(In),o=[],i=0,a=r.length;i<a;i++){var s=r[i].trim();if(s){var l=s.match(Vr);if(l){var c=0|parseInt(l[1],10),d=l[2];0!==c&&(Sr(d,c),Er(e,d,l[3]),e.getTag().insertRules(c,o)),o.length=0}else o.push(s)}}},Tr=function(e){for(var t=document.querySelectorAll(Rr),n=0,r=t.length;n<r;n++){var o=t[n];o&&o.getAttribute(Tn)!==$n&&(Hr(e,o),o.parentNode&&o.parentNode.removeChild(o))}},$r=function(e){var t,n,r=document.head,o=e||r,i=document.createElement(\"style\"),a=(t=o,(n=Array.from(t.querySelectorAll(\"style[\".concat(Tn,\"]\"))))[n.length-1]),s=void 0!==a?a.nextSibling:null;i.setAttribute(Tn,$n),i.setAttribute(An,Nn);var l= true?__webpack_require__.nc:0;return l&&i.setAttribute(\"nonce\",l),o.insertBefore(i,s),i},Ar=function(){function e(e){this.element=$r(e),this.element.appendChild(document.createTextNode(\"\")),this.sheet=function(e){if(e.sheet)return e.sheet;for(var t=document.styleSheets,n=0,r=t.length;n<r;n++){var o=t[n];if(o.ownerNode===e)return o}throw br(17)}(this.element),this.length=0}return e.prototype.insertRule=function(e,t){try{return this.sheet.insertRule(t,e),this.length++,!0}catch{return!1}},e.prototype.deleteRule=function(e){this.sheet.deleteRule(e),this.length--},e.prototype.getRule=function(e){var t=this.sheet.cssRules[e];return t&&t.cssText?t.cssText:\"\"},e}(),Nr=function(){function e(e){this.element=$r(e),this.nodes=this.element.childNodes,this.length=0}return e.prototype.insertRule=function(e,t){if(e<=this.length&&e>=0){var n=document.createTextNode(t);return this.element.insertBefore(n,this.nodes[e]||null),this.length++,!0}return!1},e.prototype.deleteRule=function(e){this.element.removeChild(this.nodes[e]),this.length--},e.prototype.getRule=function(e){return e<this.length?this.nodes[e].textContent:\"\"},e}(),Ir=function(){function e(e){this.rules=[],this.length=0}return e.prototype.insertRule=function(e,t){return e<=this.length&&(this.rules.splice(e,0,t),this.length++,!0)},e.prototype.deleteRule=function(e){this.rules.splice(e,1),this.length--},e.prototype.getRule=function(e){return e<this.length?this.rules[e]:\"\"},e}(),Pr=Pn,Fr={isServer:!Pn,useCSSOMInjection:!Fn},jr=function(){function e(e,t,n){void 0===e&&(e=Bn),void 0===t&&(t={});var r=this;this.options=$t($t({},Fr),e),this.gs=t,this.names=new Map(n),this.server=!!e.isServer,!this.server&&Pn&&Pr&&(Pr=!1,Tr(this)),yr(this,(function(){return function(e){for(var t=e.getTag(),n=t.length,r=\"\",o=function(n){var o,i=(o=n,kr.get(o));if(void 0===i)return\"continue\";var a=e.names.get(i),s=t.getGroup(n);if(void 0===a||!a.size||0===s.length)return\"continue\";var l=\"\".concat(Tn,\".g\").concat(n,'[id=\"').concat(i,'\"]'),c=\"\";void 0!==a&&a.forEach((function(e){e.length>0&&(c+=\"\".concat(e,\",\"))})),r+=\"\".concat(s).concat(l,'{content:\"').concat(c,'\"}').concat(In)},i=0;i<n;i++)o(i);return r}(r)}))}return e.registerId=function(e){return Mr(e)},e.prototype.rehydrate=function(){!this.server&&Pn&&Tr(this)},e.prototype.reconstructWithOptions=function(t,n){return void 0===n&&(n=!0),new e($t($t({},this.options),t),this.gs,n&&this.names||void 0)},e.prototype.allocateGSInstance=function(e){return this.gs[e]=(this.gs[e]||0)+1},e.prototype.getTag=function(){return this.tag||(this.tag=(t=(e=this.options).useCSSOMInjection,n=e.target,r=e.isServer?new Ir(n):t?new Ar(n):new Nr(n),new xr(r)));var e,t,n,r},e.prototype.hasNameForId=function(e,t){return this.names.has(e)&&this.names.get(e).has(t)},e.prototype.registerName=function(e,t){if(Mr(e),this.names.has(e))this.names.get(e).add(t);else{var n=/* @__PURE__ */new Set;n.add(t),this.names.set(e,n)}},e.prototype.insertRules=function(e,t,n){this.registerName(e,t),this.getTag().insertRules(Mr(e),n)},e.prototype.clearNames=function(e){this.names.has(e)&&this.names.get(e).clear()},e.prototype.clearRules=function(e){this.getTag().clearGroup(Mr(e)),this.clearNames(e)},e.prototype.clearTag=function(){this.tag=void 0},e}(),Br=/&/g,Dr=/^\\s*\\/\\/.*$/gm;function Or(e,t){return e.map((function(e){return\"rule\"===e.type&&(e.value=\"\".concat(t,\" \").concat(e.value),e.value=e.value.replaceAll(\",\",\",\".concat(t,\" \")),e.props=e.props.map((function(e){return\"\".concat(t,\" \").concat(e)}))),Array.isArray(e.children)&&\"@keyframes\"!==e.type&&(e.children=Or(e.children,t)),e}))}var zr=new jr,_r=function(){var e,t,n,r=Bn,o=r.options,i=void 0===o?Bn:o,a=r.plugins,s=void 0===a?jn:a,l=function(n,r,o){return o.startsWith(t)&&o.endsWith(t)&&o.replaceAll(t,\"\").length>0?\".\".concat(e):n},c=s.slice();c.push((function(e){e.type===jt&&e.value.includes(\"&\")&&(e.props[0]=e.props[0].replace(Br,t).replace(n,l))})),i.prefix&&c.push(En),c.push(Vn);var d=function(r,o,a,s){void 0===o&&(o=\"\"),void 0===a&&(a=\"\"),void 0===s&&(s=\"&\"),e=s,t=o,n=new RegExp(\"\\\\\".concat(t,\"\\\\b\"),\"g\");var l=r.replace(Dr,\"\"),d=xn(a||o?\"\".concat(a,\" \").concat(o,\" { \").concat(l,\" }\"):l);i.namespace&&(d=Or(d,i.namespace));var u,h,f,p=[];return Rn(d,(u=c.concat((f=function(e){return p.push(e)},function(e){e.root||(e=e.return)&&f(e)})),h=Kt(u),function(e,t,n,r){for(var o=\"\",i=0;i<h;i++)o+=u[i](e,t,n,r)||\"\";return o})),p};return d.hash=s.length?s.reduce((function(e,t){return t.name||br(15),Gn(e,t.name)}),5381).toString():\"\",d}(),Wr=react__WEBPACK_IMPORTED_MODULE_1__.createContext({shouldForwardProp:void 0,styleSheet:zr,stylis:_r});function qr(){return (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(Wr)}react__WEBPACK_IMPORTED_MODULE_1__.createContext(void 0);var Zr=function(){function e(e,t){var n=this;this.inject=function(e,t){void 0===t&&(t=_r);var r=n.name+t.hash;e.hasNameForId(n.id,r)||e.insertRules(n.id,r,t(n.rules,r,\"@keyframes\"))},this.name=e,this.id=\"sc-keyframes-\".concat(e),this.rules=t,yr(this,(function(){throw br(12,String(n.name))}))}return e.prototype.getName=function(e){return void 0===e&&(e=_r),this.name+e.hash},e}(),Ur=function(e){return e>=\"A\"&&e<=\"Z\"};function Gr(e){for(var t=\"\",n=0;n<e.length;n++){var r=e[n];if(1===n&&\"-\"===r&&\"-\"===e[0])return e;Ur(r)?t+=\"-\"+r.toLowerCase():t+=r}return t.startsWith(\"ms-\")?\"-\"+t:t}var Yr=function(e){return null==e||!1===e||\"\"===e},Xr=function(e){var t,n,r=[];for(var o in e){var i=e[o];e.hasOwnProperty(o)&&!Yr(i)&&(Array.isArray(i)&&i.isCss||fr(i)?r.push(\"\".concat(Gr(o),\":\"),i,\";\"):vr(i)?r.push.apply(r,At(At([\"\".concat(o,\" {\")],Xr(i),!1),[\"}\"],!1)):r.push(\"\".concat(Gr(o),\": \").concat((t=o,null==(n=i)||\"boolean\"==typeof n||\"\"===n?\"\":\"number\"!=typeof n||0===n||t in Hn||t.startsWith(\"--\")?String(n).trim():\"\".concat(n,\"px\")),\";\")))}return r};function Kr(e,t,n,r){return Yr(e)?[]:pr(e)?[\".\".concat(e.styledComponentId)]:fr(e)?!fr(o=e)||o.prototype&&o.prototype.isReactComponent||!t?[e]:Kr(e(t),t,n,r):e instanceof Zr?n?(e.inject(n,r),[e.getName(r)]):[e]:vr(e)?Xr(e):Array.isArray(e)?Array.prototype.concat.apply(jn,e.map((function(e){return Kr(e,t,n,r)}))):[e.toString()];var o}var Jr=Yn(Nn),Qr=function(){function e(e,t,n){this.rules=e,this.staticRulesId=\"\",this.isStatic=(void 0===n||n.isStatic)&&function(e){for(var t=0;t<e.length;t+=1){var n=e[t];if(fr(n)&&!pr(n))return!1}return!0}(e),this.componentId=t,this.baseHash=Gn(Jr,t),this.baseStyle=n,jr.registerId(t)}return e.prototype.generateAndInjectStyles=function(e,t,n){var r=this.baseStyle?this.baseStyle.generateAndInjectStyles(e,t,n):\"\";if(this.isStatic&&!n.hash)if(this.staticRulesId&&t.hasNameForId(this.componentId,this.staticRulesId))r=mr(r,this.staticRulesId);else{var o=gr(Kr(this.rules,e,t,n)),i=Zn(Gn(this.baseHash,o)>>>0);if(!t.hasNameForId(this.componentId,i)){var a=n(o,\".\".concat(i),void 0,this.componentId);t.insertRules(this.componentId,i,a)}r=mr(r,i),this.staticRulesId=i}else{for(var s=Gn(this.baseHash,n.hash),l=\"\",c=0;c<this.rules.length;c++){var d=this.rules[c];if(\"string\"==typeof d)l+=d;else if(d){var u=gr(Kr(d,e,t,n));s=Gn(s,u+c),l+=u}}if(l){var h=Zn(s>>>0);t.hasNameForId(this.componentId,h)||t.insertRules(this.componentId,h,n(l,\".\".concat(h),void 0,this.componentId)),r=mr(r,h)}}return r},e}(),eo=react__WEBPACK_IMPORTED_MODULE_1__.createContext(void 0);function to(e){var t=react__WEBPACK_IMPORTED_MODULE_1__.useContext(eo),n=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((function(){return function(e,t){if(!e)throw br(14);if(fr(e))return e(t);if(Array.isArray(e)||\"object\"!=typeof e)throw br(8);return t?$t($t({},t),e):e}(e.theme,t)}),[e.theme,t]);return e.children?react__WEBPACK_IMPORTED_MODULE_1__.createElement(eo.Provider,{value:n},e.children):null}var no={};function ro(e,t,n){var r,i=pr(e),s=e,l=!Kn(e),c=t.attrs,d=void 0===c?jn:c,u=t.componentId,h=void 0===u?function(e,t){var n=\"string\"!=typeof e?\"sc\":_n(e);no[n]=(no[n]||0)+1;var r=\"\".concat(n,\"-\").concat(Xn(Nn+n+no[n]));return t?\"\".concat(t,\"-\").concat(r):r}(t.displayName,t.parentComponentId):u,f=t.displayName,p=void 0===f?Kn(r=e)?\"styled.\".concat(r):\"Styled(\".concat(function(e){return e.displayName||e.name||\"Component\"}(r),\")\"):f,m=t.displayName&&t.componentId?\"\".concat(_n(t.displayName),\"-\").concat(t.componentId):t.componentId||h,g=i&&s.attrs?s.attrs.concat(d).filter(Boolean):d,v=t.shouldForwardProp;if(i&&s.shouldForwardProp){var w=s.shouldForwardProp;if(t.shouldForwardProp){var y=t.shouldForwardProp;v=function(e,t){return w(e,t)&&y(e,t)}}else v=w}var b=new Qr(n,m,i?s.componentStyle:void 0);function x(e,t){return function(e,t,n){var r=e.attrs,i=e.componentStyle,s=e.defaultProps,l=e.foldedComponentIds,c=e.styledComponentId,d=e.target,u=react__WEBPACK_IMPORTED_MODULE_1__.useContext(eo),h=qr(),f=e.shouldForwardProp||h.shouldForwardProp,p=function(e,t,n){return void 0===n&&(n=Bn),e.theme!==n.theme&&e.theme||t||n.theme}(t,u,s)||Bn,m=function(e,t,n){for(var r,o=$t($t({},t),{className:void 0,theme:n}),i=0;i<e.length;i+=1){var a=fr(r=e[i])?r(o):r;for(var s in a)o[s]=\"className\"===s?mr(o[s],a[s]):\"style\"===s?$t($t({},o[s]),a[s]):a[s]}return t.className&&(o.className=mr(o.className,t.className)),o}(r,t,p),g=m.as||d,v={};for(var w in m)void 0===m[w]||\"$\"===w[0]||\"as\"===w||\"theme\"===w&&m.theme===p||(\"forwardedAs\"===w?v.as=m.forwardedAs:f&&!f(w,g)||(v[w]=m[w]));var y,b,x,C=(y=i,b=m,x=qr(),y.generateAndInjectStyles(b,x.styleSheet,x.stylis)),k=mr(l,c);return C&&(k+=\" \"+C),m.className&&(k+=\" \"+m.className),v[Kn(g)&&!Dn.has(g)?\"class\":\"className\"]=k,n&&(v.ref=n),(0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(g,v)}(C,e,t)}x.displayName=p;var C=react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(x);return C.attrs=g,C.componentStyle=b,C.displayName=p,C.shouldForwardProp=v,C.foldedComponentIds=i?mr(s.foldedComponentIds,s.styledComponentId):\"\",C.styledComponentId=m,C.target=i?s.target:e,Object.defineProperty(C,\"defaultProps\",{get:function(){return this._foldedDefaultProps},set:function(e){this._foldedDefaultProps=i?function(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];for(var r=0,o=t;r<o.length;r++)wr(e,o[r],!0);return e}({},s.defaultProps,e):e}}),yr(C,(function(){return\".\".concat(C.styledComponentId)})),l&&hr(C,e,{attrs:!0,componentStyle:!0,displayName:!0,foldedComponentIds:!0,shouldForwardProp:!0,styledComponentId:!0,target:!0}),C}function oo(e,t){for(var n=[e[0]],r=0,o=t.length;r<o;r+=1)n.push(t[r],e[r+1]);return n}var io=function(e){return Object.assign(e,{isCss:!0})};function ao(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];if(fr(e)||vr(e))return io(Kr(oo(jn,At([e],t,!0))));var r=e;return 0===t.length&&1===r.length&&\"string\"==typeof r[0]?Kr(r):io(Kr(oo(r,t)))}function so(e,t,n){if(void 0===n&&(n=Bn),!t)throw br(1,t);var r=function(r){for(var o=[],i=1;i<arguments.length;i++)o[i-1]=arguments[i];return e(t,n,ao.apply(void 0,At([r],o,!1)))};return r.attrs=function(r){return so(e,t,$t($t({},n),{attrs:Array.prototype.concat(n.attrs,r).filter(Boolean)}))},r.withConfig=function(r){return so(e,t,$t($t({},n),r))},r}var lo=function(e){return so(ro,e)},co=lo;function uo(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];var r=gr(ao.apply(void 0,At([e],t,!1))),o=Xn(r);return new Zr(o,r)}Dn.forEach((function(e){co[e]=lo(e)}));const ho=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"access-denied\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M18.1568 6.84315C21.281 9.96734 21.281 15.0327 18.1568 18.1569C15.0326 21.281 9.96733 21.281 6.84313 18.1569C3.71894 15.0327 3.71894 9.96734 6.84313 6.84315C9.96733 3.71895 15.0326 3.71895 18.1568 6.84315ZM18.1568 6.84315L6.844 18.156\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));ho.displayName=\"ForwardRef(AccessDeniedIcon)\";const fo=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"activity\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M21 15H19L15.5 7L11 18L8 12L6 15H4\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));fo.displayName=\"ForwardRef(ActivityIcon)\";const po=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"add-circle\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M8 12.4H17M12.5 8V17M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));po.displayName=\"ForwardRef(AddCircleIcon)\";const mo=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"add-comment\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M13 6.5H7.5C6.39543 6.5 5.5 7.39543 5.5 8.5V14.5C5.5 15.6046 6.39543 16.5 7.5 16.5H9.5V20.5L13.5 16.5H16.5C17.6046 16.5 18.5 15.6046 18.5 14.5V12M15 6.5H22M18.5 10V3\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));mo.displayName=\"ForwardRef(AddCommentIcon)\";const go=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"add-document\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 4.5V9.5H6.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 4.5H18.5V12M11.5 4.5L6.5 9.5M11.5 4.5V9.5H6.5M6.5 9.5V19.5H11M20 17.5H16.5M16.5 17.5H13M16.5 17.5V14M16.5 17.5V21\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));go.displayName=\"ForwardRef(AddDocumentIcon)\";const vo=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"add\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 5V20M5 12.5H20\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));vo.displayName=\"ForwardRef(AddIcon)\";const wo=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"add-user\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M4.17857 15.2368C3.10714 15.7632 1.5 16.8158 1.5 20.5H16.5C16.5 16.8158 15.2589 15.943 13.8214 15.2368C12.75 14.7105 10.6071 14.7105 10.6071 13.1316C10.6071 11.5526 11.6786 10.7632 11.6786 8.65789C11.6786 6.55263 10.6071 5.5 9 5.5C7.39285 5.5 6.32142 6.55263 6.32142 8.65789C6.32142 10.7632 7.39286 11.5526 7.39286 13.1316C7.39286 14.7105 5.25 14.7105 4.17857 15.2368Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M19.5 7V14M16 10.5H23\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));wo.displayName=\"ForwardRef(AddUserIcon)\";const yo=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"api\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5.93047 13.2107L6.66782 10.3728H6.73089L7.45854 13.2107H5.93047ZM8.17164 16H9.66089L7.56041 9H5.93047L3.82999 16H5.20767L5.65396 14.2876H7.73505L8.17164 16Z\",fill:\"currentColor\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10.5389 9V16H11.9166V13.7782H13.0323C14.541 13.7782 15.5015 12.8517 15.5015 11.3964C15.5015 9.92654 14.5701 9 13.1003 9H10.5389ZM11.9166 10.1303H12.751C13.6533 10.1303 14.1044 10.5475 14.1044 11.3867C14.1044 12.2308 13.6533 12.6431 12.751 12.6431H11.9166V10.1303Z\",fill:\"currentColor\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M21.1675 16V14.8164H19.717V10.1836H21.1675V9H16.8889V10.1836H18.3393V14.8164H16.8889V16H21.1675Z\",fill:\"currentColor\"})]})}));yo.displayName=\"ForwardRef(ApiIcon)\";const bo=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"archive\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 10V17M20.5 7.5V20.5H4.5V7.5L7.5 4.5H17.5L20.5 7.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M4.5 7.5H20.5M16 14L12.5 17.5L9 14\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));bo.displayName=\"ForwardRef(ArchiveIcon)\";const xo=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"arrow-down\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 19.5V5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M18 14L12.5 19.5L7 14\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));xo.displayName=\"ForwardRef(ArrowDownIcon)\";const Co=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"arrow-left\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5.5 12.5H20\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11 18L5.5 12.5L11 7\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Co.displayName=\"ForwardRef(ArrowLeftIcon)\";const ko=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"arrow-right\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M19.5 12.5H5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M14 7L19.5 12.5L14 18\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));ko.displayName=\"ForwardRef(ArrowRightIcon)\";const Lo=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"arrow-top-right\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M16.5 8.5L7 18\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9 8.5H16.5V16\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Lo.displayName=\"ForwardRef(ArrowTopRightIcon)\";const Mo=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"arrow-up\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7 11L12.5 5.5L18 11\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 5.5V20\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Mo.displayName=\"ForwardRef(ArrowUpIcon)\";const So=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"asterisk\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 4V21M16.75 5.13879L8.25 19.8612M19.8612 8.25L5.13878 16.75M4.00002 12.5H21M5.13881 8.25L19.8612 16.75M8.25002 5.13879L16.75 19.8612\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));So.displayName=\"ForwardRef(AsteriskIcon)\";const Ro=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"bar-chart\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5.5 5V19.5H20M8.5 18V13M11.5 18V9M14.5 18V11M17.5 18V7\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Ro.displayName=\"ForwardRef(BarChartIcon)\";const Vo=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"basket\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M8.5 10.5H5L6.5 19.5H18.5L20 10.5H16.5M8.5 10.5L10.2721 5.18377C10.4082 4.77543 10.7903 4.5 11.2208 4.5H13.7792C14.2097 4.5 14.5918 4.77543 14.7279 5.18377L16.5 10.5M8.5 10.5H16.5M8.5 10.5L9.5 19.5M16.5 10.5L15.5 19.5M12.5 10.5V19.5M19.5 13.5H5.5M19 16.5H6\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Vo.displayName=\"ForwardRef(BasketIcon)\";const Eo=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"bell\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10.5 17.5V18.5C10.5 20 11.5 20.5 12.5 20.5C13.5 20.5 14.5 20 14.5 18.5V17.5M5.5 17.5C6.5 16 6.5 15 6.5 12C6.5 8 8.5 5.5 12.5 5.5C16.5 5.5 18.5 8 18.5 12C18.5 15 18.5 16 19.5 17.5H5.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Eo.displayName=\"ForwardRef(BellIcon)\";const Ho=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"bill\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M6.50001 5.5C8.50003 5.5 8.50003 8 8.50003 8V9.5M6.50001 5.5C4.5 5.5 4.5 8 4.5 8L4.50001 9.5H8.50003M6.50001 5.5C6.50001 5.5 15.8333 5.5 17.6667 5.5C19.5 5.5 19.5 8.5 19.5 8.5V20L17.6667 19L15.8333 20L14 19L12.1667 20L10.3334 19L8.50003 20V9.5M11 12.5H15M11 9.5H16M11 15.5H16\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Ho.displayName=\"ForwardRef(BillIcon)\";const To=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"binary-document\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 4.5V9.5H6.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9.5 12.5V17.5M11.5 4.5H18.5V20.5H6.5V9.5L11.5 4.5ZM12.5 12.5V17.5H15.5V12.5H12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinecap:\"square\",strokeLinejoin:\"round\"})]})}));To.displayName=\"ForwardRef(BinaryDocumentIcon)\";const $o=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"block-content\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M21 7.60002L11 7.60003V6.40003L21 6.40002V7.60002Z\",fill:\"currentColor\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M21 11.2667L12.4833 11.2667V10.0667L21 10.0667V11.2667Z\",fill:\"currentColor\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M21 14.9334H13.9254V13.7334L21 13.7334V14.9334Z\",fill:\"currentColor\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M21 18.6002H4V17.4002H21V18.6002Z\",fill:\"currentColor\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9.86438 15.6H11.2L8.27623 7.60003H6.92377L4 15.6H5.29072L6.0371 13.4767H9.12362L9.86438 15.6ZM7.53546 9.05255H7.63086L8.80374 12.4344H6.35698L7.53546 9.05255Z\",fill:\"currentColor\"})]})}));$o.displayName=\"ForwardRef(BlockContentIcon)\";const Ao=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"block-element\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5 19.5H20M5 5.5H20M6.5 8.5H18.5V16.5H6.5V8.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Ao.displayName=\"ForwardRef(BlockElementIcon)\";const No=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"blockquote\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10 17.5H19M6 7.5H19M10 12.5H17M6.5 12V18\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));No.displayName=\"ForwardRef(BlockquoteIcon)\";const Io=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"bold\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M13.2087 18C15.5322 18 16.9731 16.793 16.9731 14.8844C16.9731 13.4812 15.9245 12.3949 14.4836 12.2892V12.1534C15.6001 11.9875 16.4526 10.9841 16.4526 9.82991C16.4526 8.14761 15.1927 7.11409 13.0804 7.11409H8.32019V18H13.2087ZM10.5985 8.85674H12.4995C13.5859 8.85674 14.212 9.37727 14.212 10.2448C14.212 11.1199 13.5406 11.6254 12.3109 11.6254H10.5985V8.85674ZM10.5985 16.2574V13.1643H12.575C13.9178 13.1643 14.6496 13.6924 14.6496 14.6882C14.6496 15.7066 13.9404 16.2574 12.6278 16.2574H10.5985Z\",fill:\"currentColor\"})})}));Io.displayName=\"ForwardRef(BoldIcon)\";const Po=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"bolt\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M18 11.5L9 21L11 13.5H7L16 4L14 11.5H18Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Po.displayName=\"ForwardRef(BoltIcon)\";const Fo=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"book\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M20.5 17.5V5.5L12.5 6.5M20.5 17.5L12.5 18.5M20.5 17.5V18.5M4.5 17.5V5.5L12.5 6.5M4.5 17.5L12.5 18.5M4.5 17.5V18.5M12.5 18.5L4.5 19.5V18.5M12.5 18.5L20.5 19.5V18.5M12.5 18.5V6.5M12.5 18.5H4.5M12.5 18.5H20.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Fo.displayName=\"ForwardRef(BookIcon)\";const jo=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"bottle\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7.5 17.5L17.5 17.5M17.5 13C17.5 12.087 17.5 11.3518 17.5 11C17.5 8.5 14.5 9 14.5 7.37494L14.5 5.5M17.5 13C17.5 15.1229 17.5 18.7543 17.5 20.5022C17.5 21.0545 17.0523 21.5 16.5 21.5L8.5 21.5C7.94772 21.5 7.5 21.0547 7.5 20.5024C7.5 18.8157 7.5 15.3546 7.5 13M17.5 13L7.5 13M7.5 13C7.5 12.2538 7.5 11.5648 7.5 11C7.5 8.5 10.5 9 10.5 7.37494L10.5 5.5M10.5 5.5L10.5 3.99999C10.5 3.72385 10.7239 3.49999 11 3.49999L14 3.49999C14.2761 3.49999 14.5 3.72385 14.5 3.99999L14.5 5.5M10.5 5.5L14.5 5.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));jo.displayName=\"ForwardRef(BottleIcon)\";const Bo=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"bug\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M8.5 9.5V8.9C8.16863 8.9 7.9 9.16863 7.9 9.5H8.5ZM16.5 9.5H17.1C17.1 9.16863 16.8314 8.9 16.5 8.9V9.5ZM8.5 10.1H9.5V8.9H8.5V10.1ZM9.5 10.1H15.5V8.9H9.5V10.1ZM15.5 10.1H16.5V8.9H15.5V10.1ZM15.9 9.5V13.5H17.1V9.5H15.9ZM15.9 13.5C15.9 14.395 15.678 15.0264 15.3758 15.4797C15.0711 15.9367 14.6605 16.2489 14.2317 16.4633C13.8005 16.6789 13.3621 16.7897 13.0264 16.8457C12.8599 16.8734 12.7226 16.887 12.6291 16.8937C12.5825 16.897 12.5472 16.8986 12.5249 16.8994C12.5138 16.8997 12.506 16.8999 12.5018 16.9C12.4997 16.9 12.4984 16.9 12.4981 16.9C12.498 16.9 12.4981 16.9 12.4984 16.9C12.4985 16.9 12.4987 16.9 12.499 16.9C12.4991 16.9 12.4994 16.9 12.4995 16.9C12.4997 16.9 12.5 16.9 12.5 17.5C12.5 18.1 12.5003 18.1 12.5006 18.1C12.5008 18.1 12.5011 18.1 12.5014 18.1C12.5019 18.1 12.5025 18.1 12.5031 18.1C12.5044 18.1 12.5059 18.1 12.5077 18.1C12.5112 18.0999 12.5157 18.0999 12.5212 18.0998C12.532 18.0996 12.5467 18.0993 12.5649 18.0987C12.6013 18.0975 12.6519 18.0951 12.7146 18.0907C12.8399 18.0817 13.0151 18.0641 13.2236 18.0293C13.6379 17.9603 14.1995 17.8211 14.7683 17.5367C15.3395 17.2511 15.9289 16.8133 16.3742 16.1453C16.822 15.4736 17.1 14.605 17.1 13.5H15.9ZM12.5 17.5C12.5 16.9 12.5003 16.9 12.5005 16.9C12.5006 16.9 12.5009 16.9 12.501 16.9C12.5013 16.9 12.5015 16.9 12.5016 16.9C12.5019 16.9 12.502 16.9 12.5019 16.9C12.5016 16.9 12.5003 16.9 12.4982 16.9C12.494 16.8999 12.4862 16.8997 12.4751 16.8994C12.4528 16.8986 12.4175 16.897 12.3709 16.8937C12.2774 16.887 12.1401 16.8734 11.9736 16.8457C11.6379 16.7897 11.1995 16.6789 10.7683 16.4633C10.3395 16.2489 9.92894 15.9367 9.62423 15.4797C9.32203 15.0264 9.1 14.395 9.1 13.5H7.9C7.9 14.605 8.17797 15.4736 8.62577 16.1453C9.07106 16.8133 9.66049 17.2511 10.2317 17.5367C10.8005 17.8211 11.3621 17.9603 11.7764 18.0293C11.9849 18.0641 12.1601 18.0817 12.2854 18.0907C12.3481 18.0951 12.3987 18.0975 12.4351 18.0987C12.4533 18.0993 12.468 18.0996 12.4788 18.0998C12.4843 18.0999 12.4888 18.0999 12.4923 18.1C12.4941 18.1 12.4956 18.1 12.4969 18.1C12.4975 18.1 12.4981 18.1 12.4986 18.1C12.4989 18.1 12.4992 18.1 12.4994 18.1C12.4997 18.1 12.5 18.1 12.5 17.5ZM9.1 13.5V9.5H7.9V13.5H9.1ZM9.5 9.5C10.1 9.5 10.1 9.50028 10.1 9.50055C10.1 9.50063 10.1 9.50089 10.1 9.50104C10.1 9.50134 10.1 9.5016 10.1 9.50182C10.1 9.50225 10.1 9.5025 10.1 9.50259C10.1 9.50276 10.1 9.50224 10.1 9.50107C10.1001 9.49872 10.1002 9.49374 10.1004 9.4863C10.1009 9.4714 10.102 9.44678 10.1043 9.41384C10.1091 9.34776 10.1188 9.24945 10.1387 9.12989C10.179 8.88793 10.2586 8.5745 10.4117 8.26833C10.5636 7.96451 10.782 7.67894 11.0984 7.46798C11.4111 7.25953 11.855 7.1 12.5 7.1V5.9C11.645 5.9 10.9639 6.11547 10.4328 6.46952C9.90549 6.82106 9.56143 7.28549 9.33834 7.73167C9.11643 8.1755 9.00846 8.61207 8.95504 8.93261C8.92809 9.0943 8.91438 9.23036 8.90738 9.32835C8.90388 9.37744 8.90203 9.41727 8.90107 9.44632C8.90058 9.46085 8.90031 9.47272 8.90017 9.48172C8.9001 9.48622 8.90005 9.49001 8.90003 9.49306C8.90002 9.49459 8.90001 9.49593 8.90001 9.49709C8.9 9.49767 8.9 9.4982 8.9 9.49869C8.9 9.49893 8.9 9.49926 8.9 9.49938C8.9 9.4997 8.9 9.5 9.5 9.5ZM12.5 7.1C13.145 7.1 13.5889 7.25953 13.9016 7.46798C14.218 7.67894 14.4364 7.96451 14.5883 8.26833C14.7414 8.5745 14.821 8.88793 14.8613 9.12989C14.8812 9.24945 14.8909 9.34776 14.8957 9.41384C14.898 9.44678 14.8991 9.4714 14.8996 9.4863C14.8998 9.49374 14.8999 9.49872 14.9 9.50107C14.9 9.50224 14.9 9.50276 14.9 9.50259C14.9 9.5025 14.9 9.50225 14.9 9.50182C14.9 9.5016 14.9 9.50134 14.9 9.50104C14.9 9.50089 14.9 9.50063 14.9 9.50055C14.9 9.50028 14.9 9.5 15.5 9.5C16.1 9.5 16.1 9.4997 16.1 9.49938C16.1 9.49926 16.1 9.49893 16.1 9.49869C16.1 9.4982 16.1 9.49767 16.1 9.49709C16.1 9.49593 16.1 9.49459 16.1 9.49306C16.0999 9.49001 16.0999 9.48622 16.0998 9.48172C16.0997 9.47272 16.0994 9.46085 16.0989 9.44632C16.098 9.41727 16.0961 9.37744 16.0926 9.32835C16.0856 9.23036 16.0719 9.0943 16.045 8.93261C15.9915 8.61207 15.8836 8.1755 15.6617 7.73167C15.4386 7.28549 15.0945 6.82106 14.5672 6.46952C14.0361 6.11547 13.355 5.9 12.5 5.9V7.1ZM11.9 9.5V17.5H13.1V9.5H11.9ZM8.5 9.9C7.71525 9.9 7.10887 9.51034 6.67426 9.07574C6.45859 8.86006 6.29547 8.64279 6.18673 8.47968C6.1327 8.39863 6.09302 8.33235 6.06782 8.28825C6.05524 8.26624 6.04634 8.24988 6.04113 8.24011C6.03853 8.23523 6.03685 8.232 6.0361 8.23055C6.03573 8.22983 6.03559 8.22955 6.03568 8.22973C6.03573 8.22982 6.03583 8.23003 6.03599 8.23035C6.03607 8.23051 6.03617 8.2307 6.03628 8.23092C6.03634 8.23103 6.03643 8.23122 6.03646 8.23127C6.03656 8.23147 6.03666 8.23167 5.5 8.5C4.96334 8.76833 4.96345 8.76855 4.96357 8.76877C4.96361 8.76886 4.96372 8.76909 4.96381 8.76926C4.96398 8.7696 4.96417 8.76998 4.96437 8.77038C4.96478 8.77119 4.96525 8.77212 4.96579 8.77317C4.96685 8.77527 4.96818 8.77786 4.96976 8.78092C4.97292 8.78704 4.9771 8.79505 4.98231 8.80481C4.99272 8.82434 5.00726 8.85094 5.02593 8.88362C5.06323 8.9489 5.1173 9.03887 5.18827 9.14532C5.32953 9.35721 5.54141 9.63994 5.82574 9.92426C6.39113 10.4897 7.28475 11.1 8.5 11.1V9.9ZM16.5 11.1C17.7153 11.1 18.6089 10.4897 19.1743 9.92426C19.4586 9.63994 19.6705 9.35721 19.8117 9.14532C19.8827 9.03887 19.9368 8.9489 19.9741 8.88362C19.9927 8.85094 20.0073 8.82434 20.0177 8.80481C20.0229 8.79505 20.0271 8.78704 20.0302 8.78092C20.0318 8.77786 20.0331 8.77527 20.0342 8.77317C20.0347 8.77212 20.0352 8.77119 20.0356 8.77038C20.0358 8.76998 20.036 8.7696 20.0362 8.76926C20.0363 8.76909 20.0364 8.76886 20.0364 8.76877C20.0365 8.76855 20.0367 8.76833 19.5 8.5C18.9633 8.23167 18.9634 8.23147 18.9635 8.23127C18.9636 8.23122 18.9637 8.23103 18.9637 8.23092C18.9638 8.2307 18.9639 8.23051 18.964 8.23035C18.9642 8.23003 18.9643 8.22982 18.9643 8.22973C18.9644 8.22955 18.9643 8.22983 18.9639 8.23055C18.9632 8.232 18.9615 8.23523 18.9589 8.24011C18.9537 8.24988 18.9448 8.26624 18.9322 8.28825C18.907 8.33235 18.8673 8.39863 18.8133 8.47968C18.7045 8.64279 18.5414 8.86006 18.3257 9.07574C17.8911 9.51034 17.2847 9.9 16.5 9.9V11.1ZM16.5 13.1H20V11.9H16.5V13.1ZM16.5 15.1C17.2847 15.1 17.8911 15.4897 18.3257 15.9243C18.5414 16.1399 18.7045 16.3572 18.8133 16.5203C18.8673 16.6014 18.907 16.6676 18.9322 16.7117C18.9448 16.7338 18.9537 16.7501 18.9589 16.7599C18.9615 16.7648 18.9632 16.768 18.9639 16.7694C18.9643 16.7702 18.9644 16.7705 18.9643 16.7703C18.9643 16.7702 18.9642 16.77 18.964 16.7697C18.9639 16.7695 18.9638 16.7693 18.9637 16.7691C18.9637 16.769 18.9636 16.7688 18.9635 16.7687C18.9634 16.7685 18.9633 16.7683 19.5 16.5C20.0367 16.2317 20.0365 16.2315 20.0364 16.2312C20.0364 16.2311 20.0363 16.2309 20.0362 16.2307C20.036 16.2304 20.0358 16.23 20.0356 16.2296C20.0352 16.2288 20.0347 16.2279 20.0342 16.2268C20.0331 16.2247 20.0318 16.2221 20.0302 16.2191C20.0271 16.213 20.0229 16.205 20.0177 16.1952C20.0073 16.1757 19.9927 16.1491 19.9741 16.1164C19.9368 16.0511 19.8827 15.9611 19.8117 15.8547C19.6705 15.6428 19.4586 15.3601 19.1743 15.0757C18.6089 14.5103 17.7153 13.9 16.5 13.9V15.1ZM8.5 13.9C7.28475 13.9 6.39113 14.5103 5.82574 15.0757C5.54141 15.3601 5.32953 15.6428 5.18827 15.8547C5.1173 15.9611 5.06323 16.0511 5.02593 16.1164C5.00726 16.1491 4.99272 16.1757 4.98231 16.1952C4.9771 16.205 4.97292 16.213 4.96976 16.2191C4.96818 16.2221 4.96685 16.2247 4.96579 16.2268C4.96525 16.2279 4.96478 16.2288 4.96437 16.2296C4.96417 16.23 4.96398 16.2304 4.96381 16.2307C4.96372 16.2309 4.96361 16.2311 4.96357 16.2312C4.96345 16.2315 4.96334 16.2317 5.5 16.5C6.03666 16.7683 6.03656 16.7685 6.03646 16.7687C6.03643 16.7688 6.03634 16.769 6.03628 16.7691C6.03617 16.7693 6.03607 16.7695 6.03599 16.7697C6.03583 16.77 6.03573 16.7702 6.03568 16.7703C6.03559 16.7705 6.03573 16.7702 6.0361 16.7694C6.03685 16.768 6.03853 16.7648 6.04113 16.7599C6.04634 16.7501 6.05524 16.7338 6.06782 16.7117C6.09302 16.6676 6.1327 16.6014 6.18673 16.5203C6.29547 16.3572 6.45859 16.1399 6.67426 15.9243C7.10887 15.4897 7.71525 15.1 8.5 15.1V13.9ZM8.5 11.9H5V13.1H8.5V11.9Z\",fill:\"currentColor\"})})}));Bo.displayName=\"ForwardRef(BugIcon)\";const Do=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"bulb-filled\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M16.4272 14.3368C15.8273 15.1773 15.5 16.1794 15.5 17.212V18.5C15.5 19.0523 15.0523 19.5 14.5 19.5H14V20.5C14 21.0523 13.5523 21.5 13 21.5H12C11.4477 21.5 11 21.0523 11 20.5V19.5H10.5C9.94772 19.5 9.5 19.0523 9.5 18.5V17.212C9.5 16.1794 9.17266 15.1773 8.57284 14.3368C7.60216 12.9767 7 11.94 7 10C7 7 9.5 4.5 12.5 4.5C15.5 4.5 18 7 18 10C18 11.94 17.3978 12.9767 16.4272 14.3368Z\",fill:\"currentColor\",stroke:\"currentColor\",strokeWidth:1.2})})}));Do.displayName=\"ForwardRef(BulbFilledIcon)\";const Oo=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"bulb-outline\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9.5 16.5H15.5M11 20V20.5C11 21.0523 11.4477 21.5 12 21.5H13C13.5523 21.5 14 21.0523 14 20.5V20M18 10C18 11.94 17.3978 12.9767 16.4272 14.3368C15.8273 15.1773 15.5 16.1794 15.5 17.212V18.5C15.5 19.0523 15.0523 19.5 14.5 19.5H10.5C9.94772 19.5 9.5 19.0523 9.5 18.5V17.212C9.5 16.1794 9.17266 15.1773 8.57284 14.3368C7.60216 12.9767 7 11.94 7 10C7 7 9.5 4.5 12.5 4.5C15.5 4.5 18 7 18 10Z\",stroke:\"currentColor\",strokeWidth:1.2})})}));Oo.displayName=\"ForwardRef(BulbOutlineIcon)\";const zo=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"calendar\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5.5 18.5H19.5V6.5H5.5V18.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M16.5 8V4M8.5 8V4M8 12.5H10M8 15.5H10M11.5 12.5H13.5M11.5 15.5H13.5M15 12.5H17M15 15.5H17M12.5 8V4M5.5 9.5H19.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));zo.displayName=\"ForwardRef(CalendarIcon)\";const _o=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"case\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9 8.5122V6C9 5.44772 9.44772 5 10 5H15C15.5523 5 16 5.44772 16 6V8.5122M4.5 12V18.5C4.5 19.0523 4.94772 19.5 5.5 19.5H19.5C20.0523 19.5 20.5 19.0523 20.5 18.5V12M4.5 12V9.5122C4.5 8.95991 4.94772 8.5122 5.5 8.5122H19.5C20.0523 8.5122 20.5 8.95991 20.5 9.5122V12M4.5 12L11.7978 14.7367C12.2505 14.9064 12.7495 14.9064 13.2022 14.7367L20.5 12\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));_o.displayName=\"ForwardRef(CaseIcon)\";const Wo=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"chart-upward\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5.5 5V19.5H20M7.5 16L11.5 11.5L15.5 14L19.5 8.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Wo.displayName=\"ForwardRef(ChartUpwardIcon)\";const qo=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"checkmark-circle\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9.5 12.1316L11.7414 14.5L16 10M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));qo.displayName=\"ForwardRef(CheckmarkCircleIcon)\";const Zo=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"checkmark\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5.5 11.5L10.5 16.5L19.5 7.60001\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Zo.displayName=\"ForwardRef(CheckmarkIcon)\";const Uo=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"chevron-down\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M16 10.5L12.5 14L9 10.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Uo.displayName=\"ForwardRef(ChevronDownIcon)\";const Go=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"chevron-left\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M14.5 16L11 12.5L14.5 9\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Go.displayName=\"ForwardRef(ChevronLeftIcon)\";const Yo=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"chevron-right\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10.5 9L14 12.5L10.5 16\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Yo.displayName=\"ForwardRef(ChevronRightIcon)\";const Xo=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"chevron-up\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9 14.5L12.5 11L16 14.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Xo.displayName=\"ForwardRef(ChevronUpIcon)\";const Ko=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"circle\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"circle\",{cx:12.5,cy:12.5,r:8,stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Ko.displayName=\"ForwardRef(CircleIcon)\";const Jo=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"clipboard\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M8 5.5H6.5V19.5H18.5V5.5H17M12.5 3C11.5 3 11.5 4.5 11 4.5C10 4.5 9.5 5 9.5 6.5H15.6C15.6 5 15 4.5 14 4.5C13.5 4.5 13.5 3 12.5 3Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Jo.displayName=\"ForwardRef(ClipboardIcon)\";const Qo=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"clipboard-image\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M8 5.5H6.5V19.5H10.5M17 5.5H18.5V11.5M10.5 18.5L12.73 15.8983C13.1327 15.4285 13.8613 15.4335 14.2575 15.909L15.299 17.1588C15.6754 17.6105 16.3585 17.6415 16.7743 17.2257L16.9903 17.0097C17.2947 16.7053 17.7597 16.6298 18.1447 16.8223L20.5 18M10.5 11.5H20.5V21.5H10.5V11.5ZM12.5 3C11.5 3 11.5 4.5 11 4.5C10 4.5 9.5 5 9.5 6.5H15.6C15.6 5 15 4.5 14 4.5C13.5 4.5 13.5 3 12.5 3Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Qo.displayName=\"ForwardRef(ClipboardImageIcon)\";const ei=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"clock\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 8V12.5L15.5 15.5M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));ei.displayName=\"ForwardRef(ClockIcon)\";const ti=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"close-circle\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9.5 15.5L12.5 12.5M12.5 12.5L15.5 9.5M12.5 12.5L9.5 9.5M12.5 12.5L15.5 15.5M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));ti.displayName=\"ForwardRef(CloseCircleIcon)\";const ni=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"close\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M18 7L7 18M7 7L18 18\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));ni.displayName=\"ForwardRef(CloseIcon)\";const ri=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"code-block\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11 15L8.5 12.5L11 10M14 10L16.5 12.5L14 15M5.5 6.5H19.5V18.5H5.5V6.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));ri.displayName=\"ForwardRef(CodeBlockIcon)\";const oi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"code\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11 16L7.5 12.5L11 9M14 9L17.5 12.5L14 16\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));oi.displayName=\"ForwardRef(CodeIcon)\";const ii=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"cog\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M14.0666 6.19428L13.719 5.32531C13.5196 4.82685 13.0369 4.5 12.5 4.5C11.9631 4.5 11.4804 4.82685 11.281 5.32531L10.9334 6.19428C10.7984 6.53187 10.5328 6.80068 10.1969 6.93982C9.86098 7.07896 9.48313 7.07666 9.14894 6.93343L8.2887 6.56476C7.79525 6.35328 7.22276 6.46353 6.84315 6.84315C6.46353 7.22276 6.35328 7.79525 6.56476 8.2887L6.93343 9.14894C7.07666 9.48313 7.07896 9.86098 6.93982 10.1969C6.80068 10.5328 6.53187 10.7984 6.19428 10.9334L5.32531 11.281C4.82685 11.4804 4.5 11.9631 4.5 12.5C4.5 13.0369 4.82685 13.5196 5.32531 13.719L6.19428 14.0666C6.53187 14.2016 6.80068 14.4672 6.93982 14.8031C7.07896 15.139 7.07666 15.5169 6.93343 15.8511L6.56476 16.7113C6.35328 17.2048 6.46353 17.7772 6.84315 18.1569C7.22276 18.5365 7.79525 18.6467 8.2887 18.4352L9.14894 18.0666C9.48314 17.9233 9.86099 17.921 10.1969 18.0602C10.5328 18.1993 10.7984 18.4681 10.9334 18.8057L11.281 19.6747C11.4804 20.1732 11.9631 20.5 12.5 20.5C13.0369 20.5 13.5196 20.1731 13.719 19.6747L14.0666 18.8057C14.2016 18.4681 14.4672 18.1993 14.8031 18.0602C15.139 17.921 15.5169 17.9233 15.8511 18.0666L16.7113 18.4352C17.2047 18.6467 17.7772 18.5365 18.1569 18.1569C18.5365 17.7772 18.6467 17.2047 18.4352 16.7113L18.0666 15.8511C17.9233 15.5169 17.921 15.139 18.0602 14.8031C18.1993 14.4672 18.4681 14.2016 18.8057 14.0666L19.6747 13.719C20.1731 13.5196 20.5 13.0369 20.5 12.5C20.5 11.9631 20.1731 11.4804 19.6747 11.281L18.8057 10.9334C18.4681 10.7984 18.1993 10.5328 18.0602 10.1969C17.921 9.86098 17.9233 9.48313 18.0666 9.14894L18.4352 8.2887C18.6467 7.79525 18.5365 7.22276 18.1569 6.84314C17.7772 6.46353 17.2048 6.35328 16.7113 6.56476L15.8511 6.93343C15.5169 7.07666 15.139 7.07896 14.8031 6.93982C14.4672 6.80068 14.2016 6.53187 14.0666 6.19428Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M16 12.5C16 14.433 14.433 16 12.5 16C10.567 16 9 14.433 9 12.5C9 10.567 10.567 9 12.5 9C14.433 9 16 10.567 16 12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));ii.displayName=\"ForwardRef(CogIcon)\";const ai=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"collapse\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M6 14.5L10.5 14.5V19M19 10.5H14.5L14.5 6\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10.5 14.5L6 19M14.5 10.5L19 6\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));ai.displayName=\"ForwardRef(CollapseIcon)\";const si=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"color-wheel\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9.43853 5.10896L11.1606 9.26642M13.8394 15.7336L15.5615 19.891M15.7336 11.1606L19.891 9.43853M9.26642 13.8394L5.10896 15.5615M5.3139 9.52342L9.23359 11.147M15.7664 13.853L19.6861 15.4766M13.853 9.23359L15.4766 5.3139M9.52342 19.6861L11.147 15.7664M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5ZM16 12.5C16 14.433 14.433 16 12.5 16C10.567 16 9 14.433 9 12.5C9 10.567 10.567 9 12.5 9C14.433 9 16 10.567 16 12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));si.displayName=\"ForwardRef(ColorWheelIcon)\";const li=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"comment\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7.5 16.5H9.5V20.5L13.5 16.5H17.5C18.6046 16.5 19.5 15.6046 19.5 14.5V8.5C19.5 7.39543 18.6046 6.5 17.5 6.5H7.5C6.39543 6.5 5.5 7.39543 5.5 8.5V14.5C5.5 15.6046 6.39543 16.5 7.5 16.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));li.displayName=\"ForwardRef(CommentIcon)\";const ci=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"component\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M8.5 8.5L12.5 12.5M12.5 12.5L16.5 16.5M12.5 12.5L16.5 8.5M12.5 12.5L8.5 16.5M12.5 4L21 12.5L12.5 21L4 12.5L12.5 4Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));ci.displayName=\"ForwardRef(ComponentIcon)\";const di=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"compose\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M17 6L19 8M14 5.5H5.5V19.5H19.5V11M9 16L9.5 13.5L19 4L21 6L11.5 15.5L9 16Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));di.displayName=\"ForwardRef(ComposeIcon)\";const ui=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"confetti\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M16.5 6.25C16.9142 6.25 17.25 5.91421 17.25 5.5C17.25 5.08579 16.9142 4.75 16.5 4.75C16.0858 4.75 15.75 5.08579 15.75 5.5C15.75 5.91421 16.0858 6.25 16.5 6.25Z\",fill:\"currentColor\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M19.5 16.25C19.9142 16.25 20.25 15.9142 20.25 15.5C20.25 15.0858 19.9142 14.75 19.5 14.75C19.0858 14.75 18.75 15.0858 18.75 15.5C18.75 15.9142 19.0858 16.25 19.5 16.25Z\",fill:\"currentColor\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M13 4C11 6 14.5 5.5 12.5 7.5M21 12C19 14 19.5 10.5 17.5 12.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M16.066 16.4904C15.3965 17.1598 13.1126 15.9613 10.9647 13.8135C8.81684 11.6656 7.61835 9.38165 8.28782 8.71218M16.066 16.4904C16.7355 15.8209 15.537 13.537 13.3891 11.3891C11.2412 9.2412 8.95729 8.04271 8.28782 8.71218M16.066 16.4904C15.8661 16.6902 15.6277 16.8474 15.3657 16.952L6.99288 20.296C6.26931 20.5849 5.44878 20.4193 4.9038 19.8744C4.35883 19.3294 4.19324 18.5089 4.48221 17.7853L7.82614 9.41242C7.93077 9.15042 8.08793 8.91208 8.28782 8.71218M20 5C20 14 11.5 5.32688 11.5 14.3269\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));ui.displayName=\"ForwardRef(ConfettiIcon)\";const hi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"controls\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M6.5 5V7.5M6.5 7.5C5.39543 7.5 4.5 8.39543 4.5 9.5C4.5 10.6046 5.39543 11.5 6.5 11.5M6.5 7.5C7.60457 7.5 8.5 8.39543 8.5 9.5C8.5 10.6046 7.60457 11.5 6.5 11.5M6.5 11.5V20M12.5 5V13.5M12.5 13.5C11.3954 13.5 10.5 14.3954 10.5 15.5C10.5 16.6046 11.3954 17.5 12.5 17.5M12.5 13.5C13.6046 13.5 14.5 14.3954 14.5 15.5C14.5 16.6046 13.6046 17.5 12.5 17.5M12.5 17.5V20M18.5 5V7.5M18.5 7.5C17.3954 7.5 16.5 8.39543 16.5 9.5C16.5 10.6046 17.3954 11.5 18.5 11.5M18.5 7.5C19.6046 7.5 20.5 8.39543 20.5 9.5C20.5 10.6046 19.6046 11.5 18.5 11.5M18.5 11.5V20\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));hi.displayName=\"ForwardRef(ControlsIcon)\";const fi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"copy\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M8.5 8.5H5.5V20.5H16.5V16.5M19.5 4.5H8.5V16.5H19.5V4.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));fi.displayName=\"ForwardRef(CopyIcon)\";const pi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"credit-card\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M20.5 9.5H4.5V11.5H20.5V9.5Z\",fill:\"currentColor\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7 15.5H14M5.5 18.5H19.5C20.0523 18.5 20.5 18.0523 20.5 17.5V7.5C20.5 6.94772 20.0523 6.5 19.5 6.5H5.5C4.94772 6.5 4.5 6.94772 4.5 7.5V17.5C4.5 18.0523 4.94772 18.5 5.5 18.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));pi.displayName=\"ForwardRef(CreditCardIcon)\";const mi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"crop\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9.5 5V15.5H20M5 9.5H15.5V20\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));mi.displayName=\"ForwardRef(CropIcon)\";const gi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"cube\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M4.5 8L12.5 3L20.5 8V17L12.5 22L4.5 17V8Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 22V13M12.5 13L4.5 8M12.5 13L20.5 8\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));gi.displayName=\"ForwardRef(CubeIcon)\";const vi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"dashboard\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M14.5 19.5V12.5M10.5 12.5V5.5M5.5 12.5H19.5M5.5 19.5H19.5V5.5H5.5V19.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));vi.displayName=\"ForwardRef(DashboardIcon)\";const wi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"database\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M18.5 7V17.5C18.5 19.0594 16.0504 20.5 12.5 20.5C8.9496 20.5 6.5 19.0594 6.5 17.5V7M18.5 7C18.5 8.45543 15.8137 9.5 12.5 9.5C9.18629 9.5 6.5 8.45543 6.5 7C6.5 5.54457 9.18629 4.5 12.5 4.5C15.8137 4.5 18.5 5.54457 18.5 7Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));wi.displayName=\"ForwardRef(DatabaseIcon)\";const yi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"desktop\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M4.5 13.5V15.5C4.5 16.0523 4.94772 16.5 5.5 16.5H12.5M4.5 13.5V6.5C4.5 5.94772 4.94772 5.5 5.5 5.5H19.5C20.0523 5.5 20.5 5.94772 20.5 6.5V13.5M4.5 13.5H20.5M20.5 13.5V15.5C20.5 16.0523 20.0523 16.5 19.5 16.5H12.5M12.5 16.5V19.5M12.5 19.5H8M12.5 19.5H17\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));yi.displayName=\"ForwardRef(DesktopIcon)\";const bi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"diamond\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M21 10.5L12.5 21M21 10.5L18 5.5H11M21 10.5H16M12.5 21L4 10.5M12.5 21L9 10.5M12.5 21L16 10.5M4 10.5L7 5.5H11M4 10.5H9M9 10.5H12.5H16M9 10.5L11 5.5M16 10.5L14.5 5.5H11\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));bi.displayName=\"ForwardRef(DiamondIcon)\";const xi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"document\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 4.5V9.5H6.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 4.5H18.5V20.5H6.5L6.5 9.5M11.5 4.5L6.5 9.5M11.5 4.5V9.5H6.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));xi.displayName=\"ForwardRef(DocumentIcon)\";const Ci=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"document-pdf\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.7127 13.8012L12.7193 13.77C12.8488 13.2366 13.0117 12.5716 12.8845 11.969C12.7997 11.4937 12.4493 11.3084 12.1503 11.295C11.7977 11.2794 11.483 11.4803 11.4049 11.7726C11.2576 12.3082 11.3893 13.0402 11.6303 13.973C11.3268 14.6961 10.8425 15.7472 10.4877 16.3721C9.8271 16.7135 8.94113 17.2402 8.80946 17.9053C8.78268 18.028 8.81392 18.1842 8.88757 18.3248C8.97014 18.481 9.10181 18.6015 9.25579 18.6596C9.32274 18.6841 9.40308 18.7042 9.49681 18.7042C9.88959 18.7042 10.5256 18.3873 11.3736 16.9322C11.5031 16.8898 11.637 16.8452 11.7664 16.8006C12.3734 16.5953 13.0028 16.381 13.5718 16.2851C14.2012 16.622 14.9175 16.8385 15.404 16.8385C15.8861 16.8385 16.0758 16.5529 16.1472 16.381C16.2722 16.0797 16.2119 15.7004 16.0088 15.4973C15.7143 15.2072 14.9979 15.1313 13.882 15.2696C13.3331 14.9349 12.9738 14.4796 12.7127 13.8012ZM10.2645 17.1911C9.95431 17.6419 9.71998 17.8673 9.59278 17.9655C9.7423 17.691 10.0346 17.4009 10.2645 17.1911ZM12.2195 11.9355C12.3355 12.1341 12.3199 12.7345 12.2306 13.038C12.1213 12.5939 12.1056 11.9645 12.1704 11.8909L12.2195 11.9355ZM12.1837 14.6247C12.4225 15.0376 12.7238 15.3924 13.0563 15.6557C12.5743 15.7651 12.1346 15.9458 11.7419 16.1065C11.6481 16.1445 11.5566 16.1824 11.4674 16.2181C11.7642 15.6803 12.0119 15.071 12.1837 14.6247ZM15.6562 16.0864L15.6428 16.1065C15.6428 16.1065 15.4375 16.2315 14.6497 15.9213C15.5558 15.8789 15.6562 16.0864 15.6562 16.0864Z\",fill:\"currentColor\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 4.5V9.5H6.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 4.5H18.5V20.5H6.5V9.5L11.5 4.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Ci.displayName=\"ForwardRef(DocumentPdfIcon)\";const ki=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"document-remove\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 4.5V9.5H6.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M6.5 14V20.5H18.5V14M6.5 11V9.5L11.5 4.5H18.5V11M3 12.5H22\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));ki.displayName=\"ForwardRef(DocumentRemoveIcon)\";const Li=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"document-sheet\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 4.5V9.5H6.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10.4 19V16.4M10.4 16.4L10.4 13.4M10.4 16.4H8M10.4 16.4H14.4M10.4 13.4V11M10.4 13.4H8M10.4 13.4H14.4M14.4 19V16.4M14.4 16.4V13.4M14.4 16.4H17M14.4 13.4V11M14.4 13.4H17M11.5 4.5H18.5V20.5H6.5V9.5L11.5 4.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Li.displayName=\"ForwardRef(DocumentSheetIcon)\";const Mi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"document-text\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 4.5V9.5H6.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M16 13H9M14 16H9M11.5 4.5H18.5V20.5H6.5V9.5L11.5 4.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Mi.displayName=\"ForwardRef(DocumentTextIcon)\";const Si=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"document-video\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 16.5V13.5L14 15L11.5 16.5Z\",fill:\"currentColor\",stroke:\"currentColor\",strokeWidth:1.2}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 4.5V9.5H6.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 4.5H18.5V20.5H6.5V9.5L11.5 4.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Si.displayName=\"ForwardRef(DocumentVideoIcon)\";const Ri=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"document-word\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.4699 13.4588H12.5263L13.6328 17H14.5435L16 12H14.9952L14.0656 15.7214H14.0129L12.929 12H12.0672L10.9984 15.7214H10.9419L10.0124 12H9L10.4565 17H11.371L12.4699 13.4588Z\",fill:\"currentColor\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 4.5V9.5H6.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 4.5H18.5V20.5H6.5V9.5L11.5 4.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Ri.displayName=\"ForwardRef(DocumentWordIcon)\";const Vi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"document-zip\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 4.5V9.5H6.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M15 4.5L13.5 5L15.5 6L13.5 7L15.5 8L13.5 9L15.5 10L13.5 11L14.5 11.5V13M11.5 4.5H18.5V20.5H6.5V9.5L11.5 4.5ZM13.5 13H15.5L16 17H13L13.5 13Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Vi.displayName=\"ForwardRef(DocumentZipIcon)\";const Ei=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"documents\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10.5 4.5V9.5H5.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M16.5 7.5H19.5V21.5H8.5V18.5M10.5 4.5H16.5V18.5H5.5V9.5L10.5 4.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Ei.displayName=\"ForwardRef(DocumentsIcon)\";const Hi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"dot\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"circle\",{cx:12.5,cy:12.5,r:2.5,fill:\"currentColor\",stroke:\"currentColor\",strokeWidth:1.2})})}));Hi.displayName=\"ForwardRef(DotIcon)\";const Ti=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"double-chevron-down\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M16 8L12.5 11.5L9 8M16 13L12.5 16.5L9 13\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Ti.displayName=\"ForwardRef(DoubleChevronDownIcon)\";const $i=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"double-chevron-left\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12 16L8.5 12.5L12 9M17 16L13.5 12.5L17 9\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));$i.displayName=\"ForwardRef(DoubleChevronLeftIcon)\";const Ai=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"double-chevron-right\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M13 9L16.5 12.5L13 16M8 9L11.5 12.5L8 16\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Ai.displayName=\"ForwardRef(DoubleChevronRightIcon)\";const Ni=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"double-chevron-up\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9 12L12.5 8.5L16 12M9 17L12.5 13.5L16 17\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Ni.displayName=\"ForwardRef(DoubleChevronUpIcon)\";const Ii=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"download\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M19.5 17V19.5H5.5V17M12.5 16L12.5 5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M17.5 11L12.5 16L7.5 11\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Ii.displayName=\"ForwardRef(DownloadIcon)\";const Pi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"drag-handle\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9.5 8C10.3284 8 11 7.32843 11 6.5C11 5.67157 10.3284 5 9.5 5C8.67157 5 8 5.67157 8 6.5C8 7.32843 8.67157 8 9.5 8Z\",fill:\"currentColor\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9.5 14C10.3284 14 11 13.3284 11 12.5C11 11.6716 10.3284 11 9.5 11C8.67157 11 8 11.6716 8 12.5C8 13.3284 8.67157 14 9.5 14Z\",fill:\"currentColor\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11 18.5C11 19.3284 10.3284 20 9.5 20C8.67157 20 8 19.3284 8 18.5C8 17.6716 8.67157 17 9.5 17C10.3284 17 11 17.6716 11 18.5Z\",fill:\"currentColor\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M15.5 8C16.3284 8 17 7.32843 17 6.5C17 5.67157 16.3284 5 15.5 5C14.6716 5 14 5.67157 14 6.5C14 7.32843 14.6716 8 15.5 8Z\",fill:\"currentColor\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M17 12.5C17 13.3284 16.3284 14 15.5 14C14.6716 14 14 13.3284 14 12.5C14 11.6716 14.6716 11 15.5 11C16.3284 11 17 11.6716 17 12.5Z\",fill:\"currentColor\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M15.5 20C16.3284 20 17 19.3284 17 18.5C17 17.6716 16.3284 17 15.5 17C14.6716 17 14 17.6716 14 18.5C14 19.3284 14.6716 20 15.5 20Z\",fill:\"currentColor\"})]})}));Pi.displayName=\"ForwardRef(DragHandleIcon)\";const Fi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"drop\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M18.5 14.5C18.5 18 16 20.5 12.5 20.5C9 20.5 6.5 18 6.5 14.5C6.5 11 9.5 7.50001 12.5 4.5C15.5 7.5 18.5 11 18.5 14.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Fi.displayName=\"ForwardRef(DropIcon)\";const ji=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"earth-americas\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7 13L5.5 9L10 5H15V10L14 9H11L9.5 11L10.5 12H12V13L13 14.5H15.5L18.5 17L15.5 19.5L10.5 20V17L12.5 15L9 13L7 10.5V13Z\",fill:\"currentColor\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"circle\",{cx:12.5,cy:12.5,r:8,stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));ji.displayName=\"ForwardRef(EarthAmericasIcon)\";const Bi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"earth-globe\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M20.5 12.5H4.5M12.5 20.5C12.5 20.5 9.5 17.5 9.5 12.5C9.5 7.5 12.5 4.5 12.5 4.5C12.5 4.5 15.5 7.5 15.5 12.5C15.5 17.5 12.5 20.5 12.5 20.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Bi.displayName=\"ForwardRef(EarthGlobeIcon)\";const Di=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"edit\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M15 7L18 10M6 19L7 15L17 5L20 8L10 18L6 19Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Di.displayName=\"ForwardRef(EditIcon)\";const Oi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"ellipsis-horizontal\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M6.5 11C7.32843 11 8 11.6716 8 12.5C8 13.3284 7.32843 14 6.5 14C5.67157 14 5 13.3284 5 12.5C5 11.6716 5.67157 11 6.5 11Z\",fill:\"currentColor\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 11C13.3284 11 14 11.6716 14 12.5C14 13.3284 13.3284 14 12.5 14C11.6716 14 11 13.3284 11 12.5C11 11.6716 11.6716 11 12.5 11Z\",fill:\"currentColor\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M18.5 11C19.3284 11 20 11.6716 20 12.5C20 13.3284 19.3284 14 18.5 14C17.6716 14 17 13.3284 17 12.5C17 11.6716 17.6716 11 18.5 11Z\",fill:\"currentColor\"})]})}));Oi.displayName=\"ForwardRef(EllipsisHorizontalIcon)\";const zi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"ellipsis-vertical\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M14 6.5C14 7.32843 13.3284 8 12.5 8C11.6716 8 11 7.32843 11 6.5C11 5.67157 11.6716 5 12.5 5C13.3284 5 14 5.67157 14 6.5Z\",fill:\"currentColor\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M14 12.5C14 13.3284 13.3284 14 12.5 14C11.6716 14 11 13.3284 11 12.5C11 11.6716 11.6716 11 12.5 11C13.3284 11 14 11.6716 14 12.5Z\",fill:\"currentColor\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M14 18.5C14 19.3284 13.3284 20 12.5 20C11.6716 20 11 19.3284 11 18.5C11 17.6716 11.6716 17 12.5 17C13.3284 17 14 17.6716 14 18.5Z\",fill:\"currentColor\"})]})}));zi.displayName=\"ForwardRef(EllipsisVerticalIcon)\";const _i=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"empty\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 21V19.1111M8.25 19.8614L9.19445 18.2255M5.13878 16.7501L6.77461 15.8057M4 12.5H5.8889M5.13872 8.2499L6.77455 9.19436M8.25004 5.13876L9.19449 6.7746M12.5 5.88891V4M15.8055 6.77465L16.75 5.1388M18.2254 9.19449L19.8612 8.25004M19.1111 12.5001H21M18.2254 15.8056L19.8612 16.7501M15.8056 18.2255L16.75 19.8614\",stroke:\"currentColor\",strokeWidth:1.2})})}));_i.displayName=\"ForwardRef(EmptyIcon)\";const Wi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"enter\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M6 14.5H19.5V7\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10 18.5L6 14.5L10 10.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Wi.displayName=\"ForwardRef(EnterIcon)\";const qi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"enter-right\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M19 14.5H5.5V7\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M15 18.5L19 14.5L15 10.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));qi.displayName=\"ForwardRef(EnterRightIcon)\";const Zi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"envelope\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M20.5 18.5H4.5V6.5H20.5V18.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M20.5 18.5L17.75 15.5L15 12.5M4.5 18.5L10 12.5M20.5 6.5L12.5 15L4.5 6.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Zi.displayName=\"ForwardRef(EnvelopeIcon)\";const Ui=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"equal\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7.5 4.5H3.5V20.5H7.5\",stroke:\"currentColor\",strokeWidth:1.2}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M17.5 20.5L21.5 20.5L21.5 4.5L17.5 4.5\",stroke:\"currentColor\",strokeWidth:1.2}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9 10.5H16\",stroke:\"currentColor\",strokeWidth:1.2}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9 14.5H16\",stroke:\"currentColor\",strokeWidth:1.2})]})}));Ui.displayName=\"ForwardRef(EqualIcon)\";const Gi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"error-filled\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M4 12.5C4 7.80558 7.80558 4 12.5 4C17.1944 4 21 7.80558 21 12.5C21 17.1944 17.1944 21 12.5 21C7.80558 21 4 17.1944 4 12.5ZM13 14.5V16H12V14.5H13ZM12 9V13H13V9H12Z\",fill:\"currentColor\"})})}));Gi.displayName=\"ForwardRef(ErrorFilledIcon)\";const Yi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"error-outline\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 16V14.5M12.5 9V13M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Yi.displayName=\"ForwardRef(ErrorOutlineIcon)\";const Xi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"expand\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M14 6.5H18.5V11M11 18.5H6.5V14\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M18.5 6.5L14 11M6.5 18.5L11 14\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Xi.displayName=\"ForwardRef(ExpandIcon)\";const Ki=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"eye-closed\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7 15.5L5.5 17.5M20.5 12.5C19.8612 13.5647 19.041 14.6294 18.0008 15.501M18.0008 15.501C16.5985 16.676 14.7965 17.5 12.5 17.5M18.0008 15.501L18 15.5M18.0008 15.501L19.5 17.5M12.5 17.5C8.5 17.5 6 15 4.5 12.5M12.5 17.5V20M15.5 17L16.5 19.5M9.5 17L8.5 19.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Ki.displayName=\"ForwardRef(EyeClosedIcon)\";const Ji=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"eye-open\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M9.39999 12.5C9.39999 10.7879 10.7879 9.39999 12.5 9.39999C14.2121 9.39999 15.6 10.7879 15.6 12.5C15.6 14.2121 14.2121 15.6 12.5 15.6C10.7879 15.6 9.39999 14.2121 9.39999 12.5Z\",fill:\"currentColor\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 7.5C8.5 7.5 6 10 4.5 12.5C6 15 8.5 17.5 12.5 17.5C16.5 17.5 19 15 20.5 12.5C19 10 16.5 7.5 12.5 7.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Ji.displayName=\"ForwardRef(EyeOpenIcon)\";const Qi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"filter\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11 12L6 7V6L19 6L19 7L14 12V17L11 19V12Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinecap:\"square\",strokeLinejoin:\"round\"})})}));Qi.displayName=\"ForwardRef(FilterIcon)\";const ea=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"folder\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 8.5H19.5V18.5H5.5V5.5H10.5L11.5 8.5ZM11.5 8.5H5.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));ea.displayName=\"ForwardRef(FolderIcon)\";const ta=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"generate\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9 5.30423C6.33576 6.60253 4.5 9.33688 4.5 12.5C4.5 16.9183 8.08172 20.5 12.5 20.5C16.9183 20.5 20.5 16.9183 20.5 12.5C20.5 8.08172 16.9183 4.5 12.5 4.5V14.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M16 11L12.5 14.5L9 11\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));ta.displayName=\"ForwardRef(GenerateIcon)\";const na=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"groq\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M13 13H21L13 21L13 13Z\",fill:\"currentColor\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12 12V4L4 12H12Z\",fill:\"currentColor\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12 13H4L12 21V13Z\",fill:\"currentColor\"})]})}));na.displayName=\"ForwardRef(GroqIcon)\";const ra=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"hash\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M8.33894 16.1002H5.44615L5.63077 14.9002H8.52356L9.26202 10.1002H6.36923L6.55384 8.90018H9.44663L9.89281 6H11.1069L10.6608 8.90018H15.4466L15.8928 6H17.1069L16.6608 8.90018H19.5539L19.3693 10.1002H16.4761L15.7377 14.9002H18.6308L18.4462 16.1002H15.5531L15.1069 19H13.8928L14.3389 16.1002H9.55306L9.10693 19H7.89281L8.33894 16.1002ZM10.4761 10.1002L9.73767 14.9002H14.5236L15.262 10.1002H10.4761Z\",fill:\"currentColor\"})})}));ra.displayName=\"ForwardRef(HashIcon)\";const oa=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"heart-filled\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M17 16C15.8 17.3235 12.5 20.5 12.5 20.5C12.5 20.5 9.2 17.3235 8 16C5.2 12.9118 4.5 11.7059 4.5 9.5C4.5 7.29412 6.1 5.5 8.5 5.5C10.5 5.5 11.7 6.82353 12.5 8.14706C13.3 6.82353 14.5 5.5 16.5 5.5C18.9 5.5 20.5 7.29412 20.5 9.5C20.5 11.7059 19.8 12.9118 17 16Z\",fill:\"currentColor\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));oa.displayName=\"ForwardRef(HeartFilledIcon)\";const ia=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"heart\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M17 16C15.8 17.3235 12.5 20.5 12.5 20.5C12.5 20.5 9.2 17.3235 8 16C5.2 12.9118 4.5 11.7059 4.5 9.5C4.5 7.29412 6.1 5.5 8.5 5.5C10.5 5.5 11.7 6.82353 12.5 8.14706C13.3 6.82353 14.5 5.5 16.5 5.5C18.9 5.5 20.5 7.29412 20.5 9.5C20.5 11.7059 19.8 12.9118 17 16Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));ia.displayName=\"ForwardRef(HeartIcon)\";const aa=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"help-circle\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 13C12.5 11 14 11.5 14 10C14 9.34375 13.5 8.5 12.5 8.5C11.5 8.5 11 9 10.5 9.5M12.5 16V14.5M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));aa.displayName=\"ForwardRef(HelpCircleIcon)\";const sa=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"highlight\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M17.5311 13.7141L8.0245 8.22547M17.5311 13.7141L20.25 9.00478M17.5311 13.7141L16.5 15.5L13.232 16.134L12 18L11.4142 17.6485M8.0245 8.22547L10.75 3.50479M8.0245 8.22547L6.99999 9.99998L7.99998 13L6.99998 15L7.58576 15.3514M7.58576 15.3514L4.90192 20L10.0566 20L11.4142 17.6485M7.58576 15.3514L11.4142 17.6485M13 20H20\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));sa.displayName=\"ForwardRef(HighlightIcon)\";const la=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"home\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M6.5 8.75V18.5H18.5V8.75M4.5 10L12.5 5L20.5 10M14.5 18.5V11.5H10.5V18.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));la.displayName=\"ForwardRef(HomeIcon)\";const ca=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"ice-cream\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9.5 13.5L12.5 20.5L15.5 13.5M12.5 8.26389C11.9692 7.78885 11.2684 7.5 10.5 7.5C8.84315 7.5 7.5 8.84315 7.5 10.5C7.5 12.1569 8.84315 13.5 10.5 13.5C11.2684 13.5 11.9692 13.2111 12.5 12.7361M9.5 7.5C9.5 5.84315 10.8431 4.5 12.5 4.5C14.1569 4.5 15.5 5.84315 15.5 7.5M17.5 10.5C17.5 12.1569 16.1569 13.5 14.5 13.5C12.8431 13.5 11.5 12.1569 11.5 10.5C11.5 8.84315 12.8431 7.5 14.5 7.5C16.1569 7.5 17.5 8.84315 17.5 10.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));ca.displayName=\"ForwardRef(IceCreamIcon)\";const da=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"image\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5.5 15.5L8.79289 12.2071C9.18342 11.8166 9.81658 11.8166 10.2071 12.2071L12.8867 14.8867C13.2386 15.2386 13.7957 15.2782 14.1938 14.9796L15.1192 14.2856C15.3601 14.1049 15.6696 14.0424 15.9618 14.1154L19.5 15M5.5 6.5H19.5V18.5H5.5V6.5ZM15.5 10.5C15.5 11.0523 15.0523 11.5 14.5 11.5C13.9477 11.5 13.5 11.0523 13.5 10.5C13.5 9.94772 13.9477 9.5 14.5 9.5C15.0523 9.5 15.5 9.94772 15.5 10.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));da.displayName=\"ForwardRef(ImageIcon)\";const ua=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"image-remove\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5.5 11V6.5H19.5V11M5.5 14V18.5H19.5V14M3 12.5H22\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));ua.displayName=\"ForwardRef(ImageRemoveIcon)\";const ha=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"images\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M18.5 7.5H20.5V19.5H6.5V17.5M4.5 14.5L7.79289 11.2071C8.18342 10.8166 8.81658 10.8166 9.20711 11.2071L11.8867 13.8867C12.2386 14.2386 12.7957 14.2782 13.1938 13.9796L14.1192 13.2856C14.3601 13.1049 14.6696 13.0424 14.9618 13.1154L18.5 14M4.5 5.5H18.5V17.5H4.5V5.5ZM14.5 9.5C14.5 10.0523 14.0523 10.5 13.5 10.5C12.9477 10.5 12.5 10.0523 12.5 9.5C12.5 8.94772 12.9477 8.5 13.5 8.5C14.0523 8.5 14.5 8.94772 14.5 9.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));ha.displayName=\"ForwardRef(ImagesIcon)\";const fa=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"info-filled\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M21 12.5C21 17.1944 17.1944 21 12.5 21C7.80558 21 4 17.1944 4 12.5C4 7.80558 7.80558 4 12.5 4C17.1944 4 21 7.80558 21 12.5ZM12 10.5V9H13V10.5H12ZM13 16V12H12V16H13Z\",fill:\"currentColor\"})})}));fa.displayName=\"ForwardRef(InfoFilledIcon)\";const pa=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"info-outline\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 10.5V9M12.5 12V16M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));pa.displayName=\"ForwardRef(InfoOutlineIcon)\";const ma=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"inline-element\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5.5 5V20M19.5 5V20M8.5 6.5H16.5V18.5H8.5V6.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));ma.displayName=\"ForwardRef(InlineElementIcon)\";const ga=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"inline\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 6.5H19.5V18.5H12.5M12.5 6.5H5.5V18.5H12.5M12.5 6.5V18.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));ga.displayName=\"ForwardRef(InlineIcon)\";const va=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"insert-above\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M14.5 10.5556L10.5 10.5556M12.5 12.5L12.5 8.5M18.5 5.5L6.5 5.5M18.5 19.5L6.5 19.5L6.5 15.5L18.5 15.5L18.5 19.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinecap:\"square\",strokeLinejoin:\"round\"})})}));va.displayName=\"ForwardRef(InsertAboveIcon)\";const wa=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"insert-below\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10.5 14.5H14.5M12.5 12.5V16.5M6.5 19.5H18.5M6.5 5.5H18.5V9.5H6.5V5.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinecap:\"square\",strokeLinejoin:\"round\"})})}));wa.displayName=\"ForwardRef(InsertBelowIcon)\";const ya=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"italic\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10.43 18H11.7276L13.4551 9.86763H12.1576L10.43 18ZM13.3043 8.29849C13.8022 8.29849 14.2095 7.89112 14.2095 7.39322C14.2095 6.89532 13.8022 6.48795 13.3043 6.48795C12.8064 6.48795 12.399 6.89532 12.399 7.39322C12.399 7.89112 12.8064 8.29849 13.3043 8.29849Z\",fill:\"currentColor\"})})}));ya.displayName=\"ForwardRef(ItalicIcon)\";const ba=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"joystick\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9.5 16V14.5H15.5V16M13.5 10.5V14.5M11.5 10.5V14.5M15.5 7.5C15.5 9.15685 14.1569 10.5 12.5 10.5C10.8431 10.5 9.5 9.15685 9.5 7.5C9.5 5.84315 10.8431 4.5 12.5 4.5C14.1569 4.5 15.5 5.84315 15.5 7.5ZM18.5 19.5H6.5C5.94772 19.5 5.5 19.0523 5.5 18.5V17.5C5.5 16.9477 5.94772 16.5 6.5 16.5H18.5C19.0523 16.5 19.5 16.9477 19.5 17.5V18.5C19.5 19.0523 19.0523 19.5 18.5 19.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));ba.displayName=\"ForwardRef(JoystickIcon)\";const xa=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"json\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11 5.5H9.5C8.39543 5.5 7.5 6.39543 7.5 7.5V12.5M7.5 12.5H4M7.5 12.5V17.5C7.5 18.6046 8.39543 19.5 9.5 19.5H11M14 5.5H15.5C16.6046 5.5 17.5 6.39543 17.5 7.5V12.5M17.5 12.5H21M17.5 12.5V17.5C17.5 18.6046 16.6046 19.5 15.5 19.5H14\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));xa.displayName=\"ForwardRef(JsonIcon)\";const Ca=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"launch\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12 7.5H6.5V18.5H17.5V13M19.5 5.5L10.5 14.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M14 5.5H19.5V11\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Ca.displayName=\"ForwardRef(LaunchIcon)\";const ka=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"leave\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M14.5 15V18.5H5.5V6.5H14.5V10M9 12.5H21.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M18 9L21.5 12.5L18 16\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));ka.displayName=\"ForwardRef(LeaveIcon)\";const La=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"lemon\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10.6569 10.3431L6.41422 14.5858C7.58579 15.7574 9.12132 16.3431 10.6569 16.3431M10.6569 10.3431L14.8995 6.1005C16.0711 7.27208 16.6569 8.80761 16.6569 10.3431M10.6569 10.3431L10.6569 16.3431M10.6569 10.3431L16.6569 10.3431M10.6569 10.3431L14.8995 14.5858M14.8995 14.5858C13.7279 15.7574 12.1924 16.3431 10.6569 16.3431M14.8995 14.5858C16.0711 13.4142 16.6569 11.8787 16.6569 10.3431M16.3137 4.68629C19.4379 7.81049 19.4379 12.8758 16.3137 16C13.1895 19.1242 8.12419 19.1242 5 16L16.3137 4.68629Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));La.displayName=\"ForwardRef(LemonIcon)\";const Ma=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"link\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11 12.5L12.5 14C13.281 14.781 14.719 14.781 15.5 14L18.5 11C19.281 10.219 19.281 8.78105 18.5 8L18 7.5C17.2189 6.71895 15.781 6.71895 15 7.5L13 9.5M12 15.5L10 17.5C9.21895 18.281 7.78105 18.281 7 17.5L6.5 17C5.71895 16.219 5.71896 14.781 6.5 14L9.50001 11C10.2811 10.219 11.719 10.2189 12.5 11L14 12.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Ma.displayName=\"ForwardRef(LinkIcon)\";const Sa=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"link-removed\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M18.5 11C19.281 10.219 19.281 8.78108 18.5 8.00003L18 7.50003C17.2189 6.71898 15.781 6.71898 15 7.50003L13 9.50003M15.5 14C14.7189 14.7811 13.281 14.7811 12.5 14M6.5 14C5.71895 14.7811 5.71894 16.219 6.49999 17L6.99999 17.5C7.78104 18.2811 9.21894 18.2811 9.99999 17.5L12 15.5M12.5 11C11.719 10.219 10.281 10.219 9.5 11M3 12.5H22\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Sa.displayName=\"ForwardRef(LinkRemovedIcon)\";const Ra=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"list\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M6 6.5H19M6 14.5H19M6 10.5H19M6 18.5H19\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Ra.displayName=\"ForwardRef(ListIcon)\";const Va=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"lock\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M15.5 11.5V8.5C15.5 6.5 14 5.5 12.5 5.5C11 5.5 9.5 6.5 9.5 8.5V11.5M7.5 11.5H17.5V19.5H7.5V11.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Va.displayName=\"ForwardRef(LockIcon)\";const Ea=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"logo-js\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M20 5H5V20H20V5ZM12.5254 16.1572C12.5254 17.4189 11.7742 18.1536 10.4792 18.1536C9.24243 18.1536 8.49121 17.4189 8.45801 16.2942V16.261H9.67407V16.2859C9.69897 16.7466 9.9729 17.0703 10.4626 17.0703C10.9939 17.0703 11.272 16.7507 11.272 16.1489V12.011H12.5254V16.1572ZM18.2893 16.2153C18.2893 17.4023 17.3679 18.1536 15.8738 18.1536C14.4419 18.1536 13.5371 17.4688 13.4666 16.4062L13.4624 16.3398H14.6702L14.6743 16.3813C14.72 16.8296 15.2056 17.1326 15.907 17.1326C16.5752 17.1326 17.0359 16.813 17.0359 16.3523V16.3481C17.0359 15.9539 16.7412 15.7339 15.9983 15.5803L15.3674 15.4517C14.1223 15.1985 13.5869 14.6174 13.5869 13.7085V13.7043C13.5869 12.592 14.5415 11.8574 15.8696 11.8574C17.2683 11.8574 18.0901 12.5962 18.1689 13.5964L18.1731 13.6504H16.9944L16.9861 13.6006C16.9155 13.1731 16.5005 12.8743 15.8696 12.8743C15.2512 12.8784 14.8403 13.1606 14.8403 13.6089V13.613C14.8403 14.0032 15.1309 14.2356 15.8364 14.3809L16.4714 14.5095C17.7373 14.771 18.2893 15.2773 18.2893 16.2112V16.2153Z\",fill:\"currentColor\"})})}));Ea.displayName=\"ForwardRef(LogoJsIcon)\";const Ha=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"logo-ts\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M20 5H5V20H20V5ZM11.0769 18H9.82349V13.0444H8.02637V12.011H12.874V13.0444H11.0769V18ZM18.2893 16.2153C18.2893 17.4023 17.3679 18.1536 15.8738 18.1536C14.4419 18.1536 13.5371 17.4688 13.4666 16.4062L13.4624 16.3398H14.6702L14.6743 16.3813C14.72 16.8296 15.2056 17.1326 15.907 17.1326C16.5752 17.1326 17.0359 16.813 17.0359 16.3523V16.3481C17.0359 15.9539 16.7412 15.7339 15.9983 15.5803L15.3674 15.4517C14.1223 15.1985 13.5869 14.6174 13.5869 13.7085V13.7043C13.5869 12.592 14.5415 11.8574 15.8696 11.8574C17.2683 11.8574 18.0901 12.5962 18.1689 13.5964L18.1731 13.6504H16.9944L16.9861 13.6006C16.9155 13.1731 16.5005 12.8743 15.8696 12.8743C15.2512 12.8784 14.8403 13.1606 14.8403 13.6089V13.613C14.8403 14.0032 15.1309 14.2356 15.8364 14.3809L16.4714 14.5095C17.7373 14.771 18.2893 15.2773 18.2893 16.2112V16.2153Z\",fill:\"currentColor\"})})}));Ha.displayName=\"ForwardRef(LogoTsIcon)\";const Ta=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"marker\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M6.5 10.5C6.5 7 9 4.5 12.5 4.5C16 4.5 18.5 7 18.5 10.5C18.5 14 15.5 17.5 12.5 20.5C9.5 17.5 6.5 14 6.5 10.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M14 10.5C14 11.3284 13.3284 12 12.5 12C11.6716 12 11 11.3284 11 10.5C11 9.67157 11.6716 9 12.5 9C13.3284 9 14 9.67157 14 10.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Ta.displayName=\"ForwardRef(MarkerIcon)\";const $a=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"marker-removed\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7.39787 14C8.51075 16.2897 10.5054 18.5054 12.5 20.5C14.4946 18.5054 16.4892 16.2897 17.6021 14M6.52009 11C6.50681 10.8334 6.5 10.6667 6.5 10.5C6.5 7 9 4.5 12.5 4.5C16 4.5 18.5 7 18.5 10.5C18.5 10.6667 18.4932 10.8334 18.4799 11M3 12.5H22\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));$a.displayName=\"ForwardRef(MarkerRemovedIcon)\";const Aa=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"master-detail\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7 9.5H10M11.5 6.5V18.5M7 12.5H10M13 9.5H18M7 15.5H10M5.5 6.5H19.5V18.5H5.5V6.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Aa.displayName=\"ForwardRef(MasterDetailIcon)\";const Na=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"menu\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M6 7.5H19M6 17.5H19M6 12.5H19\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Na.displayName=\"ForwardRef(MenuIcon)\";const Ia=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"mobile-device\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7.5 6.5C7.5 5.39543 8.39543 4.5 9.5 4.5H15.5C16.6046 4.5 17.5 5.39543 17.5 6.5V18.5C17.5 19.6046 16.6046 20.5 15.5 20.5H9.5C8.39543 20.5 7.5 19.6046 7.5 18.5V6.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M13.5 17.5C13.5 18.0523 13.0523 18.5 12.5 18.5C11.9477 18.5 11.5 18.0523 11.5 17.5C11.5 16.9477 11.9477 16.5 12.5 16.5C13.0523 16.5 13.5 16.9477 13.5 17.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Ia.displayName=\"ForwardRef(MobileDeviceIcon)\";const Pa=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"moon\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M19.6065 16.1775C18.9417 16.387 18.234 16.5 17.5 16.5C13.634 16.5 10.5 13.366 10.5 9.5C10.5 7.54163 11.3042 5.77109 12.6004 4.50062C12.567 4.50021 12.5335 4.5 12.5 4.5C8.08172 4.5 4.5 8.08172 4.5 12.5C4.5 16.9183 8.08172 20.5 12.5 20.5C15.5924 20.5 18.275 18.7454 19.6065 16.1775Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Pa.displayName=\"ForwardRef(MoonIcon)\";const Fa=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"number\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M21.0165 17.6336H3.83636V16.4336H21.0165V17.6336Z\",fill:\"currentColor\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7.09808 13.3967V7.508H5.74066L3.83636 8.78241V10.091L5.65277 8.88495H5.74066V13.3967H3.84125V14.5539H8.89984V13.3967H7.09808Z\",fill:\"currentColor\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9.81781 9.63202V9.66132H11.1069V9.62714C11.1069 8.95331 11.5756 8.49432 12.2739 8.49432C12.9575 8.49432 13.4018 8.89471 13.4018 9.50507C13.4018 9.9787 13.1528 10.3498 12.1909 11.3117L9.89594 13.5822V14.5539H14.8618V13.3869H11.7807V13.299L13.1577 11.9855C14.3491 10.843 14.7543 10.1838 14.7543 9.41229C14.7543 8.19159 13.7729 7.36639 12.3178 7.36639C10.8383 7.36639 9.81781 8.28436 9.81781 9.63202Z\",fill:\"currentColor\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M17.6694 11.4631H18.5092C19.3198 11.4631 19.8422 11.8683 19.8422 12.4982C19.8422 13.1183 19.3295 13.5139 18.5239 13.5139C17.767 13.5139 17.2592 13.133 17.2104 12.5324H15.9262C15.9897 13.8508 17.0248 14.6955 18.5629 14.6955C20.1401 14.6955 21.2192 13.841 21.2192 12.591C21.2192 11.6584 20.6528 11.0334 19.7006 10.9211V10.8332C20.4721 10.6769 20.9457 10.0666 20.9457 9.23651C20.9457 8.12323 19.9741 7.36639 18.5434 7.36639C17.0541 7.36639 16.1118 8.17694 16.0629 9.50018H17.2983C17.3422 8.88007 17.8061 8.48456 18.4995 8.48456C19.2075 8.48456 19.6567 8.85565 19.6567 9.44159C19.6567 10.0324 19.1977 10.4182 18.4946 10.4182H17.6694V11.4631Z\",fill:\"currentColor\"})]})}));Fa.displayName=\"ForwardRef(NumberIcon)\";const ja=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"ok-hand\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M15.9957 11.5C14.8197 10.912 11.9957 9 10.4957 9C8.9957 9 5.17825 11.7674 6 13C7 14.5 9.15134 11.7256 10.4957 12C11.8401 12.2744 13 13.5 13 14.5C13 15.5 11.8401 16.939 10.4957 16.5C9.15134 16.061 8.58665 14.3415 7.4957 14C6.21272 13.5984 5.05843 14.6168 5.5 15.5C5.94157 16.3832 7.10688 17.6006 8.4957 19C9.74229 20.2561 11.9957 21.5 14.9957 20C17.9957 18.5 18.5 16.2498 18.5 13C18.5 11.5 13.7332 5.36875 11.9957 4.5C10.9957 4 10 5 10.9957 6.5C11.614 7.43149 13.5 9.27705 14 10.3751M15.5 8C15.5 8 15.3707 7.5 14.9957 6C14.4957 4 15.9957 3.5 16.4957 4.5C17.1281 5.76491 18.2872 10.9147 18.4957 13\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));ja.displayName=\"ForwardRef(OkHandIcon)\";const Ba=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"olist\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10 7.5H19M10 12.5H19M10 17.5H19M5 18.5H7.5L7 17.5L7.5 16.5H5M5 6.5H6.5V8.5M5 8.5H6.5M6.5 8.5H8M8 13.5H6L7 11.5H5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Ba.displayName=\"ForwardRef(OlistIcon)\";const Da=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"overage\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M18.5 11V6.5H14\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M6.5 18.5L9 16L12 13L18.5 6.5M3 13.5H22\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Da.displayName=\"ForwardRef(OverageIcon)\";const Oa=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"package\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 13V22M12.5 13L4.5 8M12.5 13L20.5 8M8.5 5.5L16.5 10.5M4.5 8L12.5 3L20.5 8V17L12.5 22L4.5 17V8Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Oa.displayName=\"ForwardRef(PackageIcon)\";const za=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"panel-left\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10.5 6.5H19.5V18.5H10.5M10.5 6.5H5.5V18.5H10.5M10.5 6.5V18.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));za.displayName=\"ForwardRef(PanelLeftIcon)\";const _a=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"panel-right\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M14.5 6.5H19.5V18.5H14.5M14.5 6.5H5.5V18.5H14.5M14.5 6.5V18.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));_a.displayName=\"ForwardRef(PanelRightIcon)\";const Wa=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"pause\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10.5 7.5H8.5V17.5H10.5V7.5Z\",fill:\"currentColor\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M16.5 7.5H14.5V17.5H16.5V7.5Z\",fill:\"currentColor\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10.5 7.5H8.5V17.5H10.5V7.5Z\",stroke:\"currentColor\",strokeWidth:1.2}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M16.5 7.5H14.5V17.5H16.5V7.5Z\",stroke:\"currentColor\",strokeWidth:1.2})]})}));Wa.displayName=\"ForwardRef(PauseIcon)\";const qa=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"pin-filled\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M17 15H8V13.5C8 12 10.5 11 10.5 11V9L8.5 7V6H16.5V7L14.5 9V11C14.5 11 17 12 17 13.5V15Z\",fill:\"currentColor\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12 15L12.5 20L13 15\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));qa.displayName=\"ForwardRef(PinFilledIcon)\";const Za=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"pin\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12 15L12.5 20L13 15\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M17 15H8V13.5C8 12 10.5 11 10.5 11V9L8.5 7V6H16.5V7L14.5 9V11C14.5 11 17 12 17 13.5V15Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Za.displayName=\"ForwardRef(PinIcon)\";const Ua=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"pin-removed\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7.39787 14C8.51075 16.2897 10.5054 18.5054 12.5 20.5C14.4946 18.5054 16.4892 16.2897 17.6021 14M6.52009 11C6.50681 10.8334 6.5 10.6667 6.5 10.5C6.5 7 9 4.5 12.5 4.5C16 4.5 18.5 7 18.5 10.5C18.5 10.6667 18.4932 10.8334 18.4799 11M3 12.5H22\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Ua.displayName=\"ForwardRef(PinRemovedIcon)\";const Ga=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"play\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7.5 18.5V6.5L17.5 12.5L7.5 18.5Z\",fill:\"currentColor\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Ga.displayName=\"ForwardRef(PlayIcon)\";const Ya=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"plug\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M13.25 8.5L16.75 5M16.25 11.5L19.75 8M9.25 15.5L5.25 19.5M7.75 14L9.75 12C8.25 10 8.75 9 9.75 8C10.15 7.6 11.25 6.5 11.25 6.5L18.25 13.5C18.25 13.5 17.3825 14.3675 16.75 15C15.75 16 14.75 16.5 12.75 15L10.75 17L7.75 14Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Ya.displayName=\"ForwardRef(PlugIcon)\";const Xa=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"presentation\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10.5 18H5.5V8.5H19.5V18H14.5M10.5 18L9 22M10.5 18H14.5M14.5 18L16 22M4.5 8.5H20.5V6.5H4.5V8.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Xa.displayName=\"ForwardRef(PresentationIcon)\";const Ka=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"progress-50\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M17 12.5C17 14.9853 14.9853 17 12.5 17V8C14.9853 8 17 10.0147 17 12.5Z\",fill:\"currentColor\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 20.5C16.9183 20.5 20.5 16.9183 20.5 12.5C20.5 8.08172 16.9183 4.5 12.5 4.5C8.08172 4.5 4.5 8.08172 4.5 12.5C4.5 16.9183 8.08172 20.5 12.5 20.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Ka.displayName=\"ForwardRef(Progress50Icon)\";const Ja=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"progress-75\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 17C14.9853 17 17 14.9853 17 12.5C17 10.0147 14.9853 8 12.5 8V12.5H8C8 14.9853 10.0147 17 12.5 17Z\",fill:\"currentColor\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Ja.displayName=\"ForwardRef(Progress75Icon)\";const Qa=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"projects\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M21 17.5H14M17.5 14V21M5.5 14.5H10.5V19.5H5.5V14.5ZM14.5 5.5H19.5V10.5H14.5V5.5ZM5.5 5.5H10.5V10.5H5.5V5.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Qa.displayName=\"ForwardRef(ProjectsIcon)\";const es=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"publish\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M4.99997 5.50006H20M12.5 9.00005V20\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7.5 14L12.5 9.00006L17.5 14\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));es.displayName=\"ForwardRef(PublishIcon)\";const ts=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"read-only\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M15 7L18 10M10 12L7 15L6 19L10 18L13 15M12 10L17 5L20 8L15 13M19 19L5 5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));ts.displayName=\"ForwardRef(ReadOnlyIcon)\";const ns=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"redo\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M19 9.5L10 9.5C7.51472 9.5 5.5 11.5147 5.5 14C5.5 16.4853 7.51472 18.5 10 18.5H19\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M15 13.5L19 9.5L15 5.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));ns.displayName=\"ForwardRef(RedoIcon)\";const rs=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"refresh\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M19.5 13.5C19.5 17.366 16.366 20.5 12.5 20.5C8.63401 20.5 5.5 17.366 5.5 13.5C5.5 9.63401 8.63401 6.5 12.5 6.5H15.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 10.5L15.5 6.5L11.5 2.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));rs.displayName=\"ForwardRef(RefreshIcon)\";const os=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"remove-circle\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M8 12.4H17M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));os.displayName=\"ForwardRef(RemoveCircleIcon)\";const is=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"remove\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5 12.5H20\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));is.displayName=\"ForwardRef(RemoveIcon)\";const as=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"reset\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M4.56189 13.5L4.14285 13.9294C4.25676 14.0406 4.41017 14.1019 4.56932 14.1C4.72847 14.098 4.88032 14.0329 4.99144 13.9189L4.56189 13.5ZM9.92427 15.9243L15.9243 9.92427L15.0757 9.07574L9.07574 15.0757L9.92427 15.9243ZM9.07574 9.92426L15.0757 15.9243L15.9243 15.0757L9.92426 9.07574L9.07574 9.92426ZM19.9 12.5C19.9 16.5869 16.5869 19.9 12.5 19.9V21.1C17.2496 21.1 21.1 17.2496 21.1 12.5H19.9ZM5.1 12.5C5.1 8.41309 8.41309 5.1 12.5 5.1V3.9C7.75035 3.9 3.9 7.75035 3.9 12.5H5.1ZM12.5 5.1C16.5869 5.1 19.9 8.41309 19.9 12.5H21.1C21.1 7.75035 17.2496 3.9 12.5 3.9V5.1ZM5.15728 13.4258C5.1195 13.1227 5.1 12.8138 5.1 12.5H3.9C3.9 12.8635 3.92259 13.2221 3.9665 13.5742L5.15728 13.4258ZM12.5 19.9C9.9571 19.9 7.71347 18.6179 6.38048 16.6621L5.38888 17.3379C6.93584 19.6076 9.54355 21.1 12.5 21.1V19.9ZM4.99144 13.9189L7.42955 11.4189L6.57045 10.5811L4.13235 13.0811L4.99144 13.9189ZM4.98094 13.0706L2.41905 10.5706L1.58095 11.4294L4.14285 13.9294L4.98094 13.0706Z\",fill:\"currentColor\"})})}));as.displayName=\"ForwardRef(ResetIcon)\";const ss=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"restore\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5.88468 17C7.32466 19.1128 9.75033 20.5 12.5 20.5C16.9183 20.5 20.5 16.9183 20.5 12.5C20.5 8.08172 16.9183 4.5 12.5 4.5C8.08172 4.5 4.5 8.08172 4.5 12.5V13.5M12.5 8V12.5L15.5 15.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7 11L4.5 13.5L2 11\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));ss.displayName=\"ForwardRef(RestoreIcon)\";const ls=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"retrieve\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M16 14L12.5 10.5L9 14M5.5 7.5H19.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 10.5L12.5 17.5M19.5 7.5V19.5H5.5V7.5L7.5 5.5H17.5L19.5 7.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));ls.displayName=\"ForwardRef(RetrieveIcon)\";const cs=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"retry\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M19 9.5L10 9.5C7.51472 9.5 5.5 11.5147 5.5 14C5.5 16.4853 7.51472 18.5 10 18.5H19\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M15 13.5L19 9.5L15 5.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));cs.displayName=\"ForwardRef(RetryIcon)\";const ds=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"revert\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M6 9.5L15 9.5C17.4853 9.5 19.5 11.5147 19.5 14C19.5 16.4853 17.4853 18.5 15 18.5H6\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10 13.5L6 9.5L10 5.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));ds.displayName=\"ForwardRef(RevertIcon)\";const us=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"robot\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 15.5V17.5M12.5 8.5V6.5M12.5 6.5C13.3284 6.5 14 5.82843 14 5C14 4.17157 13.3284 3.5 12.5 3.5C11.6716 3.5 11 4.17157 11 5C11 5.82843 11.6716 6.5 12.5 6.5ZM20.5 20.5V19.5C20.5 18.3954 19.6046 17.5 18.5 17.5H6.5C5.39543 17.5 4.5 18.3954 4.5 19.5V20.5H20.5ZM11.5 12C11.5 12.5523 11.0523 13 10.5 13C9.94772 13 9.5 12.5523 9.5 12C9.5 11.4477 9.94772 11 10.5 11C11.0523 11 11.5 11.4477 11.5 12ZM15.5 12C15.5 12.5523 15.0523 13 14.5 13C13.9477 13 13.5 12.5523 13.5 12C13.5 11.4477 13.9477 11 14.5 11C15.0523 11 15.5 11.4477 15.5 12ZM8.5 15.5H16.5C17.6046 15.5 18.5 14.6046 18.5 13.5V10.5C18.5 9.39543 17.6046 8.5 16.5 8.5H8.5C7.39543 8.5 6.5 9.39543 6.5 10.5V13.5C6.5 14.6046 7.39543 15.5 8.5 15.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));us.displayName=\"ForwardRef(RobotIcon)\";const hs=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"rocket\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 20.5L15.5 14M11 9.49999L4.5 12.5M9 14C9 14 7.54688 14.9531 6.5 16C5.5 17 4.5 20.5 4.5 20.5C4.5 20.5 8 19.5 9 18.5C10 17.5 11 16 11 16M9 14C9 14 10.1 9.9 12.5 7.5C15.5 4.5 20.5 4.5 20.5 4.5C20.5 4.5 20.5 9.5 17.5 12.5C15.7492 14.2508 11 16 11 16L9 14ZM16.5 9.99999C16.5 10.8284 15.8284 11.5 15 11.5C14.1716 11.5 13.5 10.8284 13.5 9.99999C13.5 9.17157 14.1716 8.49999 15 8.49999C15.8284 8.49999 16.5 9.17157 16.5 9.99999Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));hs.displayName=\"ForwardRef(RocketIcon)\";const fs=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"schema\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 9.5V12.5M12.5 12.5H8.5V15.5M12.5 12.5H16.5V15.5M10.5 5.5H14.5V9.5H10.5V5.5ZM6.5 15.5H10.5V19.5H6.5V15.5ZM14.5 15.5H18.5V19.5H14.5V15.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));fs.displayName=\"ForwardRef(SchemaIcon)\";const ps=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"search\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M15.0355 15.0355L20 20M16.5 11.5C16.5 14.2614 14.2614 16.5 11.5 16.5C8.73858 16.5 6.5 14.2614 6.5 11.5C6.5 8.73858 8.73858 6.5 11.5 6.5C14.2614 6.5 16.5 8.73858 16.5 11.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));ps.displayName=\"ForwardRef(SearchIcon)\";const ms=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"select\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M16 15L12.5 18.5L9 15M9 10L12.5 6.5L16 10\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));ms.displayName=\"ForwardRef(SelectIcon)\";const gs=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"share\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M15 10.5H18.5V19.5H6.5L6.5 10.5H10M12.5 16V3.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9 7L12.5 3.5L16 7\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));gs.displayName=\"ForwardRef(ShareIcon)\";const vs=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"sort\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M8.5 18.5V6M16.5 19V6.5M12 15L8.5 18.5L5 15M13 10L16.5 6.5L20 10\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));vs.displayName=\"ForwardRef(SortIcon)\";const ws=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"sparkle\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10.5 10.5C8.5 12.5 5 12.5 5 12.5C5 12.5 8.5 12.5 10.5 14.5C12.5 16.5 12.5 20 12.5 20C12.5 20 12.5 16.5 14.5 14.5C16.5 12.5 20 12.5 20 12.5C20 12.5 16.5 12.5 14.5 10.5C12.5 8.5 12.5 5 12.5 5C12.5 5 12.5 8.5 10.5 10.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));ws.displayName=\"ForwardRef(SparkleIcon)\";const ys=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"sparkles\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11 3.5V5M11 5V6.5M11 5H12.5M11 5H9.5M9.5 15C9.5 15 12.2308 14.7692 13.5 13.5C14.7692 12.2308 15 9.5 15 9.5C15 9.5 15.2308 12.2308 16.5 13.5C17.7692 14.7692 20.5 15 20.5 15C20.5 15 17.7692 15.2308 16.5 16.5C15.2308 17.7692 15 20.5 15 20.5C15 20.5 14.7692 17.7692 13.5 16.5C12.2308 15.2308 9.5 15 9.5 15ZM4.5 10C4.5 10 5.72308 9.87692 6.3 9.3C6.87692 8.72308 7 7.5 7 7.5C7 7.5 7.12308 8.72308 7.7 9.3C8.27692 9.87692 9.5 10 9.5 10C9.5 10 8.27692 10.1231 7.7 10.7C7.12308 11.2769 7 12.5 7 12.5C7 12.5 6.87692 11.2769 6.3 10.7C5.72308 10.1231 4.5 10 4.5 10Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinecap:\"round\",strokeLinejoin:\"round\"})})}));ys.displayName=\"ForwardRef(SparklesIcon)\";const bs=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"spinner\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M4.5 12.5C4.5 16.9183 8.08172 20.5 12.5 20.5C16.9183 20.5 20.5 16.9183 20.5 12.5C20.5 8.08172 16.9183 4.5 12.5 4.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));bs.displayName=\"ForwardRef(SpinnerIcon)\";const xs=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"split-horizontal\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M19.5 10.5V20.5H5.5V10.5M19.5 10.5H5.5M19.5 10.5V4.5H5.5V10.5M12.5 13V15.5M12.5 18V15.5M12.5 15.5H15M12.5 15.5H10\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));xs.displayName=\"ForwardRef(SplitHorizontalIcon)\";const Cs=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"split-vertical\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10.5 5.5V19.5M13 12.5H15.5M18 12.5H15.5M15.5 12.5V15M15.5 12.5V10M4.5 5.5H20.5V19.5H4.5V5.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Cs.displayName=\"ForwardRef(SplitVerticalIcon)\";const ks=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"square\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"rect\",{x:5.5,y:5.5,width:14,height:14,stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));ks.displayName=\"ForwardRef(SquareIcon)\";const Ls=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"stack-compact\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5.5 15.5V18.5H19.5V15.5M5.5 15.5H19.5M5.5 15.5V9.5M19.5 15.5V9.5M5.5 9.5V6.5H19.5V9.5M5.5 9.5H19.5M5.5 12.5H19.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Ls.displayName=\"ForwardRef(StackCompactIcon)\";const Ms=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"stack\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5.5 12.5H19.5M5.5 18.5H19.5V6.5H5.5V18.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Ms.displayName=\"ForwardRef(StackIcon)\";const Ss=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"star-filled\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 5L14.522 10.217L20.1085 10.5279L15.7716 14.063L17.2023 19.4721L12.5 16.44L7.79772 19.4721L9.22837 14.063L4.89155 10.5279L10.478 10.217L12.5 5Z\",fill:\"currentColor\",stroke:\"currentColor\",strokeLinejoin:\"round\"})})}));Ss.displayName=\"ForwardRef(StarFilledIcon)\";const Rs=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"star\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 5L14.522 10.217L20.1085 10.5279L15.7716 14.063L17.2023 19.4721L12.5 16.44L7.79772 19.4721L9.22837 14.063L4.89155 10.5279L10.478 10.217L12.5 5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Rs.displayName=\"ForwardRef(StarIcon)\";const Vs=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"stop\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"rect\",{x:7.5,y:7.5,width:10,height:10,fill:\"currentColor\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Vs.displayName=\"ForwardRef(StopIcon)\";const Es=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"strikethrough\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5656 7.73438C11.0656 7.73438 10.0734 8.48438 10.0734 9.625C10.0734 10.2317 10.3649 10.6613 11.0519 11H8.90358C8.71703 10.6199 8.62813 10.1801 8.62813 9.67188C8.62813 7.75781 10.2297 6.46094 12.6125 6.46094C14.7922 6.46094 16.4172 7.75781 16.5344 9.57812H15.1203C14.925 8.42188 13.9719 7.73438 12.5656 7.73438Z\",fill:\"currentColor\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.4875 18.2656C10.0969 18.2656 8.44844 17 8.3 15.0547H9.72188C9.89375 16.2344 11.0188 16.9844 12.6203 16.9844C14.1359 16.9844 15.2531 16.1641 15.2531 15.0469C15.2531 14.6375 15.1255 14.292 14.8589 14H16.5912C16.6638 14.266 16.6984 14.5566 16.6984 14.875C16.6984 16.9453 15.0656 18.2656 12.4875 18.2656Z\",fill:\"currentColor\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7 13.1H18V11.9H7V13.1Z\",fill:\"currentColor\"})]})}));Es.displayName=\"ForwardRef(StrikethroughIcon)\";const Hs=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"string\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.6748 15.5227H13.1855L9.87842 6.36304H8.34863L5.0415 15.5227H6.50146L7.3457 13.0916H10.8369L11.6748 15.5227ZM9.04053 8.02612H9.14844L10.4751 11.8982H7.70752L9.04053 8.02612Z\",fill:\"currentColor\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M16.8101 14.488C16.0674 14.488 15.5278 14.1262 15.5278 13.5042C15.5278 12.8948 15.9595 12.571 16.9116 12.5076L18.6001 12.3997V12.9773C18.6001 13.8342 17.8384 14.488 16.8101 14.488ZM16.4609 15.637C17.3687 15.637 18.124 15.2434 18.5366 14.5515H18.6445V15.5227H19.9585V10.8C19.9585 9.34009 18.981 8.47681 17.248 8.47681C15.6802 8.47681 14.563 9.23853 14.4233 10.4255H15.7437C15.896 9.93677 16.4229 9.65747 17.1846 9.65747C18.1177 9.65747 18.6001 10.0701 18.6001 10.8V11.3967L16.7275 11.5046C15.0835 11.6062 14.1567 12.3235 14.1567 13.5676C14.1567 14.8308 15.1279 15.637 16.4609 15.637Z\",fill:\"currentColor\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M19.9585 18.637L5.0415 18.637V17.437L19.9585 17.437V18.637Z\",fill:\"currentColor\"})]})}));Hs.displayName=\"ForwardRef(StringIcon)\";const Ts=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"sun\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M19 12.5H22M3 12.5H6M12.5 6V3M12.5 22V19M17.3891 7.61091L19.5104 5.48959M5.48959 19.5104L7.61091 17.3891M7.61091 7.61091L5.48959 5.48959M19.5104 19.5104L17.3891 17.3891M16 12.5C16 14.433 14.433 16 12.5 16C10.567 16 9 14.433 9 12.5C9 10.567 10.567 9 12.5 9C14.433 9 16 10.567 16 12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Ts.displayName=\"ForwardRef(SunIcon)\";const $s=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"sync\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M13.5 4.5H12.5C8.08172 4.5 4.5 8.08172 4.5 12.5C4.5 15.6631 6.33576 18.3975 9 19.6958M11.5 20.5H12.5C16.9183 20.5 20.5 16.9183 20.5 12.5C20.5 9.33688 18.6642 6.60253 16 5.30423\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M14 17.5619L11.5 20.5L14.5 23.0619M11 7.43811L13.5 4.50001L10.5 1.93811\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));$s.displayName=\"ForwardRef(SyncIcon)\";const As=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"tablet-device\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5.5 5.5C5.5 4.94772 5.94772 4.5 6.5 4.5H18.5C19.0523 4.5 19.5 4.94772 19.5 5.5V19.5C19.5 20.0523 19.0523 20.5 18.5 20.5H6.5C5.94772 20.5 5.5 20.0523 5.5 19.5V5.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M13 18C13 18.2761 12.7761 18.5 12.5 18.5C12.2239 18.5 12 18.2761 12 18C12 17.7239 12.2239 17.5 12.5 17.5C12.7761 17.5 13 17.7239 13 18Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));As.displayName=\"ForwardRef(TabletDeviceIcon)\";const Ns=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"tag\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 20L5 20L5 12.5L12.5 5L20 12.5L12.5 20Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11 15.5C11 16.3284 10.3284 17 9.5 17C8.67157 17 8 16.3284 8 15.5C8 14.6716 8.67157 14 9.5 14C10.3284 14 11 14.6716 11 15.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Ns.displayName=\"ForwardRef(TagIcon)\";const Is=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"tags\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.1562 7.93179L13.9717 6.11633L20.3553 12.5L13.9717 18.8836L10.6855 18.8836M11.0283 18.8836L17.4119 12.5L11.0283 6.11633L4.64462 12.5L4.64462 18.8836L11.0283 18.8836ZM9.75153 15.0534C9.75153 15.7585 9.17992 16.3302 8.47481 16.3302C7.76969 16.3302 7.19808 15.7585 7.19808 15.0534C7.19808 14.3483 7.76969 13.7767 8.47481 13.7767C9.17992 13.7767 9.75153 14.3483 9.75153 15.0534Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Is.displayName=\"ForwardRef(TagsIcon)\";const Ps=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"task\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M4.88281 10.75V19.75H20.8828V10.75M4.88281 10.75V5.75H20.8828V10.75M4.88281 10.75H12.8828H20.8828M17.8828 8.25V3.25M7.88281 8.25V3.25\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10.083 14.7358L12.083 16.7358L15.683 13.1758\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Ps.displayName=\"ForwardRef(TaskIcon)\";const Fs=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"terminal\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M8.5 9.5L11.5 12.5L8.5 15.5M13 15.5H17M5.5 6.5H19.5V18.5H5.5V6.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Fs.displayName=\"ForwardRef(TerminalIcon)\";const js=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"text\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7.5 9V6.5H17.5V9M12.5 18.5V6.5M10 18.5H15\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));js.displayName=\"ForwardRef(TextIcon)\";const Bs=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"th-large\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 6.5V12.5M12.5 12.5V18.5M12.5 12.5H20.5M12.5 12.5H4.5M4.5 6.5H20.5V18.5H4.5V6.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Bs.displayName=\"ForwardRef(ThLargeIcon)\";const Ds=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"th-list\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9.5 6.5V10.5M9.5 10.5V14.5M9.5 10.5H20.5M9.5 10.5H4.5M9.5 14.5V18.5M9.5 14.5H20.5M9.5 14.5H4.5M4.5 6.5H20.5V18.5H4.5V6.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Ds.displayName=\"ForwardRef(ThListIcon)\";const Os=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"tiers\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M16.5 14.5L20.5 16.5L12.5 20.5L4.5 16.5L8.5 14.5M16.5 10.5L20.5 12.5L12.5 16.5L4.5 12.5L8.5 10.5M12.5 12.5L20.5 8.5L12.5 4.5L4.5 8.5L12.5 12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Os.displayName=\"ForwardRef(TiersIcon)\";const zs=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"timeline\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 5V20\",stroke:\"currentColor\",strokeWidth:1.2}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5 8.5H11M7 12.5H11M9 16.5H11M13 16.5H20M13 12.5H18M13 8.5H16\",stroke:\"currentColor\",strokeWidth:1.2})]})}));zs.displayName=\"ForwardRef(TimelineIcon)\";const _s=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"toggle-arrow-right\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10.5 16V9L16 12.5L10.5 16Z\",fill:\"currentColor\",stroke:\"currentColor\",strokeLinejoin:\"round\"})})}));_s.displayName=\"ForwardRef(ToggleArrowRightIcon)\";const Ws=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"token\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M17.5711 12.5C17.5711 15.2614 15.3325 17.5 12.5711 17.5M7.57107 12.5C7.57107 9.73858 9.80964 7.5 12.5711 7.5M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Ws.displayName=\"ForwardRef(TokenIcon)\";const qs=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"transfer\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M19.5 16.5H6M5.5 8.5L19 8.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M16 13L19.5 16.5L16 20M9 12L5.5 8.5L9 5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));qs.displayName=\"ForwardRef(TransferIcon)\";const Zs=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"translate\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M9.4 5.4H4V6.6H13.2189C13.1612 6.78478 13.0895 6.99578 13.0025 7.22211C12.7032 8.00031 12.2402 8.91125 11.5757 9.57574L10 11.1515L9.42426 10.5757C8.72102 9.8725 8.25297 9.16987 7.96199 8.64611C7.81668 8.38455 7.71617 8.16874 7.65305 8.02146C7.62151 7.94787 7.59937 7.89154 7.5857 7.85534C7.57886 7.83725 7.57415 7.8242 7.57144 7.81657L7.56886 7.80922C7.56886 7.80922 7.56921 7.81026 7 8C6.43079 8.18974 6.43091 8.19009 6.43091 8.19009L6.43133 8.19135L6.43206 8.19351L6.4341 8.19948L6.44052 8.21786C6.44587 8.23292 6.45336 8.25357 6.46313 8.27942C6.48266 8.33112 6.5113 8.40369 6.55008 8.49416C6.62758 8.67501 6.74582 8.92795 6.91301 9.22889C7.24703 9.83013 7.77898 10.6275 8.57574 11.4243L9.15147 12L4.57964 16.5718L4.57655 16.5749L4.57577 16.5757L5.4243 17.4242L5.42688 17.4216L10.0368 12.8117L12.6159 14.9609L13.3841 14.0391L10.8888 11.9597L12.4243 10.4243C13.2598 9.58875 13.7968 8.49969 14.1225 7.65289C14.2818 7.23863 14.395 6.87072 14.4696 6.6H16V5.4H10.6V4H9.4V5.4ZM17.4405 10L21.553 19.7672H20.2509L19.1279 17.1H14.8721L13.7491 19.7672H12.447L16.5595 10H17.4405ZM15.3773 15.9H18.6227L17 12.0462L15.3773 15.9Z\",fill:\"currentColor\"})})}));Zs.displayName=\"ForwardRef(TranslateIcon)\";const Us=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"trash\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5 6.5H20M10 6.5V4.5C10 3.94772 10.4477 3.5 11 3.5H14C14.5523 3.5 15 3.94772 15 4.5V6.5M12.5 9V17M15.5 9L15 17M9.5 9L10 17M18.5 6.5L17.571 18.5767C17.5309 19.0977 17.0965 19.5 16.574 19.5H8.42603C7.90349 19.5 7.46905 19.0977 7.42898 18.5767L6.5 6.5H18.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Us.displayName=\"ForwardRef(TrashIcon)\";const Gs=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"trend-upward\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M4.5 18.5L11.5 10.5L13.5 14.5L20.5 6.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M20.5 11V6.5H16\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Gs.displayName=\"ForwardRef(TrendUpwardIcon)\";const Ys=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"triangle-outline\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M20.5 18.5H4.5L12.5 5.5L20.5 18.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Ys.displayName=\"ForwardRef(TriangleOutlineIcon)\";const Xs=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"trolley\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M8 17.5L5.81763 6.26772C5.71013 5.81757 5.30779 5.5 4.84498 5.5H3M8 17.5H17M8 17.5C8.82843 17.5 9.5 18.1716 9.5 19C9.5 19.8284 8.82843 20.5 8 20.5C7.17157 20.5 6.5 19.8284 6.5 19C6.5 18.1716 7.17157 17.5 8 17.5ZM17 17.5C17.8284 17.5 18.5 18.1716 18.5 19C18.5 19.8284 17.8284 20.5 17 20.5C16.1716 20.5 15.5 19.8284 15.5 19C15.5 18.1716 16.1716 17.5 17 17.5ZM7.78357 14.5H17.5L19 7.5H6\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Xs.displayName=\"ForwardRef(TrolleyIcon)\";const Ks=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"truncate\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5 12.5H20M8.5 19.5L12.5 15.5L16.5 19.5M16.5 5.5L12.5 9.5L8.5 5.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Ks.displayName=\"ForwardRef(TruncateIcon)\";const Js=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"twitter\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M18.8738 6.65751C18.1994 5.9447 17.2445 5.5 16.1857 5.5C14.1423 5.5 12.4857 7.15655 12.4857 9.2C12.4857 9.55263 12.535 9.89374 12.6272 10.2168C7.0826 9.56422 4.55703 6.02857 4.55703 6.02857C4.55703 6.02857 4.02846 9.2 6.14274 11.3143C5.08571 11.3143 4.55703 10.7857 4.55703 10.7857C4.55703 10.7857 4.55703 13.4286 7.19989 14.4857C6.67143 15.0143 5.61417 14.4857 5.61417 14.4857C5.97533 15.9303 7.45606 16.8562 8.82133 17.1358C6.67298 19.1676 3.5 18.7143 3.5 18.7143C5.14562 19.771 7.21334 20.3 9.31429 20.3C16.1214 20.3 19.8162 15.6315 19.8848 9.37762C20.8722 8.58943 22 7.08571 22 7.08571C22 7.08571 21.277 7.45458 19.6913 7.98315C21.277 6.92601 21.4714 5.5 21.4714 5.5C21.4714 5.5 20.4135 6.55789 18.8738 6.65751Z\",fill:\"currentColor\"})})}));Js.displayName=\"ForwardRef(TwitterIcon)\";const Qs=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"ulist\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7.10153 17.5001C7.10153 17.8323 6.83221 18.1016 6.5 18.1016C6.16778 18.1016 5.89847 17.8323 5.89847 17.5001C5.89847 17.1678 6.16778 16.8985 6.5 16.8985C6.83221 16.8985 7.10153 17.1678 7.10153 17.5001Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7.10153 7.5C7.10153 7.83221 6.83221 8.10153 6.5 8.10153C6.16778 8.10153 5.89847 7.83221 5.89847 7.5C5.89847 7.16778 6.16778 6.89847 6.5 6.89847C6.83221 6.89847 7.10153 7.16778 7.10153 7.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7.10153 12.5C7.10153 12.8322 6.83221 13.1015 6.5 13.1015C6.16778 13.1015 5.89847 12.8322 5.89847 12.5C5.89847 12.1678 6.16778 11.8985 6.5 11.8985C6.83221 11.8985 7.10153 12.1678 7.10153 12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10 7.5H19M10 17.5H19M10 12.5H19\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Qs.displayName=\"ForwardRef(UlistIcon)\";const el=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"unarchive\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 10.5V18M20.5 7.5V20.5H4.5V7.5L7.5 4.5H17.5L20.5 7.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M4.5 7.5H20.5M16 14L12.5 10.5L9 14\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));el.displayName=\"ForwardRef(UnarchiveIcon)\";const tl=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"underline\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9.52791 7.11407H8.17V14.2582C8.17 16.5817 9.79195 18.2565 12.4927 18.2565C15.1934 18.2565 16.8154 16.5817 16.8154 14.2582V7.11407H15.4574V14.1677C15.4574 15.8122 14.3787 17.0042 12.4927 17.0042C10.6067 17.0042 9.52791 15.8122 9.52791 14.1677V7.11407Z\",fill:\"currentColor\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7 20.5H18\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));tl.displayName=\"ForwardRef(UnderlineIcon)\";const nl=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"undo\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M6 9.5L15 9.5C17.4853 9.5 19.5 11.5147 19.5 14C19.5 16.4853 17.4853 18.5 15 18.5H6\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10 13.5L6 9.5L10 5.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));nl.displayName=\"ForwardRef(UndoIcon)\";const rl=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"unknown\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 13C12.5 11 14 11.5 14 10C14 9.34375 13.5 8.5 12.5 8.5C11.5 8.5 11 9 10.5 9.5M12.5 16V14.5M5.5 5.5H19.5V19.5H5.5V5.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));rl.displayName=\"ForwardRef(UnknownIcon)\";const ol=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"unlink\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M15 13.5L17.5 11C18.281 10.219 18.281 8.78105 17.5 8L17 7.5C16.2189 6.71895 14.781 6.71895 14 7.5L11.5 10M10 11.5L7.5 14C6.71896 14.781 6.71895 16.219 7.5 17L8 17.5C8.78105 18.281 10.2189 18.281 11 17.5L13.5 15M9.5 8V5M8 9.5H5M17 15.5H20M15.5 17V20\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));ol.displayName=\"ForwardRef(UnlinkIcon)\";const il=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"unlock\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9.5 11.5V8.5C9.5 6.5 8 5.5 6.5 5.5C5 5.5 3.5 6.5 3.5 8.5V11.5M7.5 11.5H17.5V19.5H7.5V11.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));il.displayName=\"ForwardRef(UnlockIcon)\";const al=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"unpublish\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5 19.5H20M12.5 16V5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M17.5 11L12.5 16L7.5 11\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));al.displayName=\"ForwardRef(UnpublishIcon)\";const sl=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"upload\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 6.00003V15.5M5.5 15.5H19.5V19.5H5.5V15.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7.5 11L12.5 6.00003L17.5 11\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));sl.displayName=\"ForwardRef(UploadIcon)\";const ll=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"user\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M8 14.5C7 15 5.5 16 5.5 19.5H19.5C19.5 16 18.3416 15.1708 17 14.5C16 14 14 14 14 12.5C14 11 15 10.25 15 8.25C15 6.25 14 5.25 12.5 5.25C11 5.25 10 6.25 10 8.25C10 10.25 11 11 11 12.5C11 14 9 14 8 14.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));ll.displayName=\"ForwardRef(UserIcon)\";const cl=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"users\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M17.5 18.5H21.5C21.5 15 20.8416 14.1708 19.5 13.5C18.5 13 16.5 12.5 16.5 11C16.5 9.5 17.5 9 17.5 7C17.5 5 16.5 4 15 4C13.6628 4 12.723 4.79472 12.5347 6.38415M4.5 20.5C4.5 17 5.5 16 6.5 15.5C7.5 15 9.5 14.5 9.5 13C9.5 11.5 8.5 11 8.5 9C8.5 7 9.5 6 11 6C12.5 6 13.5 7 13.5 9C13.5 11 12.5 11.5 12.5 13C12.5 14.5 14.5 15 15.5 15.5C16.8416 16.1708 17.5 17 17.5 20.5H4.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));cl.displayName=\"ForwardRef(UsersIcon)\";const dl=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"warning-filled\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M14.741 5.12637C13.7357 3.41737 11.2643 3.41737 10.259 5.12637L3.7558 16.1818C2.73624 17.915 3.98595 20.1 5.99683 20.1H19.0032C21.014 20.1 22.2637 17.915 21.2442 16.1818L14.741 5.12637ZM11.9 9V13H13.1V9H11.9ZM13.1 16V14.5H11.9V16H13.1Z\",fill:\"currentColor\"})})}));dl.displayName=\"ForwardRef(WarningFilledIcon)\";const ul=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"warning-outline\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 9V13M12.5 16V14.5M14.2239 5.43058L20.727 16.486C21.5113 17.8192 20.55 19.5 19.0032 19.5H5.99683C4.45 19.5 3.48869 17.8192 4.27297 16.486L10.7761 5.43058C11.5494 4.11596 13.4506 4.11596 14.2239 5.43058Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));ul.displayName=\"ForwardRef(WarningOutlineIcon)\";const hl=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"wrench\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M17.0407 5.14624L17.4649 5.57051C17.6166 5.41887 17.6758 5.19783 17.6202 4.99071C17.5646 4.78359 17.4027 4.62189 17.1955 4.56656L17.0407 5.14624ZM14.4013 7.7856L13.9771 7.36134C13.8288 7.50959 13.7687 7.72447 13.8185 7.92813L14.4013 7.7856ZM12.8778 6.26211L12.4535 5.83784L12.8778 6.26211ZM11.8309 10.6568L12.2552 11.0811C12.4152 10.9211 12.4716 10.6847 12.401 10.4697L11.8309 10.6568ZM5.63925 16.8485L5.21498 16.4242H5.21498L5.63925 16.8485ZM5.63925 19.935L6.06351 19.5108H6.06351L5.63925 19.935ZM8.72581 19.935L9.15007 20.3593L8.72581 19.935ZM15.1184 13.5425L15.2301 12.953C15.0351 12.916 14.8344 12.9779 14.6941 13.1182L15.1184 13.5425ZM18.9718 12.3561L18.5475 11.9318L18.9718 12.3561ZM20.0877 8.19324L20.6674 8.03843C20.612 7.83124 20.4503 7.66934 20.2432 7.61375C20.0361 7.55816 19.815 7.61734 19.6634 7.76898L20.0877 8.19324ZM17.4483 10.8326L17.3058 11.4154C17.5094 11.4652 17.7243 11.4051 17.8726 11.2569L17.4483 10.8326ZM15 10.2339L14.4172 10.3764C14.4704 10.5938 14.6401 10.7635 14.8575 10.8167L15 10.2339ZM16.6164 4.72198L13.9771 7.36134L14.8256 8.20986L17.4649 5.57051L16.6164 4.72198ZM13.3021 6.68637C14.2723 5.71612 15.6467 5.39501 16.8859 5.72593L17.1955 4.56656C15.5595 4.12966 13.7389 4.55245 12.4535 5.83784L13.3021 6.68637ZM12.401 10.4697C11.9779 9.18109 12.2794 7.70907 13.3021 6.68637L12.4535 5.83784C11.0986 7.19284 10.7021 9.14217 11.2608 10.844L12.401 10.4697ZM11.4066 10.2326L5.21498 16.4242L6.06351 17.2727L12.2552 11.0811L11.4066 10.2326ZM5.21498 16.4242C4.12834 17.5109 4.12834 19.2727 5.21498 20.3593L6.06351 19.5108C5.4455 18.8928 5.4455 17.8908 6.06351 17.2727L5.21498 16.4242ZM5.21498 20.3593C6.30163 21.446 8.06343 21.446 9.15007 20.3593L8.30155 19.5108C7.68353 20.1288 6.68153 20.1288 6.06351 19.5108L5.21498 20.3593ZM9.15007 20.3593L15.5426 13.9668L14.6941 13.1182L8.30155 19.5108L9.15007 20.3593ZM18.5475 11.9318C17.6463 12.8331 16.3968 13.1742 15.2301 12.953L15.0066 14.132C16.5466 14.4239 18.2023 13.9741 19.3961 12.7804L18.5475 11.9318ZM19.508 8.34804C19.8389 9.58721 19.5178 10.9616 18.5475 11.9318L19.3961 12.7804C20.6815 11.495 21.1043 9.67445 20.6674 8.03843L19.508 8.34804ZM17.8726 11.2569L20.5119 8.6175L19.6634 7.76898L17.024 10.4083L17.8726 11.2569ZM14.8575 10.8167L17.3058 11.4154L17.5908 10.2498L15.1426 9.65106L14.8575 10.8167ZM13.8185 7.92813L14.4172 10.3764L15.5829 10.0914L14.9841 7.64307L13.8185 7.92813Z\",fill:\"currentColor\"})})}));hl.displayName=\"ForwardRef(WrenchIcon)\";const fl={\"access-denied\":ho,activity:fo,\"add-circle\":po,\"add-comment\":mo,\"add-document\":go,add:vo,\"add-user\":wo,api:yo,archive:bo,\"arrow-down\":xo,\"arrow-left\":Co,\"arrow-right\":ko,\"arrow-top-right\":Lo,\"arrow-up\":Mo,asterisk:So,\"bar-chart\":Ro,basket:Vo,bell:Eo,bill:Ho,\"binary-document\":To,\"block-content\":$o,\"block-element\":Ao,blockquote:No,bold:Io,bolt:Po,book:Fo,bottle:jo,bug:Bo,\"bulb-filled\":Do,\"bulb-outline\":Oo,calendar:zo,case:_o,\"chart-upward\":Wo,\"checkmark-circle\":qo,checkmark:Zo,\"chevron-down\":Uo,\"chevron-left\":Go,\"chevron-right\":Yo,\"chevron-up\":Xo,circle:Ko,clipboard:Jo,\"clipboard-image\":Qo,clock:ei,\"close-circle\":ti,close:ni,\"code-block\":ri,code:oi,cog:ii,collapse:ai,\"color-wheel\":si,comment:li,component:ci,compose:di,confetti:ui,controls:hi,copy:fi,\"credit-card\":pi,crop:mi,cube:gi,dashboard:vi,database:wi,desktop:yi,diamond:bi,document:xi,\"document-pdf\":Ci,\"document-remove\":ki,\"document-sheet\":Li,\"document-text\":Mi,\"document-video\":Si,\"document-word\":Ri,\"document-zip\":Vi,documents:Ei,dot:Hi,\"double-chevron-down\":Ti,\"double-chevron-left\":$i,\"double-chevron-right\":Ai,\"double-chevron-up\":Ni,download:Ii,\"drag-handle\":Pi,drop:Fi,\"earth-americas\":ji,\"earth-globe\":Bi,edit:Di,\"ellipsis-horizontal\":Oi,\"ellipsis-vertical\":zi,empty:_i,enter:Wi,\"enter-right\":qi,envelope:Zi,equal:Ui,\"error-filled\":Gi,\"error-outline\":Yi,expand:Xi,\"eye-closed\":Ki,\"eye-open\":Ji,filter:Qi,folder:ea,generate:ta,groq:na,hash:ra,\"heart-filled\":oa,heart:ia,\"help-circle\":aa,highlight:sa,home:la,\"ice-cream\":ca,image:da,\"image-remove\":ua,images:ha,\"info-filled\":fa,\"info-outline\":pa,\"inline-element\":ma,inline:ga,\"insert-above\":va,\"insert-below\":wa,italic:ya,joystick:ba,json:xa,launch:Ca,leave:ka,lemon:La,link:Ma,\"link-removed\":Sa,list:Ra,lock:Va,\"logo-js\":Ea,\"logo-ts\":Ha,marker:Ta,\"marker-removed\":$a,\"master-detail\":Aa,menu:Na,\"mobile-device\":Ia,moon:Pa,number:Fa,\"ok-hand\":ja,olist:Ba,overage:Da,package:Oa,\"panel-left\":za,\"panel-right\":_a,pause:Wa,\"pin-filled\":qa,pin:Za,\"pin-removed\":Ua,play:Ga,plug:Ya,presentation:Xa,\"progress-50\":Ka,\"progress-75\":Ja,projects:Qa,publish:es,\"read-only\":ts,redo:ns,refresh:rs,\"remove-circle\":os,remove:is,reset:as,restore:ss,retrieve:ls,retry:cs,revert:ds,robot:us,rocket:hs,schema:fs,search:ps,select:ms,share:gs,sort:vs,sparkle:ws,sparkles:ys,spinner:bs,\"split-horizontal\":xs,\"split-vertical\":Cs,square:ks,\"stack-compact\":Ls,stack:Ms,\"star-filled\":Ss,star:Rs,stop:Vs,strikethrough:Es,string:Hs,sun:Ts,sync:$s,\"tablet-device\":As,tag:Ns,tags:Is,task:Ps,terminal:Fs,text:js,\"th-large\":Bs,\"th-list\":Ds,tiers:Os,timeline:zs,\"toggle-arrow-right\":_s,token:Ws,transfer:qs,translate:Zs,trash:Us,\"trend-upward\":Gs,\"triangle-outline\":Ys,trolley:Xs,truncate:Ks,twitter:Js,ulist:Qs,unarchive:el,underline:tl,undo:nl,unknown:rl,unlink:ol,unlock:il,unpublish:al,upload:sl,user:ll,users:cl,\"warning-filled\":dl,\"warning-outline\":ul,wrench:hl};var pl,ml,gl,vl,wl,yl,bl,xl,Cl,kl;function Ll(){if(vl)return gl;vl=1,gl=t;var e=t.prototype;function t(e,t,n){this.property=e,this.normal=t,n&&(this.space=n)}return e.space=null,e.normal={},e.property={},gl}function Ml(){return xl?bl:(xl=1,bl=function(e){return e.toLowerCase()})}function Sl(){if(kl)return Cl;kl=1,Cl=t;var e=t.prototype;function t(e,t){this.property=e,this.attribute=t}return e.space=null,e.attribute=null,e.property=null,e.boolean=!1,e.booleanish=!1,e.overloadedBoolean=!1,e.number=!1,e.commaSeparated=!1,e.spaceSeparated=!1,e.commaOrSpaceSeparated=!1,e.mustUseProperty=!1,e.defined=!1,Cl}(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const{symbol:r,...o}=t,i=fl[r];return i?/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(i,{...o,ref:n}):null})).displayName=\"ForwardRef(Icon)\";var Rl,Vl,El,Hl,Tl,$l,Al,Nl,Il,Pl,Fl,jl,Bl,Dl,Ol,zl,_l,Wl,ql,Zl,Ul,Gl,Yl,Xl,Kl,Jl={};function Ql(){if(Rl)return Jl;Rl=1;var e=0;function t(){return Math.pow(2,++e)}return Jl.boolean=t(),Jl.booleanish=t(),Jl.overloadedBoolean=t(),Jl.number=t(),Jl.spaceSeparated=t(),Jl.commaSeparated=t(),Jl.commaOrSpaceSeparated=t(),Jl}function ec(){if(El)return Vl;El=1;var e=Sl(),t=Ql();Vl=o,o.prototype=new e,o.prototype.defined=!0;var n=[\"boolean\",\"booleanish\",\"overloadedBoolean\",\"number\",\"commaSeparated\",\"spaceSeparated\",\"commaOrSpaceSeparated\"],r=n.length;function o(o,a,s,l){var c,d=-1;for(i(this,\"space\",l),e.call(this,o,a);++d<r;)i(this,c=n[d],(s&t[c])===t[c])}function i(e,t,n){n&&(e[t]=n)}return Vl}function tc(){if(Tl)return Hl;Tl=1;var e=Ml(),t=Ll(),n=ec();return Hl=function(r){var o,i,a=r.space,s=r.mustUseProperty||[],l=r.attributes||{},c=r.properties,d=r.transform,u={},h={};for(o in c)i=new n(o,d(l,o),c[o],a),-1!==s.indexOf(o)&&(i.mustUseProperty=!0),u[o]=i,h[e(o)]=o,h[e(i.attribute)]=o;return new t(u,h,a)}}function nc(){if(Bl)return jl;Bl=1;var e=Fl?Pl:(Fl=1,Pl=function(e,t){return t in e?e[t]:t});return jl=function(t,n){return e(t,n.toLowerCase())}}var rc,oc,ic,ac,sc,lc,cc,dc,uc={},hc={};function fc(){if(ac)return ic;ac=1;var e=function(){if(Yl)return Gl;Yl=1;var e=Ml(),t=ec(),n=Sl(),r=\"data\";Gl=function(c,d){var u=e(d),h=d,f=n;return u in c.normal?c.property[c.normal[u]]:(u.length>4&&u.slice(0,4)===r&&o.test(d)&&(\"-\"===d.charAt(4)?h=function(e){var t=e.slice(5).replace(i,l);return r+t.charAt(0).toUpperCase()+t.slice(1)}(d):d=function(e){var t=e.slice(4);return i.test(t)?e:(\"-\"!==(t=t.replace(a,s)).charAt(0)&&(t=\"-\"+t),r+t)}(d),f=t),new f(h,d))};var o=/^data[-\\w.:]+$/i,i=/-[a-z]/g,a=/[A-Z]/g;function s(e){return\"-\"+e.toLowerCase()}function l(e){return e.charAt(1).toUpperCase()}return Gl}(),t=Ml(),n=function(){if(Kl)return Xl;Kl=1,Xl=function(t,n){for(var r,o,i,a=t||\"\",s=n||\"div\",l={},c=0;c<a.length;)e.lastIndex=c,i=e.exec(a),(r=a.slice(c,i?i.index:a.length))&&(o?\"#\"===o?l.id=r:l.className?l.className.push(r):l.className=[r]:s=r,c+=r.length),i&&(o=i[0],c++);return{type:\"element\",tagName:s,properties:l,children:[]}};var e=/[#.]/g;return Xl}(),r=function(){if(rc)return uc;rc=1,uc.parse=function(t){var r=String(t||e).trim();return r===e?[]:r.split(n)},uc.stringify=function(e){return e.join(t).trim()};var e=\"\",t=\" \",n=/[ \\t\\n\\r\\f]+/g;return uc}().parse,o=function(){if(oc)return hc;oc=1,hc.parse=function(t){for(var r,o=[],i=String(t||n),a=i.indexOf(e),s=0,l=!1;!l;)-1===a&&(a=i.length,l=!0),((r=i.slice(s,a).trim())||!l)&&o.push(r),s=a+1,a=i.indexOf(e,s);return o},hc.stringify=function(r,o){var i=o||{},a=!1===i.padLeft?n:t,s=i.padRight?t:n;return r[r.length-1]===n&&(r=r.concat(n)),r.join(s+e+a).trim()};var e=\",\",t=\" \",n=\"\";return hc}().parse;ic=function(t,l,c){var d=c?function(e){for(var t,n=e.length,r=-1,o={};++r<n;)o[(t=e[r]).toLowerCase()]=t;return o}(c):null;return function(e,t){var r,o=n(e,l),s=Array.prototype.slice.call(arguments,2),c=o.tagName.toLowerCase();if(o.tagName=d&&i.call(d,c)?d[c]:c,t&&function(e,t){return\"string\"==typeof e||\"length\"in e||function(e,t){var n=t.type;return!(\"input\"===e||!n||\"string\"!=typeof n)&&(\"object\"==typeof t.children&&\"length\"in t.children||(n=n.toLowerCase(),\"button\"===e?\"menu\"!==n&&\"submit\"!==n&&\"reset\"!==n&&\"button\"!==n:\"value\"in t))}(t.tagName,e)}(t,o)&&(s.unshift(t),t=null),t)for(r in t)u(o.properties,r,t[r]);return a(o.children,s),\"template\"===o.tagName&&(o.content={type:\"root\",children:o.children},o.children=[]),o};function u(n,i,a){var l,c,d;null==a||a!=a||(c=(l=e(t,i)).property,\"string\"==typeof(d=a)&&(l.spaceSeparated?d=r(d):l.commaSeparated?d=o(d):l.commaOrSpaceSeparated&&(d=r(o(d).join(\" \")))),\"style\"===c&&\"string\"!=typeof a&&(d=function(e){var t,n=[];for(t in e)n.push([t,e[t]].join(\": \"));return n.join(\"; \")}(d)),\"className\"===c&&n.className&&(d=n.className.concat(d)),n[c]=function(e,t,n){var r,o,i;if(\"object\"!=typeof n||!(\"length\"in n))return s(e,t,n);for(o=n.length,r=-1,i=[];++r<o;)i[r]=s(e,t,n[r]);return i}(l,c,d))}};var i={}.hasOwnProperty;function a(e,t){var n,r;if(\"string\"!=typeof t&&\"number\"!=typeof t)if(\"object\"==typeof t&&\"length\"in t)for(n=-1,r=t.length;++n<r;)a(e,t[n]);else{if(\"object\"!=typeof t||!(\"type\"in t))throw new Error(\"Expected node, nodes, or string, got `\"+t+\"`\");e.push(t)}else e.push({type:\"text\",value:String(t)})}function s(e,n,r){var o=r;return e.number||e.positiveNumber?!isNaN(o)&&\"\"!==o&&(o=Number(o)):(e.boolean||e.overloadedBoolean)&&\"string\"==typeof o&&(\"\"===o||t(r)===t(n))&&(o=!0),o}return ic}var pc,mc,gc,vc,wc,yc,bc,xc,Cc={AElig:\"Æ\",AMP:\"&\",Aacute:\"Á\",Acirc:\"Â\",Agrave:\"À\",Aring:\"Å\",Atilde:\"Ã\",Auml:\"Ä\",COPY:\"©\",Ccedil:\"Ç\",ETH:\"Ð\",Eacute:\"É\",Ecirc:\"Ê\",Egrave:\"È\",Euml:\"Ë\",GT:\">\",Iacute:\"Í\",Icirc:\"Î\",Igrave:\"Ì\",Iuml:\"Ï\",LT:\"<\",Ntilde:\"Ñ\",Oacute:\"Ó\",Ocirc:\"Ô\",Ograve:\"Ò\",Oslash:\"Ø\",Otilde:\"Õ\",Ouml:\"Ö\",QUOT:'\"',REG:\"®\",THORN:\"Þ\",Uacute:\"Ú\",Ucirc:\"Û\",Ugrave:\"Ù\",Uuml:\"Ü\",Yacute:\"Ý\",aacute:\"á\",acirc:\"â\",acute:\"´\",aelig:\"æ\",agrave:\"à\",amp:\"&\",aring:\"å\",atilde:\"ã\",auml:\"ä\",brvbar:\"¦\",ccedil:\"ç\",cedil:\"¸\",cent:\"¢\",copy:\"©\",curren:\"¤\",deg:\"°\",divide:\"÷\",eacute:\"é\",ecirc:\"ê\",egrave:\"è\",eth:\"ð\",euml:\"ë\",frac12:\"½\",frac14:\"¼\",frac34:\"¾\",gt:\">\",iacute:\"í\",icirc:\"î\",iexcl:\"¡\",igrave:\"ì\",iquest:\"¿\",iuml:\"ï\",laquo:\"«\",lt:\"<\",macr:\"¯\",micro:\"µ\",middot:\"·\",nbsp:\" \",not:\"¬\",ntilde:\"ñ\",oacute:\"ó\",ocirc:\"ô\",ograve:\"ò\",ordf:\"ª\",ordm:\"º\",oslash:\"ø\",otilde:\"õ\",ouml:\"ö\",para:\"¶\",plusmn:\"±\",pound:\"£\",quot:'\"',raquo:\"»\",reg:\"®\",sect:\"§\",shy:\"­\",sup1:\"¹\",sup2:\"²\",sup3:\"³\",szlig:\"ß\",thorn:\"þ\",times:\"×\",uacute:\"ú\",ucirc:\"û\",ugrave:\"ù\",uml:\"¨\",uuml:\"ü\",yacute:\"ý\",yen:\"¥\",yuml:\"ÿ\"},kc={0:\"�\",128:\"€\",130:\"‚\",131:\"ƒ\",132:\"„\",133:\"…\",134:\"†\",135:\"‡\",136:\"ˆ\",137:\"‰\",138:\"Š\",139:\"‹\",140:\"Œ\",142:\"Ž\",145:\"‘\",146:\"’\",147:\"“\",148:\"”\",149:\"•\",150:\"–\",151:\"—\",152:\"˜\",153:\"™\",154:\"š\",155:\"›\",156:\"œ\",158:\"ž\",159:\"Ÿ\"};function Lc(){return mc?pc:(mc=1,pc=function(e){var t=\"string\"==typeof e?e.charCodeAt(0):e;return t>=48&&t<=57})}var Mc,Sc,Rc,Vc,Ec,Hc,Tc,$c,Ac,Nc,Ic,Pc,Fc,jc,Bc,Dc={AEli:\"Æ\",AElig:\"Æ\",AM:\"&\",AMP:\"&\",Aacut:\"Á\",Aacute:\"Á\",Abreve:\"Ă\",Acir:\"Â\",Acirc:\"Â\",Acy:\"А\",Afr:\"𝔄\",Agrav:\"À\",Agrave:\"À\",Alpha:\"Α\",Amacr:\"Ā\",And:\"⩓\",Aogon:\"Ą\",Aopf:\"𝔸\",ApplyFunction:\"⁡\",Arin:\"Å\",Aring:\"Å\",Ascr:\"𝒜\",Assign:\"≔\",Atild:\"Ã\",Atilde:\"Ã\",Aum:\"Ä\",Auml:\"Ä\",Backslash:\"∖\",Barv:\"⫧\",Barwed:\"⌆\",Bcy:\"Б\",Because:\"∵\",Bernoullis:\"ℬ\",Beta:\"Β\",Bfr:\"𝔅\",Bopf:\"𝔹\",Breve:\"˘\",Bscr:\"ℬ\",Bumpeq:\"≎\",CHcy:\"Ч\",COP:\"©\",COPY:\"©\",Cacute:\"Ć\",Cap:\"⋒\",CapitalDifferentialD:\"ⅅ\",Cayleys:\"ℭ\",Ccaron:\"Č\",Ccedi:\"Ç\",Ccedil:\"Ç\",Ccirc:\"Ĉ\",Cconint:\"∰\",Cdot:\"Ċ\",Cedilla:\"¸\",CenterDot:\"·\",Cfr:\"ℭ\",Chi:\"Χ\",CircleDot:\"⊙\",CircleMinus:\"⊖\",CirclePlus:\"⊕\",CircleTimes:\"⊗\",ClockwiseContourIntegral:\"∲\",CloseCurlyDoubleQuote:\"”\",CloseCurlyQuote:\"’\",Colon:\"∷\",Colone:\"⩴\",Congruent:\"≡\",Conint:\"∯\",ContourIntegral:\"∮\",Copf:\"ℂ\",Coproduct:\"∐\",CounterClockwiseContourIntegral:\"∳\",Cross:\"⨯\",Cscr:\"𝒞\",Cup:\"⋓\",CupCap:\"≍\",DD:\"ⅅ\",DDotrahd:\"⤑\",DJcy:\"Ђ\",DScy:\"Ѕ\",DZcy:\"Џ\",Dagger:\"‡\",Darr:\"↡\",Dashv:\"⫤\",Dcaron:\"Ď\",Dcy:\"Д\",Del:\"∇\",Delta:\"Δ\",Dfr:\"𝔇\",DiacriticalAcute:\"´\",DiacriticalDot:\"˙\",DiacriticalDoubleAcute:\"˝\",DiacriticalGrave:\"`\",DiacriticalTilde:\"˜\",Diamond:\"⋄\",DifferentialD:\"ⅆ\",Dopf:\"𝔻\",Dot:\"¨\",DotDot:\"⃜\",DotEqual:\"≐\",DoubleContourIntegral:\"∯\",DoubleDot:\"¨\",DoubleDownArrow:\"⇓\",DoubleLeftArrow:\"⇐\",DoubleLeftRightArrow:\"⇔\",DoubleLeftTee:\"⫤\",DoubleLongLeftArrow:\"⟸\",DoubleLongLeftRightArrow:\"⟺\",DoubleLongRightArrow:\"⟹\",DoubleRightArrow:\"⇒\",DoubleRightTee:\"⊨\",DoubleUpArrow:\"⇑\",DoubleUpDownArrow:\"⇕\",DoubleVerticalBar:\"∥\",DownArrow:\"↓\",DownArrowBar:\"⤓\",DownArrowUpArrow:\"⇵\",DownBreve:\"̑\",DownLeftRightVector:\"⥐\",DownLeftTeeVector:\"⥞\",DownLeftVector:\"↽\",DownLeftVectorBar:\"⥖\",DownRightTeeVector:\"⥟\",DownRightVector:\"⇁\",DownRightVectorBar:\"⥗\",DownTee:\"⊤\",DownTeeArrow:\"↧\",Downarrow:\"⇓\",Dscr:\"𝒟\",Dstrok:\"Đ\",ENG:\"Ŋ\",ET:\"Ð\",ETH:\"Ð\",Eacut:\"É\",Eacute:\"É\",Ecaron:\"Ě\",Ecir:\"Ê\",Ecirc:\"Ê\",Ecy:\"Э\",Edot:\"Ė\",Efr:\"𝔈\",Egrav:\"È\",Egrave:\"È\",Element:\"∈\",Emacr:\"Ē\",EmptySmallSquare:\"◻\",EmptyVerySmallSquare:\"▫\",Eogon:\"Ę\",Eopf:\"𝔼\",Epsilon:\"Ε\",Equal:\"⩵\",EqualTilde:\"≂\",Equilibrium:\"⇌\",Escr:\"ℰ\",Esim:\"⩳\",Eta:\"Η\",Eum:\"Ë\",Euml:\"Ë\",Exists:\"∃\",ExponentialE:\"ⅇ\",Fcy:\"Ф\",Ffr:\"𝔉\",FilledSmallSquare:\"◼\",FilledVerySmallSquare:\"▪\",Fopf:\"𝔽\",ForAll:\"∀\",Fouriertrf:\"ℱ\",Fscr:\"ℱ\",GJcy:\"Ѓ\",G:\">\",GT:\">\",Gamma:\"Γ\",Gammad:\"Ϝ\",Gbreve:\"Ğ\",Gcedil:\"Ģ\",Gcirc:\"Ĝ\",Gcy:\"Г\",Gdot:\"Ġ\",Gfr:\"𝔊\",Gg:\"⋙\",Gopf:\"𝔾\",GreaterEqual:\"≥\",GreaterEqualLess:\"⋛\",GreaterFullEqual:\"≧\",GreaterGreater:\"⪢\",GreaterLess:\"≷\",GreaterSlantEqual:\"⩾\",GreaterTilde:\"≳\",Gscr:\"𝒢\",Gt:\"≫\",HARDcy:\"Ъ\",Hacek:\"ˇ\",Hat:\"^\",Hcirc:\"Ĥ\",Hfr:\"ℌ\",HilbertSpace:\"ℋ\",Hopf:\"ℍ\",HorizontalLine:\"─\",Hscr:\"ℋ\",Hstrok:\"Ħ\",HumpDownHump:\"≎\",HumpEqual:\"≏\",IEcy:\"Е\",IJlig:\"Ĳ\",IOcy:\"Ё\",Iacut:\"Í\",Iacute:\"Í\",Icir:\"Î\",Icirc:\"Î\",Icy:\"И\",Idot:\"İ\",Ifr:\"ℑ\",Igrav:\"Ì\",Igrave:\"Ì\",Im:\"ℑ\",Imacr:\"Ī\",ImaginaryI:\"ⅈ\",Implies:\"⇒\",Int:\"∬\",Integral:\"∫\",Intersection:\"⋂\",InvisibleComma:\"⁣\",InvisibleTimes:\"⁢\",Iogon:\"Į\",Iopf:\"𝕀\",Iota:\"Ι\",Iscr:\"ℐ\",Itilde:\"Ĩ\",Iukcy:\"І\",Ium:\"Ï\",Iuml:\"Ï\",Jcirc:\"Ĵ\",Jcy:\"Й\",Jfr:\"𝔍\",Jopf:\"𝕁\",Jscr:\"𝒥\",Jsercy:\"Ј\",Jukcy:\"Є\",KHcy:\"Х\",KJcy:\"Ќ\",Kappa:\"Κ\",Kcedil:\"Ķ\",Kcy:\"К\",Kfr:\"𝔎\",Kopf:\"𝕂\",Kscr:\"𝒦\",LJcy:\"Љ\",L:\"<\",LT:\"<\",Lacute:\"Ĺ\",Lambda:\"Λ\",Lang:\"⟪\",Laplacetrf:\"ℒ\",Larr:\"↞\",Lcaron:\"Ľ\",Lcedil:\"Ļ\",Lcy:\"Л\",LeftAngleBracket:\"⟨\",LeftArrow:\"←\",LeftArrowBar:\"⇤\",LeftArrowRightArrow:\"⇆\",LeftCeiling:\"⌈\",LeftDoubleBracket:\"⟦\",LeftDownTeeVector:\"⥡\",LeftDownVector:\"⇃\",LeftDownVectorBar:\"⥙\",LeftFloor:\"⌊\",LeftRightArrow:\"↔\",LeftRightVector:\"⥎\",LeftTee:\"⊣\",LeftTeeArrow:\"↤\",LeftTeeVector:\"⥚\",LeftTriangle:\"⊲\",LeftTriangleBar:\"⧏\",LeftTriangleEqual:\"⊴\",LeftUpDownVector:\"⥑\",LeftUpTeeVector:\"⥠\",LeftUpVector:\"↿\",LeftUpVectorBar:\"⥘\",LeftVector:\"↼\",LeftVectorBar:\"⥒\",Leftarrow:\"⇐\",Leftrightarrow:\"⇔\",LessEqualGreater:\"⋚\",LessFullEqual:\"≦\",LessGreater:\"≶\",LessLess:\"⪡\",LessSlantEqual:\"⩽\",LessTilde:\"≲\",Lfr:\"𝔏\",Ll:\"⋘\",Lleftarrow:\"⇚\",Lmidot:\"Ŀ\",LongLeftArrow:\"⟵\",LongLeftRightArrow:\"⟷\",LongRightArrow:\"⟶\",Longleftarrow:\"⟸\",Longleftrightarrow:\"⟺\",Longrightarrow:\"⟹\",Lopf:\"𝕃\",LowerLeftArrow:\"↙\",LowerRightArrow:\"↘\",Lscr:\"ℒ\",Lsh:\"↰\",Lstrok:\"Ł\",Lt:\"≪\",Map:\"⤅\",Mcy:\"М\",MediumSpace:\" \",Mellintrf:\"ℳ\",Mfr:\"𝔐\",MinusPlus:\"∓\",Mopf:\"𝕄\",Mscr:\"ℳ\",Mu:\"Μ\",NJcy:\"Њ\",Nacute:\"Ń\",Ncaron:\"Ň\",Ncedil:\"Ņ\",Ncy:\"Н\",NegativeMediumSpace:\"​\",NegativeThickSpace:\"​\",NegativeThinSpace:\"​\",NegativeVeryThinSpace:\"​\",NestedGreaterGreater:\"≫\",NestedLessLess:\"≪\",NewLine:\"\\n\",Nfr:\"𝔑\",NoBreak:\"⁠\",NonBreakingSpace:\" \",Nopf:\"ℕ\",Not:\"⫬\",NotCongruent:\"≢\",NotCupCap:\"≭\",NotDoubleVerticalBar:\"∦\",NotElement:\"∉\",NotEqual:\"≠\",NotEqualTilde:\"≂̸\",NotExists:\"∄\",NotGreater:\"≯\",NotGreaterEqual:\"≱\",NotGreaterFullEqual:\"≧̸\",NotGreaterGreater:\"≫̸\",NotGreaterLess:\"≹\",NotGreaterSlantEqual:\"⩾̸\",NotGreaterTilde:\"≵\",NotHumpDownHump:\"≎̸\",NotHumpEqual:\"≏̸\",NotLeftTriangle:\"⋪\",NotLeftTriangleBar:\"⧏̸\",NotLeftTriangleEqual:\"⋬\",NotLess:\"≮\",NotLessEqual:\"≰\",NotLessGreater:\"≸\",NotLessLess:\"≪̸\",NotLessSlantEqual:\"⩽̸\",NotLessTilde:\"≴\",NotNestedGreaterGreater:\"⪢̸\",NotNestedLessLess:\"⪡̸\",NotPrecedes:\"⊀\",NotPrecedesEqual:\"⪯̸\",NotPrecedesSlantEqual:\"⋠\",NotReverseElement:\"∌\",NotRightTriangle:\"⋫\",NotRightTriangleBar:\"⧐̸\",NotRightTriangleEqual:\"⋭\",NotSquareSubset:\"⊏̸\",NotSquareSubsetEqual:\"⋢\",NotSquareSuperset:\"⊐̸\",NotSquareSupersetEqual:\"⋣\",NotSubset:\"⊂⃒\",NotSubsetEqual:\"⊈\",NotSucceeds:\"⊁\",NotSucceedsEqual:\"⪰̸\",NotSucceedsSlantEqual:\"⋡\",NotSucceedsTilde:\"≿̸\",NotSuperset:\"⊃⃒\",NotSupersetEqual:\"⊉\",NotTilde:\"≁\",NotTildeEqual:\"≄\",NotTildeFullEqual:\"≇\",NotTildeTilde:\"≉\",NotVerticalBar:\"∤\",Nscr:\"𝒩\",Ntild:\"Ñ\",Ntilde:\"Ñ\",Nu:\"Ν\",OElig:\"Œ\",Oacut:\"Ó\",Oacute:\"Ó\",Ocir:\"Ô\",Ocirc:\"Ô\",Ocy:\"О\",Odblac:\"Ő\",Ofr:\"𝔒\",Ograv:\"Ò\",Ograve:\"Ò\",Omacr:\"Ō\",Omega:\"Ω\",Omicron:\"Ο\",Oopf:\"𝕆\",OpenCurlyDoubleQuote:\"“\",OpenCurlyQuote:\"‘\",Or:\"⩔\",Oscr:\"𝒪\",Oslas:\"Ø\",Oslash:\"Ø\",Otild:\"Õ\",Otilde:\"Õ\",Otimes:\"⨷\",Oum:\"Ö\",Ouml:\"Ö\",OverBar:\"‾\",OverBrace:\"⏞\",OverBracket:\"⎴\",OverParenthesis:\"⏜\",PartialD:\"∂\",Pcy:\"П\",Pfr:\"𝔓\",Phi:\"Φ\",Pi:\"Π\",PlusMinus:\"±\",Poincareplane:\"ℌ\",Popf:\"ℙ\",Pr:\"⪻\",Precedes:\"≺\",PrecedesEqual:\"⪯\",PrecedesSlantEqual:\"≼\",PrecedesTilde:\"≾\",Prime:\"″\",Product:\"∏\",Proportion:\"∷\",Proportional:\"∝\",Pscr:\"𝒫\",Psi:\"Ψ\",QUO:'\"',QUOT:'\"',Qfr:\"𝔔\",Qopf:\"ℚ\",Qscr:\"𝒬\",RBarr:\"⤐\",RE:\"®\",REG:\"®\",Racute:\"Ŕ\",Rang:\"⟫\",Rarr:\"↠\",Rarrtl:\"⤖\",Rcaron:\"Ř\",Rcedil:\"Ŗ\",Rcy:\"Р\",Re:\"ℜ\",ReverseElement:\"∋\",ReverseEquilibrium:\"⇋\",ReverseUpEquilibrium:\"⥯\",Rfr:\"ℜ\",Rho:\"Ρ\",RightAngleBracket:\"⟩\",RightArrow:\"→\",RightArrowBar:\"⇥\",RightArrowLeftArrow:\"⇄\",RightCeiling:\"⌉\",RightDoubleBracket:\"⟧\",RightDownTeeVector:\"⥝\",RightDownVector:\"⇂\",RightDownVectorBar:\"⥕\",RightFloor:\"⌋\",RightTee:\"⊢\",RightTeeArrow:\"↦\",RightTeeVector:\"⥛\",RightTriangle:\"⊳\",RightTriangleBar:\"⧐\",RightTriangleEqual:\"⊵\",RightUpDownVector:\"⥏\",RightUpTeeVector:\"⥜\",RightUpVector:\"↾\",RightUpVectorBar:\"⥔\",RightVector:\"⇀\",RightVectorBar:\"⥓\",Rightarrow:\"⇒\",Ropf:\"ℝ\",RoundImplies:\"⥰\",Rrightarrow:\"⇛\",Rscr:\"ℛ\",Rsh:\"↱\",RuleDelayed:\"⧴\",SHCHcy:\"Щ\",SHcy:\"Ш\",SOFTcy:\"Ь\",Sacute:\"Ś\",Sc:\"⪼\",Scaron:\"Š\",Scedil:\"Ş\",Scirc:\"Ŝ\",Scy:\"С\",Sfr:\"𝔖\",ShortDownArrow:\"↓\",ShortLeftArrow:\"←\",ShortRightArrow:\"→\",ShortUpArrow:\"↑\",Sigma:\"Σ\",SmallCircle:\"∘\",Sopf:\"𝕊\",Sqrt:\"√\",Square:\"□\",SquareIntersection:\"⊓\",SquareSubset:\"⊏\",SquareSubsetEqual:\"⊑\",SquareSuperset:\"⊐\",SquareSupersetEqual:\"⊒\",SquareUnion:\"⊔\",Sscr:\"𝒮\",Star:\"⋆\",Sub:\"⋐\",Subset:\"⋐\",SubsetEqual:\"⊆\",Succeeds:\"≻\",SucceedsEqual:\"⪰\",SucceedsSlantEqual:\"≽\",SucceedsTilde:\"≿\",SuchThat:\"∋\",Sum:\"∑\",Sup:\"⋑\",Superset:\"⊃\",SupersetEqual:\"⊇\",Supset:\"⋑\",THOR:\"Þ\",THORN:\"Þ\",TRADE:\"™\",TSHcy:\"Ћ\",TScy:\"Ц\",Tab:\"\\t\",Tau:\"Τ\",Tcaron:\"Ť\",Tcedil:\"Ţ\",Tcy:\"Т\",Tfr:\"𝔗\",Therefore:\"∴\",Theta:\"Θ\",ThickSpace:\"  \",ThinSpace:\" \",Tilde:\"∼\",TildeEqual:\"≃\",TildeFullEqual:\"≅\",TildeTilde:\"≈\",Topf:\"𝕋\",TripleDot:\"⃛\",Tscr:\"𝒯\",Tstrok:\"Ŧ\",Uacut:\"Ú\",Uacute:\"Ú\",Uarr:\"↟\",Uarrocir:\"⥉\",Ubrcy:\"Ў\",Ubreve:\"Ŭ\",Ucir:\"Û\",Ucirc:\"Û\",Ucy:\"У\",Udblac:\"Ű\",Ufr:\"𝔘\",Ugrav:\"Ù\",Ugrave:\"Ù\",Umacr:\"Ū\",UnderBar:\"_\",UnderBrace:\"⏟\",UnderBracket:\"⎵\",UnderParenthesis:\"⏝\",Union:\"⋃\",UnionPlus:\"⊎\",Uogon:\"Ų\",Uopf:\"𝕌\",UpArrow:\"↑\",UpArrowBar:\"⤒\",UpArrowDownArrow:\"⇅\",UpDownArrow:\"↕\",UpEquilibrium:\"⥮\",UpTee:\"⊥\",UpTeeArrow:\"↥\",Uparrow:\"⇑\",Updownarrow:\"⇕\",UpperLeftArrow:\"↖\",UpperRightArrow:\"↗\",Upsi:\"ϒ\",Upsilon:\"Υ\",Uring:\"Ů\",Uscr:\"𝒰\",Utilde:\"Ũ\",Uum:\"Ü\",Uuml:\"Ü\",VDash:\"⊫\",Vbar:\"⫫\",Vcy:\"В\",Vdash:\"⊩\",Vdashl:\"⫦\",Vee:\"⋁\",Verbar:\"‖\",Vert:\"‖\",VerticalBar:\"∣\",VerticalLine:\"|\",VerticalSeparator:\"❘\",VerticalTilde:\"≀\",VeryThinSpace:\" \",Vfr:\"𝔙\",Vopf:\"𝕍\",Vscr:\"𝒱\",Vvdash:\"⊪\",Wcirc:\"Ŵ\",Wedge:\"⋀\",Wfr:\"𝔚\",Wopf:\"𝕎\",Wscr:\"𝒲\",Xfr:\"𝔛\",Xi:\"Ξ\",Xopf:\"𝕏\",Xscr:\"𝒳\",YAcy:\"Я\",YIcy:\"Ї\",YUcy:\"Ю\",Yacut:\"Ý\",Yacute:\"Ý\",Ycirc:\"Ŷ\",Ycy:\"Ы\",Yfr:\"𝔜\",Yopf:\"𝕐\",Yscr:\"𝒴\",Yuml:\"Ÿ\",ZHcy:\"Ж\",Zacute:\"Ź\",Zcaron:\"Ž\",Zcy:\"З\",Zdot:\"Ż\",ZeroWidthSpace:\"​\",Zeta:\"Ζ\",Zfr:\"ℨ\",Zopf:\"ℤ\",Zscr:\"𝒵\",aacut:\"á\",aacute:\"á\",abreve:\"ă\",ac:\"∾\",acE:\"∾̳\",acd:\"∿\",acir:\"â\",acirc:\"â\",acut:\"´\",acute:\"´\",acy:\"а\",aeli:\"æ\",aelig:\"æ\",af:\"⁡\",afr:\"𝔞\",agrav:\"à\",agrave:\"à\",alefsym:\"ℵ\",aleph:\"ℵ\",alpha:\"α\",amacr:\"ā\",amalg:\"⨿\",am:\"&\",amp:\"&\",and:\"∧\",andand:\"⩕\",andd:\"⩜\",andslope:\"⩘\",andv:\"⩚\",ang:\"∠\",ange:\"⦤\",angle:\"∠\",angmsd:\"∡\",angmsdaa:\"⦨\",angmsdab:\"⦩\",angmsdac:\"⦪\",angmsdad:\"⦫\",angmsdae:\"⦬\",angmsdaf:\"⦭\",angmsdag:\"⦮\",angmsdah:\"⦯\",angrt:\"∟\",angrtvb:\"⊾\",angrtvbd:\"⦝\",angsph:\"∢\",angst:\"Å\",angzarr:\"⍼\",aogon:\"ą\",aopf:\"𝕒\",ap:\"≈\",apE:\"⩰\",apacir:\"⩯\",ape:\"≊\",apid:\"≋\",apos:\"'\",approx:\"≈\",approxeq:\"≊\",arin:\"å\",aring:\"å\",ascr:\"𝒶\",ast:\"*\",asymp:\"≈\",asympeq:\"≍\",atild:\"ã\",atilde:\"ã\",aum:\"ä\",auml:\"ä\",awconint:\"∳\",awint:\"⨑\",bNot:\"⫭\",backcong:\"≌\",backepsilon:\"϶\",backprime:\"‵\",backsim:\"∽\",backsimeq:\"⋍\",barvee:\"⊽\",barwed:\"⌅\",barwedge:\"⌅\",bbrk:\"⎵\",bbrktbrk:\"⎶\",bcong:\"≌\",bcy:\"б\",bdquo:\"„\",becaus:\"∵\",because:\"∵\",bemptyv:\"⦰\",bepsi:\"϶\",bernou:\"ℬ\",beta:\"β\",beth:\"ℶ\",between:\"≬\",bfr:\"𝔟\",bigcap:\"⋂\",bigcirc:\"◯\",bigcup:\"⋃\",bigodot:\"⨀\",bigoplus:\"⨁\",bigotimes:\"⨂\",bigsqcup:\"⨆\",bigstar:\"★\",bigtriangledown:\"▽\",bigtriangleup:\"△\",biguplus:\"⨄\",bigvee:\"⋁\",bigwedge:\"⋀\",bkarow:\"⤍\",blacklozenge:\"⧫\",blacksquare:\"▪\",blacktriangle:\"▴\",blacktriangledown:\"▾\",blacktriangleleft:\"◂\",blacktriangleright:\"▸\",blank:\"␣\",blk12:\"▒\",blk14:\"░\",blk34:\"▓\",block:\"█\",bne:\"=⃥\",bnequiv:\"≡⃥\",bnot:\"⌐\",bopf:\"𝕓\",bot:\"⊥\",bottom:\"⊥\",bowtie:\"⋈\",boxDL:\"╗\",boxDR:\"╔\",boxDl:\"╖\",boxDr:\"╓\",boxH:\"═\",boxHD:\"╦\",boxHU:\"╩\",boxHd:\"╤\",boxHu:\"╧\",boxUL:\"╝\",boxUR:\"╚\",boxUl:\"╜\",boxUr:\"╙\",boxV:\"║\",boxVH:\"╬\",boxVL:\"╣\",boxVR:\"╠\",boxVh:\"╫\",boxVl:\"╢\",boxVr:\"╟\",boxbox:\"⧉\",boxdL:\"╕\",boxdR:\"╒\",boxdl:\"┐\",boxdr:\"┌\",boxh:\"─\",boxhD:\"╥\",boxhU:\"╨\",boxhd:\"┬\",boxhu:\"┴\",boxminus:\"⊟\",boxplus:\"⊞\",boxtimes:\"⊠\",boxuL:\"╛\",boxuR:\"╘\",boxul:\"┘\",boxur:\"└\",boxv:\"│\",boxvH:\"╪\",boxvL:\"╡\",boxvR:\"╞\",boxvh:\"┼\",boxvl:\"┤\",boxvr:\"├\",bprime:\"‵\",breve:\"˘\",brvba:\"¦\",brvbar:\"¦\",bscr:\"𝒷\",bsemi:\"⁏\",bsim:\"∽\",bsime:\"⋍\",bsol:\"\\\\\",bsolb:\"⧅\",bsolhsub:\"⟈\",bull:\"•\",bullet:\"•\",bump:\"≎\",bumpE:\"⪮\",bumpe:\"≏\",bumpeq:\"≏\",cacute:\"ć\",cap:\"∩\",capand:\"⩄\",capbrcup:\"⩉\",capcap:\"⩋\",capcup:\"⩇\",capdot:\"⩀\",caps:\"∩︀\",caret:\"⁁\",caron:\"ˇ\",ccaps:\"⩍\",ccaron:\"č\",ccedi:\"ç\",ccedil:\"ç\",ccirc:\"ĉ\",ccups:\"⩌\",ccupssm:\"⩐\",cdot:\"ċ\",cedi:\"¸\",cedil:\"¸\",cemptyv:\"⦲\",cen:\"¢\",cent:\"¢\",centerdot:\"·\",cfr:\"𝔠\",chcy:\"ч\",check:\"✓\",checkmark:\"✓\",chi:\"χ\",cir:\"○\",cirE:\"⧃\",circ:\"ˆ\",circeq:\"≗\",circlearrowleft:\"↺\",circlearrowright:\"↻\",circledR:\"®\",circledS:\"Ⓢ\",circledast:\"⊛\",circledcirc:\"⊚\",circleddash:\"⊝\",cire:\"≗\",cirfnint:\"⨐\",cirmid:\"⫯\",cirscir:\"⧂\",clubs:\"♣\",clubsuit:\"♣\",colon:\":\",colone:\"≔\",coloneq:\"≔\",comma:\",\",commat:\"@\",comp:\"∁\",compfn:\"∘\",complement:\"∁\",complexes:\"ℂ\",cong:\"≅\",congdot:\"⩭\",conint:\"∮\",copf:\"𝕔\",coprod:\"∐\",cop:\"©\",copy:\"©\",copysr:\"℗\",crarr:\"↵\",cross:\"✗\",cscr:\"𝒸\",csub:\"⫏\",csube:\"⫑\",csup:\"⫐\",csupe:\"⫒\",ctdot:\"⋯\",cudarrl:\"⤸\",cudarrr:\"⤵\",cuepr:\"⋞\",cuesc:\"⋟\",cularr:\"↶\",cularrp:\"⤽\",cup:\"∪\",cupbrcap:\"⩈\",cupcap:\"⩆\",cupcup:\"⩊\",cupdot:\"⊍\",cupor:\"⩅\",cups:\"∪︀\",curarr:\"↷\",curarrm:\"⤼\",curlyeqprec:\"⋞\",curlyeqsucc:\"⋟\",curlyvee:\"⋎\",curlywedge:\"⋏\",curre:\"¤\",curren:\"¤\",curvearrowleft:\"↶\",curvearrowright:\"↷\",cuvee:\"⋎\",cuwed:\"⋏\",cwconint:\"∲\",cwint:\"∱\",cylcty:\"⌭\",dArr:\"⇓\",dHar:\"⥥\",dagger:\"†\",daleth:\"ℸ\",darr:\"↓\",dash:\"‐\",dashv:\"⊣\",dbkarow:\"⤏\",dblac:\"˝\",dcaron:\"ď\",dcy:\"д\",dd:\"ⅆ\",ddagger:\"‡\",ddarr:\"⇊\",ddotseq:\"⩷\",de:\"°\",deg:\"°\",delta:\"δ\",demptyv:\"⦱\",dfisht:\"⥿\",dfr:\"𝔡\",dharl:\"⇃\",dharr:\"⇂\",diam:\"⋄\",diamond:\"⋄\",diamondsuit:\"♦\",diams:\"♦\",die:\"¨\",digamma:\"ϝ\",disin:\"⋲\",div:\"÷\",divid:\"÷\",divide:\"÷\",divideontimes:\"⋇\",divonx:\"⋇\",djcy:\"ђ\",dlcorn:\"⌞\",dlcrop:\"⌍\",dollar:\"$\",dopf:\"𝕕\",dot:\"˙\",doteq:\"≐\",doteqdot:\"≑\",dotminus:\"∸\",dotplus:\"∔\",dotsquare:\"⊡\",doublebarwedge:\"⌆\",downarrow:\"↓\",downdownarrows:\"⇊\",downharpoonleft:\"⇃\",downharpoonright:\"⇂\",drbkarow:\"⤐\",drcorn:\"⌟\",drcrop:\"⌌\",dscr:\"𝒹\",dscy:\"ѕ\",dsol:\"⧶\",dstrok:\"đ\",dtdot:\"⋱\",dtri:\"▿\",dtrif:\"▾\",duarr:\"⇵\",duhar:\"⥯\",dwangle:\"⦦\",dzcy:\"џ\",dzigrarr:\"⟿\",eDDot:\"⩷\",eDot:\"≑\",eacut:\"é\",eacute:\"é\",easter:\"⩮\",ecaron:\"ě\",ecir:\"ê\",ecirc:\"ê\",ecolon:\"≕\",ecy:\"э\",edot:\"ė\",ee:\"ⅇ\",efDot:\"≒\",efr:\"𝔢\",eg:\"⪚\",egrav:\"è\",egrave:\"è\",egs:\"⪖\",egsdot:\"⪘\",el:\"⪙\",elinters:\"⏧\",ell:\"ℓ\",els:\"⪕\",elsdot:\"⪗\",emacr:\"ē\",empty:\"∅\",emptyset:\"∅\",emptyv:\"∅\",emsp13:\" \",emsp14:\" \",emsp:\" \",eng:\"ŋ\",ensp:\" \",eogon:\"ę\",eopf:\"𝕖\",epar:\"⋕\",eparsl:\"⧣\",eplus:\"⩱\",epsi:\"ε\",epsilon:\"ε\",epsiv:\"ϵ\",eqcirc:\"≖\",eqcolon:\"≕\",eqsim:\"≂\",eqslantgtr:\"⪖\",eqslantless:\"⪕\",equals:\"=\",equest:\"≟\",equiv:\"≡\",equivDD:\"⩸\",eqvparsl:\"⧥\",erDot:\"≓\",erarr:\"⥱\",escr:\"ℯ\",esdot:\"≐\",esim:\"≂\",eta:\"η\",et:\"ð\",eth:\"ð\",eum:\"ë\",euml:\"ë\",euro:\"€\",excl:\"!\",exist:\"∃\",expectation:\"ℰ\",exponentiale:\"ⅇ\",fallingdotseq:\"≒\",fcy:\"ф\",female:\"♀\",ffilig:\"ﬃ\",fflig:\"ﬀ\",ffllig:\"ﬄ\",ffr:\"𝔣\",filig:\"ﬁ\",fjlig:\"fj\",flat:\"♭\",fllig:\"ﬂ\",fltns:\"▱\",fnof:\"ƒ\",fopf:\"𝕗\",forall:\"∀\",fork:\"⋔\",forkv:\"⫙\",fpartint:\"⨍\",frac1:\"¼\",frac12:\"½\",frac13:\"⅓\",frac14:\"¼\",frac15:\"⅕\",frac16:\"⅙\",frac18:\"⅛\",frac23:\"⅔\",frac25:\"⅖\",frac3:\"¾\",frac34:\"¾\",frac35:\"⅗\",frac38:\"⅜\",frac45:\"⅘\",frac56:\"⅚\",frac58:\"⅝\",frac78:\"⅞\",frasl:\"⁄\",frown:\"⌢\",fscr:\"𝒻\",gE:\"≧\",gEl:\"⪌\",gacute:\"ǵ\",gamma:\"γ\",gammad:\"ϝ\",gap:\"⪆\",gbreve:\"ğ\",gcirc:\"ĝ\",gcy:\"г\",gdot:\"ġ\",ge:\"≥\",gel:\"⋛\",geq:\"≥\",geqq:\"≧\",geqslant:\"⩾\",ges:\"⩾\",gescc:\"⪩\",gesdot:\"⪀\",gesdoto:\"⪂\",gesdotol:\"⪄\",gesl:\"⋛︀\",gesles:\"⪔\",gfr:\"𝔤\",gg:\"≫\",ggg:\"⋙\",gimel:\"ℷ\",gjcy:\"ѓ\",gl:\"≷\",glE:\"⪒\",gla:\"⪥\",glj:\"⪤\",gnE:\"≩\",gnap:\"⪊\",gnapprox:\"⪊\",gne:\"⪈\",gneq:\"⪈\",gneqq:\"≩\",gnsim:\"⋧\",gopf:\"𝕘\",grave:\"`\",gscr:\"ℊ\",gsim:\"≳\",gsime:\"⪎\",gsiml:\"⪐\",g:\">\",gt:\">\",gtcc:\"⪧\",gtcir:\"⩺\",gtdot:\"⋗\",gtlPar:\"⦕\",gtquest:\"⩼\",gtrapprox:\"⪆\",gtrarr:\"⥸\",gtrdot:\"⋗\",gtreqless:\"⋛\",gtreqqless:\"⪌\",gtrless:\"≷\",gtrsim:\"≳\",gvertneqq:\"≩︀\",gvnE:\"≩︀\",hArr:\"⇔\",hairsp:\" \",half:\"½\",hamilt:\"ℋ\",hardcy:\"ъ\",harr:\"↔\",harrcir:\"⥈\",harrw:\"↭\",hbar:\"ℏ\",hcirc:\"ĥ\",hearts:\"♥\",heartsuit:\"♥\",hellip:\"…\",hercon:\"⊹\",hfr:\"𝔥\",hksearow:\"⤥\",hkswarow:\"⤦\",hoarr:\"⇿\",homtht:\"∻\",hookleftarrow:\"↩\",hookrightarrow:\"↪\",hopf:\"𝕙\",horbar:\"―\",hscr:\"𝒽\",hslash:\"ℏ\",hstrok:\"ħ\",hybull:\"⁃\",hyphen:\"‐\",iacut:\"í\",iacute:\"í\",ic:\"⁣\",icir:\"î\",icirc:\"î\",icy:\"и\",iecy:\"е\",iexc:\"¡\",iexcl:\"¡\",iff:\"⇔\",ifr:\"𝔦\",igrav:\"ì\",igrave:\"ì\",ii:\"ⅈ\",iiiint:\"⨌\",iiint:\"∭\",iinfin:\"⧜\",iiota:\"℩\",ijlig:\"ĳ\",imacr:\"ī\",image:\"ℑ\",imagline:\"ℐ\",imagpart:\"ℑ\",imath:\"ı\",imof:\"⊷\",imped:\"Ƶ\",in:\"∈\",incare:\"℅\",infin:\"∞\",infintie:\"⧝\",inodot:\"ı\",int:\"∫\",intcal:\"⊺\",integers:\"ℤ\",intercal:\"⊺\",intlarhk:\"⨗\",intprod:\"⨼\",iocy:\"ё\",iogon:\"į\",iopf:\"𝕚\",iota:\"ι\",iprod:\"⨼\",iques:\"¿\",iquest:\"¿\",iscr:\"𝒾\",isin:\"∈\",isinE:\"⋹\",isindot:\"⋵\",isins:\"⋴\",isinsv:\"⋳\",isinv:\"∈\",it:\"⁢\",itilde:\"ĩ\",iukcy:\"і\",ium:\"ï\",iuml:\"ï\",jcirc:\"ĵ\",jcy:\"й\",jfr:\"𝔧\",jmath:\"ȷ\",jopf:\"𝕛\",jscr:\"𝒿\",jsercy:\"ј\",jukcy:\"є\",kappa:\"κ\",kappav:\"ϰ\",kcedil:\"ķ\",kcy:\"к\",kfr:\"𝔨\",kgreen:\"ĸ\",khcy:\"х\",kjcy:\"ќ\",kopf:\"𝕜\",kscr:\"𝓀\",lAarr:\"⇚\",lArr:\"⇐\",lAtail:\"⤛\",lBarr:\"⤎\",lE:\"≦\",lEg:\"⪋\",lHar:\"⥢\",lacute:\"ĺ\",laemptyv:\"⦴\",lagran:\"ℒ\",lambda:\"λ\",lang:\"⟨\",langd:\"⦑\",langle:\"⟨\",lap:\"⪅\",laqu:\"«\",laquo:\"«\",larr:\"←\",larrb:\"⇤\",larrbfs:\"⤟\",larrfs:\"⤝\",larrhk:\"↩\",larrlp:\"↫\",larrpl:\"⤹\",larrsim:\"⥳\",larrtl:\"↢\",lat:\"⪫\",latail:\"⤙\",late:\"⪭\",lates:\"⪭︀\",lbarr:\"⤌\",lbbrk:\"❲\",lbrace:\"{\",lbrack:\"[\",lbrke:\"⦋\",lbrksld:\"⦏\",lbrkslu:\"⦍\",lcaron:\"ľ\",lcedil:\"ļ\",lceil:\"⌈\",lcub:\"{\",lcy:\"л\",ldca:\"⤶\",ldquo:\"“\",ldquor:\"„\",ldrdhar:\"⥧\",ldrushar:\"⥋\",ldsh:\"↲\",le:\"≤\",leftarrow:\"←\",leftarrowtail:\"↢\",leftharpoondown:\"↽\",leftharpoonup:\"↼\",leftleftarrows:\"⇇\",leftrightarrow:\"↔\",leftrightarrows:\"⇆\",leftrightharpoons:\"⇋\",leftrightsquigarrow:\"↭\",leftthreetimes:\"⋋\",leg:\"⋚\",leq:\"≤\",leqq:\"≦\",leqslant:\"⩽\",les:\"⩽\",lescc:\"⪨\",lesdot:\"⩿\",lesdoto:\"⪁\",lesdotor:\"⪃\",lesg:\"⋚︀\",lesges:\"⪓\",lessapprox:\"⪅\",lessdot:\"⋖\",lesseqgtr:\"⋚\",lesseqqgtr:\"⪋\",lessgtr:\"≶\",lesssim:\"≲\",lfisht:\"⥼\",lfloor:\"⌊\",lfr:\"𝔩\",lg:\"≶\",lgE:\"⪑\",lhard:\"↽\",lharu:\"↼\",lharul:\"⥪\",lhblk:\"▄\",ljcy:\"љ\",ll:\"≪\",llarr:\"⇇\",llcorner:\"⌞\",llhard:\"⥫\",lltri:\"◺\",lmidot:\"ŀ\",lmoust:\"⎰\",lmoustache:\"⎰\",lnE:\"≨\",lnap:\"⪉\",lnapprox:\"⪉\",lne:\"⪇\",lneq:\"⪇\",lneqq:\"≨\",lnsim:\"⋦\",loang:\"⟬\",loarr:\"⇽\",lobrk:\"⟦\",longleftarrow:\"⟵\",longleftrightarrow:\"⟷\",longmapsto:\"⟼\",longrightarrow:\"⟶\",looparrowleft:\"↫\",looparrowright:\"↬\",lopar:\"⦅\",lopf:\"𝕝\",loplus:\"⨭\",lotimes:\"⨴\",lowast:\"∗\",lowbar:\"_\",loz:\"◊\",lozenge:\"◊\",lozf:\"⧫\",lpar:\"(\",lparlt:\"⦓\",lrarr:\"⇆\",lrcorner:\"⌟\",lrhar:\"⇋\",lrhard:\"⥭\",lrm:\"‎\",lrtri:\"⊿\",lsaquo:\"‹\",lscr:\"𝓁\",lsh:\"↰\",lsim:\"≲\",lsime:\"⪍\",lsimg:\"⪏\",lsqb:\"[\",lsquo:\"‘\",lsquor:\"‚\",lstrok:\"ł\",l:\"<\",lt:\"<\",ltcc:\"⪦\",ltcir:\"⩹\",ltdot:\"⋖\",lthree:\"⋋\",ltimes:\"⋉\",ltlarr:\"⥶\",ltquest:\"⩻\",ltrPar:\"⦖\",ltri:\"◃\",ltrie:\"⊴\",ltrif:\"◂\",lurdshar:\"⥊\",luruhar:\"⥦\",lvertneqq:\"≨︀\",lvnE:\"≨︀\",mDDot:\"∺\",mac:\"¯\",macr:\"¯\",male:\"♂\",malt:\"✠\",maltese:\"✠\",map:\"↦\",mapsto:\"↦\",mapstodown:\"↧\",mapstoleft:\"↤\",mapstoup:\"↥\",marker:\"▮\",mcomma:\"⨩\",mcy:\"м\",mdash:\"—\",measuredangle:\"∡\",mfr:\"𝔪\",mho:\"℧\",micr:\"µ\",micro:\"µ\",mid:\"∣\",midast:\"*\",midcir:\"⫰\",middo:\"·\",middot:\"·\",minus:\"−\",minusb:\"⊟\",minusd:\"∸\",minusdu:\"⨪\",mlcp:\"⫛\",mldr:\"…\",mnplus:\"∓\",models:\"⊧\",mopf:\"𝕞\",mp:\"∓\",mscr:\"𝓂\",mstpos:\"∾\",mu:\"μ\",multimap:\"⊸\",mumap:\"⊸\",nGg:\"⋙̸\",nGt:\"≫⃒\",nGtv:\"≫̸\",nLeftarrow:\"⇍\",nLeftrightarrow:\"⇎\",nLl:\"⋘̸\",nLt:\"≪⃒\",nLtv:\"≪̸\",nRightarrow:\"⇏\",nVDash:\"⊯\",nVdash:\"⊮\",nabla:\"∇\",nacute:\"ń\",nang:\"∠⃒\",nap:\"≉\",napE:\"⩰̸\",napid:\"≋̸\",napos:\"ŉ\",napprox:\"≉\",natur:\"♮\",natural:\"♮\",naturals:\"ℕ\",nbs:\" \",nbsp:\" \",nbump:\"≎̸\",nbumpe:\"≏̸\",ncap:\"⩃\",ncaron:\"ň\",ncedil:\"ņ\",ncong:\"≇\",ncongdot:\"⩭̸\",ncup:\"⩂\",ncy:\"н\",ndash:\"–\",ne:\"≠\",neArr:\"⇗\",nearhk:\"⤤\",nearr:\"↗\",nearrow:\"↗\",nedot:\"≐̸\",nequiv:\"≢\",nesear:\"⤨\",nesim:\"≂̸\",nexist:\"∄\",nexists:\"∄\",nfr:\"𝔫\",ngE:\"≧̸\",nge:\"≱\",ngeq:\"≱\",ngeqq:\"≧̸\",ngeqslant:\"⩾̸\",nges:\"⩾̸\",ngsim:\"≵\",ngt:\"≯\",ngtr:\"≯\",nhArr:\"⇎\",nharr:\"↮\",nhpar:\"⫲\",ni:\"∋\",nis:\"⋼\",nisd:\"⋺\",niv:\"∋\",njcy:\"њ\",nlArr:\"⇍\",nlE:\"≦̸\",nlarr:\"↚\",nldr:\"‥\",nle:\"≰\",nleftarrow:\"↚\",nleftrightarrow:\"↮\",nleq:\"≰\",nleqq:\"≦̸\",nleqslant:\"⩽̸\",nles:\"⩽̸\",nless:\"≮\",nlsim:\"≴\",nlt:\"≮\",nltri:\"⋪\",nltrie:\"⋬\",nmid:\"∤\",nopf:\"𝕟\",no:\"¬\",not:\"¬\",notin:\"∉\",notinE:\"⋹̸\",notindot:\"⋵̸\",notinva:\"∉\",notinvb:\"⋷\",notinvc:\"⋶\",notni:\"∌\",notniva:\"∌\",notnivb:\"⋾\",notnivc:\"⋽\",npar:\"∦\",nparallel:\"∦\",nparsl:\"⫽⃥\",npart:\"∂̸\",npolint:\"⨔\",npr:\"⊀\",nprcue:\"⋠\",npre:\"⪯̸\",nprec:\"⊀\",npreceq:\"⪯̸\",nrArr:\"⇏\",nrarr:\"↛\",nrarrc:\"⤳̸\",nrarrw:\"↝̸\",nrightarrow:\"↛\",nrtri:\"⋫\",nrtrie:\"⋭\",nsc:\"⊁\",nsccue:\"⋡\",nsce:\"⪰̸\",nscr:\"𝓃\",nshortmid:\"∤\",nshortparallel:\"∦\",nsim:\"≁\",nsime:\"≄\",nsimeq:\"≄\",nsmid:\"∤\",nspar:\"∦\",nsqsube:\"⋢\",nsqsupe:\"⋣\",nsub:\"⊄\",nsubE:\"⫅̸\",nsube:\"⊈\",nsubset:\"⊂⃒\",nsubseteq:\"⊈\",nsubseteqq:\"⫅̸\",nsucc:\"⊁\",nsucceq:\"⪰̸\",nsup:\"⊅\",nsupE:\"⫆̸\",nsupe:\"⊉\",nsupset:\"⊃⃒\",nsupseteq:\"⊉\",nsupseteqq:\"⫆̸\",ntgl:\"≹\",ntild:\"ñ\",ntilde:\"ñ\",ntlg:\"≸\",ntriangleleft:\"⋪\",ntrianglelefteq:\"⋬\",ntriangleright:\"⋫\",ntrianglerighteq:\"⋭\",nu:\"ν\",num:\"#\",numero:\"№\",numsp:\" \",nvDash:\"⊭\",nvHarr:\"⤄\",nvap:\"≍⃒\",nvdash:\"⊬\",nvge:\"≥⃒\",nvgt:\">⃒\",nvinfin:\"⧞\",nvlArr:\"⤂\",nvle:\"≤⃒\",nvlt:\"<⃒\",nvltrie:\"⊴⃒\",nvrArr:\"⤃\",nvrtrie:\"⊵⃒\",nvsim:\"∼⃒\",nwArr:\"⇖\",nwarhk:\"⤣\",nwarr:\"↖\",nwarrow:\"↖\",nwnear:\"⤧\",oS:\"Ⓢ\",oacut:\"ó\",oacute:\"ó\",oast:\"⊛\",ocir:\"ô\",ocirc:\"ô\",ocy:\"о\",odash:\"⊝\",odblac:\"ő\",odiv:\"⨸\",odot:\"⊙\",odsold:\"⦼\",oelig:\"œ\",ofcir:\"⦿\",ofr:\"𝔬\",ogon:\"˛\",ograv:\"ò\",ograve:\"ò\",ogt:\"⧁\",ohbar:\"⦵\",ohm:\"Ω\",oint:\"∮\",olarr:\"↺\",olcir:\"⦾\",olcross:\"⦻\",oline:\"‾\",olt:\"⧀\",omacr:\"ō\",omega:\"ω\",omicron:\"ο\",omid:\"⦶\",ominus:\"⊖\",oopf:\"𝕠\",opar:\"⦷\",operp:\"⦹\",oplus:\"⊕\",or:\"∨\",orarr:\"↻\",ord:\"º\",order:\"ℴ\",orderof:\"ℴ\",ordf:\"ª\",ordm:\"º\",origof:\"⊶\",oror:\"⩖\",orslope:\"⩗\",orv:\"⩛\",oscr:\"ℴ\",oslas:\"ø\",oslash:\"ø\",osol:\"⊘\",otild:\"õ\",otilde:\"õ\",otimes:\"⊗\",otimesas:\"⨶\",oum:\"ö\",ouml:\"ö\",ovbar:\"⌽\",par:\"¶\",para:\"¶\",parallel:\"∥\",parsim:\"⫳\",parsl:\"⫽\",part:\"∂\",pcy:\"п\",percnt:\"%\",period:\".\",permil:\"‰\",perp:\"⊥\",pertenk:\"‱\",pfr:\"𝔭\",phi:\"φ\",phiv:\"ϕ\",phmmat:\"ℳ\",phone:\"☎\",pi:\"π\",pitchfork:\"⋔\",piv:\"ϖ\",planck:\"ℏ\",planckh:\"ℎ\",plankv:\"ℏ\",plus:\"+\",plusacir:\"⨣\",plusb:\"⊞\",pluscir:\"⨢\",plusdo:\"∔\",plusdu:\"⨥\",pluse:\"⩲\",plusm:\"±\",plusmn:\"±\",plussim:\"⨦\",plustwo:\"⨧\",pm:\"±\",pointint:\"⨕\",popf:\"𝕡\",poun:\"£\",pound:\"£\",pr:\"≺\",prE:\"⪳\",prap:\"⪷\",prcue:\"≼\",pre:\"⪯\",prec:\"≺\",precapprox:\"⪷\",preccurlyeq:\"≼\",preceq:\"⪯\",precnapprox:\"⪹\",precneqq:\"⪵\",precnsim:\"⋨\",precsim:\"≾\",prime:\"′\",primes:\"ℙ\",prnE:\"⪵\",prnap:\"⪹\",prnsim:\"⋨\",prod:\"∏\",profalar:\"⌮\",profline:\"⌒\",profsurf:\"⌓\",prop:\"∝\",propto:\"∝\",prsim:\"≾\",prurel:\"⊰\",pscr:\"𝓅\",psi:\"ψ\",puncsp:\" \",qfr:\"𝔮\",qint:\"⨌\",qopf:\"𝕢\",qprime:\"⁗\",qscr:\"𝓆\",quaternions:\"ℍ\",quatint:\"⨖\",quest:\"?\",questeq:\"≟\",quo:'\"',quot:'\"',rAarr:\"⇛\",rArr:\"⇒\",rAtail:\"⤜\",rBarr:\"⤏\",rHar:\"⥤\",race:\"∽̱\",racute:\"ŕ\",radic:\"√\",raemptyv:\"⦳\",rang:\"⟩\",rangd:\"⦒\",range:\"⦥\",rangle:\"⟩\",raqu:\"»\",raquo:\"»\",rarr:\"→\",rarrap:\"⥵\",rarrb:\"⇥\",rarrbfs:\"⤠\",rarrc:\"⤳\",rarrfs:\"⤞\",rarrhk:\"↪\",rarrlp:\"↬\",rarrpl:\"⥅\",rarrsim:\"⥴\",rarrtl:\"↣\",rarrw:\"↝\",ratail:\"⤚\",ratio:\"∶\",rationals:\"ℚ\",rbarr:\"⤍\",rbbrk:\"❳\",rbrace:\"}\",rbrack:\"]\",rbrke:\"⦌\",rbrksld:\"⦎\",rbrkslu:\"⦐\",rcaron:\"ř\",rcedil:\"ŗ\",rceil:\"⌉\",rcub:\"}\",rcy:\"р\",rdca:\"⤷\",rdldhar:\"⥩\",rdquo:\"”\",rdquor:\"”\",rdsh:\"↳\",real:\"ℜ\",realine:\"ℛ\",realpart:\"ℜ\",reals:\"ℝ\",rect:\"▭\",re:\"®\",reg:\"®\",rfisht:\"⥽\",rfloor:\"⌋\",rfr:\"𝔯\",rhard:\"⇁\",rharu:\"⇀\",rharul:\"⥬\",rho:\"ρ\",rhov:\"ϱ\",rightarrow:\"→\",rightarrowtail:\"↣\",rightharpoondown:\"⇁\",rightharpoonup:\"⇀\",rightleftarrows:\"⇄\",rightleftharpoons:\"⇌\",rightrightarrows:\"⇉\",rightsquigarrow:\"↝\",rightthreetimes:\"⋌\",ring:\"˚\",risingdotseq:\"≓\",rlarr:\"⇄\",rlhar:\"⇌\",rlm:\"‏\",rmoust:\"⎱\",rmoustache:\"⎱\",rnmid:\"⫮\",roang:\"⟭\",roarr:\"⇾\",robrk:\"⟧\",ropar:\"⦆\",ropf:\"𝕣\",roplus:\"⨮\",rotimes:\"⨵\",rpar:\")\",rpargt:\"⦔\",rppolint:\"⨒\",rrarr:\"⇉\",rsaquo:\"›\",rscr:\"𝓇\",rsh:\"↱\",rsqb:\"]\",rsquo:\"’\",rsquor:\"’\",rthree:\"⋌\",rtimes:\"⋊\",rtri:\"▹\",rtrie:\"⊵\",rtrif:\"▸\",rtriltri:\"⧎\",ruluhar:\"⥨\",rx:\"℞\",sacute:\"ś\",sbquo:\"‚\",sc:\"≻\",scE:\"⪴\",scap:\"⪸\",scaron:\"š\",sccue:\"≽\",sce:\"⪰\",scedil:\"ş\",scirc:\"ŝ\",scnE:\"⪶\",scnap:\"⪺\",scnsim:\"⋩\",scpolint:\"⨓\",scsim:\"≿\",scy:\"с\",sdot:\"⋅\",sdotb:\"⊡\",sdote:\"⩦\",seArr:\"⇘\",searhk:\"⤥\",searr:\"↘\",searrow:\"↘\",sec:\"§\",sect:\"§\",semi:\";\",seswar:\"⤩\",setminus:\"∖\",setmn:\"∖\",sext:\"✶\",sfr:\"𝔰\",sfrown:\"⌢\",sharp:\"♯\",shchcy:\"щ\",shcy:\"ш\",shortmid:\"∣\",shortparallel:\"∥\",sh:\"­\",shy:\"­\",sigma:\"σ\",sigmaf:\"ς\",sigmav:\"ς\",sim:\"∼\",simdot:\"⩪\",sime:\"≃\",simeq:\"≃\",simg:\"⪞\",simgE:\"⪠\",siml:\"⪝\",simlE:\"⪟\",simne:\"≆\",simplus:\"⨤\",simrarr:\"⥲\",slarr:\"←\",smallsetminus:\"∖\",smashp:\"⨳\",smeparsl:\"⧤\",smid:\"∣\",smile:\"⌣\",smt:\"⪪\",smte:\"⪬\",smtes:\"⪬︀\",softcy:\"ь\",sol:\"/\",solb:\"⧄\",solbar:\"⌿\",sopf:\"𝕤\",spades:\"♠\",spadesuit:\"♠\",spar:\"∥\",sqcap:\"⊓\",sqcaps:\"⊓︀\",sqcup:\"⊔\",sqcups:\"⊔︀\",sqsub:\"⊏\",sqsube:\"⊑\",sqsubset:\"⊏\",sqsubseteq:\"⊑\",sqsup:\"⊐\",sqsupe:\"⊒\",sqsupset:\"⊐\",sqsupseteq:\"⊒\",squ:\"□\",square:\"□\",squarf:\"▪\",squf:\"▪\",srarr:\"→\",sscr:\"𝓈\",ssetmn:\"∖\",ssmile:\"⌣\",sstarf:\"⋆\",star:\"☆\",starf:\"★\",straightepsilon:\"ϵ\",straightphi:\"ϕ\",strns:\"¯\",sub:\"⊂\",subE:\"⫅\",subdot:\"⪽\",sube:\"⊆\",subedot:\"⫃\",submult:\"⫁\",subnE:\"⫋\",subne:\"⊊\",subplus:\"⪿\",subrarr:\"⥹\",subset:\"⊂\",subseteq:\"⊆\",subseteqq:\"⫅\",subsetneq:\"⊊\",subsetneqq:\"⫋\",subsim:\"⫇\",subsub:\"⫕\",subsup:\"⫓\",succ:\"≻\",succapprox:\"⪸\",succcurlyeq:\"≽\",succeq:\"⪰\",succnapprox:\"⪺\",succneqq:\"⪶\",succnsim:\"⋩\",succsim:\"≿\",sum:\"∑\",sung:\"♪\",sup:\"⊃\",sup1:\"¹\",sup2:\"²\",sup3:\"³\",supE:\"⫆\",supdot:\"⪾\",supdsub:\"⫘\",supe:\"⊇\",supedot:\"⫄\",suphsol:\"⟉\",suphsub:\"⫗\",suplarr:\"⥻\",supmult:\"⫂\",supnE:\"⫌\",supne:\"⊋\",supplus:\"⫀\",supset:\"⊃\",supseteq:\"⊇\",supseteqq:\"⫆\",supsetneq:\"⊋\",supsetneqq:\"⫌\",supsim:\"⫈\",supsub:\"⫔\",supsup:\"⫖\",swArr:\"⇙\",swarhk:\"⤦\",swarr:\"↙\",swarrow:\"↙\",swnwar:\"⤪\",szli:\"ß\",szlig:\"ß\",target:\"⌖\",tau:\"τ\",tbrk:\"⎴\",tcaron:\"ť\",tcedil:\"ţ\",tcy:\"т\",tdot:\"⃛\",telrec:\"⌕\",tfr:\"𝔱\",there4:\"∴\",therefore:\"∴\",theta:\"θ\",thetasym:\"ϑ\",thetav:\"ϑ\",thickapprox:\"≈\",thicksim:\"∼\",thinsp:\" \",thkap:\"≈\",thksim:\"∼\",thor:\"þ\",thorn:\"þ\",tilde:\"˜\",time:\"×\",times:\"×\",timesb:\"⊠\",timesbar:\"⨱\",timesd:\"⨰\",tint:\"∭\",toea:\"⤨\",top:\"⊤\",topbot:\"⌶\",topcir:\"⫱\",topf:\"𝕥\",topfork:\"⫚\",tosa:\"⤩\",tprime:\"‴\",trade:\"™\",triangle:\"▵\",triangledown:\"▿\",triangleleft:\"◃\",trianglelefteq:\"⊴\",triangleq:\"≜\",triangleright:\"▹\",trianglerighteq:\"⊵\",tridot:\"◬\",trie:\"≜\",triminus:\"⨺\",triplus:\"⨹\",trisb:\"⧍\",tritime:\"⨻\",trpezium:\"⏢\",tscr:\"𝓉\",tscy:\"ц\",tshcy:\"ћ\",tstrok:\"ŧ\",twixt:\"≬\",twoheadleftarrow:\"↞\",twoheadrightarrow:\"↠\",uArr:\"⇑\",uHar:\"⥣\",uacut:\"ú\",uacute:\"ú\",uarr:\"↑\",ubrcy:\"ў\",ubreve:\"ŭ\",ucir:\"û\",ucirc:\"û\",ucy:\"у\",udarr:\"⇅\",udblac:\"ű\",udhar:\"⥮\",ufisht:\"⥾\",ufr:\"𝔲\",ugrav:\"ù\",ugrave:\"ù\",uharl:\"↿\",uharr:\"↾\",uhblk:\"▀\",ulcorn:\"⌜\",ulcorner:\"⌜\",ulcrop:\"⌏\",ultri:\"◸\",umacr:\"ū\",um:\"¨\",uml:\"¨\",uogon:\"ų\",uopf:\"𝕦\",uparrow:\"↑\",updownarrow:\"↕\",upharpoonleft:\"↿\",upharpoonright:\"↾\",uplus:\"⊎\",upsi:\"υ\",upsih:\"ϒ\",upsilon:\"υ\",upuparrows:\"⇈\",urcorn:\"⌝\",urcorner:\"⌝\",urcrop:\"⌎\",uring:\"ů\",urtri:\"◹\",uscr:\"𝓊\",utdot:\"⋰\",utilde:\"ũ\",utri:\"▵\",utrif:\"▴\",uuarr:\"⇈\",uum:\"ü\",uuml:\"ü\",uwangle:\"⦧\",vArr:\"⇕\",vBar:\"⫨\",vBarv:\"⫩\",vDash:\"⊨\",vangrt:\"⦜\",varepsilon:\"ϵ\",varkappa:\"ϰ\",varnothing:\"∅\",varphi:\"ϕ\",varpi:\"ϖ\",varpropto:\"∝\",varr:\"↕\",varrho:\"ϱ\",varsigma:\"ς\",varsubsetneq:\"⊊︀\",varsubsetneqq:\"⫋︀\",varsupsetneq:\"⊋︀\",varsupsetneqq:\"⫌︀\",vartheta:\"ϑ\",vartriangleleft:\"⊲\",vartriangleright:\"⊳\",vcy:\"в\",vdash:\"⊢\",vee:\"∨\",veebar:\"⊻\",veeeq:\"≚\",vellip:\"⋮\",verbar:\"|\",vert:\"|\",vfr:\"𝔳\",vltri:\"⊲\",vnsub:\"⊂⃒\",vnsup:\"⊃⃒\",vopf:\"𝕧\",vprop:\"∝\",vrtri:\"⊳\",vscr:\"𝓋\",vsubnE:\"⫋︀\",vsubne:\"⊊︀\",vsupnE:\"⫌︀\",vsupne:\"⊋︀\",vzigzag:\"⦚\",wcirc:\"ŵ\",wedbar:\"⩟\",wedge:\"∧\",wedgeq:\"≙\",weierp:\"℘\",wfr:\"𝔴\",wopf:\"𝕨\",wp:\"℘\",wr:\"≀\",wreath:\"≀\",wscr:\"𝓌\",xcap:\"⋂\",xcirc:\"◯\",xcup:\"⋃\",xdtri:\"▽\",xfr:\"𝔵\",xhArr:\"⟺\",xharr:\"⟷\",xi:\"ξ\",xlArr:\"⟸\",xlarr:\"⟵\",xmap:\"⟼\",xnis:\"⋻\",xodot:\"⨀\",xopf:\"𝕩\",xoplus:\"⨁\",xotime:\"⨂\",xrArr:\"⟹\",xrarr:\"⟶\",xscr:\"𝓍\",xsqcup:\"⨆\",xuplus:\"⨄\",xutri:\"△\",xvee:\"⋁\",xwedge:\"⋀\",yacut:\"ý\",yacute:\"ý\",yacy:\"я\",ycirc:\"ŷ\",ycy:\"ы\",ye:\"¥\",yen:\"¥\",yfr:\"𝔶\",yicy:\"ї\",yopf:\"𝕪\",yscr:\"𝓎\",yucy:\"ю\",yum:\"ÿ\",yuml:\"ÿ\",zacute:\"ź\",zcaron:\"ž\",zcy:\"з\",zdot:\"ż\",zeetrf:\"ℨ\",zeta:\"ζ\",zfr:\"𝔷\",zhcy:\"ж\",zigrarr:\"⇝\",zopf:\"𝕫\",zscr:\"𝓏\",zwj:\"‍\",zwnj:\"‌\"},Oc={exports:{}};function zc(){return Ec||(Ec=1,e=Oc,t=function(e){var t=/(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i,n=0,r={},o={manual:e.Prism&&e.Prism.manual,disableWorkerMessageHandler:e.Prism&&e.Prism.disableWorkerMessageHandler,util:{encode:function e(t){return t instanceof i?new i(t.type,e(t.content),t.alias):Array.isArray(t)?t.map(e):t.replace(/&/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/\\u00a0/g,\" \")},type:function(e){return Object.prototype.toString.call(e).slice(8,-1)},objId:function(e){return e.__id||Object.defineProperty(e,\"__id\",{value:++n}),e.__id},clone:function e(t,n){var r,i;switch(n=n||{},o.util.type(t)){case\"Object\":if(i=o.util.objId(t),n[i])return n[i];for(var a in r={},n[i]=r,t)t.hasOwnProperty(a)&&(r[a]=e(t[a],n));return r;case\"Array\":return i=o.util.objId(t),n[i]?n[i]:(r=[],n[i]=r,t.forEach((function(t,o){r[o]=e(t,n)})),r);default:return t}},getLanguage:function(e){for(;e;){var n=t.exec(e.className);if(n)return n[1].toLowerCase();e=e.parentElement}return\"none\"},setLanguage:function(e,n){e.className=e.className.replace(RegExp(t,\"gi\"),\"\"),e.classList.add(\"language-\"+n)},currentScript:function(){if(typeof document>\"u\")return null;if(\"currentScript\"in document)return document.currentScript;try{throw new Error}catch(r){var e=(/at [^(\\r\\n]*\\((.*):[^:]+:[^:]+\\)$/i.exec(r.stack)||[])[1];if(e){var t=document.getElementsByTagName(\"script\");for(var n in t)if(t[n].src==e)return t[n]}return null}},isActive:function(e,t,n){for(var r=\"no-\"+t;e;){var o=e.classList;if(o.contains(t))return!0;if(o.contains(r))return!1;e=e.parentElement}return!!n}},languages:{plain:r,plaintext:r,text:r,txt:r,extend:function(e,t){var n=o.util.clone(o.languages[e]);for(var r in t)n[r]=t[r];return n},insertBefore:function(e,t,n,r){var i=(r=r||o.languages)[e],a={};for(var s in i)if(i.hasOwnProperty(s)){if(s==t)for(var l in n)n.hasOwnProperty(l)&&(a[l]=n[l]);n.hasOwnProperty(s)||(a[s]=i[s])}var c=r[e];return r[e]=a,o.languages.DFS(o.languages,(function(t,n){n===c&&t!=e&&(this[t]=a)})),a},DFS:function e(t,n,r,i){i=i||{};var a=o.util.objId;for(var s in t)if(t.hasOwnProperty(s)){n.call(t,s,t[s],r||s);var l=t[s],c=o.util.type(l);\"Object\"!==c||i[a(l)]?\"Array\"===c&&!i[a(l)]&&(i[a(l)]=!0,e(l,n,s,i)):(i[a(l)]=!0,e(l,n,null,i))}}},plugins:{},highlightAll:function(e,t){o.highlightAllUnder(document,e,t)},highlightAllUnder:function(e,t,n){var r={callback:n,container:e,selector:'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'};o.hooks.run(\"before-highlightall\",r),r.elements=Array.prototype.slice.apply(r.container.querySelectorAll(r.selector)),o.hooks.run(\"before-all-elements-highlight\",r);for(var i,a=0;i=r.elements[a++];)o.highlightElement(i,!0===t,r.callback)},highlightElement:function(t,n,r){var i=o.util.getLanguage(t),a=o.languages[i];o.util.setLanguage(t,i);var s=t.parentElement;s&&\"pre\"===s.nodeName.toLowerCase()&&o.util.setLanguage(s,i);var l={element:t,language:i,grammar:a,code:t.textContent};function c(e){l.highlightedCode=e,o.hooks.run(\"before-insert\",l),l.element.innerHTML=l.highlightedCode,o.hooks.run(\"after-highlight\",l),o.hooks.run(\"complete\",l),r&&r.call(l.element)}if(o.hooks.run(\"before-sanity-check\",l),(s=l.element.parentElement)&&\"pre\"===s.nodeName.toLowerCase()&&!s.hasAttribute(\"tabindex\")&&s.setAttribute(\"tabindex\",\"0\"),!l.code)return o.hooks.run(\"complete\",l),void(r&&r.call(l.element));if(o.hooks.run(\"before-highlight\",l),l.grammar)if(n&&e.Worker){var d=new Worker(o.filename);d.onmessage=function(e){c(e.data)},d.postMessage(JSON.stringify({language:l.language,code:l.code,immediateClose:!0}))}else c(o.highlight(l.code,l.grammar,l.language));else c(o.util.encode(l.code))},highlight:function(e,t,n){var r={code:e,grammar:t,language:n};if(o.hooks.run(\"before-tokenize\",r),!r.grammar)throw new Error('The language \"'+r.language+'\" has no grammar.');return r.tokens=o.tokenize(r.code,r.grammar),o.hooks.run(\"after-tokenize\",r),i.stringify(o.util.encode(r.tokens),r.language)},tokenize:function(e,t){var n=t.rest;if(n){for(var r in n)t[r]=n[r];delete t.rest}var o=new l;return c(o,o.head,e),s(e,o,t,o.head,0),function(e){for(var t=[],n=e.head.next;n!==e.tail;)t.push(n.value),n=n.next;return t}(o)},hooks:{all:{},add:function(e,t){var n=o.hooks.all;n[e]=n[e]||[],n[e].push(t)},run:function(e,t){var n=o.hooks.all[e];if(n&&n.length)for(var r,i=0;r=n[i++];)r(t)}},Token:i};function i(e,t,n,r){this.type=e,this.content=t,this.alias=n,this.length=0|(r||\"\").length}function a(e,t,n,r){e.lastIndex=t;var o=e.exec(n);if(o&&r&&o[1]){var i=o[1].length;o.index+=i,o[0]=o[0].slice(i)}return o}function s(e,t,n,r,l,u){for(var h in n)if(n.hasOwnProperty(h)&&n[h]){var f=n[h];f=Array.isArray(f)?f:[f];for(var p=0;p<f.length;++p){if(u&&u.cause==h+\",\"+p)return;var m=f[p],g=m.inside,v=!!m.lookbehind,w=!!m.greedy,y=m.alias;if(w&&!m.pattern.global){var b=m.pattern.toString().match(/[imsuy]*$/)[0];m.pattern=RegExp(m.pattern.source,b+\"g\")}for(var x=m.pattern||m,C=r.next,k=l;C!==t.tail&&!(u&&k>=u.reach);k+=C.value.length,C=C.next){var L=C.value;if(t.length>e.length)return;if(!(L instanceof i)){var M,S=1;if(w){if(!(M=a(x,k,e,v))||M.index>=e.length)break;var R=M.index,V=M.index+M[0].length,E=k;for(E+=C.value.length;R>=E;)E+=(C=C.next).value.length;if(k=E-=C.value.length,C.value instanceof i)continue;for(var H=C;H!==t.tail&&(E<V||\"string\"==typeof H.value);H=H.next)S++,E+=H.value.length;S--,L=e.slice(k,E),M.index-=k}else if(!(M=a(x,0,L,v)))continue;R=M.index;var T=M[0],$=L.slice(0,R),A=L.slice(R+T.length),N=k+L.length;u&&N>u.reach&&(u.reach=N);var I=C.prev;if($&&(I=c(t,I,$),k+=$.length),d(t,I,S),C=c(t,I,new i(h,g?o.tokenize(T,g):T,y,T)),A&&c(t,C,A),S>1){var P={cause:h+\",\"+p,reach:N};s(e,t,n,C.prev,k,P),u&&P.reach>u.reach&&(u.reach=P.reach)}}}}}}function l(){var e={value:null,prev:null,next:null},t={value:null,prev:e,next:null};e.next=t,this.head=e,this.tail=t,this.length=0}function c(e,t,n){var r=t.next,o={value:n,prev:t,next:r};return t.next=o,r.prev=o,e.length++,o}function d(e,t,n){for(var r=t.next,o=0;o<n&&r!==e.tail;o++)r=r.next;t.next=r,r.prev=t,e.length-=o}if(e.Prism=o,i.stringify=function e(t,n){if(\"string\"==typeof t)return t;if(Array.isArray(t)){var r=\"\";return t.forEach((function(t){r+=e(t,n)})),r}var i={type:t.type,content:e(t.content,n),tag:\"span\",classes:[\"token\",t.type],attributes:{},language:n},a=t.alias;a&&(Array.isArray(a)?Array.prototype.push.apply(i.classes,a):i.classes.push(a)),o.hooks.run(\"wrap\",i);var s=\"\";for(var l in i.attributes)s+=\" \"+l+'=\"'+(i.attributes[l]||\"\").replace(/\"/g,\"&quot;\")+'\"';return\"<\"+i.tag+' class=\"'+i.classes.join(\" \")+'\"'+s+\">\"+i.content+\"</\"+i.tag+\">\"},!e.document)return e.addEventListener&&(o.disableWorkerMessageHandler||e.addEventListener(\"message\",(function(t){var n=JSON.parse(t.data),r=n.language,i=n.code,a=n.immediateClose;e.postMessage(o.highlight(i,o.languages[r],r)),a&&e.close()}),!1)),o;var u=o.util.currentScript();function h(){o.manual||o.highlightAll()}if(u&&(o.filename=u.src,u.hasAttribute(\"data-manual\")&&(o.manual=!0)),!o.manual){var f=document.readyState;\"loading\"===f||\"interactive\"===f&&u&&u.defer?document.addEventListener(\"DOMContentLoaded\",h):window.requestAnimationFrame?window.requestAnimationFrame(h):window.setTimeout(h,16)}return o}(typeof window<\"u\"?window:typeof WorkerGlobalScope<\"u\"&&self instanceof WorkerGlobalScope?self:{}),e.exports&&(e.exports=t),typeof bt<\"u\"&&(bt.Prism=t)),Oc.exports;var e,t}var _c,Wc,qc,Zc,Uc,Gc,Yc,Xc,Kc,Jc,Qc,ed,td,nd,rd,od={};function id(){if(qc)return Wc;function e(){return!0}return qc=1,Wc=function t(n){if(null==n)return e;if(\"string\"==typeof n)return function(e){return function(t){return!(!t||t.type!==e)}}(n);if(\"object\"==typeof n)return\"length\"in n?function(e){for(var n=[],r=-1;++r<e.length;)n[r]=t(e[r]);return function(){for(var e=-1;++e<n.length;)if(n[e].apply(this,arguments))return!0;return!1}}(n):function(e){return function(t){var n;for(n in e)if(t[n]!==e[n])return!1;return!0}}(n);if(\"function\"==typeof n)return n;throw new Error(\"Expected function, string, or object as test\")}}function ad(){if(td)return ed;td=1;var e=function(){if(Uc)return Zc;Uc=1;var e=id();Zc=function(n,r,o){var i=e(o||r),a=null==r.cascade||r.cascade;return function e(n,r,o){var s,l,c,d,u;if(!i(n,r,o))return null;if(n.children){for(s=[],l=-1;++l<n.children.length;)(c=e(n.children[l],l,n))&&s.push(c);if(a&&n.children.length&&!s.length)return null}for(u in d={},n)t.call(n,u)&&(d[u]=\"children\"===u?s:n[u]);return d}(n,null,null)};var t={}.hasOwnProperty;return Zc}(),t=function(){if(Kc)return Xc;Kc=1,Xc=i;var e=id(),t=Yc?Gc:(Yc=1,Gc=function(e){return\"\u001b[33m\"+e+\"\u001b[39m\"}),n=!0,r=\"skip\",o=!1;function i(i,a,s,l){var c,d;\"function\"==typeof a&&\"function\"!=typeof s&&(l=s,s=a,a=null),d=e(a),c=l?-1:1,function e(i,u,h){var f,p=\"object\"==typeof i&&null!==i?i:{};return\"string\"==typeof p.type&&(f=\"string\"==typeof p.tagName?p.tagName:\"string\"==typeof p.name?p.name:void 0,m.displayName=\"node (\"+t(p.type+(f?\"<\"+f+\">\":\"\"))+\")\"),m;function m(){var t,f,p=h.concat(i),m=[];if((!a||d(i,u,h[h.length-1]||null))&&(m=function(e){return null!==e&&\"object\"==typeof e&&\"length\"in e?e:\"number\"==typeof e?[n,e]:[e]}(s(i,h)),m[0]===o))return m;if(i.children&&m[0]!==r)for(f=(l?i.children.length:-1)+c;f>-1&&f<i.children.length;){if((t=e(i.children[f],f,p)())[0]===o)return t;f=\"number\"==typeof t[1]?t[1]:f+c}return m}}(i,null,[])()}return i.CONTINUE=n,i.SKIP=r,i.EXIT=o,Xc}(),n=function(){if(Qc)return Jc;function e(){this.map=/* @__PURE__ */new WeakMap}function t(){this.keys=[],this.values=[]}return Qc=1,Jc=\"function\"==typeof WeakMap?e:t,e.prototype.has=function(e){return this.map.has(e)},e.prototype.set=function(e,t){return this.map.set(e,t),this},e.prototype.get=function(e){return this.map.get(e)},e.prototype.clear=function(){},t.prototype.has=function(e){return-1!==this.keys.indexOf(e)},t.prototype.set=function(e,t){var n=this.keys.indexOf(e);return-1===n?(this.keys.push(e),this.values.push(t)):this.values[n]=t,this},t.prototype.get=function(e){var t=this.keys.indexOf(e);return-1===t?void 0:this.values[t]},t.prototype.clear=function(){this.keys=[],this.values=[]},Jc}();function r(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{lineNumber:1};return e.reduce((function(e,n){var o=t.lineNumber;if(\"text\"===n.type){if(-1===n.value.indexOf(\"\\n\"))return n.lineStart=o,n.lineEnd=o,e.nodes.push(n),e;for(var i=n.value.split(\"\\n\"),a=0;a<i.length;a++){var s=0===a?t.lineNumber:++t.lineNumber;e.nodes.push({type:\"text\",value:a===i.length-1?i[a]:\"\".concat(i[a],\"\\n\"),lineStart:s,lineEnd:s})}return e.lineNumber=t.lineNumber,e}if(n.children){var l=r(n.children,t),c=l.nodes[0],d=l.nodes[l.nodes.length-1];return n.lineStart=c?c.lineStart:o,n.lineEnd=d?d.lineEnd:o,n.children=l.nodes,e.lineNumber=l.lineNumber,e.nodes.push(n),e}return e.nodes.push(n),e}),{nodes:[],lineNumber:t.lineNumber})}function o(e,t,n){var r=t.className||\"refractor-marker\";return{type:\"element\",tagName:t.component||\"div\",properties:t.component?Object.assign({},n,{className:r}):{className:r},children:e,lineStart:t.line,lineEnd:e[e.length-1].lineEnd,isMarker:!0}}return ed=function(i,a){var s=a.markers.map((function(e){return e.line?e:{line:e}})).sort((function(e,t){return e.line-t.line}));return function(r,i,a){if(0===i.length||0===r.length)return r;for(var s=i.reduce((function(r,o){return function(r,o){var i={type:\"root\",children:o},a=new n,s=new n,l=new n,c=[];function d(e,t,n){c.push(t),n.forEach((function(t){e.has(t)||(e.set(t,Object.assign({},t,{children:[]})),t!==i&&c.push(t))}));for(var r=n.length;r--;){var o=e.get(n[r]),a=n[r+1],s=e.get(a)||t;-1===o.children.indexOf(s)&&o.children.push(s)}}t(i,(function(e,t){if(!e.children){if(e.lineStart<r)return void d(a,e,t);if(e.lineStart===r)return void d(s,e,t);e.lineEnd>r&&c.some((function(e){return-1!==t.indexOf(e)}))&&d(l,e,t)}}));var u=e(i,(function(e){return-1===c.indexOf(e)})),h=function(e){var n=e.get(i);return n?(t(n,(function(e,t){if(e.children)return e.lineStart=0,void(e.lineEnd=0);t.forEach((function(t){t.lineStart=Math.max(t.lineStart,e.lineStart),t.lineEnd=Math.max(t.lineEnd,e.lineEnd)}))})),n.children):[]},f=[].concat(h(a),h(s),h(l),u?u.children:[]);return a.clear(),s.clear(),l.clear(),f}(o.line,r)}),r),l=[],c=0,d=0;d<i.length;d++){for(var u=i[d],h=s[c];h&&h.lineEnd<u.line;h=s[++c])l.push(h);for(var f=[],p=s[c];p&&p.lineEnd===u.line;p=s[++c])f.push(p);f.length>0&&l.push(o(f,u,a))}for(;c<s.length;)l.push(s[c++]);return l}(r(i).nodes,s,a)}}var sd=/* @__PURE__ */xt(function(){if(rd)return nd;rd=1;var e=react__WEBPACK_IMPORTED_MODULE_1__,t=function(){if(Bc)return jc;Bc=1;var e,t,n=\"object\"==typeof globalThis?globalThis:\"object\"==typeof self?self:\"object\"==typeof window?window:\"object\"==typeof bt?bt:{},r=(t=(e=\"Prism\"in n)?n.Prism:void 0,function(){e?n.Prism=t:delete n.Prism,e=void 0,t=void 0});n.Prism={manual:!0,disableWorkerMessageHandler:!0};var o=(dc||(dc=1,cc=function(){if(lc)return sc;lc=1;var e=function(){if(Ul)return Zl;Ul=1;var e=function(){if(yl)return wl;yl=1;var e=function(){if(ml)return pl;ml=1,pl=function(){for(var t={},n=0;n<arguments.length;n++){var r=arguments[n];for(var o in r)e.call(r,o)&&(t[o]=r[o])}return t};var e=Object.prototype.hasOwnProperty;return pl}(),t=Ll();return wl=function(n){for(var r,o,i=n.length,a=[],s=[],l=-1;++l<i;)r=n[l],a.push(r.property),s.push(r.normal),o=r.space;return new t(e.apply(null,a),e.apply(null,s),o)}}(),t=function(){if(Al)return $l;Al=1;var e=tc();return $l=e({space:\"xlink\",transform:function(e,t){return\"xlink:\"+t.slice(5).toLowerCase()},properties:{xLinkActuate:null,xLinkArcRole:null,xLinkHref:null,xLinkRole:null,xLinkShow:null,xLinkTitle:null,xLinkType:null}})}(),n=function(){if(Il)return Nl;Il=1;var e=tc();return Nl=e({space:\"xml\",transform:function(e,t){return\"xml:\"+t.slice(3).toLowerCase()},properties:{xmlLang:null,xmlBase:null,xmlSpace:null}})}(),r=function(){if(Ol)return Dl;Ol=1;var e=tc(),t=nc();return Dl=e({space:\"xmlns\",attributes:{xmlnsxlink:\"xmlns:xlink\"},transform:t,properties:{xmlns:null,xmlnsXLink:null}})}(),o=function(){if(_l)return zl;_l=1;var e=Ql(),t=tc(),n=e.booleanish,r=e.number,o=e.spaceSeparated;return zl=t({transform:function(e,t){return\"role\"===t?t:\"aria-\"+t.slice(4).toLowerCase()},properties:{ariaActiveDescendant:null,ariaAtomic:n,ariaAutoComplete:null,ariaBusy:n,ariaChecked:n,ariaColCount:r,ariaColIndex:r,ariaColSpan:r,ariaControls:o,ariaCurrent:null,ariaDescribedBy:o,ariaDetails:null,ariaDisabled:n,ariaDropEffect:o,ariaErrorMessage:null,ariaExpanded:n,ariaFlowTo:o,ariaGrabbed:n,ariaHasPopup:null,ariaHidden:n,ariaInvalid:null,ariaKeyShortcuts:null,ariaLabel:null,ariaLabelledBy:o,ariaLevel:r,ariaLive:null,ariaModal:n,ariaMultiLine:n,ariaMultiSelectable:n,ariaOrientation:null,ariaOwns:o,ariaPlaceholder:null,ariaPosInSet:r,ariaPressed:n,ariaReadOnly:n,ariaRelevant:null,ariaRequired:n,ariaRoleDescription:o,ariaRowCount:r,ariaRowIndex:r,ariaRowSpan:r,ariaSelected:n,ariaSetSize:r,ariaSort:null,ariaValueMax:r,ariaValueMin:r,ariaValueNow:r,ariaValueText:null,role:null}})}(),i=function(){if(ql)return Wl;ql=1;var e=Ql(),t=tc(),n=nc(),r=e.boolean,o=e.overloadedBoolean,i=e.booleanish,a=e.number,s=e.spaceSeparated,l=e.commaSeparated;return Wl=t({space:\"html\",attributes:{acceptcharset:\"accept-charset\",classname:\"class\",htmlfor:\"for\",httpequiv:\"http-equiv\"},transform:n,mustUseProperty:[\"checked\",\"multiple\",\"muted\",\"selected\"],properties:{abbr:null,accept:l,acceptCharset:s,accessKey:s,action:null,allow:null,allowFullScreen:r,allowPaymentRequest:r,allowUserMedia:r,alt:null,as:null,async:r,autoCapitalize:null,autoComplete:s,autoFocus:r,autoPlay:r,capture:r,charSet:null,checked:r,cite:null,className:s,cols:a,colSpan:null,content:null,contentEditable:i,controls:r,controlsList:s,coords:a|l,crossOrigin:null,data:null,dateTime:null,decoding:null,default:r,defer:r,dir:null,dirName:null,disabled:r,download:o,draggable:i,encType:null,enterKeyHint:null,form:null,formAction:null,formEncType:null,formMethod:null,formNoValidate:r,formTarget:null,headers:s,height:a,hidden:r,high:a,href:null,hrefLang:null,htmlFor:s,httpEquiv:s,id:null,imageSizes:null,imageSrcSet:l,inputMode:null,integrity:null,is:null,isMap:r,itemId:null,itemProp:s,itemRef:s,itemScope:r,itemType:s,kind:null,label:null,lang:null,language:null,list:null,loading:null,loop:r,low:a,manifest:null,max:null,maxLength:a,media:null,method:null,min:null,minLength:a,multiple:r,muted:r,name:null,nonce:null,noModule:r,noValidate:r,onAbort:null,onAfterPrint:null,onAuxClick:null,onBeforePrint:null,onBeforeUnload:null,onBlur:null,onCancel:null,onCanPlay:null,onCanPlayThrough:null,onChange:null,onClick:null,onClose:null,onContextMenu:null,onCopy:null,onCueChange:null,onCut:null,onDblClick:null,onDrag:null,onDragEnd:null,onDragEnter:null,onDragExit:null,onDragLeave:null,onDragOver:null,onDragStart:null,onDrop:null,onDurationChange:null,onEmptied:null,onEnded:null,onError:null,onFocus:null,onFormData:null,onHashChange:null,onInput:null,onInvalid:null,onKeyDown:null,onKeyPress:null,onKeyUp:null,onLanguageChange:null,onLoad:null,onLoadedData:null,onLoadedMetadata:null,onLoadEnd:null,onLoadStart:null,onMessage:null,onMessageError:null,onMouseDown:null,onMouseEnter:null,onMouseLeave:null,onMouseMove:null,onMouseOut:null,onMouseOver:null,onMouseUp:null,onOffline:null,onOnline:null,onPageHide:null,onPageShow:null,onPaste:null,onPause:null,onPlay:null,onPlaying:null,onPopState:null,onProgress:null,onRateChange:null,onRejectionHandled:null,onReset:null,onResize:null,onScroll:null,onSecurityPolicyViolation:null,onSeeked:null,onSeeking:null,onSelect:null,onSlotChange:null,onStalled:null,onStorage:null,onSubmit:null,onSuspend:null,onTimeUpdate:null,onToggle:null,onUnhandledRejection:null,onUnload:null,onVolumeChange:null,onWaiting:null,onWheel:null,open:r,optimum:a,pattern:null,ping:s,placeholder:null,playsInline:r,poster:null,preload:null,readOnly:r,referrerPolicy:null,rel:s,required:r,reversed:r,rows:a,rowSpan:a,sandbox:s,scope:null,scoped:r,seamless:r,selected:r,shape:null,size:a,sizes:null,slot:null,span:a,spellCheck:i,src:null,srcDoc:null,srcLang:null,srcSet:l,start:a,step:null,style:null,tabIndex:a,target:null,title:null,translate:null,type:null,typeMustMatch:r,useMap:null,value:i,width:a,wrap:null,align:null,aLink:null,archive:s,axis:null,background:null,bgColor:null,border:a,borderColor:null,bottomMargin:a,cellPadding:null,cellSpacing:null,char:null,charOff:null,classId:null,clear:null,code:null,codeBase:null,codeType:null,color:null,compact:r,declare:r,event:null,face:null,frame:null,frameBorder:null,hSpace:a,leftMargin:a,link:null,longDesc:null,lowSrc:null,marginHeight:a,marginWidth:a,noResize:r,noHref:r,noShade:r,noWrap:r,object:null,profile:null,prompt:null,rev:null,rightMargin:a,rules:null,scheme:null,scrolling:i,standby:null,summary:null,text:null,topMargin:a,valueType:null,version:null,vAlign:null,vLink:null,vSpace:a,allowTransparency:null,autoCorrect:null,autoSave:null,disablePictureInPicture:r,disableRemotePlayback:r,prefix:null,property:null,results:a,security:null,unselectable:null}})}();return Zl=e([n,t,r,o,i])}(),t=fc()(e,\"div\");return t.displayName=\"html\",sc=t}()),cc),i=function(){if(Vc)return Rc;Vc=1;var e=Cc,t=kc,n=Lc(),r=vc?gc:(vc=1,gc=function(e){var t=\"string\"==typeof e?e.charCodeAt(0):e;return t>=97&&t<=102||t>=65&&t<=70||t>=48&&t<=57}),o=function(){if(xc)return bc;xc=1;var e=yc?wc:(yc=1,wc=function(e){var t=\"string\"==typeof e?e.charCodeAt(0):e;return t>=97&&t<=122||t>=65&&t<=90}),t=Lc();return bc=function(n){return e(n)||t(n)}}(),i=function(){if(Sc)return Mc;Sc=1;var e=Dc;Mc=function(n){return!!t.call(e,n)&&e[n]};var t={}.hasOwnProperty;return Mc}();Rc=function(n,r){var P,F,j={};for(F in r||(r={}),c)P=r[F],j[F]=P??c[F];return(j.position.indent||j.position.start)&&(j.indent=j.position.indent||[],j.position=j.position.start),function(n,r){var c,P,F,j,B,D,O,z,_,W,q,Z,U,G,Y,X,K,J,Q,ee,te=r.additional,ne=r.nonTerminated,re=r.text,oe=r.reference,ie=r.warning,ae=r.textContext,se=r.referenceContext,le=r.warningContext,ce=r.position,de=r.indent||[],ue=n.length,he=0,fe=-1,pe=ce.column||1,me=ce.line||1,ge=\"\",ve=[];for(\"string\"==typeof te&&(te=te.charCodeAt(0)),X=we(),z=ie?function(e,t){var n=we();n.column+=t,n.offset+=t,ie.call(le,N[e],n,e)}:l,he--,ue++;++he<ue;)if(B===u&&(pe=de[fe]||1),(B=n.charCodeAt(he))===p){if((O=n.charCodeAt(he+1))===d||O===u||O===h||O===f||O===p||O===g||O!=O||te&&O===te){ge+=s(B),pe++;continue}for(Z=U=he+1,Q=U,O===w?(Q=++Z,(O=n.charCodeAt(Q))===y||O===b?(G=k,Q=++Z):G=L):G=C,c=\"\",q=\"\",j=\"\",Y=S[G],Q--;++Q<ue&&Y(O=n.charCodeAt(Q));)j+=s(O),G===C&&a.call(e,j)&&(c=j,q=e[j]);(F=n.charCodeAt(Q)===m)&&(Q++,(P=G===C&&i(j))&&(c=j,q=P)),J=1+Q-U,!F&&!ne||(j?G===C?(F&&!q?z(T,1):(c!==j&&(J=1+(Q=Z+c.length)-Z,F=!1),F||(_=c?R:E,r.attribute?(O=n.charCodeAt(Q))===v?(z(_,J),q=null):o(O)?q=null:z(_,J):z(_,J))),D=q):(F||z(V,J),(ee=D=parseInt(j,M[G]))>=55296&&ee<=57343||ee>1114111?(z(A,J),D=s(x)):D in t?(z($,J),D=t[D]):(W=\"\",I(D)&&z($,J),D>65535&&(W+=s((D-=65536)>>>10|55296),D=56320|1023&D),D=W+s(D))):G!==C&&z(H,J)),D?(ye(),X=we(),he=Q-1,pe+=Q-U+1,ve.push(D),(K=we()).offset++,oe&&oe.call(se,D,{start:X,end:K},n.slice(U-1,Q)),X=K):(j=n.slice(U-1,Q),ge+=j,pe+=j.length,he=Q-1)}else 10===B&&(me++,fe++,pe=0),B==B?(ge+=s(B),pe++):ye();return ve.join(\"\");function we(){return{line:me,column:pe,offset:he+(ce.offset||0)}}function ye(){ge&&(ve.push(ge),re&&re.call(ae,ge,{start:X,end:we()}),ge=\"\")}}(n,j)};var a={}.hasOwnProperty,s=String.fromCharCode,l=Function.prototype,c={warning:null,reference:null,text:null,warningContext:null,referenceContext:null,textContext:null,position:{},additional:null,attribute:!1,nonTerminated:!0},d=9,u=10,h=12,f=32,p=38,m=59,g=60,v=61,w=35,y=88,b=120,x=65533,C=\"named\",k=\"hexadecimal\",L=\"decimal\",M={};M[k]=16,M[L]=10;var S={};S[C]=o,S[L]=n,S[k]=r;var R=1,V=2,E=3,H=4,T=5,$=6,A=7,N={};function I(e){return e>=1&&e<=8||11===e||e>=13&&e<=31||e>=127&&e<=159||e>=64976&&e<=65007||!(65535&~e)||65534==(65535&e)}return N[R]=\"Named character references must be terminated by a semicolon\",N[V]=\"Numeric character references must be terminated by a semicolon\",N[E]=\"Named character references cannot be empty\",N[H]=\"Numeric character references cannot be empty\",N[T]=\"Named character references must be known\",N[$]=\"Numeric character references cannot be disallowed\",N[A]=\"Numeric character references cannot be outside the permissible Unicode range\",Rc}(),a=zc(),s=function(){if(Tc)return Hc;function e(e){e.languages.markup={comment:{pattern:/<!--(?:(?!<!--)[\\s\\S])*?-->/,greedy:!0},prolog:{pattern:/<\\?[\\s\\S]+?\\?>/,greedy:!0},doctype:{pattern:/<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,greedy:!0,inside:{\"internal-subset\":{pattern:/(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,lookbehind:!0,greedy:!0,inside:null},string:{pattern:/\"[^\"]*\"|'[^']*'/,greedy:!0},punctuation:/^<!|>$|[[\\]]/,\"doctype-tag\":/^DOCTYPE/i,name:/[^\\s<>'\"]+/}},cdata:{pattern:/<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,greedy:!0},tag:{pattern:/<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,greedy:!0,inside:{tag:{pattern:/^<\\/?[^\\s>\\/]+/,inside:{punctuation:/^<\\/?/,namespace:/^[^\\s>\\/:]+:/}},\"special-attr\":[],\"attr-value\":{pattern:/=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,inside:{punctuation:[{pattern:/^=/,alias:\"attr-equals\"},/\"|'/]}},punctuation:/\\/?>/,\"attr-name\":{pattern:/[^\\s>\\/]+/,inside:{namespace:/^[^\\s>\\/:]+:/}}}},entity:[{pattern:/&[\\da-z]{1,8};/i,alias:\"named-entity\"},/&#x?[\\da-f]{1,8};/i]},e.languages.markup.tag.inside[\"attr-value\"].inside.entity=e.languages.markup.entity,e.languages.markup.doctype.inside[\"internal-subset\"].inside=e.languages.markup,e.hooks.add(\"wrap\",(function(e){\"entity\"===e.type&&(e.attributes.title=e.content.value.replace(/&amp;/,\"&\"))})),Object.defineProperty(e.languages.markup.tag,\"addInlined\",{value:function(t,n){var r={};r[\"language-\"+n]={pattern:/(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,lookbehind:!0,inside:e.languages[n]},r.cdata=/^<!\\[CDATA\\[|\\]\\]>$/i;var o={\"included-cdata\":{pattern:/<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,inside:r}};o[\"language-\"+n]={pattern:/[\\s\\S]+/,inside:e.languages[n]};var i={};i[t]={pattern:RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g,(function(){return t})),\"i\"),lookbehind:!0,greedy:!0,inside:o},e.languages.insertBefore(\"markup\",\"cdata\",i)}}),Object.defineProperty(e.languages.markup.tag,\"addAttribute\",{value:function(t,n){e.languages.markup.tag.inside[\"special-attr\"].push({pattern:RegExp(/(^|[\"'\\s])/.source+\"(?:\"+t+\")\"+/\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\"i\"),lookbehind:!0,inside:{\"attr-name\":/^[^\\s=]+/,\"attr-value\":{pattern:/=[\\s\\S]+/,inside:{value:{pattern:/(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,lookbehind:!0,alias:[n,\"language-\"+n],inside:e.languages[n]},punctuation:[{pattern:/^=/,alias:\"attr-equals\"},/\"|'/]}}}})}}),e.languages.html=e.languages.markup,e.languages.mathml=e.languages.markup,e.languages.svg=e.languages.markup,e.languages.xml=e.languages.extend(\"markup\",{}),e.languages.ssml=e.languages.xml,e.languages.atom=e.languages.xml,e.languages.rss=e.languages.xml}return Tc=1,Hc=e,e.displayName=\"markup\",e.aliases=[\"html\",\"mathml\",\"svg\",\"xml\",\"ssml\",\"atom\",\"rss\"],Hc}(),l=function(){if(Ac)return $c;function e(e){!function(e){var t=/(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;e.languages.css={comment:/\\/\\*[\\s\\S]*?\\*\\//,atrule:{pattern:/@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,inside:{rule:/^@[\\w-]+/,\"selector-function-argument\":{pattern:/(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,lookbehind:!0,alias:\"selector\"},keyword:{pattern:/(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,lookbehind:!0}}},url:{pattern:RegExp(\"\\\\burl\\\\((?:\"+t.source+\"|\"+/(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source+\")\\\\)\",\"i\"),greedy:!0,inside:{function:/^url/i,punctuation:/^\\(|\\)$/,string:{pattern:RegExp(\"^\"+t.source+\"$\"),alias:\"url\"}}},selector:{pattern:RegExp(\"(^|[{}\\\\s])[^{}\\\\s](?:[^{};\\\"'\\\\s]|\\\\s+(?![\\\\s{])|\"+t.source+\")*(?=\\\\s*\\\\{)\"),lookbehind:!0},string:{pattern:t,greedy:!0},property:{pattern:/(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,lookbehind:!0},important:/!important\\b/i,function:{pattern:/(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,lookbehind:!0},punctuation:/[(){};:,]/},e.languages.css.atrule.inside.rest=e.languages.css;var n=e.languages.markup;n&&(n.tag.addInlined(\"style\",\"css\"),n.tag.addAttribute(\"style\",\"css\"))}(e)}return Ac=1,$c=e,e.displayName=\"css\",e.aliases=[],$c}(),c=function(){if(Ic)return Nc;function e(e){e.languages.clike={comment:[{pattern:/(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,lookbehind:!0,greedy:!0},{pattern:/(^|[^\\\\:])\\/\\/.*/,lookbehind:!0,greedy:!0}],string:{pattern:/([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0},\"class-name\":{pattern:/(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,lookbehind:!0,inside:{punctuation:/[.\\\\]/}},keyword:/\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,boolean:/\\b(?:false|true)\\b/,function:/\\b\\w+(?=\\()/,number:/\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,operator:/[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,punctuation:/[{}[\\];(),.:]/}}return Ic=1,Nc=e,e.displayName=\"clike\",e.aliases=[],Nc}(),d=function(){if(Fc)return Pc;function e(e){e.languages.javascript=e.languages.extend(\"clike\",{\"class-name\":[e.languages.clike[\"class-name\"],{pattern:/(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,lookbehind:!0}],keyword:[{pattern:/((?:^|\\})\\s*)catch\\b/,lookbehind:!0},{pattern:/(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,lookbehind:!0}],function:/#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,number:{pattern:RegExp(/(^|[^\\w$])/.source+\"(?:\"+/NaN|Infinity/.source+\"|\"+/0[bB][01]+(?:_[01]+)*n?/.source+\"|\"+/0[oO][0-7]+(?:_[0-7]+)*n?/.source+\"|\"+/0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source+\"|\"+/\\d+(?:_\\d+)*n/.source+\"|\"+/(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source+\")\"+/(?![\\w$])/.source),lookbehind:!0},operator:/--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/}),e.languages.javascript[\"class-name\"][0].pattern=/(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/,e.languages.insertBefore(\"javascript\",\"keyword\",{regex:{pattern:/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,lookbehind:!0,greedy:!0,inside:{\"regex-source\":{pattern:/^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,lookbehind:!0,alias:\"language-regex\",inside:e.languages.regex},\"regex-delimiter\":/^\\/|\\/$/,\"regex-flags\":/^[a-z]+$/}},\"function-variable\":{pattern:/#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,alias:\"function\"},parameter:[{pattern:/(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,lookbehind:!0,inside:e.languages.javascript},{pattern:/(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,lookbehind:!0,inside:e.languages.javascript},{pattern:/(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,lookbehind:!0,inside:e.languages.javascript},{pattern:/((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,lookbehind:!0,inside:e.languages.javascript}],constant:/\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/}),e.languages.insertBefore(\"javascript\",\"string\",{hashbang:{pattern:/^#!.*/,greedy:!0,alias:\"comment\"},\"template-string\":{pattern:/`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,greedy:!0,inside:{\"template-punctuation\":{pattern:/^`|`$/,alias:\"string\"},interpolation:{pattern:/((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,lookbehind:!0,inside:{\"interpolation-punctuation\":{pattern:/^\\$\\{|\\}$/,alias:\"punctuation\"},rest:e.languages.javascript}},string:/[\\s\\S]+/}},\"string-property\":{pattern:/((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,lookbehind:!0,greedy:!0,alias:\"property\"}}),e.languages.insertBefore(\"javascript\",\"operator\",{\"literal-property\":{pattern:/((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,lookbehind:!0,alias:\"property\"}}),e.languages.markup&&(e.languages.markup.tag.addInlined(\"script\",\"javascript\"),e.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\"javascript\")),e.languages.js=e.languages.javascript}return Fc=1,Pc=e,e.displayName=\"javascript\",e.aliases=[\"js\"],Pc}();r();var u={}.hasOwnProperty;function h(){}h.prototype=a;var f=new h;function p(e){if(\"function\"!=typeof e||!e.displayName)throw new Error(\"Expected `function` for `grammar`, got `\"+e+\"`\");void 0===f.languages[e.displayName]&&e(f)}return jc=f,f.highlight=function(e,t){var n,r=a.highlight;if(\"string\"!=typeof e)throw new Error(\"Expected `string` for `value`, got `\"+e+\"`\");if(\"Object\"===f.util.type(t))n=t,t=null;else{if(\"string\"!=typeof t)throw new Error(\"Expected `string` for `name`, got `\"+t+\"`\");if(!u.call(f.languages,t))throw new Error(\"Unknown language: `\"+t+\"` is not registered\");n=f.languages[t]}return r.call(this,e,n,t)},f.register=p,f.alias=function(e,t){var n,r,o,i,a=f.languages,s=e;for(n in t&&((s={})[e]=t),s)for(o=(r=\"string\"==typeof(r=s[n])?[r]:r).length,i=-1;++i<o;)a[r[i]]=a[n]},f.registered=function(e){if(\"string\"!=typeof e)throw new Error(\"Expected `string` for `language`, got `\"+e+\"`\");return u.call(f.languages,e)},f.listLanguages=function(){var e,t=f.languages,n=[];for(e in t)u.call(t,e)&&\"object\"==typeof t[e]&&n.push(e);return n},p(s),p(l),p(c),p(d),f.util.encode=function(e){return e},f.Token.stringify=function(e,t,n){var r;return\"string\"==typeof e?{type:\"text\",value:e}:\"Array\"===f.util.type(e)?function(e,t){for(var n,r=[],o=e.length,i=-1;++i<o;)\"\"!==(n=e[i])&&null!=n&&r.push(n);for(i=-1,o=r.length;++i<o;)n=r[i],r[i]=f.Token.stringify(n,t,r);return r}(e,t):(r={type:e.type,content:f.Token.stringify(e.content,t,n),tag:\"span\",classes:[\"token\",e.type],attributes:{},language:t,parent:n},e.alias&&(r.classes=r.classes.concat(e.alias)),f.hooks.run(\"wrap\",r),o(r.tag+\".\"+r.classes.join(\".\"),function(e){var t;for(t in e)e[t]=i(e[t]);return e}(r.attributes),r.content))},jc}(),n=function(){if(_c)return od;_c=1;var e=react__WEBPACK_IMPORTED_MODULE_1__;return od.depth=function t(n){return function(r,o){return function(n,r,o){if(n.tagName){var i=n.properties&&Array.isArray(n.properties.className)?n.properties.className.join(\" \"):n.properties.className;return e.createElement(n.tagName,Object.assign({key:\"fract-\".concat(o,\"-\").concat(r)},n.properties,{className:i}),n.children&&n.children.map(t(o+1)))}return n.value}(r,o,n)}},od}(),r=ad(),i=e.createElement;function a(e){var o=\"language-\".concat(e.language),a={className:o},s={className:[e.className||\"refractor\",o].filter(Boolean).join(\" \")};e.inline&&(a.style={display:\"inline\"},a.className=e.className||\"refractor\");var l=t.highlight(e.value,e.language);e.markers&&e.markers.length>0&&(l=r(l,{markers:e.markers}));var c=0===l.length?e.value:l.map(n.depth(0)),d=i(\"code\",a,c);return e.inline?d:i(\"pre\",s,d)}return a.registerLanguage=function(e){return t.register(e)},a.hasLanguage=function(e){return t.registered(e)},nd=a}());const ld=[\"top\",\"right\",\"bottom\",\"left\"],cd=Math.min,dd=Math.max,ud=Math.round,hd=Math.floor,fd=e=>({x:e,y:e}),pd={left:\"right\",right:\"left\",bottom:\"top\",top:\"bottom\"},md={start:\"end\",end:\"start\"};function gd(e,t,n){return dd(e,cd(t,n))}function vd(e,t){return\"function\"==typeof e?e(t):e}function wd(e){return e.split(\"-\")[0]}function yd(e){return e.split(\"-\")[1]}function bd(e){return\"x\"===e?\"y\":\"x\"}function xd(e){return\"y\"===e?\"height\":\"width\"}function Cd(e){return[\"top\",\"bottom\"].includes(wd(e))?\"y\":\"x\"}function kd(e){return bd(Cd(e))}function Ld(e){return e.replace(/start|end/g,(e=>md[e]))}function Md(e){return e.replace(/left|right|bottom|top/g,(e=>pd[e]))}function Sd(e){return\"number\"!=typeof e?function(e){return{top:0,right:0,bottom:0,left:0,...e}}(e):{top:e,right:e,bottom:e,left:e}}function Rd(e){const{x:t,y:n,width:r,height:o}=e;return{width:r,height:o,top:n,left:t,right:t+r,bottom:n+o,x:t,y:n}}function Vd(e,t,n){let{reference:r,floating:o}=e;const i=Cd(t),a=kd(t),s=xd(a),l=wd(t),c=\"y\"===i,d=r.x+r.width/2-o.width/2,u=r.y+r.height/2-o.height/2,h=r[s]/2-o[s]/2;let f;switch(l){case\"top\":f={x:d,y:r.y-o.height};break;case\"bottom\":f={x:d,y:r.y+r.height};break;case\"right\":f={x:r.x+r.width,y:u};break;case\"left\":f={x:r.x-o.width,y:u};break;default:f={x:r.x,y:r.y}}switch(yd(t)){case\"start\":f[a]-=h*(n&&c?-1:1);break;case\"end\":f[a]+=h*(n&&c?-1:1)}return f}async function Ed(e,t){var n;void 0===t&&(t={});const{x:r,y:o,platform:i,rects:a,elements:s,strategy:l}=e,{boundary:c=\"clippingAncestors\",rootBoundary:d=\"viewport\",elementContext:u=\"floating\",altBoundary:h=!1,padding:f=0}=vd(t,e),p=Sd(f),m=s[h?\"floating\"===u?\"reference\":\"floating\":u],g=Rd(await i.getClippingRect({element:null==(n=await(null==i.isElement?void 0:i.isElement(m)))||n?m:m.contextElement||await(null==i.getDocumentElement?void 0:i.getDocumentElement(s.floating)),boundary:c,rootBoundary:d,strategy:l})),v=\"floating\"===u?{x:r,y:o,width:a.floating.width,height:a.floating.height}:a.reference,w=await(null==i.getOffsetParent?void 0:i.getOffsetParent(s.floating)),y=await(null==i.isElement?void 0:i.isElement(w))&&await(null==i.getScale?void 0:i.getScale(w))||{x:1,y:1},b=Rd(i.convertOffsetParentRelativeRectToViewportRelativeRect?await i.convertOffsetParentRelativeRectToViewportRelativeRect({elements:s,rect:v,offsetParent:w,strategy:l}):v);return{top:(g.top-b.top+p.top)/y.y,bottom:(b.bottom-g.bottom+p.bottom)/y.y,left:(g.left-b.left+p.left)/y.x,right:(b.right-g.right+p.right)/y.x}}function Hd(e,t){return{top:e.top-t.height,right:e.right-t.width,bottom:e.bottom-t.height,left:e.left-t.width}}function Td(e){return ld.some((t=>e[t]>=0))}function $d(){return typeof window<\"u\"}function Ad(e){return Pd(e)?(e.nodeName||\"\").toLowerCase():\"#document\"}function Nd(e){var t;return(null==e||null==(t=e.ownerDocument)?void 0:t.defaultView)||window}function Id(e){var t;return null==(t=(Pd(e)?e.ownerDocument:e.document)||window.document)?void 0:t.documentElement}function Pd(e){return!!$d()&&(e instanceof Node||e instanceof Nd(e).Node)}function Fd(e){return!!$d()&&(e instanceof Element||e instanceof Nd(e).Element)}function jd(e){return!!$d()&&(e instanceof HTMLElement||e instanceof Nd(e).HTMLElement)}function Bd(e){return!(!$d()||typeof ShadowRoot>\"u\")&&(e instanceof ShadowRoot||e instanceof Nd(e).ShadowRoot)}function Dd(e){const{overflow:t,overflowX:n,overflowY:r,display:o}=Zd(e);return/auto|scroll|overlay|hidden|clip/.test(t+r+n)&&![\"inline\",\"contents\"].includes(o)}function Od(e){return[\"table\",\"td\",\"th\"].includes(Ad(e))}function zd(e){return[\":popover-open\",\":modal\"].some((t=>{try{return e.matches(t)}catch{return!1}}))}function _d(e){const t=Wd(),n=Fd(e)?Zd(e):e;return[\"transform\",\"translate\",\"scale\",\"rotate\",\"perspective\"].some((e=>!!n[e]&&\"none\"!==n[e]))||!!n.containerType&&\"normal\"!==n.containerType||!t&&!!n.backdropFilter&&\"none\"!==n.backdropFilter||!t&&!!n.filter&&\"none\"!==n.filter||[\"transform\",\"translate\",\"scale\",\"rotate\",\"perspective\",\"filter\"].some((e=>(n.willChange||\"\").includes(e)))||[\"paint\",\"layout\",\"strict\",\"content\"].some((e=>(n.contain||\"\").includes(e)))}function Wd(){return!(typeof CSS>\"u\"||!CSS.supports)&&CSS.supports(\"-webkit-backdrop-filter\",\"none\")}function qd(e){return[\"html\",\"body\",\"#document\"].includes(Ad(e))}function Zd(e){return Nd(e).getComputedStyle(e)}function Ud(e){return Fd(e)?{scrollLeft:e.scrollLeft,scrollTop:e.scrollTop}:{scrollLeft:e.scrollX,scrollTop:e.scrollY}}function Gd(e){if(\"html\"===Ad(e))return e;const t=e.assignedSlot||e.parentNode||Bd(e)&&e.host||Id(e);return Bd(t)?t.host:t}function Yd(e){const t=Gd(e);return qd(t)?e.ownerDocument?e.ownerDocument.body:e.body:jd(t)&&Dd(t)?t:Yd(t)}function Xd(e,t,n){var r;void 0===t&&(t=[]),void 0===n&&(n=!0);const o=Yd(e),i=o===(null==(r=e.ownerDocument)?void 0:r.body),a=Nd(o);if(i){const e=Kd(a);return t.concat(a,a.visualViewport||[],Dd(o)?o:[],e&&n?Xd(e):[])}return t.concat(o,Xd(o,[],n))}function Kd(e){return e.parent&&Object.getPrototypeOf(e.parent)?e.frameElement:null}function Jd(e){const t=Zd(e);let n=parseFloat(t.width)||0,r=parseFloat(t.height)||0;const o=jd(e),i=o?e.offsetWidth:n,a=o?e.offsetHeight:r,s=ud(n)!==i||ud(r)!==a;return s&&(n=i,r=a),{width:n,height:r,$:s}}function Qd(e){return Fd(e)?e:e.contextElement}function eu(e){const t=Qd(e);if(!jd(t))return fd(1);const n=t.getBoundingClientRect(),{width:r,height:o,$:i}=Jd(t);let a=(i?ud(n.width):n.width)/r,s=(i?ud(n.height):n.height)/o;return(!a||!Number.isFinite(a))&&(a=1),(!s||!Number.isFinite(s))&&(s=1),{x:a,y:s}}const tu=/* @__PURE__ */fd(0);function nu(e){const t=Nd(e);return Wd()&&t.visualViewport?{x:t.visualViewport.offsetLeft,y:t.visualViewport.offsetTop}:tu}function ru(e,t,n,r){void 0===t&&(t=!1),void 0===n&&(n=!1);const o=e.getBoundingClientRect(),i=Qd(e);let a=fd(1);t&&(r?Fd(r)&&(a=eu(r)):a=eu(e));const s=function(e,t,n){return void 0===t&&(t=!1),!(!n||t&&n!==Nd(e))&&t}(i,n,r)?nu(i):fd(0);let l=(o.left+s.x)/a.x,c=(o.top+s.y)/a.y,d=o.width/a.x,u=o.height/a.y;if(i){const e=Nd(i),t=r&&Fd(r)?Nd(r):r;let n=e,o=Kd(n);for(;o&&r&&t!==n;){const e=eu(o),t=o.getBoundingClientRect(),r=Zd(o),i=t.left+(o.clientLeft+parseFloat(r.paddingLeft))*e.x,a=t.top+(o.clientTop+parseFloat(r.paddingTop))*e.y;l*=e.x,c*=e.y,d*=e.x,u*=e.y,l+=i,c+=a,n=Nd(o),o=Kd(n)}}return Rd({width:d,height:u,x:l,y:c})}function ou(e,t){const n=Ud(e).scrollLeft;return t?t.left+n:ru(Id(e)).left+n}function iu(e,t,n){void 0===n&&(n=!1);const r=e.getBoundingClientRect();return{x:r.left+t.scrollLeft-(n?0:ou(e,r)),y:r.top+t.scrollTop}}function au(e,t,n){let r;if(\"viewport\"===t)r=function(e,t){const n=Nd(e),r=Id(e),o=n.visualViewport;let i=r.clientWidth,a=r.clientHeight,s=0,l=0;if(o){i=o.width,a=o.height;const e=Wd();(!e||e&&\"fixed\"===t)&&(s=o.offsetLeft,l=o.offsetTop)}return{width:i,height:a,x:s,y:l}}(e,n);else if(\"document\"===t)r=function(e){const t=Id(e),n=Ud(e),r=e.ownerDocument.body,o=dd(t.scrollWidth,t.clientWidth,r.scrollWidth,r.clientWidth),i=dd(t.scrollHeight,t.clientHeight,r.scrollHeight,r.clientHeight);let a=-n.scrollLeft+ou(e);const s=-n.scrollTop;return\"rtl\"===Zd(r).direction&&(a+=dd(t.clientWidth,r.clientWidth)-o),{width:o,height:i,x:a,y:s}}(Id(e));else if(Fd(t))r=function(e,t){const n=ru(e,!0,\"fixed\"===t),r=n.top+e.clientTop,o=n.left+e.clientLeft,i=jd(e)?eu(e):fd(1);return{width:e.clientWidth*i.x,height:e.clientHeight*i.y,x:o*i.x,y:r*i.y}}(t,n);else{const n=nu(e);r={x:t.x-n.x,y:t.y-n.y,width:t.width,height:t.height}}return Rd(r)}function su(e,t){const n=Gd(e);return!(n===t||!Fd(n)||qd(n))&&(\"fixed\"===Zd(n).position||su(n,t))}function lu(e,t){const n=t.get(e);if(n)return n;let r=Xd(e,[],!1).filter((e=>Fd(e)&&\"body\"!==Ad(e))),o=null;const i=\"fixed\"===Zd(e).position;let a=i?Gd(e):e;for(;Fd(a)&&!qd(a);){const t=Zd(a),n=_d(a);!n&&\"fixed\"===t.position&&(o=null),(i?!n&&!o:!n&&\"static\"===t.position&&o&&[\"absolute\",\"fixed\"].includes(o.position)||Dd(a)&&!n&&su(e,a))?r=r.filter((e=>e!==a)):o=t,a=Gd(a)}return t.set(e,r),r}function cu(e,t,n){const r=jd(t),o=Id(t),i=\"fixed\"===n,a=ru(e,!0,i,t);let s={scrollLeft:0,scrollTop:0};const l=fd(0);if(r||!r&&!i)if((\"body\"!==Ad(t)||Dd(o))&&(s=Ud(t)),r){const e=ru(t,!0,i,t);l.x=e.x+t.clientLeft,l.y=e.y+t.clientTop}else o&&(l.x=ou(o));const c=!o||r||i?fd(0):iu(o,s);return{x:a.left+s.scrollLeft-l.x-c.x,y:a.top+s.scrollTop-l.y-c.y,width:a.width,height:a.height}}function du(e){return\"static\"===Zd(e).position}function uu(e,t){if(!jd(e)||\"fixed\"===Zd(e).position)return null;if(t)return t(e);let n=e.offsetParent;return Id(e)===n&&(n=n.ownerDocument.body),n}function hu(e,t){const n=Nd(e);if(zd(e))return n;if(!jd(e)){let t=Gd(e);for(;t&&!qd(t);){if(Fd(t)&&!du(t))return t;t=Gd(t)}return n}let r=uu(e,t);for(;r&&Od(r)&&du(r);)r=uu(r,t);return r&&qd(r)&&du(r)&&!_d(r)?n:r||function(e){let t=Gd(e);for(;jd(t)&&!qd(t);){if(_d(t))return t;if(zd(t))return null;t=Gd(t)}return null}(e)||n}const fu={convertOffsetParentRelativeRectToViewportRelativeRect:function(e){let{elements:t,rect:n,offsetParent:r,strategy:o}=e;const i=\"fixed\"===o,a=Id(r),s=!!t&&zd(t.floating);if(r===a||s&&i)return n;let l={scrollLeft:0,scrollTop:0},c=fd(1);const d=fd(0),u=jd(r);if((u||!u&&!i)&&((\"body\"!==Ad(r)||Dd(a))&&(l=Ud(r)),jd(r))){const e=ru(r);c=eu(r),d.x=e.x+r.clientLeft,d.y=e.y+r.clientTop}const h=!a||u||i?fd(0):iu(a,l,!0);return{width:n.width*c.x,height:n.height*c.y,x:n.x*c.x-l.scrollLeft*c.x+d.x+h.x,y:n.y*c.y-l.scrollTop*c.y+d.y+h.y}},getDocumentElement:Id,getClippingRect:function(e){let{element:t,boundary:n,rootBoundary:r,strategy:o}=e;const i=[...\"clippingAncestors\"===n?zd(t)?[]:lu(t,this._c):[].concat(n),r],a=i[0],s=i.reduce(((e,n)=>{const r=au(t,n,o);return e.top=dd(r.top,e.top),e.right=cd(r.right,e.right),e.bottom=cd(r.bottom,e.bottom),e.left=dd(r.left,e.left),e}),au(t,a,o));return{width:s.right-s.left,height:s.bottom-s.top,x:s.left,y:s.top}},getOffsetParent:hu,getElementRects:async function(e){const t=this.getOffsetParent||hu,n=this.getDimensions,r=await n(e.floating);return{reference:cu(e.reference,await t(e.floating),e.strategy),floating:{x:0,y:0,width:r.width,height:r.height}}},getClientRects:function(e){return Array.from(e.getClientRects())},getDimensions:function(e){const{width:t,height:n}=Jd(e);return{width:t,height:n}},getScale:eu,isElement:Fd,isRTL:function(e){return\"rtl\"===Zd(e).direction}};function pu(e,t){return e.x===t.x&&e.y===t.y&&e.width===t.width&&e.height===t.height}function mu(e,t,n,r){void 0===r&&(r={});const{ancestorScroll:o=!0,ancestorResize:i=!0,elementResize:a=\"function\"==typeof ResizeObserver,layoutShift:s=\"function\"==typeof IntersectionObserver,animationFrame:l=!1}=r,c=Qd(e),d=o||i?[...c?Xd(c):[],...Xd(t)]:[];d.forEach((e=>{o&&e.addEventListener(\"scroll\",n,{passive:!0}),i&&e.addEventListener(\"resize\",n)}));const u=c&&s?function(e,t){let n,r=null;const o=Id(e);function i(){var e;clearTimeout(n),null==(e=r)||e.disconnect(),r=null}return function a(s,l){void 0===s&&(s=!1),void 0===l&&(l=1),i();const c=e.getBoundingClientRect(),{left:d,top:u,width:h,height:f}=c;if(s||t(),!h||!f)return;const p={rootMargin:-hd(u)+\"px \"+-hd(o.clientWidth-(d+h))+\"px \"+-hd(o.clientHeight-(u+f))+\"px \"+-hd(d)+\"px\",threshold:dd(0,cd(1,l))||1};let m=!0;function g(t){const r=t[0].intersectionRatio;if(r!==l){if(!m)return a();r?a(!1,r):n=setTimeout((()=>{a(!1,1e-7)}),1e3)}1===r&&!pu(c,e.getBoundingClientRect())&&a(),m=!1}try{r=new IntersectionObserver(g,{...p,root:o.ownerDocument})}catch{r=new IntersectionObserver(g,p)}r.observe(e)}(!0),i}(c,n):null;let h=-1,f=null;a&&(f=new ResizeObserver((e=>{let[r]=e;r&&r.target===c&&f&&(f.unobserve(t),cancelAnimationFrame(h),h=requestAnimationFrame((()=>{var e;null==(e=f)||e.observe(t)}))),n()})),c&&!l&&f.observe(c),f.observe(t));let p,m=l?ru(e):null;return l&&function t(){const r=ru(e);m&&!pu(m,r)&&n(),m=r,p=requestAnimationFrame(t)}(),n(),()=>{var e;d.forEach((e=>{o&&e.removeEventListener(\"scroll\",n),i&&e.removeEventListener(\"resize\",n)})),u?.(),null==(e=f)||e.disconnect(),f=null,l&&cancelAnimationFrame(p)}}const gu=Ed,vu=function(e){return void 0===e&&(e=0),{name:\"offset\",options:e,async fn(t){var n,r;const{x:o,y:i,placement:a,middlewareData:s}=t,l=await async function(e,t){const{placement:n,platform:r,elements:o}=e,i=await(null==r.isRTL?void 0:r.isRTL(o.floating)),a=wd(n),s=yd(n),l=\"y\"===Cd(n),c=[\"left\",\"top\"].includes(a)?-1:1,d=i&&l?-1:1,u=vd(t,e);let{mainAxis:h,crossAxis:f,alignmentAxis:p}=\"number\"==typeof u?{mainAxis:u,crossAxis:0,alignmentAxis:null}:{mainAxis:u.mainAxis||0,crossAxis:u.crossAxis||0,alignmentAxis:u.alignmentAxis};return s&&\"number\"==typeof p&&(f=\"end\"===s?-1*p:p),l?{x:f*d,y:h*c}:{x:h*c,y:f*d}}(t,e);return a===(null==(n=s.offset)?void 0:n.placement)&&null!=(r=s.arrow)&&r.alignmentOffset?{}:{x:o+l.x,y:i+l.y,data:{...l,placement:a}}}}},wu=function(e){return void 0===e&&(e={}),{name:\"shift\",options:e,async fn(t){const{x:n,y:r,placement:o}=t,{mainAxis:i=!0,crossAxis:a=!1,limiter:s={fn:e=>{let{x:t,y:n}=e;return{x:t,y:n}}},...l}=vd(e,t),c={x:n,y:r},d=await Ed(t,l),u=Cd(wd(o)),h=bd(u);let f=c[h],p=c[u];if(i){const e=\"y\"===h?\"bottom\":\"right\";f=gd(f+d[\"y\"===h?\"top\":\"left\"],f,f-d[e])}if(a){const e=\"y\"===u?\"bottom\":\"right\";p=gd(p+d[\"y\"===u?\"top\":\"left\"],p,p-d[e])}const m=s.fn({...t,[h]:f,[u]:p});return{...m,data:{x:m.x-n,y:m.y-r,enabled:{[h]:i,[u]:a}}}}}},yu=function(e){return void 0===e&&(e={}),{name:\"flip\",options:e,async fn(t){var n,r;const{placement:o,middlewareData:i,rects:a,initialPlacement:s,platform:l,elements:c}=t,{mainAxis:d=!0,crossAxis:u=!0,fallbackPlacements:h,fallbackStrategy:f=\"bestFit\",fallbackAxisSideDirection:p=\"none\",flipAlignment:m=!0,...g}=vd(e,t);if(null!=(n=i.arrow)&&n.alignmentOffset)return{};const v=wd(o),w=Cd(s),y=wd(s)===s,b=await(null==l.isRTL?void 0:l.isRTL(c.floating)),x=h||(y||!m?[Md(s)]:function(e){const t=Md(e);return[Ld(e),t,Ld(t)]}(s)),C=\"none\"!==p;!h&&C&&x.push(...function(e,t,n,r){const o=yd(e);let i=function(e,t,n){const r=[\"left\",\"right\"],o=[\"right\",\"left\"],i=[\"top\",\"bottom\"],a=[\"bottom\",\"top\"];switch(e){case\"top\":case\"bottom\":return n?t?o:r:t?r:o;case\"left\":case\"right\":return t?i:a;default:return[]}}(wd(e),\"start\"===n,r);return o&&(i=i.map((e=>e+\"-\"+o)),t&&(i=i.concat(i.map(Ld)))),i}(s,m,p,b));const k=[s,...x],L=await Ed(t,g),M=[];let S=(null==(r=i.flip)?void 0:r.overflows)||[];if(d&&M.push(L[v]),u){const e=function(e,t,n){void 0===n&&(n=!1);const r=yd(e),o=kd(e),i=xd(o);let a=\"x\"===o?r===(n?\"end\":\"start\")?\"right\":\"left\":\"start\"===r?\"bottom\":\"top\";return t.reference[i]>t.floating[i]&&(a=Md(a)),[a,Md(a)]}(o,a,b);M.push(L[e[0]],L[e[1]])}if(S=[...S,{placement:o,overflows:M}],!M.every((e=>e<=0))){var R,V;const e=((null==(R=i.flip)?void 0:R.index)||0)+1,t=k[e];if(t)return{data:{index:e,overflows:S},reset:{placement:t}};let n=null==(V=S.filter((e=>e.overflows[0]<=0)).sort(((e,t)=>e.overflows[1]-t.overflows[1]))[0])?void 0:V.placement;if(!n)switch(f){case\"bestFit\":{var E;const e=null==(E=S.filter((e=>{if(C){const t=Cd(e.placement);return t===w||\"y\"===t}return!0})).map((e=>[e.placement,e.overflows.filter((e=>e>0)).reduce(((e,t)=>e+t),0)])).sort(((e,t)=>e[1]-t[1]))[0])?void 0:E[0];e&&(n=e);break}case\"initialPlacement\":n=s}if(o!==n)return{reset:{placement:n}}}return{}}}},bu=function(e){return void 0===e&&(e={}),{name:\"hide\",options:e,async fn(t){const{rects:n}=t,{strategy:r=\"referenceHidden\",...o}=vd(e,t);switch(r){case\"referenceHidden\":{const e=Hd(await Ed(t,{...o,elementContext:\"reference\"}),n.reference);return{data:{referenceHiddenOffsets:e,referenceHidden:Td(e)}}}case\"escaped\":{const e=Hd(await Ed(t,{...o,altBoundary:!0}),n.floating);return{data:{escapedOffsets:e,escaped:Td(e)}}}default:return{}}}}},xu=e=>({name:\"arrow\",options:e,async fn(t){const{x:n,y:r,placement:o,rects:i,platform:a,elements:s,middlewareData:l}=t,{element:c,padding:d=0}=vd(e,t)||{};if(null==c)return{};const u=Sd(d),h={x:n,y:r},f=kd(o),p=xd(f),m=await a.getDimensions(c),g=\"y\"===f,v=g?\"top\":\"left\",w=g?\"bottom\":\"right\",y=g?\"clientHeight\":\"clientWidth\",b=i.reference[p]+i.reference[f]-h[f]-i.floating[p],x=h[f]-i.reference[f],C=await(null==a.getOffsetParent?void 0:a.getOffsetParent(c));let k=C?C[y]:0;(!k||!await(null==a.isElement?void 0:a.isElement(C)))&&(k=s.floating[y]||i.floating[p]);const L=b/2-x/2,M=k/2-m[p]/2-1,S=cd(u[v],M),R=cd(u[w],M),V=S,E=k-m[p]-R,H=k/2-m[p]/2+L,T=gd(V,H,E),$=!l.arrow&&null!=yd(o)&&H!==T&&i.reference[p]/2-(H<V?S:R)-m[p]/2<0,A=$?H<V?H-V:H-E:0;return{[f]:h[f]+A,data:{[f]:T,centerOffset:H-T-A,...$&&{alignmentOffset:A}},reset:$}}});var Cu=typeof document<\"u\"?react__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect:react__WEBPACK_IMPORTED_MODULE_1__.useEffect;function ku(e,t){if(e===t)return!0;if(typeof e!=typeof t)return!1;if(\"function\"==typeof e&&e.toString()===t.toString())return!0;let n,r,o;if(e&&t&&\"object\"==typeof e){if(Array.isArray(e)){if(n=e.length,n!==t.length)return!1;for(r=n;0!=r--;)if(!ku(e[r],t[r]))return!1;return!0}if(o=Object.keys(e),n=o.length,n!==Object.keys(t).length)return!1;for(r=n;0!=r--;)if(!{}.hasOwnProperty.call(t,o[r]))return!1;for(r=n;0!=r--;){const n=o[r];if(!(\"_owner\"===n&&e.$$typeof||ku(e[n],t[n])))return!1}return!0}return e!=e&&t!=t}function Lu(e){return typeof window>\"u\"?1:(e.ownerDocument.defaultView||window).devicePixelRatio||1}function Mu(e,t){const n=Lu(e);return Math.round(t*n)/n}function Su(e){const t=react__WEBPACK_IMPORTED_MODULE_1__.useRef(e);return Cu((()=>{t.current=e})),t}function Ru(e){void 0===e&&(e={});const{placement:t=\"bottom\",strategy:n=\"absolute\",middleware:o=[],platform:i,elements:{reference:a,floating:s}={},transform:l=!0,whileElementsMounted:c,open:d}=e,[u,h]=react__WEBPACK_IMPORTED_MODULE_1__.useState({x:0,y:0,strategy:n,placement:t,middlewareData:{},isPositioned:!1}),[f,p]=react__WEBPACK_IMPORTED_MODULE_1__.useState(o);ku(f,o)||p(o);const[m,g]=react__WEBPACK_IMPORTED_MODULE_1__.useState(null),[v,w]=react__WEBPACK_IMPORTED_MODULE_1__.useState(null),y=react__WEBPACK_IMPORTED_MODULE_1__.useCallback((e=>{e!==k.current&&(k.current=e,g(e))}),[]),b=react__WEBPACK_IMPORTED_MODULE_1__.useCallback((e=>{e!==L.current&&(L.current=e,w(e))}),[]),x=a||m,C=s||v,k=react__WEBPACK_IMPORTED_MODULE_1__.useRef(null),L=react__WEBPACK_IMPORTED_MODULE_1__.useRef(null),M=react__WEBPACK_IMPORTED_MODULE_1__.useRef(u),S=null!=c,V=Su(c),E=Su(i),H=Su(d),T=react__WEBPACK_IMPORTED_MODULE_1__.useCallback((()=>{if(!k.current||!L.current)return;const e={placement:t,strategy:n,middleware:f};E.current&&(e.platform=E.current),((e,t,n)=>{const r=/* @__PURE__ */new Map,o={platform:fu,...n},i={...o.platform,_c:r};return(async(e,t,n)=>{const{placement:r=\"bottom\",strategy:o=\"absolute\",middleware:i=[],platform:a}=n,s=i.filter(Boolean),l=await(null==a.isRTL?void 0:a.isRTL(t));let c=await a.getElementRects({reference:e,floating:t,strategy:o}),{x:d,y:u}=Vd(c,r,l),h=r,f={},p=0;for(let n=0;n<s.length;n++){const{name:i,fn:m}=s[n],{x:g,y:v,data:w,reset:y}=await m({x:d,y:u,initialPlacement:r,placement:h,strategy:o,middlewareData:f,rects:c,platform:a,elements:{reference:e,floating:t}});d=g??d,u=v??u,f={...f,[i]:{...f[i],...w}},y&&p<=50&&(p++,\"object\"==typeof y&&(y.placement&&(h=y.placement),y.rects&&(c=!0===y.rects?await a.getElementRects({reference:e,floating:t,strategy:o}):y.rects),({x:d,y:u}=Vd(c,h,l))),n=-1)}return{x:d,y:u,placement:h,strategy:o,middlewareData:f}})(e,t,{...o,platform:i})})(k.current,L.current,e).then((e=>{const t={...e,isPositioned:!1!==H.current};$.current&&!ku(M.current,t)&&(M.current=t,react_dom__WEBPACK_IMPORTED_MODULE_2__.flushSync((()=>{h(t)})))}))}),[f,t,n,E,H]);Cu((()=>{!1===d&&M.current.isPositioned&&(M.current.isPositioned=!1,h((e=>({...e,isPositioned:!1}))))}),[d]);const $=react__WEBPACK_IMPORTED_MODULE_1__.useRef(!1);Cu((()=>($.current=!0,()=>{$.current=!1})),[]),Cu((()=>{if(x&&(k.current=x),C&&(L.current=C),x&&C){if(V.current)return V.current(x,C,T);T()}}),[x,C,T,V,S]);const A=react__WEBPACK_IMPORTED_MODULE_1__.useMemo((()=>({reference:k,floating:L,setReference:y,setFloating:b})),[y,b]),N=react__WEBPACK_IMPORTED_MODULE_1__.useMemo((()=>({reference:x,floating:C})),[x,C]),I=react__WEBPACK_IMPORTED_MODULE_1__.useMemo((()=>{const e={position:n,left:0,top:0};if(!N.floating)return e;const t=Mu(N.floating,u.x),r=Mu(N.floating,u.y);return l?{...e,transform:\"translate(\"+t+\"px, \"+r+\"px)\",...Lu(N.floating)>=1.5&&{willChange:\"transform\"}}:{position:n,left:t,top:r}}),[n,l,N.floating,u.x,u.y]);return react__WEBPACK_IMPORTED_MODULE_1__.useMemo((()=>({...u,update:T,refs:A,elements:N,floatingStyles:I})),[u,T,A,N,I])}const Vu=e=>({name:\"arrow\",options:e,fn(t){const{element:n,padding:r}=\"function\"==typeof e?e(t):e;return n&&(o=n,{}.hasOwnProperty.call(o,\"current\"))?null!=n.current?xu({element:n.current,padding:r}).fn(t):{}:n?xu({element:n,padding:r}).fn(t):{};var o}}),Eu=(e,t)=>({...vu(e),options:[e,t]}),Hu=(e,t)=>({...wu(e),options:[e,t]}),Tu=(e,t)=>({...yu(e),options:[e,t]}),$u=(e,t)=>({...Vu(e),options:[e,t]}),Au=(0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({});function Nu(e){const t=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);return null===t.current&&(t.current=e()),t.current}const Iu=(0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(null),Pu=(0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({transformPagePoint:e=>e,isStatic:!1,reducedMotion:\"never\"});class Fu extends react__WEBPACK_IMPORTED_MODULE_1__.Component{getSnapshotBeforeUpdate(e){const t=this.props.childRef.current;if(t&&e.isPresent&&!this.props.isPresent){const e=this.props.sizeRef.current;e.height=t.offsetHeight||0,e.width=t.offsetWidth||0,e.top=t.offsetTop,e.left=t.offsetLeft}return null}componentDidUpdate(){}render(){return this.props.children}}function ju({children:t,isPresent:n}){const o=(0,react__WEBPACK_IMPORTED_MODULE_1__.useId)(),a=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),s=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)({width:0,height:0,top:0,left:0}),{nonce:l}=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(Pu);return (0,react__WEBPACK_IMPORTED_MODULE_1__.useInsertionEffect)((()=>{const{width:e,height:t,top:r,left:i}=s.current;if(n||!a.current||!e||!t)return;a.current.dataset.motionPopId=o;const c=document.createElement(\"style\");return l&&(c.nonce=l),document.head.appendChild(c),c.sheet&&c.sheet.insertRule(`\\n          [data-motion-pop-id=\"${o}\"] {\\n            position: absolute !important;\\n            width: ${e}px !important;\\n            height: ${t}px !important;\\n            top: ${r}px !important;\\n            left: ${i}px !important;\\n          }\\n        `),()=>{document.head.removeChild(c)}}),[n]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Fu,{isPresent:n,childRef:a,sizeRef:s,children:react__WEBPACK_IMPORTED_MODULE_1__.cloneElement(t,{ref:a})})}const Bu=({children:t,initial:n,isPresent:o,onExitComplete:i,custom:a,presenceAffectsLayout:l,mode:c})=>{const d=Nu(Du),u=(0,react__WEBPACK_IMPORTED_MODULE_1__.useId)(),h=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{d.set(e,!0);for(const e of d.values())if(!e)return;i&&i()}),[d,i]),p=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>({id:u,initial:n,isPresent:o,custom:a,onExitComplete:h,register:e=>(d.set(e,!1),()=>d.delete(e))})),l?[Math.random(),h]:[o,h]);return (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>{d.forEach(((e,t)=>d.set(t,!1)))}),[o]),react__WEBPACK_IMPORTED_MODULE_1__.useEffect((()=>{!o&&!d.size&&i&&i()}),[o]),\"popLayout\"===c&&(t=(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ju,{isPresent:o,children:t})),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Iu.Provider,{value:p,children:t})};function Du(){/* @__PURE__ */\nreturn new Map}function Ou(e=!0){const t=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(Iu);if(null===t)return[!0,null];const{isPresent:n,onExitComplete:r,register:o}=t,a=(0,react__WEBPACK_IMPORTED_MODULE_1__.useId)();(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{e&&o(a)}),[e]);const s=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((()=>e&&r&&r(a)),[a,r,e]);return!n&&r?[!1,s]:[!0]}const zu=e=>e.key||\"\";function _u(e){const t=[];return react__WEBPACK_IMPORTED_MODULE_1__.Children.forEach(e,(e=>{(0,react__WEBPACK_IMPORTED_MODULE_1__.isValidElement)(e)&&t.push(e)})),t}const Wu=typeof window<\"u\",qu=Wu?react__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect:react__WEBPACK_IMPORTED_MODULE_1__.useEffect,Zu=({children:t,custom:r,initial:o=!0,onExitComplete:a,presenceAffectsLayout:l=!0,mode:c=\"sync\",propagate:d=!1})=>{const[u,f]=Ou(d),p=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>_u(t)),[t]),m=d&&!u?[]:p.map(zu),g=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(!0),v=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(p),y=Nu((()=>/* @__PURE__ */new Map)),[b,x]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(p),[C,k]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(p);qu((()=>{g.current=!1,v.current=p;for(let e=0;e<C.length;e++){const t=zu(C[e]);m.includes(t)?y.delete(t):!0!==y.get(t)&&y.set(t,!1)}}),[C,m.length,m.join(\"-\")]);const L=[];if(p!==b){let e=[...p];for(let t=0;t<C.length;t++){const n=C[t],r=zu(n);m.includes(r)||(e.splice(t,0,n),L.push(n))}return\"wait\"===c&&L.length&&(e=L),k(_u(e)),void x(p)}const{forceRender:M}=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(Au);return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:C.map((t=>{const n=zu(t),i=!(d&&!u)&&(p===C||m.includes(n));return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Bu,{isPresent:i,initial:!(g.current&&!o)&&void 0,custom:i?void 0:r,presenceAffectsLayout:l,mode:c,onExitComplete:i?void 0:()=>{if(!y.has(n))return;y.set(n,!0);let e=!0;y.forEach((t=>{t||(e=!1)})),e&&(M?.(),k(v.current),d&&f?.(),a&&a())},children:t},n)}))})},Uu=e=>e;function Gu(e){let t;return()=>(void 0===t&&(t=e()),t)}const Yu=(e,t,n)=>{const r=t-e;return 0===r?1:(n-e)/r},Xu=e=>1e3*e,Ku=e=>e/1e3,Ju=[\"read\",\"resolveKeyframes\",\"update\",\"preRender\",\"render\",\"postRender\"];function Qu(e,t){let n=!1,r=!0;const o={delta:0,timestamp:0,isProcessing:!1},i=()=>n=!0,a=Ju.reduce(((e,t)=>(e[t]=function(e){let t=/* @__PURE__ */new Set,n=/* @__PURE__ */new Set,r=!1,o=!1;const i=/* @__PURE__ */new WeakSet;let a={delta:0,timestamp:0,isProcessing:!1};function s(t){i.has(t)&&(l.schedule(t),e()),t(a)}const l={schedule:(e,o=!1,a=!1)=>{const s=a&&r?t:n;return o&&i.add(e),s.has(e)||s.add(e),e},cancel:e=>{n.delete(e),i.delete(e)},process:e=>{a=e,r?o=!0:(r=!0,[t,n]=[n,t],t.forEach(s),t.clear(),r=!1,o&&(o=!1,l.process(e)))}};return l}(i),e)),{}),{read:s,resolveKeyframes:l,update:c,preRender:d,render:u,postRender:h}=a,f=()=>{const i=performance.now();n=!1,o.delta=r?1e3/60:Math.max(Math.min(i-o.timestamp,40),1),o.timestamp=i,o.isProcessing=!0,s.process(o),l.process(o),c.process(o),d.process(o),u.process(o),h.process(o),o.isProcessing=!1,n&&t&&(r=!1,e(f))};return{schedule:Ju.reduce(((t,i)=>{const s=a[i];return t[i]=(t,i=!1,a=!1)=>(n||(n=!0,r=!0,o.isProcessing||e(f)),s.schedule(t,i,a)),t}),{}),cancel:e=>{for(let t=0;t<Ju.length;t++)a[Ju[t]].cancel(e)},state:o,steps:a}}const{schedule:eh,cancel:th,state:nh,steps:rh}=Qu(typeof requestAnimationFrame<\"u\"?requestAnimationFrame:Uu,!0),oh=(0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({strict:!1}),ih={animation:[\"animate\",\"variants\",\"whileHover\",\"whileTap\",\"exit\",\"whileInView\",\"whileFocus\",\"whileDrag\"],exit:[\"exit\"],drag:[\"drag\",\"dragControls\"],focus:[\"whileFocus\"],hover:[\"whileHover\",\"onHoverStart\",\"onHoverEnd\"],tap:[\"whileTap\",\"onTap\",\"onTapStart\",\"onTapCancel\"],pan:[\"onPan\",\"onPanStart\",\"onPanSessionStart\",\"onPanEnd\"],inView:[\"whileInView\",\"onViewportEnter\",\"onViewportLeave\"],layout:[\"layout\",\"layoutId\"]},ah={};for(const e in ih)ah[e]={isEnabled:t=>ih[e].some((e=>!!t[e]))};const sh=/* @__PURE__ */new Set([\"animate\",\"exit\",\"variants\",\"initial\",\"style\",\"values\",\"variants\",\"transition\",\"transformTemplate\",\"custom\",\"inherit\",\"onBeforeLayoutMeasure\",\"onAnimationStart\",\"onAnimationComplete\",\"onUpdate\",\"onDragStart\",\"onDrag\",\"onDragEnd\",\"onMeasureDragConstraints\",\"onDirectionLock\",\"onDragTransitionEnd\",\"_dragX\",\"_dragY\",\"onHoverStart\",\"onHoverEnd\",\"onViewportEnter\",\"onViewportLeave\",\"globalTapTarget\",\"ignoreStrict\",\"viewport\"]);function lh(e){return e.startsWith(\"while\")||e.startsWith(\"drag\")&&\"draggable\"!==e||e.startsWith(\"layout\")||e.startsWith(\"onTap\")||e.startsWith(\"onPan\")||e.startsWith(\"onLayout\")||sh.has(e)}let ch=e=>!lh(e);try{(dh=require(\"@emotion/is-prop-valid\").default)&&(ch=e=>e.startsWith(\"on\")?!lh(e):dh(e))}catch{}var dh;function uh(e){if(typeof Proxy>\"u\")return e;const t=/* @__PURE__ */new Map;return new Proxy(((...t)=>e(...t)),{get:(n,r)=>\"create\"===r?e:(t.has(r)||t.set(r,e(r)),t.get(r))})}const hh=(0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({});function fh(e){return\"string\"==typeof e||Array.isArray(e)}function ph(e){return null!==e&&\"object\"==typeof e&&\"function\"==typeof e.start}const mh=[\"animate\",\"whileInView\",\"whileFocus\",\"whileHover\",\"whileTap\",\"whileDrag\",\"exit\"],gh=[\"initial\",...mh];function vh(e){return ph(e.animate)||gh.some((t=>fh(e[t])))}function wh(e){return!(!vh(e)&&!e.variants)}function yh(e){return Array.isArray(e)?e.join(\" \"):e}const bh=Symbol.for(\"motionComponentSymbol\");function xh(e){return e&&\"object\"==typeof e&&Object.prototype.hasOwnProperty.call(e,\"current\")}function Ch(e,t,n){return (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((r=>{r&&e.onMount&&e.onMount(r),t&&(r?t.mount(r):t.unmount()),n&&(\"function\"==typeof n?n(r):xh(n)&&(n.current=r))}),[t])}const kh=e=>e.replace(/([a-z])([A-Z])/gu,\"$1-$2\").toLowerCase(),Lh=\"data-\"+kh(\"framerAppearId\"),{schedule:Mh,cancel:Sh}=Qu(queueMicrotask,!1),Rh=(0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({});function Vh(e,t,n,r,o){var a,s;const{visualElement:l}=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(hh),c=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(oh),u=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(Iu),f=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(Pu).reducedMotion,m=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);r=r||c.renderer,!m.current&&r&&(m.current=r(e,{visualState:t,parent:l,props:n,presenceContext:u,blockInitialAnimation:!!u&&!1===u.initial,reducedMotionConfig:f}));const g=m.current,v=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(Rh);g&&!g.projection&&o&&(\"html\"===g.type||\"svg\"===g.type)&&function(e,t,n,r){const{layoutId:o,layout:i,drag:a,dragConstraints:s,layoutScroll:l,layoutRoot:c}=t;e.projection=new n(e.latestValues,t[\"data-framer-portal-id\"]?void 0:Eh(e.parent)),e.projection.setOptions({layoutId:o,layout:i,alwaysMeasureLayout:!!a||s&&xh(s),visualElement:e,animationType:\"string\"==typeof i?i:\"both\",initialPromotionConfig:r,layoutScroll:l,layoutRoot:c})}(m.current,n,o,v);const w=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(!1);(0,react__WEBPACK_IMPORTED_MODULE_1__.useInsertionEffect)((()=>{g&&w.current&&g.update(n,u)}));const y=n[Lh],b=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(!!y&&!(null!==(a=window.MotionHandoffIsComplete)&&void 0!==a&&a.call(window,y))&&(null===(s=window.MotionHasOptimisedAnimation)||void 0===s?void 0:s.call(window,y)));return qu((()=>{g&&(w.current=!0,window.MotionIsMounted=!0,g.updateFeatures(),Mh.render(g.render),b.current&&g.animationState&&g.animationState.animateChanges())})),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{g&&(!b.current&&g.animationState&&g.animationState.animateChanges(),b.current&&(queueMicrotask((()=>{var e;null===(e=window.MotionHandoffMarkAsComplete)||void 0===e||e.call(window,y)})),b.current=!1))})),g}function Eh(e){if(e)return!1!==e.options.allowProjection?e.projection:Eh(e.parent)}function Hh({layoutId:e}){const t=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(Au).id;return t&&void 0!==e?t+\"-\"+e:e}const Th=[\"animate\",\"circle\",\"defs\",\"desc\",\"ellipse\",\"g\",\"image\",\"line\",\"filter\",\"marker\",\"mask\",\"metadata\",\"path\",\"pattern\",\"polygon\",\"polyline\",\"rect\",\"stop\",\"switch\",\"symbol\",\"svg\",\"text\",\"tspan\",\"use\",\"view\"];function $h(e){return\"string\"==typeof e&&!e.includes(\"-\")&&!!(Th.indexOf(e)>-1||/[A-Z]/u.test(e))}function Ah(e){const t=[{},{}];return e?.values.forEach(((e,n)=>{t[0][n]=e.get(),t[1][n]=e.getVelocity()})),t}function Nh(e,t,n,r){if(\"function\"==typeof t){const[o,i]=Ah(r);t=t(void 0!==n?n:e.custom,o,i)}if(\"string\"==typeof t&&(t=e.variants&&e.variants[t]),\"function\"==typeof t){const[o,i]=Ah(r);t=t(void 0!==n?n:e.custom,o,i)}return t}const Ih=e=>Array.isArray(e),Ph=e=>!(!e||!e.getVelocity);function Fh(e){const t=Ph(e)?e.get():e;return(n=t)&&\"object\"==typeof n&&n.mix&&n.toValue?t.toValue():t;var n}const jh=e=>(t,n)=>{const r=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(hh),o=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(Iu),a=()=>function({scrapeMotionValuesFromProps:e,createRenderState:t,onUpdate:n},r,o,i){const a={latestValues:Bh(r,o,i,e),renderState:t()};return n&&(a.onMount=e=>n({props:r,current:e,...a}),a.onUpdate=e=>n(e)),a}(e,t,r,o);return n?a():Nu(a)};function Bh(e,t,n,r){const o={},i=r(e,{});for(const e in i)o[e]=Fh(i[e]);let{initial:a,animate:s}=e;const l=vh(e),c=wh(e);t&&c&&!l&&!1!==e.inherit&&(void 0===a&&(a=t.initial),void 0===s&&(s=t.animate));let d=!!n&&!1===n.initial;d=d||!1===a;const u=d?s:a;if(u&&\"boolean\"!=typeof u&&!ph(u)){const t=Array.isArray(u)?u:[u];for(let n=0;n<t.length;n++){const r=Nh(e,t[n]);if(r){const{transitionEnd:e,transition:t,...n}=r;for(const e in n){let t=n[e];Array.isArray(t)&&(t=t[d?t.length-1:0]),null!==t&&(o[e]=t)}for(const t in e)o[t]=e[t]}}}return o}const Dh=[\"transformPerspective\",\"x\",\"y\",\"z\",\"translateX\",\"translateY\",\"translateZ\",\"scale\",\"scaleX\",\"scaleY\",\"rotate\",\"rotateX\",\"rotateY\",\"rotateZ\",\"skew\",\"skewX\",\"skewY\"],Oh=new Set(Dh),zh=e=>t=>\"string\"==typeof t&&t.startsWith(e),_h=/* @__PURE__ */zh(\"--\"),Wh=/* @__PURE__ */zh(\"var(--\"),qh=e=>!!Wh(e)&&Zh.test(e.split(\"/*\")[0].trim()),Zh=/var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu,Uh=(e,t)=>t&&\"number\"==typeof e?t.transform(e):e,Gh=(e,t,n)=>n>t?t:n<e?e:n,Yh={test:e=>\"number\"==typeof e,parse:parseFloat,transform:e=>e},Xh={...Yh,transform:e=>Gh(0,1,e)},Kh={...Yh,default:1},Jh=e=>({test:t=>\"string\"==typeof t&&t.endsWith(e)&&1===t.split(\" \").length,parse:parseFloat,transform:t=>`${t}${e}`}),Qh=/* @__PURE__ */Jh(\"deg\"),ef=/* @__PURE__ */Jh(\"%\"),tf=/* @__PURE__ */Jh(\"px\"),nf=/* @__PURE__ */Jh(\"vh\"),rf=/* @__PURE__ */Jh(\"vw\"),of={...ef,parse:e=>ef.parse(e)/100,transform:e=>ef.transform(100*e)},af={borderWidth:tf,borderTopWidth:tf,borderRightWidth:tf,borderBottomWidth:tf,borderLeftWidth:tf,borderRadius:tf,radius:tf,borderTopLeftRadius:tf,borderTopRightRadius:tf,borderBottomRightRadius:tf,borderBottomLeftRadius:tf,width:tf,maxWidth:tf,height:tf,maxHeight:tf,top:tf,right:tf,bottom:tf,left:tf,padding:tf,paddingTop:tf,paddingRight:tf,paddingBottom:tf,paddingLeft:tf,margin:tf,marginTop:tf,marginRight:tf,marginBottom:tf,marginLeft:tf,backgroundPositionX:tf,backgroundPositionY:tf},sf={rotate:Qh,rotateX:Qh,rotateY:Qh,rotateZ:Qh,scale:Kh,scaleX:Kh,scaleY:Kh,scaleZ:Kh,skew:Qh,skewX:Qh,skewY:Qh,distance:tf,translateX:tf,translateY:tf,translateZ:tf,x:tf,y:tf,z:tf,perspective:tf,transformPerspective:tf,opacity:Xh,originX:of,originY:of,originZ:tf},lf={...Yh,transform:Math.round},cf={...af,...sf,zIndex:lf,size:tf,fillOpacity:Xh,strokeOpacity:Xh,numOctaves:lf},df={x:\"translateX\",y:\"translateY\",z:\"translateZ\",transformPerspective:\"perspective\"},uf=Dh.length;function hf(e,t,n){const{style:r,vars:o,transformOrigin:i}=e;let a=!1,s=!1;for(const e in t){const n=t[e];if(Oh.has(e))a=!0;else if(_h(e))o[e]=n;else{const t=Uh(n,cf[e]);e.startsWith(\"origin\")?(s=!0,i[e]=t):r[e]=t}}if(t.transform||(a||n?r.transform=function(e,t,n){let r=\"\",o=!0;for(let i=0;i<uf;i++){const a=Dh[i],s=e[a];if(void 0===s)continue;let l=!0;if(l=\"number\"==typeof s?s===(a.startsWith(\"scale\")?1:0):0===parseFloat(s),!l||n){const e=Uh(s,cf[a]);l||(o=!1,r+=`${df[a]||a}(${e}) `),n&&(t[a]=e)}}return r=r.trim(),n?r=n(t,o?\"\":r):o&&(r=\"none\"),r}(t,e.transform,n):r.transform&&(r.transform=\"none\")),s){const{originX:e=\"50%\",originY:t=\"50%\",originZ:n=0}=i;r.transformOrigin=`${e} ${t} ${n}`}}function ff(e,t,n){return\"string\"==typeof e?e:tf.transform(t+n*e)}const pf={offset:\"stroke-dashoffset\",array:\"stroke-dasharray\"},mf={offset:\"strokeDashoffset\",array:\"strokeDasharray\"};function gf(e,{attrX:t,attrY:n,attrScale:r,originX:o,originY:i,pathLength:a,pathSpacing:s=1,pathOffset:l=0,...c},d,u){if(hf(e,c,u),d)return void(e.style.viewBox&&(e.attrs.viewBox=e.style.viewBox));e.attrs=e.style,e.style={};const{attrs:h,style:f,dimensions:p}=e;h.transform&&(p&&(f.transform=h.transform),delete h.transform),p&&(void 0!==o||void 0!==i||f.transform)&&(f.transformOrigin=function(e,t,n){return`${ff(t,e.x,e.width)} ${ff(n,e.y,e.height)}`}(p,void 0!==o?o:.5,void 0!==i?i:.5)),void 0!==t&&(h.x=t),void 0!==n&&(h.y=n),void 0!==r&&(h.scale=r),void 0!==a&&function(e,t,n=1,r=0,o=!0){e.pathLength=1;const i=o?pf:mf;e[i.offset]=tf.transform(-r);const a=tf.transform(t),s=tf.transform(n);e[i.array]=`${a} ${s}`}(h,a,s,l,!1)}const vf=e=>\"string\"==typeof e&&\"svg\"===e.toLowerCase();function wf(e,{style:t,vars:n},r,o){Object.assign(e.style,t,o&&o.getProjectionStyles(r));for(const t in n)e.style.setProperty(t,n[t])}const yf=/* @__PURE__ */new Set([\"baseFrequency\",\"diffuseConstant\",\"kernelMatrix\",\"kernelUnitLength\",\"keySplines\",\"keyTimes\",\"limitingConeAngle\",\"markerHeight\",\"markerWidth\",\"numOctaves\",\"targetX\",\"targetY\",\"surfaceScale\",\"specularConstant\",\"specularExponent\",\"stdDeviation\",\"tableValues\",\"viewBox\",\"gradientTransform\",\"pathLength\",\"startOffset\",\"textLength\",\"lengthAdjust\"]);function bf(e,t,n,r){wf(e,t,void 0,r);for(const n in t.attrs)e.setAttribute(yf.has(n)?n:kh(n),t.attrs[n])}const xf={};function Cf(e,{layout:t,layoutId:n}){return Oh.has(e)||e.startsWith(\"origin\")||(t||void 0!==n)&&(!!xf[e]||\"opacity\"===e)}function kf(e,t,n){var r;const{style:o}=e,i={};for(const a in o)(Ph(o[a])||t.style&&Ph(t.style[a])||Cf(a,e)||void 0!==(null===(r=n?.getValue(a))||void 0===r?void 0:r.liveStyle))&&(i[a]=o[a]);return i}function Lf(e,t,n){const r=kf(e,t,n);for(const n in e)(Ph(e[n])||Ph(t[n]))&&(r[-1!==Dh.indexOf(n)?\"attr\"+n.charAt(0).toUpperCase()+n.substring(1):n]=e[n]);return r}const Mf=[\"x\",\"y\",\"width\",\"height\",\"cx\",\"cy\",\"r\"],Sf={useVisualState:jh({scrapeMotionValuesFromProps:Lf,createRenderState:()=>({style:{},transform:{},transformOrigin:{},vars:{},attrs:{}}),onUpdate:({props:e,prevProps:t,current:n,renderState:r,latestValues:o})=>{if(!n)return;let i=!!e.drag;if(!i)for(const e in o)if(Oh.has(e)){i=!0;break}if(!i)return;let a=!t;if(t)for(let n=0;n<Mf.length;n++){const r=Mf[n];e[r]!==t[r]&&(a=!0)}a&&(eh.read((()=>function(e,t){try{t.dimensions=\"function\"==typeof e.getBBox?e.getBBox():e.getBoundingClientRect()}catch{t.dimensions={x:0,y:0,width:0,height:0}}}(n,r))),eh.render((()=>{gf(r,o,vf(n.tagName),e.transformTemplate),bf(n,r)})))}})},Rf={useVisualState:jh({scrapeMotionValuesFromProps:kf,createRenderState:()=>({style:{},transform:{},transformOrigin:{},vars:{}})})};function Vf(e,t,n){for(const r in t)!Ph(t[r])&&!Cf(r,n)&&(e[r]=t[r])}function Ef(e,t){const n={},r=function(e,t){const n={};return Vf(n,e.style||{},e),Object.assign(n,function({transformTemplate:e},t){return (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>{const n={style:{},transform:{},transformOrigin:{},vars:{}};return hf(n,t,e),Object.assign({},n.vars,n.style)}),[t])}(e,t)),n}(e,t);return e.drag&&!1!==e.dragListener&&(n.draggable=!1,r.userSelect=r.WebkitUserSelect=r.WebkitTouchCallout=\"none\",r.touchAction=!0===e.drag?\"none\":\"pan-\"+(\"x\"===e.drag?\"y\":\"x\")),void 0===e.tabIndex&&(e.onTap||e.onTapStart||e.whileTap)&&(n.tabIndex=0),n.style=r,n}function Hf(e,t,n,r){const o=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>{const n={style:{},transform:{},transformOrigin:{},vars:{},attrs:{}};return gf(n,t,vf(r),e.transformTemplate),{...n.attrs,style:{...n.style}}}),[t]);if(e.style){const t={};Vf(t,e.style,e),o.style={...t,...o.style}}return o}function Tf(e=!1){return(t,n,r,{latestValues:o},i)=>{const l=($h(t)?Hf:Ef)(n,o,i,t),c=function(e,t,n){const r={};for(const o in e)\"values\"===o&&\"object\"==typeof e.values||(ch(o)||!0===n&&lh(o)||!t&&!lh(o)||e.draggable&&o.startsWith(\"onDrag\"))&&(r[o]=e[o]);return r}(n,\"string\"==typeof t,e),d=t!==react__WEBPACK_IMPORTED_MODULE_1__.Fragment?{...c,...l,ref:r}:{},{children:u}=n,h=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>Ph(u)?u.get():u),[u]);return (0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(t,{...d,children:h})}}function $f(n,r){return function(o,{forwardMotionProps:a}={forwardMotionProps:!1}){return function({preloadedFeatures:n,createVisualElement:r,useRender:o,useVisualState:a,Component:c}){var d,u;function h(n,l){let d;const u={...(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(Pu),...n,layoutId:Hh(n)},{isStatic:h}=u,f=function(e){const{initial:t,animate:n}=function(e,t){if(vh(e)){const{initial:t,animate:n}=e;return{initial:!1===t||fh(t)?t:void 0,animate:fh(n)?n:void 0}}return!1!==e.inherit?t:{}}(e,(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(hh));return (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>({initial:t,animate:n})),[yh(t),yh(n)])}(n),p=a(n,h);if(!h&&Wu){(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(oh).strict;const e=function(e){const{drag:t,layout:n}=ah;if(!t&&!n)return{};const r={...t,...n};return{MeasureLayout:t?.isEnabled(e)||n?.isEnabled(e)?r.MeasureLayout:void 0,ProjectionNode:r.ProjectionNode}}(u);d=e.MeasureLayout,f.visualElement=Vh(c,p,u,r,e.ProjectionNode)}return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(hh.Provider,{value:f,children:[d&&f.visualElement?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(d,{visualElement:f.visualElement,...u}):null,o(c,n,Ch(p,f.visualElement,l),p,h,f.visualElement)]})}n&&function(e){for(const t in e)ah[t]={...ah[t],...e[t]}}(n),h.displayName=`motion.${\"string\"==typeof c?c:`create(${null!==(u=null!==(d=c.displayName)&&void 0!==d?d:c.name)&&void 0!==u?u:\"\"})`}`;const f=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(h);return f[bh]=c,f}({...$h(o)?Sf:Rf,preloadedFeatures:n,useRender:Tf(a),createVisualElement:r,Component:o})}}function Af(e,t){if(!Array.isArray(t))return!1;const n=t.length;if(n!==e.length)return!1;for(let r=0;r<n;r++)if(t[r]!==e[r])return!1;return!0}function Nf(e,t,n){const r=e.getProps();return Nh(r,t,void 0!==n?n:r.custom,e)}const If=Gu((()=>void 0!==window.ScrollTimeline));class Pf{constructor(e){this.stop=()=>this.runAll(\"stop\"),this.animations=e.filter(Boolean)}get finished(){return Promise.all(this.animations.map((e=>\"finished\"in e?e.finished:e)))}getAll(e){return this.animations[0][e]}setAll(e,t){for(let n=0;n<this.animations.length;n++)this.animations[n][e]=t}attachTimeline(e,t){const n=this.animations.map((n=>If()&&n.attachTimeline?n.attachTimeline(e):\"function\"==typeof t?t(n):void 0));return()=>{n.forEach(((e,t)=>{e&&e(),this.animations[t].stop()}))}}get time(){return this.getAll(\"time\")}set time(e){this.setAll(\"time\",e)}get speed(){return this.getAll(\"speed\")}set speed(e){this.setAll(\"speed\",e)}get startTime(){return this.getAll(\"startTime\")}get duration(){let e=0;for(let t=0;t<this.animations.length;t++)e=Math.max(e,this.animations[t].duration);return e}runAll(e){this.animations.forEach((t=>t[e]()))}flatten(){this.runAll(\"flatten\")}play(){this.runAll(\"play\")}pause(){this.runAll(\"pause\")}cancel(){this.runAll(\"cancel\")}complete(){this.runAll(\"complete\")}}class Ff extends Pf{then(e,t){return Promise.all(this.animations).then(e).catch(t)}}function jf(e,t){return e?e[t]||e.default||e:void 0}const Bf=2e4;function Df(e){let t=0,n=e.next(t);for(;!n.done&&t<Bf;)t+=50,n=e.next(t);return t>=Bf?1/0:t}function Of(e){return\"function\"==typeof e}function zf(e,t){e.timeline=t,e.onfinish=null}const _f=e=>Array.isArray(e)&&\"number\"==typeof e[0],Wf={linearEasing:void 0};function qf(e,t){const n=Gu(e);return()=>{var e;return null!==(e=Wf[t])&&void 0!==e?e:n()}}const Zf=/* @__PURE__ */qf((()=>{try{document.createElement(\"div\").animate({opacity:0},{easing:\"linear(0, 1)\"})}catch{return!1}return!0}),\"linearEasing\"),Uf=(e,t,n=10)=>{let r=\"\";const o=Math.max(Math.round(t/n),2);for(let t=0;t<o;t++)r+=e(Yu(0,o-1,t))+\", \";return`linear(${r.substring(0,r.length-2)})`};function Gf(e){return!!(\"function\"==typeof e&&Zf()||!e||\"string\"==typeof e&&(e in Xf||Zf())||_f(e)||Array.isArray(e)&&e.every(Gf))}const Yf=([e,t,n,r])=>`cubic-bezier(${e}, ${t}, ${n}, ${r})`,Xf={linear:\"linear\",ease:\"ease\",easeIn:\"ease-in\",easeOut:\"ease-out\",easeInOut:\"ease-in-out\",circIn:/* @__PURE__ */Yf([0,.65,.55,1]),circOut:/* @__PURE__ */Yf([.55,0,1,.45]),backIn:/* @__PURE__ */Yf([.31,.01,.66,-.59]),backOut:/* @__PURE__ */Yf([.33,1.53,.69,.99])};function Kf(e,t){if(e)return\"function\"==typeof e&&Zf()?Uf(e,t):_f(e)?Yf(e):Array.isArray(e)?e.map((e=>Kf(e,t)||Xf.easeOut)):Xf[e]}const Jf={x:!1,y:!1};function Qf(){return Jf.x||Jf.y}function ep(e,t){const n=function(e){if(e instanceof Element)return[e];if(\"string\"==typeof e){const t=document.querySelectorAll(e);return t?Array.from(t):[]}return Array.from(e)}(e),r=new AbortController;return[n,{passive:!0,...t,signal:r.signal},()=>r.abort()]}function tp(e){return t=>{\"touch\"===t.pointerType||Qf()||e(t)}}const np=(e,t)=>!!t&&(e===t||np(e,t.parentElement)),rp=e=>\"mouse\"===e.pointerType?\"number\"!=typeof e.button||e.button<=0:!1!==e.isPrimary,op=/* @__PURE__ */new Set([\"BUTTON\",\"INPUT\",\"SELECT\",\"TEXTAREA\",\"A\"]),ip=/* @__PURE__ */new WeakSet;function ap(e){return t=>{\"Enter\"===t.key&&e(t)}}function sp(e,t){e.dispatchEvent(new PointerEvent(\"pointer\"+t,{isPrimary:!0,bubbles:!0}))}function lp(e){return rp(e)&&!Qf()}const cp=/* @__PURE__ */new Set([\"width\",\"height\",\"top\",\"left\",\"right\",\"bottom\",...Dh]);let dp;function up(){dp=void 0}const hp={now:()=>(void 0===dp&&hp.set(nh.isProcessing?nh.timestamp:performance.now()),dp),set:e=>{dp=e,queueMicrotask(up)}};function fp(e,t){-1===e.indexOf(t)&&e.push(t)}function pp(e,t){const n=e.indexOf(t);n>-1&&e.splice(n,1)}class mp{constructor(){this.subscriptions=[]}add(e){return fp(this.subscriptions,e),()=>pp(this.subscriptions,e)}notify(e,t,n){const r=this.subscriptions.length;if(r)if(1===r)this.subscriptions[0](e,t,n);else for(let o=0;o<r;o++){const r=this.subscriptions[o];r&&r(e,t,n)}}getSize(){return this.subscriptions.length}clear(){this.subscriptions.length=0}}function gp(e,t){return t?e*(1e3/t):0}class vp{constructor(e,t={}){this.version=\"11.18.0\",this.canTrackVelocity=null,this.events={},this.updateAndNotify=(e,t=!0)=>{const n=hp.now();this.updatedAt!==n&&this.setPrevFrameValue(),this.prev=this.current,this.setCurrent(e),this.current!==this.prev&&this.events.change&&this.events.change.notify(this.current),t&&this.events.renderRequest&&this.events.renderRequest.notify(this.current)},this.hasAnimated=!1,this.setCurrent(e),this.owner=t.owner}setCurrent(e){var t;this.current=e,this.updatedAt=hp.now(),null===this.canTrackVelocity&&void 0!==e&&(this.canTrackVelocity=(t=this.current,!isNaN(parseFloat(t))))}setPrevFrameValue(e=this.current){this.prevFrameValue=e,this.prevUpdatedAt=this.updatedAt}onChange(e){return this.on(\"change\",e)}on(e,t){this.events[e]||(this.events[e]=new mp);const n=this.events[e].add(t);return\"change\"===e?()=>{n(),eh.read((()=>{this.events.change.getSize()||this.stop()}))}:n}clearListeners(){for(const e in this.events)this.events[e].clear()}attach(e,t){this.passiveEffect=e,this.stopPassiveEffect=t}set(e,t=!0){t&&this.passiveEffect?this.passiveEffect(e,this.updateAndNotify):this.updateAndNotify(e,t)}setWithVelocity(e,t,n){this.set(t),this.prev=void 0,this.prevFrameValue=e,this.prevUpdatedAt=this.updatedAt-n}jump(e,t=!0){this.updateAndNotify(e),this.prev=e,this.prevUpdatedAt=this.prevFrameValue=void 0,t&&this.stop(),this.stopPassiveEffect&&this.stopPassiveEffect()}get(){return this.current}getPrevious(){return this.prev}getVelocity(){const e=hp.now();if(!this.canTrackVelocity||void 0===this.prevFrameValue||e-this.updatedAt>30)return 0;const t=Math.min(this.updatedAt-this.prevUpdatedAt,30);return gp(parseFloat(this.current)-parseFloat(this.prevFrameValue),t)}start(e){return this.stop(),new Promise((t=>{this.hasAnimated=!0,this.animation=e(t),this.events.animationStart&&this.events.animationStart.notify()})).then((()=>{this.events.animationComplete&&this.events.animationComplete.notify(),this.clearAnimation()}))}stop(){this.animation&&(this.animation.stop(),this.events.animationCancel&&this.events.animationCancel.notify()),this.clearAnimation()}isAnimating(){return!!this.animation}clearAnimation(){delete this.animation}destroy(){this.clearListeners(),this.stop(),this.stopPassiveEffect&&this.stopPassiveEffect()}}function wp(e,t){return new vp(e,t)}function yp(e,t,n){e.hasValue(t)?e.getValue(t).set(n):e.addValue(t,wp(n))}function bp(e,t){const n=e.getValue(\"willChange\");if(Ph(r=n)&&r.add)return n.add(t);var r}function xp(e){return e.props[Lh]}const Cp=(e,t,n)=>(((1-3*n+3*t)*e+(3*n-6*t))*e+3*t)*e;function kp(e,t,n,r){return e===t&&n===r?Uu:o=>0===o||1===o?o:Cp(function(e,t,n,r,o){let i,a,s=0;do{a=t+(n-t)/2,i=Cp(a,r,o)-e,i>0?n=a:t=a}while(Math.abs(i)>1e-7&&++s<12);return a}(o,0,1,e,n),t,r)}const Lp=e=>t=>t<=.5?e(2*t)/2:(2-e(2*(1-t)))/2,Mp=e=>t=>1-e(1-t),Sp=/* @__PURE__ */kp(.33,1.53,.69,.99),Rp=/* @__PURE__ */Mp(Sp),Vp=/* @__PURE__ */Lp(Rp),Ep=e=>(e*=2)<1?.5*Rp(e):.5*(2-Math.pow(2,-10*(e-1))),Hp=e=>1-Math.sin(Math.acos(e)),Tp=Mp(Hp),$p=Lp(Hp),Ap=e=>/^0[^.\\s]+$/u.test(e),Np=e=>Math.round(1e5*e)/1e5,Ip=/-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu,Pp=/^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu,Fp=(e,t)=>n=>!!(\"string\"==typeof n&&Pp.test(n)&&n.startsWith(e)||t&&!function(e){return null==e}(n)&&Object.prototype.hasOwnProperty.call(n,t)),jp=(e,t,n)=>r=>{if(\"string\"!=typeof r)return r;const[o,i,a,s]=r.match(Ip);return{[e]:parseFloat(o),[t]:parseFloat(i),[n]:parseFloat(a),alpha:void 0!==s?parseFloat(s):1}},Bp={...Yh,transform:e=>Math.round((e=>Gh(0,255,e))(e))},Dp={test:/* @__PURE__ */Fp(\"rgb\",\"red\"),parse:/* @__PURE__ */jp(\"red\",\"green\",\"blue\"),transform:({red:e,green:t,blue:n,alpha:r=1})=>\"rgba(\"+Bp.transform(e)+\", \"+Bp.transform(t)+\", \"+Bp.transform(n)+\", \"+Np(Xh.transform(r))+\")\"},Op={test:/* @__PURE__ */Fp(\"#\"),parse:function(e){let t=\"\",n=\"\",r=\"\",o=\"\";return e.length>5?(t=e.substring(1,3),n=e.substring(3,5),r=e.substring(5,7),o=e.substring(7,9)):(t=e.substring(1,2),n=e.substring(2,3),r=e.substring(3,4),o=e.substring(4,5),t+=t,n+=n,r+=r,o+=o),{red:parseInt(t,16),green:parseInt(n,16),blue:parseInt(r,16),alpha:o?parseInt(o,16)/255:1}},transform:Dp.transform},zp={test:/* @__PURE__ */Fp(\"hsl\",\"hue\"),parse:/* @__PURE__ */jp(\"hue\",\"saturation\",\"lightness\"),transform:({hue:e,saturation:t,lightness:n,alpha:r=1})=>\"hsla(\"+Math.round(e)+\", \"+ef.transform(Np(t))+\", \"+ef.transform(Np(n))+\", \"+Np(Xh.transform(r))+\")\"},_p={test:e=>Dp.test(e)||Op.test(e)||zp.test(e),parse:e=>Dp.test(e)?Dp.parse(e):zp.test(e)?zp.parse(e):Op.parse(e),transform:e=>\"string\"==typeof e?e:e.hasOwnProperty(\"red\")?Dp.transform(e):zp.transform(e)},Wp=/(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu,qp=\"number\",Zp=\"color\",Up=/var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;function Gp(e){const t=e.toString(),n=[],r={color:[],number:[],var:[]},o=[];let i=0;const a=t.replace(Up,(e=>(_p.test(e)?(r.color.push(i),o.push(Zp),n.push(_p.parse(e))):e.startsWith(\"var(\")?(r.var.push(i),o.push(\"var\"),n.push(e)):(r.number.push(i),o.push(qp),n.push(parseFloat(e))),++i,\"${}\"))).split(\"${}\");return{values:n,split:a,indexes:r,types:o}}function Yp(e){return Gp(e).values}function Xp(e){const{split:t,types:n}=Gp(e),r=t.length;return e=>{let o=\"\";for(let i=0;i<r;i++)if(o+=t[i],void 0!==e[i]){const t=n[i];o+=t===qp?Np(e[i]):t===Zp?_p.transform(e[i]):e[i]}return o}}const Kp=e=>\"number\"==typeof e?0:e,Jp={test:function(e){var t,n;return isNaN(e)&&\"string\"==typeof e&&((null===(t=e.match(Ip))||void 0===t?void 0:t.length)||0)+((null===(n=e.match(Wp))||void 0===n?void 0:n.length)||0)>0},parse:Yp,createTransformer:Xp,getAnimatableNone:function(e){const t=Yp(e);return Xp(e)(t.map(Kp))}},Qp=/* @__PURE__ */new Set([\"brightness\",\"contrast\",\"saturate\",\"opacity\"]);function em(e){const[t,n]=e.slice(0,-1).split(\"(\");if(\"drop-shadow\"===t)return e;const[r]=n.match(Ip)||[];if(!r)return e;const o=n.replace(r,\"\");let i=Qp.has(t)?1:0;return r!==n&&(i*=100),t+\"(\"+i+o+\")\"}const tm=/\\b([a-z-]*)\\(.*?\\)/gu,nm={...Jp,getAnimatableNone:e=>{const t=e.match(tm);return t?t.map(em).join(\" \"):e}},rm={...cf,color:_p,backgroundColor:_p,outlineColor:_p,fill:_p,stroke:_p,borderColor:_p,borderTopColor:_p,borderRightColor:_p,borderBottomColor:_p,borderLeftColor:_p,filter:nm,WebkitFilter:nm},om=e=>rm[e];function im(e,t){let n=om(e);return n!==nm&&(n=Jp),n.getAnimatableNone?n.getAnimatableNone(t):void 0}const am=/* @__PURE__ */new Set([\"auto\",\"none\",\"0\"]),sm=e=>e===Yh||e===tf,lm=(e,t)=>parseFloat(e.split(\", \")[t]),cm=(e,t)=>(n,{transform:r})=>{if(\"none\"===r||!r)return 0;const o=r.match(/^matrix3d\\((.+)\\)$/u);if(o)return lm(o[1],t);{const t=r.match(/^matrix\\((.+)\\)$/u);return t?lm(t[1],e):0}},dm=/* @__PURE__ */new Set([\"x\",\"y\",\"z\"]),um=Dh.filter((e=>!dm.has(e))),hm={width:({x:e},{paddingLeft:t=\"0\",paddingRight:n=\"0\"})=>e.max-e.min-parseFloat(t)-parseFloat(n),height:({y:e},{paddingTop:t=\"0\",paddingBottom:n=\"0\"})=>e.max-e.min-parseFloat(t)-parseFloat(n),top:(e,{top:t})=>parseFloat(t),left:(e,{left:t})=>parseFloat(t),bottom:({y:e},{top:t})=>parseFloat(t)+(e.max-e.min),right:({x:e},{left:t})=>parseFloat(t)+(e.max-e.min),x:cm(4,13),y:cm(5,14)};hm.translateX=hm.x,hm.translateY=hm.y;const fm=/* @__PURE__ */new Set;let pm=!1,mm=!1;function gm(){if(mm){const e=Array.from(fm).filter((e=>e.needsMeasurement)),t=new Set(e.map((e=>e.element))),n=/* @__PURE__ */new Map;t.forEach((e=>{const t=function(e){const t=[];return um.forEach((n=>{const r=e.getValue(n);void 0!==r&&(t.push([n,r.get()]),r.set(n.startsWith(\"scale\")?1:0))})),t}(e);t.length&&(n.set(e,t),e.render())})),e.forEach((e=>e.measureInitialState())),t.forEach((e=>{e.render();const t=n.get(e);t&&t.forEach((([t,n])=>{var r;null===(r=e.getValue(t))||void 0===r||r.set(n)}))})),e.forEach((e=>e.measureEndState())),e.forEach((e=>{void 0!==e.suspendedScrollY&&window.scrollTo(0,e.suspendedScrollY)}))}mm=!1,pm=!1,fm.forEach((e=>e.complete())),fm.clear()}function vm(){fm.forEach((e=>{e.readKeyframes(),e.needsMeasurement&&(mm=!0)}))}class wm{constructor(e,t,n,r,o,i=!1){this.isComplete=!1,this.isAsync=!1,this.needsMeasurement=!1,this.isScheduled=!1,this.unresolvedKeyframes=[...e],this.onComplete=t,this.name=n,this.motionValue=r,this.element=o,this.isAsync=i}scheduleResolve(){this.isScheduled=!0,this.isAsync?(fm.add(this),pm||(pm=!0,eh.read(vm),eh.resolveKeyframes(gm))):(this.readKeyframes(),this.complete())}readKeyframes(){const{unresolvedKeyframes:e,name:t,element:n,motionValue:r}=this;for(let o=0;o<e.length;o++)if(null===e[o])if(0===o){const o=r?.get(),i=e[e.length-1];if(void 0!==o)e[0]=o;else if(n&&t){const r=n.readValue(t,i);null!=r&&(e[0]=r)}void 0===e[0]&&(e[0]=i),r&&void 0===o&&r.set(e[0])}else e[o]=e[o-1]}setFinalKeyframe(){}measureInitialState(){}renderEndStyles(){}measureEndState(){}complete(){this.isComplete=!0,this.onComplete(this.unresolvedKeyframes,this.finalKeyframe),fm.delete(this)}cancel(){this.isComplete||(this.isScheduled=!1,fm.delete(this))}resume(){this.isComplete||this.scheduleResolve()}}const ym=e=>/^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(e),bm=/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;function xm(e,t,n=1){const[r,o]=function(e){const t=bm.exec(e);if(!t)return[,];const[,n,r,o]=t;return[`--${n??r}`,o]}(e);if(!r)return;const i=window.getComputedStyle(t).getPropertyValue(r);if(i){const e=i.trim();return ym(e)?parseFloat(e):e}return qh(o)?xm(o,t,n+1):o}const Cm=e=>t=>t.test(e),km=[Yh,tf,ef,Qh,rf,nf,{test:e=>\"auto\"===e,parse:e=>e}],Lm=e=>km.find(Cm(e));class Mm extends wm{constructor(e,t,n,r,o){super(e,t,n,r,o,!0)}readKeyframes(){const{unresolvedKeyframes:e,element:t,name:n}=this;if(!t||!t.current)return;super.readKeyframes();for(let n=0;n<e.length;n++){let r=e[n];if(\"string\"==typeof r&&(r=r.trim(),qh(r))){const o=xm(r,t.current);void 0!==o&&(e[n]=o),n===e.length-1&&(this.finalKeyframe=r)}}if(this.resolveNoneKeyframes(),!cp.has(n)||2!==e.length)return;const[r,o]=e,i=Lm(r),a=Lm(o);if(i!==a)if(sm(i)&&sm(a))for(let t=0;t<e.length;t++){const n=e[t];\"string\"==typeof n&&(e[t]=parseFloat(n))}else this.needsMeasurement=!0}resolveNoneKeyframes(){const{unresolvedKeyframes:e,name:t}=this,n=[];for(let t=0;t<e.length;t++)(\"number\"==typeof(r=e[t])?0===r:null===r||\"none\"===r||\"0\"===r||Ap(r))&&n.push(t);var r;n.length&&function(e,t,n){let r,o=0;for(;o<e.length&&!r;){const t=e[o];\"string\"==typeof t&&!am.has(t)&&Gp(t).values.length&&(r=e[o]),o++}if(r&&n)for(const o of t)e[o]=im(n,r)}(e,n,t)}measureInitialState(){const{element:e,unresolvedKeyframes:t,name:n}=this;if(!e||!e.current)return;\"height\"===n&&(this.suspendedScrollY=window.pageYOffset),this.measuredOrigin=hm[n](e.measureViewportBox(),window.getComputedStyle(e.current)),t[0]=this.measuredOrigin;const r=t[t.length-1];void 0!==r&&e.getValue(n,r).jump(r,!1)}measureEndState(){var e;const{element:t,name:n,unresolvedKeyframes:r}=this;if(!t||!t.current)return;const o=t.getValue(n);o&&o.jump(this.measuredOrigin,!1);const i=r.length-1,a=r[i];r[i]=hm[n](t.measureViewportBox(),window.getComputedStyle(t.current)),null!==a&&void 0===this.finalKeyframe&&(this.finalKeyframe=a),!(null===(e=this.removedTransforms)||void 0===e)&&e.length&&this.removedTransforms.forEach((([e,n])=>{t.getValue(e).set(n)})),this.resolveNoneKeyframes()}}const Sm=(e,t)=>\"zIndex\"!==t&&!(\"number\"!=typeof e&&!Array.isArray(e)&&(\"string\"!=typeof e||!Jp.test(e)&&\"0\"!==e||e.startsWith(\"url(\"))),Rm=e=>null!==e;function Vm(e,{repeat:t,repeatType:n=\"loop\"},r){const o=e.filter(Rm),i=t&&\"loop\"!==n&&t%2==1?0:o.length-1;return i&&void 0!==r?r:o[i]}class Em{constructor({autoplay:e=!0,delay:t=0,type:n=\"keyframes\",repeat:r=0,repeatDelay:o=0,repeatType:i=\"loop\",...a}){this.isStopped=!1,this.hasAttemptedResolve=!1,this.createdAt=hp.now(),this.options={autoplay:e,delay:t,type:n,repeat:r,repeatDelay:o,repeatType:i,...a},this.updateFinishedPromise()}calcStartTime(){return this.resolvedAt&&this.resolvedAt-this.createdAt>40?this.resolvedAt:this.createdAt}get resolved(){return!this._resolved&&!this.hasAttemptedResolve&&(vm(),gm()),this._resolved}onKeyframesResolved(e,t){this.resolvedAt=hp.now(),this.hasAttemptedResolve=!0;const{name:n,type:r,velocity:o,delay:i,onComplete:a,onUpdate:s,isGenerator:l}=this.options;if(!l&&!function(e,t,n,r){const o=e[0];if(null===o)return!1;if(\"display\"===t||\"visibility\"===t)return!0;const i=e[e.length-1],a=Sm(o,t),s=Sm(i,t);return!(!a||!s)&&(function(e){const t=e[0];if(1===e.length)return!0;for(let n=0;n<e.length;n++)if(e[n]!==t)return!0}(e)||(\"spring\"===n||Of(n))&&r)}(e,n,r,o)){if(!i)return s?.(Vm(e,this.options,t)),a?.(),void this.resolveFinishedPromise();this.options.duration=0}const c=this.initPlayback(e,t);!1!==c&&(this._resolved={keyframes:e,finalKeyframe:t,...c},this.onPostResolved())}onPostResolved(){}then(e,t){return this.currentFinishedPromise.then(e,t)}flatten(){this.options.type=\"keyframes\",this.options.ease=\"linear\"}updateFinishedPromise(){this.currentFinishedPromise=new Promise((e=>{this.resolveFinishedPromise=e}))}}const Hm=(e,t,n)=>e+(t-e)*n;function Tm(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+6*(t-e)*n:n<.5?t:n<2/3?e+(t-e)*(2/3-n)*6:e}function $m(e,t){return n=>n>0?t:e}const Am=(e,t,n)=>{const r=e*e,o=n*(t*t-r)+r;return o<0?0:Math.sqrt(o)},Nm=[Op,Dp,zp];function Im(e){const t=(n=e,Nm.find((e=>e.test(n))));var n;if(!t)return!1;let r=t.parse(e);return t===zp&&(r=function({hue:e,saturation:t,lightness:n,alpha:r}){e/=360,n/=100;let o=0,i=0,a=0;if(t/=100){const r=n<.5?n*(1+t):n+t-n*t,s=2*n-r;o=Tm(s,r,e+1/3),i=Tm(s,r,e),a=Tm(s,r,e-1/3)}else o=i=a=n;return{red:Math.round(255*o),green:Math.round(255*i),blue:Math.round(255*a),alpha:r}}(r)),r}const Pm=(e,t)=>{const n=Im(e),r=Im(t);if(!n||!r)return $m(e,t);const o={...n};return e=>(o.red=Am(n.red,r.red,e),o.green=Am(n.green,r.green,e),o.blue=Am(n.blue,r.blue,e),o.alpha=Hm(n.alpha,r.alpha,e),Dp.transform(o))},Fm=(e,t)=>n=>t(e(n)),jm=(...e)=>e.reduce(Fm),Bm=/* @__PURE__ */new Set([\"none\",\"hidden\"]);function Dm(e,t){return n=>Hm(e,t,n)}function Om(e){return\"number\"==typeof e?Dm:\"string\"==typeof e?qh(e)?$m:_p.test(e)?Pm:Wm:Array.isArray(e)?zm:\"object\"==typeof e?_p.test(e)?Pm:_m:$m}function zm(e,t){const n=[...e],r=n.length,o=e.map(((e,n)=>Om(e)(e,t[n])));return e=>{for(let t=0;t<r;t++)n[t]=o[t](e);return n}}function _m(e,t){const n={...e,...t},r={};for(const o in n)void 0!==e[o]&&void 0!==t[o]&&(r[o]=Om(e[o])(e[o],t[o]));return e=>{for(const t in r)n[t]=r[t](e);return n}}const Wm=(e,t)=>{const n=Jp.createTransformer(t),r=Gp(e),o=Gp(t);return r.indexes.var.length===o.indexes.var.length&&r.indexes.color.length===o.indexes.color.length&&r.indexes.number.length>=o.indexes.number.length?Bm.has(e)&&!o.values.length||Bm.has(t)&&!r.values.length?function(e,t){return Bm.has(e)?n=>n<=0?e:t:n=>n>=1?t:e}(e,t):jm(zm(function(e,t){var n;const r=[],o={color:0,var:0,number:0};for(let i=0;i<t.values.length;i++){const a=t.types[i],s=e.indexes[a][o[a]],l=null!==(n=e.values[s])&&void 0!==n?n:0;r[i]=l,o[a]++}return r}(r,o),o.values),n):$m(e,t)};function qm(e,t,n){return\"number\"==typeof e&&\"number\"==typeof t&&\"number\"==typeof n?Hm(e,t,n):Om(e)(e,t)}function Zm(e,t,n){const r=Math.max(t-5,0);return gp(n-e(r),t-r)}function Um(e,t){return e*Math.sqrt(1-t*t)}const Gm=[\"duration\",\"bounce\"],Ym=[\"stiffness\",\"damping\",\"mass\"];function Xm(e,t){return t.some((t=>void 0!==e[t]))}function Km(e=.3,t=.3){const n=\"object\"!=typeof e?{visualDuration:e,keyframes:[0,1],bounce:t}:e;let{restSpeed:r,restDelta:o}=n;const i=n.keyframes[0],a=n.keyframes[n.keyframes.length-1],s={done:!1,value:i},{stiffness:l,damping:c,mass:d,duration:u,velocity:h,isResolvedFromDuration:f}=function(e){let t={velocity:0,stiffness:100,damping:10,mass:1,isResolvedFromDuration:!1,...e};if(!Xm(e,Ym)&&Xm(e,Gm))if(e.visualDuration){const n=e.visualDuration,r=2*Math.PI/(1.2*n),o=r*r,i=2*Gh(.05,1,1-(e.bounce||0))*Math.sqrt(o);t={...t,mass:1,stiffness:o,damping:i}}else{const n=function({duration:e=800,bounce:t=.3,velocity:n=0,mass:r=1}){let o,i,a=1-t;a=Gh(.05,1,a),e=Gh(.01,10,Ku(e)),a<1?(o=t=>{const r=t*a,o=r*e;return.001-(r-n)/Um(t,a)*Math.exp(-o)},i=t=>{const r=t*a*e,i=r*n+n,s=Math.pow(a,2)*Math.pow(t,2)*e,l=Math.exp(-r),c=Um(Math.pow(t,2),a);return(.001-o(t)>0?-1:1)*((i-s)*l)/c}):(o=t=>Math.exp(-t*e)*((t-n)*e+1)-.001,i=t=>Math.exp(-t*e)*(e*e*(n-t)));const s=function(e,t,n){let r=n;for(let n=1;n<12;n++)r-=e(r)/t(r);return r}(o,i,5/e);if(e=Xu(e),isNaN(s))return{stiffness:100,damping:10,duration:e};{const t=Math.pow(s,2)*r;return{stiffness:t,damping:2*a*Math.sqrt(r*t),duration:e}}}(e);t={...t,...n,mass:1},t.isResolvedFromDuration=!0}return t}({...n,velocity:-Ku(n.velocity||0)}),p=h||0,m=c/(2*Math.sqrt(l*d)),g=a-i,v=Ku(Math.sqrt(l/d)),w=Math.abs(g)<5;let y;if(r||(r=w?.01:2),o||(o=w?.005:.5),m<1){const e=Um(v,m);y=t=>{const n=Math.exp(-m*v*t);return a-n*((p+m*v*g)/e*Math.sin(e*t)+g*Math.cos(e*t))}}else if(1===m)y=e=>a-Math.exp(-v*e)*(g+(p+v*g)*e);else{const e=v*Math.sqrt(m*m-1);y=t=>{const n=Math.exp(-m*v*t),r=Math.min(e*t,300);return a-n*((p+m*v*g)*Math.sinh(r)+e*g*Math.cosh(r))/e}}const b={calculatedDuration:f&&u||null,next:e=>{const t=y(e);if(f)s.done=e>=u;else{let n=0;m<1&&(n=0===e?Xu(p):Zm(y,e,t));const i=Math.abs(n)<=r,l=Math.abs(a-t)<=o;s.done=i&&l}return s.value=s.done?a:t,s},toString:()=>{const e=Math.min(Df(b),Bf),t=Uf((t=>b.next(e*t).value),e,30);return e+\"ms \"+t}};return b}function Jm({keyframes:e,velocity:t=0,power:n=.8,timeConstant:r=325,bounceDamping:o=10,bounceStiffness:i=500,modifyTarget:a,min:s,max:l,restDelta:c=.5,restSpeed:d}){const u=e[0],h={done:!1,value:u},f=e=>void 0===s?l:void 0===l||Math.abs(s-e)<Math.abs(l-e)?s:l;let p=n*t;const m=u+p,g=void 0===a?m:a(m);g!==m&&(p=g-u);const v=e=>-p*Math.exp(-e/r),w=e=>g+v(e),y=e=>{const t=v(e),n=w(e);h.done=Math.abs(t)<=c,h.value=h.done?g:n};let b,x;const C=e=>{var t;t=h.value,(void 0!==s&&t<s||void 0!==l&&t>l)&&(b=e,x=Km({keyframes:[h.value,f(h.value)],velocity:Zm(w,e,h.value),damping:o,stiffness:i,restDelta:c,restSpeed:d}))};return C(0),{calculatedDuration:null,next:e=>{let t=!1;return!x&&void 0===b&&(t=!0,y(e),C(e)),void 0!==b&&e>=b?x.next(e-b):(!t&&y(e),h)}}}const Qm=/* @__PURE__ */kp(.42,0,1,1),eg=/* @__PURE__ */kp(0,0,.58,1),tg=/* @__PURE__ */kp(.42,0,.58,1),ng={linear:Uu,easeIn:Qm,easeInOut:tg,easeOut:eg,circIn:Hp,circInOut:$p,circOut:Tp,backIn:Rp,backInOut:Vp,backOut:Sp,anticipate:Ep},rg=e=>{if(_f(e)){const[t,n,r,o]=e;return kp(t,n,r,o)}return\"string\"==typeof e?ng[e]:e};function og({duration:e=300,keyframes:t,times:n,ease:r=\"easeInOut\"}){const o=(e=>Array.isArray(e)&&\"number\"!=typeof e[0])(r)?r.map(rg):rg(r),i={done:!1,value:t[0]},a=function(e,t){return e.map((e=>e*t))}(n&&n.length===t.length?n:function(e){const t=[0];return function(e,t){const n=e[e.length-1];for(let r=1;r<=t;r++){const o=Yu(0,t,r);e.push(Hm(n,1,o))}}(t,e.length-1),t}(t),e),s=function(e,t,{clamp:n=!0,ease:r,mixer:o}={}){const i=e.length;if(1===i)return()=>t[0];if(2===i&&t[0]===t[1])return()=>t[1];const a=e[0]===e[1];e[0]>e[i-1]&&(e=[...e].reverse(),t=[...t].reverse());const s=function(e,t,n){const r=[],o=n||qm,i=e.length-1;for(let n=0;n<i;n++){let i=o(e[n],e[n+1]);if(t){const e=Array.isArray(t)?t[n]||Uu:t;i=jm(e,i)}r.push(i)}return r}(t,r,o),l=s.length,c=n=>{if(a&&n<e[0])return t[0];let r=0;if(l>1)for(;r<e.length-2&&!(n<e[r+1]);r++);const o=Yu(e[r],e[r+1],n);return s[r](o)};return n?t=>c(Gh(e[0],e[i-1],t)):c}(a,t,{ease:Array.isArray(o)?o:(l=t,c=o,l.map((()=>c||tg)).splice(0,l.length-1))});var l,c;return{calculatedDuration:e,next:t=>(i.value=s(t),i.done=t>=e,i)}}const ig=e=>{const t=({timestamp:t})=>e(t);return{start:()=>eh.update(t,!0),stop:()=>th(t),now:()=>nh.isProcessing?nh.timestamp:hp.now()}},ag={decay:Jm,inertia:Jm,tween:og,keyframes:og,spring:Km},sg=e=>e/100;class lg extends Em{constructor(e){super(e),this.holdTime=null,this.cancelTime=null,this.currentTime=0,this.playbackSpeed=1,this.pendingPlayState=\"running\",this.startTime=null,this.state=\"idle\",this.stop=()=>{if(this.resolver.cancel(),this.isStopped=!0,\"idle\"===this.state)return;this.teardown();const{onStop:e}=this.options;e&&e()};const{name:t,motionValue:n,element:r,keyframes:o}=this.options,i=r?.KeyframeResolver||wm;this.resolver=new i(o,((e,t)=>this.onKeyframesResolved(e,t)),t,n,r),this.resolver.scheduleResolve()}flatten(){super.flatten(),this._resolved&&Object.assign(this._resolved,this.initPlayback(this._resolved.keyframes))}initPlayback(e){const{type:t=\"keyframes\",repeat:n=0,repeatDelay:r=0,repeatType:o,velocity:i=0}=this.options,a=Of(t)?t:ag[t]||og;let s,l;a!==og&&\"number\"!=typeof e[0]&&(s=jm(sg,qm(e[0],e[1])),e=[0,100]);const c=a({...this.options,keyframes:e});\"mirror\"===o&&(l=a({...this.options,keyframes:[...e].reverse(),velocity:-i})),null===c.calculatedDuration&&(c.calculatedDuration=Df(c));const{calculatedDuration:d}=c,u=d+r;return{generator:c,mirroredGenerator:l,mapPercentToKeyframes:s,calculatedDuration:d,resolvedDuration:u,totalDuration:u*(n+1)-r}}onPostResolved(){const{autoplay:e=!0}=this.options;this.play(),\"paused\"!==this.pendingPlayState&&e?this.state=this.pendingPlayState:this.pause()}tick(e,t=!1){const{resolved:n}=this;if(!n){const{keyframes:e}=this.options;return{done:!0,value:e[e.length-1]}}const{finalKeyframe:r,generator:o,mirroredGenerator:i,mapPercentToKeyframes:a,keyframes:s,calculatedDuration:l,totalDuration:c,resolvedDuration:d}=n;if(null===this.startTime)return o.next(0);const{delay:u,repeat:h,repeatType:f,repeatDelay:p,onUpdate:m}=this.options;this.speed>0?this.startTime=Math.min(this.startTime,e):this.speed<0&&(this.startTime=Math.min(e-c/this.speed,this.startTime)),t?this.currentTime=e:null!==this.holdTime?this.currentTime=this.holdTime:this.currentTime=Math.round(e-this.startTime)*this.speed;const g=this.currentTime-u*(this.speed>=0?1:-1),v=this.speed>=0?g<0:g>c;this.currentTime=Math.max(g,0),\"finished\"===this.state&&null===this.holdTime&&(this.currentTime=c);let w=this.currentTime,y=o;if(h){const e=Math.min(this.currentTime,c)/d;let t=Math.floor(e),n=e%1;!n&&e>=1&&(n=1),1===n&&t--,t=Math.min(t,h+1),!!(t%2)&&(\"reverse\"===f?(n=1-n,p&&(n-=p/d)):\"mirror\"===f&&(y=i)),w=Gh(0,1,n)*d}const b=v?{done:!1,value:s[0]}:y.next(w);a&&(b.value=a(b.value));let{done:x}=b;!v&&null!==l&&(x=this.speed>=0?this.currentTime>=c:this.currentTime<=0);const C=null===this.holdTime&&(\"finished\"===this.state||\"running\"===this.state&&x);return C&&void 0!==r&&(b.value=Vm(s,this.options,r)),m&&m(b.value),C&&this.finish(),b}get duration(){const{resolved:e}=this;return e?Ku(e.calculatedDuration):0}get time(){return Ku(this.currentTime)}set time(e){e=Xu(e),this.currentTime=e,null!==this.holdTime||0===this.speed?this.holdTime=e:this.driver&&(this.startTime=this.driver.now()-e/this.speed)}get speed(){return this.playbackSpeed}set speed(e){const t=this.playbackSpeed!==e;this.playbackSpeed=e,t&&(this.time=Ku(this.currentTime))}play(){if(this.resolver.isScheduled||this.resolver.resume(),!this._resolved)return void(this.pendingPlayState=\"running\");if(this.isStopped)return;const{driver:e=ig,onPlay:t,startTime:n}=this.options;this.driver||(this.driver=e((e=>this.tick(e)))),t&&t();const r=this.driver.now();null!==this.holdTime?this.startTime=r-this.holdTime:this.startTime?\"finished\"===this.state&&(this.startTime=r):this.startTime=n??this.calcStartTime(),\"finished\"===this.state&&this.updateFinishedPromise(),this.cancelTime=this.startTime,this.holdTime=null,this.state=\"running\",this.driver.start()}pause(){var e;this._resolved?(this.state=\"paused\",this.holdTime=null!==(e=this.currentTime)&&void 0!==e?e:0):this.pendingPlayState=\"paused\"}complete(){\"running\"!==this.state&&this.play(),this.pendingPlayState=this.state=\"finished\",this.holdTime=null}finish(){this.teardown(),this.state=\"finished\";const{onComplete:e}=this.options;e&&e()}cancel(){null!==this.cancelTime&&this.tick(this.cancelTime),this.teardown(),this.updateFinishedPromise()}teardown(){this.state=\"idle\",this.stopDriver(),this.resolveFinishedPromise(),this.updateFinishedPromise(),this.startTime=this.cancelTime=null,this.resolver.cancel()}stopDriver(){this.driver&&(this.driver.stop(),this.driver=void 0)}sample(e){return this.startTime=0,this.tick(e,!0)}}const cg=/* @__PURE__ */new Set([\"opacity\",\"clipPath\",\"filter\",\"transform\"]);function dg(e,t,n,{delay:r=0,duration:o=300,repeat:i=0,repeatType:a=\"loop\",ease:s=\"easeInOut\",times:l}={}){const c={[t]:n};l&&(c.offset=l);const d=Kf(s,o);return Array.isArray(d)&&(c.easing=d),e.animate(c,{delay:r,duration:o,easing:Array.isArray(d)?\"linear\":d,fill:\"both\",iterations:i+1,direction:\"reverse\"===a?\"alternate\":\"normal\"})}const ug=/* @__PURE__ */Gu((()=>Object.hasOwnProperty.call(Element.prototype,\"animate\"))),hg={anticipate:Ep,backInOut:Vp,circInOut:$p};class fg extends Em{constructor(e){super(e);const{name:t,motionValue:n,element:r,keyframes:o}=this.options;this.resolver=new Mm(o,((e,t)=>this.onKeyframesResolved(e,t)),t,n,r),this.resolver.scheduleResolve()}initPlayback(e,t){var n;let{duration:r=300,times:o,ease:i,type:a,motionValue:s,name:l,startTime:c}=this.options;if(null===(n=s.owner)||void 0===n||!n.current)return!1;if(\"string\"==typeof i&&Zf()&&i in hg&&(i=hg[i]),Of((d=this.options).type)||\"spring\"===d.type||!Gf(d.ease)){const{onComplete:t,onUpdate:n,motionValue:s,element:l,...c}=this.options,d=function(e,t){const n=new lg({...t,keyframes:e,repeat:0,delay:0,isGenerator:!0});let r={done:!1,value:e[0]};const o=[];let i=0;for(;!r.done&&i<2e4;)r=n.sample(i),o.push(r.value),i+=10;return{times:void 0,keyframes:o,duration:i-10,ease:\"linear\"}}(e,c);1===(e=d.keyframes).length&&(e[1]=e[0]),r=d.duration,o=d.times,i=d.ease,a=\"keyframes\"}var d;const u=dg(s.owner.current,l,e,{...this.options,duration:r,times:o,ease:i});return u.startTime=c??this.calcStartTime(),this.pendingTimeline?(zf(u,this.pendingTimeline),this.pendingTimeline=void 0):u.onfinish=()=>{const{onComplete:n}=this.options;s.set(Vm(e,this.options,t)),n&&n(),this.cancel(),this.resolveFinishedPromise()},{animation:u,duration:r,times:o,type:a,ease:i,keyframes:e}}get duration(){const{resolved:e}=this;if(!e)return 0;const{duration:t}=e;return Ku(t)}get time(){const{resolved:e}=this;if(!e)return 0;const{animation:t}=e;return Ku(t.currentTime||0)}set time(e){const{resolved:t}=this;if(!t)return;const{animation:n}=t;n.currentTime=Xu(e)}get speed(){const{resolved:e}=this;if(!e)return 1;const{animation:t}=e;return t.playbackRate}set speed(e){const{resolved:t}=this;if(!t)return;const{animation:n}=t;n.playbackRate=e}get state(){const{resolved:e}=this;if(!e)return\"idle\";const{animation:t}=e;return t.playState}get startTime(){const{resolved:e}=this;if(!e)return null;const{animation:t}=e;return t.startTime}attachTimeline(e){if(this._resolved){const{resolved:t}=this;if(!t)return Uu;const{animation:n}=t;zf(n,e)}else this.pendingTimeline=e;return Uu}play(){if(this.isStopped)return;const{resolved:e}=this;if(!e)return;const{animation:t}=e;\"finished\"===t.playState&&this.updateFinishedPromise(),t.play()}pause(){const{resolved:e}=this;if(!e)return;const{animation:t}=e;t.pause()}stop(){if(this.resolver.cancel(),this.isStopped=!0,\"idle\"===this.state)return;this.resolveFinishedPromise(),this.updateFinishedPromise();const{resolved:e}=this;if(!e)return;const{animation:t,keyframes:n,duration:r,type:o,ease:i,times:a}=e;if(\"idle\"===t.playState||\"finished\"===t.playState)return;if(this.time){const{motionValue:e,onUpdate:t,onComplete:s,element:l,...c}=this.options,d=new lg({...c,keyframes:n,duration:r,type:o,ease:i,times:a,isGenerator:!0}),u=Xu(this.time);e.setWithVelocity(d.sample(u-10).value,d.sample(u).value,10)}const{onStop:s}=this.options;s&&s(),this.cancel()}complete(){const{resolved:e}=this;e&&e.animation.finish()}cancel(){const{resolved:e}=this;e&&e.animation.cancel()}static supports(e){const{motionValue:t,name:n,repeatDelay:r,repeatType:o,damping:i,type:a}=e;return ug()&&n&&cg.has(n)&&t&&t.owner&&t.owner.current instanceof HTMLElement&&!t.owner.getProps().onUpdate&&!r&&\"mirror\"!==o&&0!==i&&\"inertia\"!==a}}const pg={type:\"spring\",stiffness:500,damping:25,restSpeed:10},mg={type:\"keyframes\",duration:.8},gg={type:\"keyframes\",ease:[.25,.1,.35,1],duration:.3},vg=(e,{keyframes:t})=>t.length>2?mg:Oh.has(e)?e.startsWith(\"scale\")?{type:\"spring\",stiffness:550,damping:0===t[1]?2*Math.sqrt(550):30,restSpeed:10}:pg:gg,wg=(e,t,n,r={},o,i)=>a=>{const s=jf(r,e)||{},l=s.delay||r.delay||0;let{elapsed:c=0}=r;c-=Xu(l);let d={keyframes:Array.isArray(n)?n:[null,n],ease:\"easeOut\",velocity:t.getVelocity(),...s,delay:-c,onUpdate:e=>{t.set(e),s.onUpdate&&s.onUpdate(e)},onComplete:()=>{a(),s.onComplete&&s.onComplete()},name:e,motionValue:t,element:i?void 0:o};(function({when:e,delay:t,delayChildren:n,staggerChildren:r,staggerDirection:o,repeat:i,repeatType:a,repeatDelay:s,from:l,elapsed:c,...d}){return!!Object.keys(d).length})(s)||(d={...d,...vg(e,d)}),d.duration&&(d.duration=Xu(d.duration)),d.repeatDelay&&(d.repeatDelay=Xu(d.repeatDelay)),void 0!==d.from&&(d.keyframes[0]=d.from);let u=!1;if((!1===d.type||0===d.duration&&!d.repeatDelay)&&(d.duration=0,0===d.delay&&(u=!0)),u&&!i&&void 0!==t.get()){const e=Vm(d.keyframes,s);if(void 0!==e)return eh.update((()=>{d.onUpdate(e),d.onComplete()})),new Ff([])}return!i&&fg.supports(d)?new fg(d):new lg(d)};function yg({protectedKeys:e,needsAnimating:t},n){const r=e.hasOwnProperty(n)&&!0!==t[n];return t[n]=!1,r}function bg(e,t,{delay:n=0,transitionOverride:r,type:o}={}){var i;let{transition:a=e.getDefaultTransition(),transitionEnd:s,...l}=t;r&&(a=r);const c=[],d=o&&e.animationState&&e.animationState.getState()[o];for(const t in l){const r=e.getValue(t,null!==(i=e.latestValues[t])&&void 0!==i?i:null),o=l[t];if(void 0===o||d&&yg(d,t))continue;const s={delay:n,...jf(a||{},t)};let u=!1;if(window.MotionHandoffAnimation){const n=xp(e);if(n){const e=window.MotionHandoffAnimation(n,t,eh);null!==e&&(s.startTime=e,u=!0)}}bp(e,t),r.start(wg(t,r,o,e.shouldReduceMotion&&cp.has(t)?{type:!1}:s,e,u));const h=r.animation;h&&c.push(h)}return s&&Promise.all(c).then((()=>{eh.update((()=>{s&&function(e,t){const n=Nf(e,t);let{transitionEnd:r={},transition:o={},...i}=n||{};i={...i,...r};for(const t in i)yp(e,t,(a=i[t],Ih(a)?a[a.length-1]||0:a));var a}(e,s)}))})),c}function xg(e,t,n={}){var r;const o=Nf(e,t,\"exit\"===n.type?null===(r=e.presenceContext)||void 0===r?void 0:r.custom:void 0);let{transition:i=e.getDefaultTransition()||{}}=o||{};n.transitionOverride&&(i=n.transitionOverride);const a=o?()=>Promise.all(bg(e,o,n)):()=>Promise.resolve(),s=e.variantChildren&&e.variantChildren.size?(r=0)=>{const{delayChildren:o=0,staggerChildren:a,staggerDirection:s}=i;return function(e,t,n=0,r=0,o=1,i){const a=[],s=(e.variantChildren.size-1)*r,l=1===o?(e=0)=>e*r:(e=0)=>s-e*r;return Array.from(e.variantChildren).sort(Cg).forEach(((e,r)=>{e.notify(\"AnimationStart\",t),a.push(xg(e,t,{...i,delay:n+l(r)}).then((()=>e.notify(\"AnimationComplete\",t))))})),Promise.all(a)}(e,t,o+r,a,s,n)}:()=>Promise.resolve(),{when:l}=i;if(l){const[e,t]=\"beforeChildren\"===l?[a,s]:[s,a];return e().then((()=>t()))}return Promise.all([a(),s(n.delay)])}function Cg(e,t){return e.sortNodePosition(t)}const kg=gh.length;function Lg(e){if(!e)return;if(!e.isControllingVariants){const t=e.parent&&Lg(e.parent)||{};return void 0!==e.props.initial&&(t.initial=e.props.initial),t}const t={};for(let n=0;n<kg;n++){const r=gh[n],o=e.props[r];(fh(o)||!1===o)&&(t[r]=o)}return t}const Mg=[...mh].reverse(),Sg=mh.length;function Rg(e){let t=function(e){return t=>Promise.all(t.map((({animation:t,options:n})=>function(e,t,n={}){let r;if(e.notify(\"AnimationStart\",t),Array.isArray(t)){const o=t.map((t=>xg(e,t,n)));r=Promise.all(o)}else if(\"string\"==typeof t)r=xg(e,t,n);else{const o=\"function\"==typeof t?Nf(e,t,n.custom):t;r=Promise.all(bg(e,o,n))}return r.then((()=>{e.notify(\"AnimationComplete\",t)}))}(e,t,n))))}(e),n=Eg(),r=!0;const o=t=>(n,r)=>{var o;const i=Nf(e,r,\"exit\"===t?null===(o=e.presenceContext)||void 0===o?void 0:o.custom:void 0);if(i){const{transition:e,transitionEnd:t,...r}=i;n={...n,...r,...t}}return n};function i(i){const{props:a}=e,s=Lg(e.parent)||{},l=[],c=/* @__PURE__ */new Set;let d={},u=1/0;for(let t=0;t<Sg;t++){const p=Mg[t],m=n[p],g=void 0!==a[p]?a[p]:s[p],v=fh(g),w=p===i?m.isActive:null;!1===w&&(u=t);let y=g===s[p]&&g!==a[p]&&v;if(y&&r&&e.manuallyAnimateOnMount&&(y=!1),m.protectedKeys={...d},!m.isActive&&null===w||!g&&!m.prevProp||ph(g)||\"boolean\"==typeof g)continue;const b=(h=m.prevProp,\"string\"==typeof(f=g)?f!==h:!!Array.isArray(f)&&!Af(f,h));let x=b||p===i&&m.isActive&&!y&&v||t>u&&v,C=!1;const k=Array.isArray(g)?g:[g];let L=k.reduce(o(p),{});!1===w&&(L={});const{prevResolvedValues:M={}}=m,S={...M,...L},R=t=>{x=!0,c.has(t)&&(C=!0,c.delete(t)),m.needsAnimating[t]=!0;const n=e.getValue(t);n&&(n.liveStyle=!1)};for(const e in S){const t=L[e],n=M[e];if(d.hasOwnProperty(e))continue;let r=!1;r=Ih(t)&&Ih(n)?!Af(t,n):t!==n,r?null!=t?R(e):c.add(e):void 0!==t&&c.has(e)?R(e):m.protectedKeys[e]=!0}m.prevProp=g,m.prevResolvedValues=L,m.isActive&&(d={...d,...L}),r&&e.blockInitialAnimation&&(x=!1),x&&(!y||!b||C)&&l.push(...k.map((e=>({animation:e,options:{type:p}}))))}var h,f;if(c.size){const t={};c.forEach((n=>{const r=e.getBaseTarget(n),o=e.getValue(n);o&&(o.liveStyle=!0),t[n]=r??null})),l.push({animation:t})}let p=!!l.length;return r&&(!1===a.initial||a.initial===a.animate)&&!e.manuallyAnimateOnMount&&(p=!1),r=!1,p?t(l):Promise.resolve()}return{animateChanges:i,setActive:function(t,r){var o;if(n[t].isActive===r)return Promise.resolve();null===(o=e.variantChildren)||void 0===o||o.forEach((e=>{var n;return null===(n=e.animationState)||void 0===n?void 0:n.setActive(t,r)})),n[t].isActive=r;const a=i(t);for(const e in n)n[e].protectedKeys={};return a},setAnimateFunction:function(n){t=n(e)},getState:()=>n,reset:()=>{n=Eg(),r=!0}}}function Vg(e=!1){return{isActive:e,protectedKeys:{},needsAnimating:{},prevResolvedValues:{}}}function Eg(){return{animate:Vg(!0),whileInView:Vg(),whileHover:Vg(),whileTap:Vg(),whileDrag:Vg(),whileFocus:Vg(),exit:Vg()}}class Hg{constructor(e){this.isMounted=!1,this.node=e}update(){}}let Tg=0;const $g={animation:{Feature:class extends Hg{constructor(e){super(e),e.animationState||(e.animationState=Rg(e))}updateAnimationControlsSubscription(){const{animate:e}=this.node.getProps();ph(e)&&(this.unmountControls=e.subscribe(this.node))}mount(){this.updateAnimationControlsSubscription()}update(){const{animate:e}=this.node.getProps(),{animate:t}=this.node.prevProps||{};e!==t&&this.updateAnimationControlsSubscription()}unmount(){var e;this.node.animationState.reset(),null===(e=this.unmountControls)||void 0===e||e.call(this)}}},exit:{Feature:class extends Hg{constructor(){super(...arguments),this.id=Tg++}update(){if(!this.node.presenceContext)return;const{isPresent:e,onExitComplete:t}=this.node.presenceContext,{isPresent:n}=this.node.prevPresenceContext||{};if(!this.node.animationState||e===n)return;const r=this.node.animationState.setActive(\"exit\",!e);t&&!e&&r.then((()=>t(this.id)))}mount(){const{register:e}=this.node.presenceContext||{};e&&(this.unmount=e(this.id))}unmount(){}}}};function Ag(e,t,n,r={passive:!0}){return e.addEventListener(t,n,r),()=>e.removeEventListener(t,n)}function Ng(e){return{point:{x:e.pageX,y:e.pageY}}}function Ig(e,t,n,r){return Ag(e,t,(e=>t=>rp(t)&&e(t,Ng(t)))(n),r)}const Pg=(e,t)=>Math.abs(e-t);class Fg{constructor(e,t,{transformPagePoint:n,contextWindow:r,dragSnapToOrigin:o=!1}={}){if(this.startEvent=null,this.lastMoveEvent=null,this.lastMoveEventInfo=null,this.handlers={},this.contextWindow=window,this.updatePoint=()=>{if(!this.lastMoveEvent||!this.lastMoveEventInfo)return;const e=Dg(this.lastMoveEventInfo,this.history),t=null!==this.startEvent,n=function(e,t){const n=Pg(e.x,t.x),r=Pg(e.y,t.y);return Math.sqrt(n**2+r**2)}(e.offset,{x:0,y:0})>=3;if(!t&&!n)return;const{point:r}=e,{timestamp:o}=nh;this.history.push({...r,timestamp:o});const{onStart:i,onMove:a}=this.handlers;t||(i&&i(this.lastMoveEvent,e),this.startEvent=this.lastMoveEvent),a&&a(this.lastMoveEvent,e)},this.handlePointerMove=(e,t)=>{this.lastMoveEvent=e,this.lastMoveEventInfo=jg(t,this.transformPagePoint),eh.update(this.updatePoint,!0)},this.handlePointerUp=(e,t)=>{this.end();const{onEnd:n,onSessionEnd:r,resumeAnimation:o}=this.handlers;if(this.dragSnapToOrigin&&o&&o(),!this.lastMoveEvent||!this.lastMoveEventInfo)return;const i=Dg(\"pointercancel\"===e.type?this.lastMoveEventInfo:jg(t,this.transformPagePoint),this.history);this.startEvent&&n&&n(e,i),r&&r(e,i)},!rp(e))return;this.dragSnapToOrigin=o,this.handlers=t,this.transformPagePoint=n,this.contextWindow=r||window;const i=jg(Ng(e),this.transformPagePoint),{point:a}=i,{timestamp:s}=nh;this.history=[{...a,timestamp:s}];const{onSessionStart:l}=t;l&&l(e,Dg(i,this.history)),this.removeListeners=jm(Ig(this.contextWindow,\"pointermove\",this.handlePointerMove),Ig(this.contextWindow,\"pointerup\",this.handlePointerUp),Ig(this.contextWindow,\"pointercancel\",this.handlePointerUp))}updateHandlers(e){this.handlers=e}end(){this.removeListeners&&this.removeListeners(),th(this.updatePoint)}}function jg(e,t){return t?{point:t(e.point)}:e}function Bg(e,t){return{x:e.x-t.x,y:e.y-t.y}}function Dg({point:e},t){return{point:e,delta:Bg(e,zg(t)),offset:Bg(e,Og(t)),velocity:_g(t,.1)}}function Og(e){return e[0]}function zg(e){return e[e.length-1]}function _g(e,t){if(e.length<2)return{x:0,y:0};let n=e.length-1,r=null;const o=zg(e);for(;n>=0&&(r=e[n],!(o.timestamp-r.timestamp>Xu(t)));)n--;if(!r)return{x:0,y:0};const i=Ku(o.timestamp-r.timestamp);if(0===i)return{x:0,y:0};const a={x:(o.x-r.x)/i,y:(o.y-r.y)/i};return a.x===1/0&&(a.x=0),a.y===1/0&&(a.y=0),a}function Wg(e){return e.max-e.min}function qg(e,t,n,r=.5){e.origin=r,e.originPoint=Hm(t.min,t.max,e.origin),e.scale=Wg(n)/Wg(t),e.translate=Hm(n.min,n.max,e.origin)-e.originPoint,(e.scale>=.9999&&e.scale<=1.0001||isNaN(e.scale))&&(e.scale=1),(e.translate>=-.01&&e.translate<=.01||isNaN(e.translate))&&(e.translate=0)}function Zg(e,t,n,r){qg(e.x,t.x,n.x,r?r.originX:void 0),qg(e.y,t.y,n.y,r?r.originY:void 0)}function Ug(e,t,n){e.min=n.min+t.min,e.max=e.min+Wg(t)}function Gg(e,t,n){e.min=t.min-n.min,e.max=e.min+Wg(t)}function Yg(e,t,n){Gg(e.x,t.x,n.x),Gg(e.y,t.y,n.y)}function Xg(e,t,n){return{min:void 0!==t?e.min+t:void 0,max:void 0!==n?e.max+n-(e.max-e.min):void 0}}function Kg(e,t){let n=t.min-e.min,r=t.max-e.max;return t.max-t.min<e.max-e.min&&([n,r]=[r,n]),{min:n,max:r}}const Jg=.35;function Qg(e,t,n){return{min:ev(e,t),max:ev(e,n)}}function ev(e,t){return\"number\"==typeof e?e:e[t]||0}const tv=()=>({x:{min:0,max:0},y:{min:0,max:0}});function nv(e){return[e(\"x\"),e(\"y\")]}function rv({top:e,left:t,right:n,bottom:r}){return{x:{min:t,max:n},y:{min:e,max:r}}}function ov(e){return void 0===e||1===e}function iv({scale:e,scaleX:t,scaleY:n}){return!ov(e)||!ov(t)||!ov(n)}function av(e){return iv(e)||sv(e)||e.z||e.rotate||e.rotateX||e.rotateY||e.skewX||e.skewY}function sv(e){return lv(e.x)||lv(e.y)}function lv(e){return e&&\"0%\"!==e}function cv(e,t,n){return n+t*(e-n)}function dv(e,t,n,r,o){return void 0!==o&&(e=cv(e,o,r)),cv(e,n,r)+t}function uv(e,t=0,n=1,r,o){e.min=dv(e.min,t,n,r,o),e.max=dv(e.max,t,n,r,o)}function hv(e,{x:t,y:n}){uv(e.x,t.translate,t.scale,t.originPoint),uv(e.y,n.translate,n.scale,n.originPoint)}const fv=.999999999999,pv=1.0000000000001;function mv(e,t){e.min=e.min+t,e.max=e.max+t}function gv(e,t,n,r,o=.5){uv(e,t,n,Hm(e.min,e.max,o),r)}function vv(e,t){gv(e.x,t.x,t.scaleX,t.scale,t.originX),gv(e.y,t.y,t.scaleY,t.scale,t.originY)}function wv(e,t){return rv(function(e,t){if(!t)return e;const n=t({x:e.left,y:e.top}),r=t({x:e.right,y:e.bottom});return{top:n.y,left:n.x,bottom:r.y,right:r.x}}(e.getBoundingClientRect(),t))}const yv=({current:e})=>e?e.ownerDocument.defaultView:null,bv=/* @__PURE__ */new WeakMap;class xv{constructor(e){this.openDragLock=null,this.isDragging=!1,this.currentDirection=null,this.originPoint={x:0,y:0},this.constraints=!1,this.hasMutatedConstraints=!1,this.elastic={x:{min:0,max:0},y:{min:0,max:0}},this.visualElement=e}start(e,{snapToCursor:t=!1}={}){const{presenceContext:n}=this.visualElement;if(n&&!1===n.isPresent)return;const{dragSnapToOrigin:r}=this.getProps();this.panSession=new Fg(e,{onSessionStart:e=>{const{dragSnapToOrigin:n}=this.getProps();n?this.pauseAnimation():this.stopAnimation(),t&&this.snapToCursor(Ng(e).point)},onStart:(e,t)=>{const{drag:n,dragPropagation:r,onDragStart:o}=this.getProps();if(n&&!r&&(this.openDragLock&&this.openDragLock(),this.openDragLock=\"x\"===(i=n)||\"y\"===i?Jf[i]?null:(Jf[i]=!0,()=>{Jf[i]=!1}):Jf.x||Jf.y?null:(Jf.x=Jf.y=!0,()=>{Jf.x=Jf.y=!1}),!this.openDragLock))return;var i;this.isDragging=!0,this.currentDirection=null,this.resolveConstraints(),this.visualElement.projection&&(this.visualElement.projection.isAnimationBlocked=!0,this.visualElement.projection.target=void 0),nv((e=>{let t=this.getAxisMotionValue(e).get()||0;if(ef.test(t)){const{projection:n}=this.visualElement;if(n&&n.layout){const r=n.layout.layoutBox[e];r&&(t=Wg(r)*(parseFloat(t)/100))}}this.originPoint[e]=t})),o&&eh.postRender((()=>o(e,t))),bp(this.visualElement,\"transform\");const{animationState:a}=this.visualElement;a&&a.setActive(\"whileDrag\",!0)},onMove:(e,t)=>{const{dragPropagation:n,dragDirectionLock:r,onDirectionLock:o,onDrag:i}=this.getProps();if(!n&&!this.openDragLock)return;const{offset:a}=t;if(r&&null===this.currentDirection)return this.currentDirection=function(e,t=10){let n=null;return Math.abs(e.y)>t?n=\"y\":Math.abs(e.x)>t&&(n=\"x\"),n}(a),void(null!==this.currentDirection&&o&&o(this.currentDirection));this.updateAxis(\"x\",t.point,a),this.updateAxis(\"y\",t.point,a),this.visualElement.render(),i&&i(e,t)},onSessionEnd:(e,t)=>this.stop(e,t),resumeAnimation:()=>nv((e=>{var t;return\"paused\"===this.getAnimationState(e)&&(null===(t=this.getAxisMotionValue(e).animation)||void 0===t?void 0:t.play())}))},{transformPagePoint:this.visualElement.getTransformPagePoint(),dragSnapToOrigin:r,contextWindow:yv(this.visualElement)})}stop(e,t){const n=this.isDragging;if(this.cancel(),!n)return;const{velocity:r}=t;this.startAnimation(r);const{onDragEnd:o}=this.getProps();o&&eh.postRender((()=>o(e,t)))}cancel(){this.isDragging=!1;const{projection:e,animationState:t}=this.visualElement;e&&(e.isAnimationBlocked=!1),this.panSession&&this.panSession.end(),this.panSession=void 0;const{dragPropagation:n}=this.getProps();!n&&this.openDragLock&&(this.openDragLock(),this.openDragLock=null),t&&t.setActive(\"whileDrag\",!1)}updateAxis(e,t,n){const{drag:r}=this.getProps();if(!n||!Cv(e,r,this.currentDirection))return;const o=this.getAxisMotionValue(e);let i=this.originPoint[e]+n[e];this.constraints&&this.constraints[e]&&(i=function(e,{min:t,max:n},r){return void 0!==t&&e<t?e=r?Hm(t,e,r.min):Math.max(e,t):void 0!==n&&e>n&&(e=r?Hm(n,e,r.max):Math.min(e,n)),e}(i,this.constraints[e],this.elastic[e])),o.set(i)}resolveConstraints(){var e;const{dragConstraints:t,dragElastic:n}=this.getProps(),r=this.visualElement.projection&&!this.visualElement.projection.layout?this.visualElement.projection.measure(!1):null===(e=this.visualElement.projection)||void 0===e?void 0:e.layout,o=this.constraints;t&&xh(t)?this.constraints||(this.constraints=this.resolveRefConstraints()):this.constraints=!(!t||!r)&&function(e,{top:t,left:n,bottom:r,right:o}){return{x:Xg(e.x,n,o),y:Xg(e.y,t,r)}}(r.layoutBox,t),this.elastic=function(e=Jg){return!1===e?e=0:!0===e&&(e=Jg),{x:Qg(e,\"left\",\"right\"),y:Qg(e,\"top\",\"bottom\")}}(n),o!==this.constraints&&r&&this.constraints&&!this.hasMutatedConstraints&&nv((e=>{!1!==this.constraints&&this.getAxisMotionValue(e)&&(this.constraints[e]=function(e,t){const n={};return void 0!==t.min&&(n.min=t.min-e.min),void 0!==t.max&&(n.max=t.max-e.min),n}(r.layoutBox[e],this.constraints[e]))}))}resolveRefConstraints(){const{dragConstraints:e,onMeasureDragConstraints:t}=this.getProps();if(!e||!xh(e))return!1;const n=e.current,{projection:r}=this.visualElement;if(!r||!r.layout)return!1;const o=function(e,t,n){const r=wv(e,n),{scroll:o}=t;return o&&(mv(r.x,o.offset.x),mv(r.y,o.offset.y)),r}(n,r.root,this.visualElement.getTransformPagePoint());let i=function(e,t){return{x:Kg(e.x,t.x),y:Kg(e.y,t.y)}}(r.layout.layoutBox,o);if(t){const e=t(function({x:e,y:t}){return{top:t.min,right:e.max,bottom:t.max,left:e.min}}(i));this.hasMutatedConstraints=!!e,e&&(i=rv(e))}return i}startAnimation(e){const{drag:t,dragMomentum:n,dragElastic:r,dragTransition:o,dragSnapToOrigin:i,onDragTransitionEnd:a}=this.getProps(),s=this.constraints||{},l=nv((a=>{if(!Cv(a,t,this.currentDirection))return;let l=s[a]||{};i&&(l={min:0,max:0});const c=r?200:1e6,d=r?40:1e7,u={type:\"inertia\",velocity:n?e[a]:0,bounceStiffness:c,bounceDamping:d,timeConstant:750,restDelta:1,restSpeed:10,...o,...l};return this.startAxisValueAnimation(a,u)}));return Promise.all(l).then(a)}startAxisValueAnimation(e,t){const n=this.getAxisMotionValue(e);return bp(this.visualElement,e),n.start(wg(e,n,0,t,this.visualElement,!1))}stopAnimation(){nv((e=>this.getAxisMotionValue(e).stop()))}pauseAnimation(){nv((e=>{var t;return null===(t=this.getAxisMotionValue(e).animation)||void 0===t?void 0:t.pause()}))}getAnimationState(e){var t;return null===(t=this.getAxisMotionValue(e).animation)||void 0===t?void 0:t.state}getAxisMotionValue(e){const t=`_drag${e.toUpperCase()}`,n=this.visualElement.getProps();return n[t]||this.visualElement.getValue(e,(n.initial?n.initial[e]:void 0)||0)}snapToCursor(e){nv((t=>{const{drag:n}=this.getProps();if(!Cv(t,n,this.currentDirection))return;const{projection:r}=this.visualElement,o=this.getAxisMotionValue(t);if(r&&r.layout){const{min:n,max:i}=r.layout.layoutBox[t];o.set(e[t]-Hm(n,i,.5))}}))}scalePositionWithinConstraints(){if(!this.visualElement.current)return;const{drag:e,dragConstraints:t}=this.getProps(),{projection:n}=this.visualElement;if(!xh(t)||!n||!this.constraints)return;this.stopAnimation();const r={x:0,y:0};nv((e=>{const t=this.getAxisMotionValue(e);if(t&&!1!==this.constraints){const n=t.get();r[e]=function(e,t){let n=.5;const r=Wg(e),o=Wg(t);return o>r?n=Yu(t.min,t.max-r,e.min):r>o&&(n=Yu(e.min,e.max-o,t.min)),Gh(0,1,n)}({min:n,max:n},this.constraints[e])}}));const{transformTemplate:o}=this.visualElement.getProps();this.visualElement.current.style.transform=o?o({},\"\"):\"none\",n.root&&n.root.updateScroll(),n.updateLayout(),this.resolveConstraints(),nv((t=>{if(!Cv(t,e,null))return;const n=this.getAxisMotionValue(t),{min:o,max:i}=this.constraints[t];n.set(Hm(o,i,r[t]))}))}addListeners(){if(!this.visualElement.current)return;bv.set(this.visualElement,this);const e=Ig(this.visualElement.current,\"pointerdown\",(e=>{const{drag:t,dragListener:n=!0}=this.getProps();t&&n&&this.start(e)})),t=()=>{const{dragConstraints:e}=this.getProps();xh(e)&&e.current&&(this.constraints=this.resolveRefConstraints())},{projection:n}=this.visualElement,r=n.addEventListener(\"measure\",t);n&&!n.layout&&(n.root&&n.root.updateScroll(),n.updateLayout()),eh.read(t);const o=Ag(window,\"resize\",(()=>this.scalePositionWithinConstraints())),i=n.addEventListener(\"didUpdate\",(({delta:e,hasLayoutChanged:t})=>{this.isDragging&&t&&(nv((t=>{const n=this.getAxisMotionValue(t);n&&(this.originPoint[t]+=e[t].translate,n.set(n.get()+e[t].translate))})),this.visualElement.render())}));return()=>{o(),e(),r(),i&&i()}}getProps(){const e=this.visualElement.getProps(),{drag:t=!1,dragDirectionLock:n=!1,dragPropagation:r=!1,dragConstraints:o=!1,dragElastic:i=Jg,dragMomentum:a=!0}=e;return{...e,drag:t,dragDirectionLock:n,dragPropagation:r,dragConstraints:o,dragElastic:i,dragMomentum:a}}}function Cv(e,t,n){return!(!0!==t&&t!==e||null!==n&&n!==e)}const kv=e=>(t,n)=>{e&&eh.postRender((()=>e(t,n)))},Lv={hasAnimatedSinceResize:!0,hasEverUpdated:!1};function Mv(e,t){return t.max===t.min?0:e/(t.max-t.min)*100}const Sv={correct:(e,t)=>{if(!t.target)return e;if(\"string\"==typeof e){if(!tf.test(e))return e;e=parseFloat(e)}return`${Mv(e,t.target.x)}% ${Mv(e,t.target.y)}%`}},Rv={correct:(e,{treeScale:t,projectionDelta:n})=>{const r=e,o=Jp.parse(e);if(o.length>5)return r;const i=Jp.createTransformer(e),a=\"number\"!=typeof o[0]?1:0,s=n.x.scale*t.x,l=n.y.scale*t.y;o[0+a]/=s,o[1+a]/=l;const c=Hm(s,l,.5);return\"number\"==typeof o[2+a]&&(o[2+a]/=c),\"number\"==typeof o[3+a]&&(o[3+a]/=c),i(o)}};class Vv extends react__WEBPACK_IMPORTED_MODULE_1__.Component{componentDidMount(){const{visualElement:e,layoutGroup:t,switchLayoutGroup:n,layoutId:r}=this.props,{projection:o}=e;var i;i=Hv,Object.assign(xf,i),o&&(t.group&&t.group.add(o),n&&n.register&&r&&n.register(o),o.root.didUpdate(),o.addEventListener(\"animationComplete\",(()=>{this.safeToRemove()})),o.setOptions({...o.options,onExitComplete:()=>this.safeToRemove()})),Lv.hasEverUpdated=!0}getSnapshotBeforeUpdate(e){const{layoutDependency:t,visualElement:n,drag:r,isPresent:o}=this.props,i=n.projection;return i&&(i.isPresent=o,r||e.layoutDependency!==t||void 0===t?i.willUpdate():this.safeToRemove(),e.isPresent!==o&&(o?i.promote():i.relegate()||eh.postRender((()=>{const e=i.getStack();(!e||!e.members.length)&&this.safeToRemove()})))),null}componentDidUpdate(){const{projection:e}=this.props.visualElement;e&&(e.root.didUpdate(),Mh.postRender((()=>{!e.currentAnimation&&e.isLead()&&this.safeToRemove()})))}componentWillUnmount(){const{visualElement:e,layoutGroup:t,switchLayoutGroup:n}=this.props,{projection:r}=e;r&&(r.scheduleCheckAfterUnmount(),t&&t.group&&t.group.remove(r),n&&n.deregister&&n.deregister(r))}safeToRemove(){const{safeToRemove:e}=this.props;e&&e()}render(){return null}}function Ev(t){const[n,r]=Ou(),o=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(Au);return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Vv,{...t,layoutGroup:o,switchLayoutGroup:(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(Rh),isPresent:n,safeToRemove:r})}const Hv={borderRadius:{...Sv,applyTo:[\"borderTopLeftRadius\",\"borderTopRightRadius\",\"borderBottomLeftRadius\",\"borderBottomRightRadius\"]},borderTopLeftRadius:Sv,borderTopRightRadius:Sv,borderBottomLeftRadius:Sv,borderBottomRightRadius:Sv,boxShadow:Rv},Tv=(e,t)=>e.depth-t.depth;class $v{constructor(){this.children=[],this.isDirty=!1}add(e){fp(this.children,e),this.isDirty=!0}remove(e){pp(this.children,e),this.isDirty=!0}forEach(e){this.isDirty&&this.children.sort(Tv),this.isDirty=!1,this.children.forEach(e)}}const Av=[\"TopLeft\",\"TopRight\",\"BottomLeft\",\"BottomRight\"],Nv=Av.length,Iv=e=>\"string\"==typeof e?parseFloat(e):e,Pv=e=>\"number\"==typeof e||tf.test(e);function Fv(e,t){return void 0!==e[t]?e[t]:e.borderRadius}const jv=/* @__PURE__ */Dv(0,.5,Tp),Bv=/* @__PURE__ */Dv(.5,.95,Uu);function Dv(e,t,n){return r=>r<e?0:r>t?1:n(Yu(e,t,r))}function Ov(e,t){e.min=t.min,e.max=t.max}function zv(e,t){Ov(e.x,t.x),Ov(e.y,t.y)}function _v(e,t){e.translate=t.translate,e.scale=t.scale,e.originPoint=t.originPoint,e.origin=t.origin}function Wv(e,t,n,r,o){return e=cv(e-=t,1/n,r),void 0!==o&&(e=cv(e,1/o,r)),e}function qv(e,t,[n,r,o],i,a){!function(e,t=0,n=1,r=.5,o,i=e,a=e){if(ef.test(t)&&(t=parseFloat(t),t=Hm(a.min,a.max,t/100)-a.min),\"number\"!=typeof t)return;let s=Hm(i.min,i.max,r);e===i&&(s-=t),e.min=Wv(e.min,t,n,s,o),e.max=Wv(e.max,t,n,s,o)}(e,t[n],t[r],t[o],t.scale,i,a)}const Zv=[\"x\",\"scaleX\",\"originX\"],Uv=[\"y\",\"scaleY\",\"originY\"];function Gv(e,t,n,r){qv(e.x,t,Zv,n?n.x:void 0,r?r.x:void 0),qv(e.y,t,Uv,n?n.y:void 0,r?r.y:void 0)}function Yv(e){return 0===e.translate&&1===e.scale}function Xv(e){return Yv(e.x)&&Yv(e.y)}function Kv(e,t){return e.min===t.min&&e.max===t.max}function Jv(e,t){return Math.round(e.min)===Math.round(t.min)&&Math.round(e.max)===Math.round(t.max)}function Qv(e,t){return Jv(e.x,t.x)&&Jv(e.y,t.y)}function ew(e){return Wg(e.x)/Wg(e.y)}function tw(e,t){return e.translate===t.translate&&e.scale===t.scale&&e.originPoint===t.originPoint}class nw{constructor(){this.members=[]}add(e){fp(this.members,e),e.scheduleRender()}remove(e){if(pp(this.members,e),e===this.prevLead&&(this.prevLead=void 0),e===this.lead){const e=this.members[this.members.length-1];e&&this.promote(e)}}relegate(e){const t=this.members.findIndex((t=>e===t));if(0===t)return!1;let n;for(let e=t;e>=0;e--){const t=this.members[e];if(!1!==t.isPresent){n=t;break}}return!!n&&(this.promote(n),!0)}promote(e,t){const n=this.lead;if(e!==n&&(this.prevLead=n,this.lead=e,e.show(),n)){n.instance&&n.scheduleRender(),e.scheduleRender(),e.resumeFrom=n,t&&(e.resumeFrom.preserveOpacity=!0),n.snapshot&&(e.snapshot=n.snapshot,e.snapshot.latestValues=n.animationValues||n.latestValues),e.root&&e.root.isUpdating&&(e.isLayoutDirty=!0);const{crossfade:r}=e.options;!1===r&&n.hide()}}exitAnimationComplete(){this.members.forEach((e=>{const{options:t,resumingFrom:n}=e;t.onExitComplete&&t.onExitComplete(),n&&n.options.onExitComplete&&n.options.onExitComplete()}))}scheduleRender(){this.members.forEach((e=>{e.instance&&e.scheduleRender(!1)}))}removeLeadSnapshot(){this.lead&&this.lead.snapshot&&(this.lead.snapshot=void 0)}}const rw={type:\"projectionFrame\",totalNodes:0,resolvedTargetDeltas:0,recalculatedProjection:0},ow=typeof window<\"u\"&&void 0!==window.MotionDebug,iw=[\"\",\"X\",\"Y\",\"Z\"],aw={visibility:\"hidden\"};let sw=0;function lw(e,t,n,r){const{latestValues:o}=t;o[e]&&(n[e]=o[e],t.setStaticValue(e,0),r&&(r[e]=0))}function cw(e){if(e.hasCheckedOptimisedAppear=!0,e.root===e)return;const{visualElement:t}=e.options;if(!t)return;const n=xp(t);if(window.MotionHasOptimisedAnimation(n,\"transform\")){const{layout:t,layoutId:r}=e.options;window.MotionCancelOptimisedAnimation(n,\"transform\",eh,!(t||r))}const{parent:r}=e;r&&!r.hasCheckedOptimisedAppear&&cw(r)}function dw({attachResizeListener:e,defaultParent:t,measureScroll:n,checkIsScrollRoot:r,resetTransform:o}){return class{constructor(e={},n=t?.()){this.id=sw++,this.animationId=0,this.children=/* @__PURE__ */new Set,this.options={},this.isTreeAnimating=!1,this.isAnimationBlocked=!1,this.isLayoutDirty=!1,this.isProjectionDirty=!1,this.isSharedProjectionDirty=!1,this.isTransformDirty=!1,this.updateManuallyBlocked=!1,this.updateBlockedByResize=!1,this.isUpdating=!1,this.isSVG=!1,this.needsReset=!1,this.shouldResetTransform=!1,this.hasCheckedOptimisedAppear=!1,this.treeScale={x:1,y:1},this.eventHandlers=/* @__PURE__ */new Map,this.hasTreeAnimated=!1,this.updateScheduled=!1,this.scheduleUpdate=()=>this.update(),this.projectionUpdateScheduled=!1,this.checkUpdateFailed=()=>{this.isUpdating&&(this.isUpdating=!1,this.clearAllSnapshots())},this.updateProjection=()=>{this.projectionUpdateScheduled=!1,ow&&(rw.totalNodes=rw.resolvedTargetDeltas=rw.recalculatedProjection=0),this.nodes.forEach(fw),this.nodes.forEach(bw),this.nodes.forEach(xw),this.nodes.forEach(pw),ow&&window.MotionDebug.record(rw)},this.resolvedRelativeTargetAt=0,this.hasProjected=!1,this.isVisible=!0,this.animationProgress=0,this.sharedNodes=/* @__PURE__ */new Map,this.latestValues=e,this.root=n?n.root||n:this,this.path=n?[...n.path,n]:[],this.parent=n,this.depth=n?n.depth+1:0;for(let e=0;e<this.path.length;e++)this.path[e].shouldResetTransform=!0;this.root===this&&(this.nodes=new $v)}addEventListener(e,t){return this.eventHandlers.has(e)||this.eventHandlers.set(e,new mp),this.eventHandlers.get(e).add(t)}notifyListeners(e,...t){const n=this.eventHandlers.get(e);n&&n.notify(...t)}hasListeners(e){return this.eventHandlers.has(e)}mount(t,n=this.root.hasTreeAnimated){if(this.instance)return;var r;this.isSVG=(r=t)instanceof SVGElement&&\"svg\"!==r.tagName,this.instance=t;const{layoutId:o,layout:i,visualElement:a}=this.options;if(a&&!a.current&&a.mount(t),this.root.nodes.add(this),this.parent&&this.parent.children.add(this),n&&(i||o)&&(this.isLayoutDirty=!0),e){let n;const r=()=>this.root.updateBlockedByResize=!1;e(t,(()=>{this.root.updateBlockedByResize=!0,n&&n(),n=function(e){const t=hp.now(),n=({timestamp:r})=>{const o=r-t;o>=250&&(th(n),e(o-250))};return eh.read(n,!0),()=>th(n)}(r),Lv.hasAnimatedSinceResize&&(Lv.hasAnimatedSinceResize=!1,this.nodes.forEach(yw))}))}o&&this.root.registerSharedNode(o,this),!1!==this.options.animate&&a&&(o||i)&&this.addEventListener(\"didUpdate\",(({delta:e,hasLayoutChanged:t,hasRelativeTargetChanged:n,layout:r})=>{if(this.isTreeAnimationBlocked())return this.target=void 0,void(this.relativeTarget=void 0);const o=this.options.transition||a.getDefaultTransition()||Rw,{onLayoutAnimationStart:i,onLayoutAnimationComplete:s}=a.getProps(),l=!this.targetLayout||!Qv(this.targetLayout,r)||n,c=!t&&n;if(this.options.layoutRoot||this.resumeFrom&&this.resumeFrom.instance||c||t&&(l||!this.currentAnimation)){this.resumeFrom&&(this.resumingFrom=this.resumeFrom,this.resumingFrom.resumingFrom=void 0),this.setAnimationOrigin(e,c);const t={...jf(o,\"layout\"),onPlay:i,onComplete:s};(a.shouldReduceMotion||this.options.layoutRoot)&&(t.delay=0,t.type=!1),this.startAnimation(t)}else t||yw(this),this.isLead()&&this.options.onExitComplete&&this.options.onExitComplete();this.targetLayout=r}))}unmount(){this.options.layoutId&&this.willUpdate(),this.root.nodes.remove(this);const e=this.getStack();e&&e.remove(this),this.parent&&this.parent.children.delete(this),this.instance=void 0,th(this.updateProjection)}blockUpdate(){this.updateManuallyBlocked=!0}unblockUpdate(){this.updateManuallyBlocked=!1}isUpdateBlocked(){return this.updateManuallyBlocked||this.updateBlockedByResize}isTreeAnimationBlocked(){return this.isAnimationBlocked||this.parent&&this.parent.isTreeAnimationBlocked()||!1}startUpdate(){this.isUpdateBlocked()||(this.isUpdating=!0,this.nodes&&this.nodes.forEach(Cw),this.animationId++)}getTransformTemplate(){const{visualElement:e}=this.options;return e&&e.getProps().transformTemplate}willUpdate(e=!0){if(this.root.hasTreeAnimated=!0,this.root.isUpdateBlocked())return void(this.options.onExitComplete&&this.options.onExitComplete());if(window.MotionCancelOptimisedAnimation&&!this.hasCheckedOptimisedAppear&&cw(this),!this.root.isUpdating&&this.root.startUpdate(),this.isLayoutDirty)return;this.isLayoutDirty=!0;for(let e=0;e<this.path.length;e++){const t=this.path[e];t.shouldResetTransform=!0,t.updateScroll(\"snapshot\"),t.options.layoutRoot&&t.willUpdate(!1)}const{layoutId:t,layout:n}=this.options;if(void 0===t&&!n)return;const r=this.getTransformTemplate();this.prevTransformTemplateValue=r?r(this.latestValues,\"\"):void 0,this.updateSnapshot(),e&&this.notifyListeners(\"willUpdate\")}update(){if(this.updateScheduled=!1,this.isUpdateBlocked())return this.unblockUpdate(),this.clearAllSnapshots(),void this.nodes.forEach(gw);this.isUpdating||this.nodes.forEach(vw),this.isUpdating=!1,this.nodes.forEach(ww),this.nodes.forEach(uw),this.nodes.forEach(hw),this.clearAllSnapshots();const e=hp.now();nh.delta=Gh(0,1e3/60,e-nh.timestamp),nh.timestamp=e,nh.isProcessing=!0,rh.update.process(nh),rh.preRender.process(nh),rh.render.process(nh),nh.isProcessing=!1}didUpdate(){this.updateScheduled||(this.updateScheduled=!0,Mh.read(this.scheduleUpdate))}clearAllSnapshots(){this.nodes.forEach(mw),this.sharedNodes.forEach(kw)}scheduleUpdateProjection(){this.projectionUpdateScheduled||(this.projectionUpdateScheduled=!0,eh.preRender(this.updateProjection,!1,!0))}scheduleCheckAfterUnmount(){eh.postRender((()=>{this.isLayoutDirty?this.root.didUpdate():this.root.checkUpdateFailed()}))}updateSnapshot(){this.snapshot||!this.instance||(this.snapshot=this.measure())}updateLayout(){if(!(this.instance&&(this.updateScroll(),this.options.alwaysMeasureLayout&&this.isLead()||this.isLayoutDirty)))return;if(this.resumeFrom&&!this.resumeFrom.instance)for(let e=0;e<this.path.length;e++)this.path[e].updateScroll();const e=this.layout;this.layout=this.measure(!1),this.layoutCorrected={x:{min:0,max:0},y:{min:0,max:0}},this.isLayoutDirty=!1,this.projectionDelta=void 0,this.notifyListeners(\"measure\",this.layout.layoutBox);const{visualElement:t}=this.options;t&&t.notify(\"LayoutMeasure\",this.layout.layoutBox,e?e.layoutBox:void 0)}updateScroll(e=\"measure\"){let t=!(!this.options.layoutScroll||!this.instance);if(this.scroll&&this.scroll.animationId===this.root.animationId&&this.scroll.phase===e&&(t=!1),t){const t=r(this.instance);this.scroll={animationId:this.root.animationId,phase:e,isRoot:t,offset:n(this.instance),wasRoot:this.scroll?this.scroll.isRoot:t}}}resetTransform(){if(!o)return;const e=this.isLayoutDirty||this.shouldResetTransform||this.options.alwaysMeasureLayout,t=this.projectionDelta&&!Xv(this.projectionDelta),n=this.getTransformTemplate(),r=n?n(this.latestValues,\"\"):void 0,i=r!==this.prevTransformTemplateValue;e&&(t||av(this.latestValues)||i)&&(o(this.instance,r),this.shouldResetTransform=!1,this.scheduleRender())}measure(e=!0){const t=this.measurePageBox();let n=this.removeElementScroll(t);return e&&(n=this.removeTransform(n)),Hw((r=n).x),Hw(r.y),{animationId:this.root.animationId,measuredBox:t,layoutBox:n,latestValues:{},source:this.id};var r}measurePageBox(){var e;const{visualElement:t}=this.options;if(!t)return{x:{min:0,max:0},y:{min:0,max:0}};const n=t.measureViewportBox();if(!(null===(e=this.scroll)||void 0===e?void 0:e.wasRoot)&&!this.path.some($w)){const{scroll:e}=this.root;e&&(mv(n.x,e.offset.x),mv(n.y,e.offset.y))}return n}removeElementScroll(e){var t;const n={x:{min:0,max:0},y:{min:0,max:0}};if(zv(n,e),null!==(t=this.scroll)&&void 0!==t&&t.wasRoot)return n;for(let t=0;t<this.path.length;t++){const r=this.path[t],{scroll:o,options:i}=r;r!==this.root&&o&&i.layoutScroll&&(o.wasRoot&&zv(n,e),mv(n.x,o.offset.x),mv(n.y,o.offset.y))}return n}applyTransform(e,t=!1){const n={x:{min:0,max:0},y:{min:0,max:0}};zv(n,e);for(let e=0;e<this.path.length;e++){const r=this.path[e];!t&&r.options.layoutScroll&&r.scroll&&r!==r.root&&vv(n,{x:-r.scroll.offset.x,y:-r.scroll.offset.y}),av(r.latestValues)&&vv(n,r.latestValues)}return av(this.latestValues)&&vv(n,this.latestValues),n}removeTransform(e){const t={x:{min:0,max:0},y:{min:0,max:0}};zv(t,e);for(let e=0;e<this.path.length;e++){const n=this.path[e];if(!n.instance||!av(n.latestValues))continue;iv(n.latestValues)&&n.updateSnapshot();const r={x:{min:0,max:0},y:{min:0,max:0}};zv(r,n.measurePageBox()),Gv(t,n.latestValues,n.snapshot?n.snapshot.layoutBox:void 0,r)}return av(this.latestValues)&&Gv(t,this.latestValues),t}setTargetDelta(e){this.targetDelta=e,this.root.scheduleUpdateProjection(),this.isProjectionDirty=!0}setOptions(e){this.options={...this.options,...e,crossfade:void 0===e.crossfade||e.crossfade}}clearMeasurements(){this.scroll=void 0,this.layout=void 0,this.snapshot=void 0,this.prevTransformTemplateValue=void 0,this.targetDelta=void 0,this.target=void 0,this.isLayoutDirty=!1}forceRelativeParentToResolveTarget(){this.relativeParent&&this.relativeParent.resolvedRelativeTargetAt!==nh.timestamp&&this.relativeParent.resolveTargetDelta(!0)}resolveTargetDelta(e=!1){var t;const n=this.getLead();this.isProjectionDirty||(this.isProjectionDirty=n.isProjectionDirty),this.isTransformDirty||(this.isTransformDirty=n.isTransformDirty),this.isSharedProjectionDirty||(this.isSharedProjectionDirty=n.isSharedProjectionDirty);const r=!!this.resumingFrom||this!==n;if(!(e||r&&this.isSharedProjectionDirty||this.isProjectionDirty||null!==(t=this.parent)&&void 0!==t&&t.isProjectionDirty||this.attemptToResolveRelativeTarget||this.root.updateBlockedByResize))return;const{layout:o,layoutId:i}=this.options;if(this.layout&&(o||i)){if(this.resolvedRelativeTargetAt=nh.timestamp,!this.targetDelta&&!this.relativeTarget){const e=this.getClosestProjectingParent();e&&e.layout&&1!==this.animationProgress?(this.relativeParent=e,this.forceRelativeParentToResolveTarget(),this.relativeTarget={x:{min:0,max:0},y:{min:0,max:0}},this.relativeTargetOrigin={x:{min:0,max:0},y:{min:0,max:0}},Yg(this.relativeTargetOrigin,this.layout.layoutBox,e.layout.layoutBox),zv(this.relativeTarget,this.relativeTargetOrigin)):this.relativeParent=this.relativeTarget=void 0}if(this.relativeTarget||this.targetDelta){if(this.target||(this.target={x:{min:0,max:0},y:{min:0,max:0}},this.targetWithTransforms={x:{min:0,max:0},y:{min:0,max:0}}),this.relativeTarget&&this.relativeTargetOrigin&&this.relativeParent&&this.relativeParent.target?(this.forceRelativeParentToResolveTarget(),a=this.target,s=this.relativeTarget,l=this.relativeParent.target,Ug(a.x,s.x,l.x),Ug(a.y,s.y,l.y)):this.targetDelta?(this.resumingFrom?this.target=this.applyTransform(this.layout.layoutBox):zv(this.target,this.layout.layoutBox),hv(this.target,this.targetDelta)):zv(this.target,this.layout.layoutBox),this.attemptToResolveRelativeTarget){this.attemptToResolveRelativeTarget=!1;const e=this.getClosestProjectingParent();e&&!!e.resumingFrom==!!this.resumingFrom&&!e.options.layoutScroll&&e.target&&1!==this.animationProgress?(this.relativeParent=e,this.forceRelativeParentToResolveTarget(),this.relativeTarget={x:{min:0,max:0},y:{min:0,max:0}},this.relativeTargetOrigin={x:{min:0,max:0},y:{min:0,max:0}},Yg(this.relativeTargetOrigin,this.target,e.target),zv(this.relativeTarget,this.relativeTargetOrigin)):this.relativeParent=this.relativeTarget=void 0}ow&&rw.resolvedTargetDeltas++}}var a,s,l}getClosestProjectingParent(){if(this.parent&&!iv(this.parent.latestValues)&&!sv(this.parent.latestValues))return this.parent.isProjecting()?this.parent:this.parent.getClosestProjectingParent()}isProjecting(){return!(!(this.relativeTarget||this.targetDelta||this.options.layoutRoot)||!this.layout)}calcProjection(){var e;const t=this.getLead(),n=!!this.resumingFrom||this!==t;let r=!0;if((this.isProjectionDirty||!(null===(e=this.parent)||void 0===e)&&e.isProjectionDirty)&&(r=!1),n&&(this.isSharedProjectionDirty||this.isTransformDirty)&&(r=!1),this.resolvedRelativeTargetAt===nh.timestamp&&(r=!1),r)return;const{layout:o,layoutId:i}=this.options;if(this.isTreeAnimating=!!(this.parent&&this.parent.isTreeAnimating||this.currentAnimation||this.pendingAnimation),this.isTreeAnimating||(this.targetDelta=this.relativeTarget=void 0),!this.layout||!o&&!i)return;zv(this.layoutCorrected,this.layout.layoutBox);const a=this.treeScale.x,s=this.treeScale.y;(function(e,t,n,r=!1){const o=n.length;if(!o)return;let i,a;t.x=t.y=1;for(let s=0;s<o;s++){i=n[s],a=i.projectionDelta;const{visualElement:o}=i.options;o&&o.props.style&&\"contents\"===o.props.style.display||(r&&i.options.layoutScroll&&i.scroll&&i!==i.root&&vv(e,{x:-i.scroll.offset.x,y:-i.scroll.offset.y}),a&&(t.x*=a.x.scale,t.y*=a.y.scale,hv(e,a)),r&&av(i.latestValues)&&vv(e,i.latestValues))}t.x<pv&&t.x>fv&&(t.x=1),t.y<pv&&t.y>fv&&(t.y=1)})(this.layoutCorrected,this.treeScale,this.path,n),t.layout&&!t.target&&(1!==this.treeScale.x||1!==this.treeScale.y)&&(t.target=t.layout.layoutBox,t.targetWithTransforms={x:{min:0,max:0},y:{min:0,max:0}});const{target:l}=t;l?(this.projectionDelta&&this.prevProjectionDelta?(_v(this.prevProjectionDelta.x,this.projectionDelta.x),_v(this.prevProjectionDelta.y,this.projectionDelta.y)):this.createProjectionDeltas(),Zg(this.projectionDelta,this.layoutCorrected,l,this.latestValues),(this.treeScale.x!==a||this.treeScale.y!==s||!tw(this.projectionDelta.x,this.prevProjectionDelta.x)||!tw(this.projectionDelta.y,this.prevProjectionDelta.y))&&(this.hasProjected=!0,this.scheduleRender(),this.notifyListeners(\"projectionUpdate\",l)),ow&&rw.recalculatedProjection++):this.prevProjectionDelta&&(this.createProjectionDeltas(),this.scheduleRender())}hide(){this.isVisible=!1}show(){this.isVisible=!0}scheduleRender(e=!0){var t;if(null===(t=this.options.visualElement)||void 0===t||t.scheduleRender(),e){const e=this.getStack();e&&e.scheduleRender()}this.resumingFrom&&!this.resumingFrom.instance&&(this.resumingFrom=void 0)}createProjectionDeltas(){this.prevProjectionDelta={x:{translate:0,scale:1,origin:0,originPoint:0},y:{translate:0,scale:1,origin:0,originPoint:0}},this.projectionDelta={x:{translate:0,scale:1,origin:0,originPoint:0},y:{translate:0,scale:1,origin:0,originPoint:0}},this.projectionDeltaWithTransform={x:{translate:0,scale:1,origin:0,originPoint:0},y:{translate:0,scale:1,origin:0,originPoint:0}}}setAnimationOrigin(e,t=!1){const n=this.snapshot,r=n?n.latestValues:{},o={...this.latestValues},i={x:{translate:0,scale:1,origin:0,originPoint:0},y:{translate:0,scale:1,origin:0,originPoint:0}};(!this.relativeParent||!this.relativeParent.options.layoutRoot)&&(this.relativeTarget=this.relativeTargetOrigin=void 0),this.attemptToResolveRelativeTarget=!t;const a={x:{min:0,max:0},y:{min:0,max:0}},s=(n?n.source:void 0)!==(this.layout?this.layout.source:void 0),l=this.getStack(),c=!l||l.members.length<=1,d=!(!s||c||!0!==this.options.crossfade||this.path.some(Sw));let u;this.animationProgress=0,this.mixTargetDelta=t=>{const n=t/1e3;var l,h,f,p,m,g;Lw(i.x,e.x,n),Lw(i.y,e.y,n),this.setTargetDelta(i),this.relativeTarget&&this.relativeTargetOrigin&&this.layout&&this.relativeParent&&this.relativeParent.layout&&(Yg(a,this.layout.layoutBox,this.relativeParent.layout.layoutBox),f=this.relativeTarget,p=this.relativeTargetOrigin,m=a,g=n,Mw(f.x,p.x,m.x,g),Mw(f.y,p.y,m.y,g),u&&(l=this.relativeTarget,h=u,Kv(l.x,h.x)&&Kv(l.y,h.y))&&(this.isProjectionDirty=!1),u||(u={x:{min:0,max:0},y:{min:0,max:0}}),zv(u,this.relativeTarget)),s&&(this.animationValues=o,function(e,t,n,r,o,i){o?(e.opacity=Hm(0,void 0!==n.opacity?n.opacity:1,jv(r)),e.opacityExit=Hm(void 0!==t.opacity?t.opacity:1,0,Bv(r))):i&&(e.opacity=Hm(void 0!==t.opacity?t.opacity:1,void 0!==n.opacity?n.opacity:1,r));for(let o=0;o<Nv;o++){const i=`border${Av[o]}Radius`;let a=Fv(t,i),s=Fv(n,i);void 0===a&&void 0===s||(a||(a=0),s||(s=0),0===a||0===s||Pv(a)===Pv(s)?(e[i]=Math.max(Hm(Iv(a),Iv(s),r),0),(ef.test(s)||ef.test(a))&&(e[i]+=\"%\")):e[i]=s)}(t.rotate||n.rotate)&&(e.rotate=Hm(t.rotate||0,n.rotate||0,r))}(o,r,this.latestValues,n,d,c)),this.root.scheduleUpdateProjection(),this.scheduleRender(),this.animationProgress=n},this.mixTargetDelta(this.options.layoutRoot?1e3:0)}startAnimation(e){this.notifyListeners(\"animationStart\"),this.currentAnimation&&this.currentAnimation.stop(),this.resumingFrom&&this.resumingFrom.currentAnimation&&this.resumingFrom.currentAnimation.stop(),this.pendingAnimation&&(th(this.pendingAnimation),this.pendingAnimation=void 0),this.pendingAnimation=eh.update((()=>{Lv.hasAnimatedSinceResize=!0,this.currentAnimation=function(e,t,n){const r=Ph(0)?0:wp(0);return r.start(wg(\"\",r,1e3,n)),r.animation}(0,0,{...e,onUpdate:t=>{this.mixTargetDelta(t),e.onUpdate&&e.onUpdate(t)},onComplete:()=>{e.onComplete&&e.onComplete(),this.completeAnimation()}}),this.resumingFrom&&(this.resumingFrom.currentAnimation=this.currentAnimation),this.pendingAnimation=void 0}))}completeAnimation(){this.resumingFrom&&(this.resumingFrom.currentAnimation=void 0,this.resumingFrom.preserveOpacity=void 0);const e=this.getStack();e&&e.exitAnimationComplete(),this.resumingFrom=this.currentAnimation=this.animationValues=void 0,this.notifyListeners(\"animationComplete\")}finishAnimation(){this.currentAnimation&&(this.mixTargetDelta&&this.mixTargetDelta(1e3),this.currentAnimation.stop()),this.completeAnimation()}applyTransformsToTarget(){const e=this.getLead();let{targetWithTransforms:t,target:n,layout:r,latestValues:o}=e;if(t&&n&&r){if(this!==e&&this.layout&&r&&Tw(this.options.animationType,this.layout.layoutBox,r.layoutBox)){n=this.target||{x:{min:0,max:0},y:{min:0,max:0}};const t=Wg(this.layout.layoutBox.x);n.x.min=e.target.x.min,n.x.max=n.x.min+t;const r=Wg(this.layout.layoutBox.y);n.y.min=e.target.y.min,n.y.max=n.y.min+r}zv(t,n),vv(t,o),Zg(this.projectionDeltaWithTransform,this.layoutCorrected,t,o)}}registerSharedNode(e,t){this.sharedNodes.has(e)||this.sharedNodes.set(e,new nw),this.sharedNodes.get(e).add(t);const n=t.options.initialPromotionConfig;t.promote({transition:n?n.transition:void 0,preserveFollowOpacity:n&&n.shouldPreserveFollowOpacity?n.shouldPreserveFollowOpacity(t):void 0})}isLead(){const e=this.getStack();return!e||e.lead===this}getLead(){var e;const{layoutId:t}=this.options;return t&&(null===(e=this.getStack())||void 0===e?void 0:e.lead)||this}getPrevLead(){var e;const{layoutId:t}=this.options;return t?null===(e=this.getStack())||void 0===e?void 0:e.prevLead:void 0}getStack(){const{layoutId:e}=this.options;if(e)return this.root.sharedNodes.get(e)}promote({needsReset:e,transition:t,preserveFollowOpacity:n}={}){const r=this.getStack();r&&r.promote(this,n),e&&(this.projectionDelta=void 0,this.needsReset=!0),t&&this.setOptions({transition:t})}relegate(){const e=this.getStack();return!!e&&e.relegate(this)}resetSkewAndRotation(){const{visualElement:e}=this.options;if(!e)return;let t=!1;const{latestValues:n}=e;if((n.z||n.rotate||n.rotateX||n.rotateY||n.rotateZ||n.skewX||n.skewY)&&(t=!0),!t)return;const r={};n.z&&lw(\"z\",e,r,this.animationValues);for(let t=0;t<iw.length;t++)lw(`rotate${iw[t]}`,e,r,this.animationValues),lw(`skew${iw[t]}`,e,r,this.animationValues);e.render();for(const t in r)e.setStaticValue(t,r[t]),this.animationValues&&(this.animationValues[t]=r[t]);e.scheduleRender()}getProjectionStyles(e){var t,n;if(!this.instance||this.isSVG)return;if(!this.isVisible)return aw;const r={visibility:\"\"},o=this.getTransformTemplate();if(this.needsReset)return this.needsReset=!1,r.opacity=\"\",r.pointerEvents=Fh(e?.pointerEvents)||\"\",r.transform=o?o(this.latestValues,\"\"):\"none\",r;const i=this.getLead();if(!this.projectionDelta||!this.layout||!i.target){const t={};return this.options.layoutId&&(t.opacity=void 0!==this.latestValues.opacity?this.latestValues.opacity:1,t.pointerEvents=Fh(e?.pointerEvents)||\"\"),this.hasProjected&&!av(this.latestValues)&&(t.transform=o?o({},\"\"):\"none\",this.hasProjected=!1),t}const a=i.animationValues||i.latestValues;this.applyTransformsToTarget(),r.transform=function(e,t,n){let r=\"\";const o=e.x.translate/t.x,i=e.y.translate/t.y,a=n?.z||0;if((o||i||a)&&(r=`translate3d(${o}px, ${i}px, ${a}px) `),(1!==t.x||1!==t.y)&&(r+=`scale(${1/t.x}, ${1/t.y}) `),n){const{transformPerspective:e,rotate:t,rotateX:o,rotateY:i,skewX:a,skewY:s}=n;e&&(r=`perspective(${e}px) ${r}`),t&&(r+=`rotate(${t}deg) `),o&&(r+=`rotateX(${o}deg) `),i&&(r+=`rotateY(${i}deg) `),a&&(r+=`skewX(${a}deg) `),s&&(r+=`skewY(${s}deg) `)}const s=e.x.scale*t.x,l=e.y.scale*t.y;return(1!==s||1!==l)&&(r+=`scale(${s}, ${l})`),r||\"none\"}(this.projectionDeltaWithTransform,this.treeScale,a),o&&(r.transform=o(a,r.transform));const{x:s,y:l}=this.projectionDelta;r.transformOrigin=`${100*s.origin}% ${100*l.origin}% 0`,i.animationValues?r.opacity=i===this?null!==(n=null!==(t=a.opacity)&&void 0!==t?t:this.latestValues.opacity)&&void 0!==n?n:1:this.preserveOpacity?this.latestValues.opacity:a.opacityExit:r.opacity=i===this?void 0!==a.opacity?a.opacity:\"\":void 0!==a.opacityExit?a.opacityExit:0;for(const e in xf){if(void 0===a[e])continue;const{correct:t,applyTo:n}=xf[e],o=\"none\"===r.transform?a[e]:t(a[e],i);if(n){const e=n.length;for(let t=0;t<e;t++)r[n[t]]=o}else r[e]=o}return this.options.layoutId&&(r.pointerEvents=i===this?Fh(e?.pointerEvents)||\"\":\"none\"),r}clearSnapshot(){this.resumeFrom=this.snapshot=void 0}resetTree(){this.root.nodes.forEach((e=>{var t;return null===(t=e.currentAnimation)||void 0===t?void 0:t.stop()})),this.root.nodes.forEach(gw),this.root.sharedNodes.clear()}}}function uw(e){e.updateLayout()}function hw(e){var t;const n=(null===(t=e.resumeFrom)||void 0===t?void 0:t.snapshot)||e.snapshot;if(e.isLead()&&e.layout&&n&&e.hasListeners(\"didUpdate\")){const{layoutBox:t,measuredBox:r}=e.layout,{animationType:o}=e.options,i=n.source!==e.layout.source;\"size\"===o?nv((e=>{const r=i?n.measuredBox[e]:n.layoutBox[e],o=Wg(r);r.min=t[e].min,r.max=r.min+o})):Tw(o,n.layoutBox,t)&&nv((r=>{const o=i?n.measuredBox[r]:n.layoutBox[r],a=Wg(t[r]);o.max=o.min+a,e.relativeTarget&&!e.currentAnimation&&(e.isProjectionDirty=!0,e.relativeTarget[r].max=e.relativeTarget[r].min+a)}));const a={x:{translate:0,scale:1,origin:0,originPoint:0},y:{translate:0,scale:1,origin:0,originPoint:0}};Zg(a,t,n.layoutBox);const s={x:{translate:0,scale:1,origin:0,originPoint:0},y:{translate:0,scale:1,origin:0,originPoint:0}};i?Zg(s,e.applyTransform(r,!0),n.measuredBox):Zg(s,t,n.layoutBox);const l=!Xv(a);let c=!1;if(!e.resumeFrom){const r=e.getClosestProjectingParent();if(r&&!r.resumeFrom){const{snapshot:o,layout:i}=r;if(o&&i){const a={x:{min:0,max:0},y:{min:0,max:0}};Yg(a,n.layoutBox,o.layoutBox);const s={x:{min:0,max:0},y:{min:0,max:0}};Yg(s,t,i.layoutBox),Qv(a,s)||(c=!0),r.options.layoutRoot&&(e.relativeTarget=s,e.relativeTargetOrigin=a,e.relativeParent=r)}}}e.notifyListeners(\"didUpdate\",{layout:t,snapshot:n,delta:s,layoutDelta:a,hasLayoutChanged:l,hasRelativeTargetChanged:c})}else if(e.isLead()){const{onExitComplete:t}=e.options;t&&t()}e.options.transition=void 0}function fw(e){ow&&rw.totalNodes++,e.parent&&(e.isProjecting()||(e.isProjectionDirty=e.parent.isProjectionDirty),e.isSharedProjectionDirty||(e.isSharedProjectionDirty=!!(e.isProjectionDirty||e.parent.isProjectionDirty||e.parent.isSharedProjectionDirty)),e.isTransformDirty||(e.isTransformDirty=e.parent.isTransformDirty))}function pw(e){e.isProjectionDirty=e.isSharedProjectionDirty=e.isTransformDirty=!1}function mw(e){e.clearSnapshot()}function gw(e){e.clearMeasurements()}function vw(e){e.isLayoutDirty=!1}function ww(e){const{visualElement:t}=e.options;t&&t.getProps().onBeforeLayoutMeasure&&t.notify(\"BeforeLayoutMeasure\"),e.resetTransform()}function yw(e){e.finishAnimation(),e.targetDelta=e.relativeTarget=e.target=void 0,e.isProjectionDirty=!0}function bw(e){e.resolveTargetDelta()}function xw(e){e.calcProjection()}function Cw(e){e.resetSkewAndRotation()}function kw(e){e.removeLeadSnapshot()}function Lw(e,t,n){e.translate=Hm(t.translate,0,n),e.scale=Hm(t.scale,1,n),e.origin=t.origin,e.originPoint=t.originPoint}function Mw(e,t,n,r){e.min=Hm(t.min,n.min,r),e.max=Hm(t.max,n.max,r)}function Sw(e){return e.animationValues&&void 0!==e.animationValues.opacityExit}const Rw={duration:.45,ease:[.4,0,.1,1]},Vw=e=>typeof navigator<\"u\"&&navigator.userAgent&&navigator.userAgent.toLowerCase().includes(e),Ew=Vw(\"applewebkit/\")&&!Vw(\"chrome/\")?Math.round:Uu;function Hw(e){e.min=Ew(e.min),e.max=Ew(e.max)}function Tw(e,t,n){return\"position\"===e||\"preserve-aspect\"===e&&(r=ew(t),o=ew(n),!(Math.abs(r-o)<=.2));var r,o}function $w(e){var t;return e!==e.root&&(null===(t=e.scroll)||void 0===t?void 0:t.wasRoot)}const Aw=dw({attachResizeListener:(e,t)=>Ag(e,\"resize\",t),measureScroll:()=>({x:document.documentElement.scrollLeft||document.body.scrollLeft,y:document.documentElement.scrollTop||document.body.scrollTop}),checkIsScrollRoot:()=>!0}),Nw={current:void 0},Iw=dw({measureScroll:e=>({x:e.scrollLeft,y:e.scrollTop}),defaultParent:()=>{if(!Nw.current){const e=new Aw({});e.mount(window),e.setOptions({layoutScroll:!0}),Nw.current=e}return Nw.current},resetTransform:(e,t)=>{e.style.transform=void 0!==t?t:\"none\"},checkIsScrollRoot:e=>\"fixed\"===window.getComputedStyle(e).position}),Pw={pan:{Feature:class extends Hg{constructor(){super(...arguments),this.removePointerDownListener=Uu}onPointerDown(e){this.session=new Fg(e,this.createPanHandlers(),{transformPagePoint:this.node.getTransformPagePoint(),contextWindow:yv(this.node)})}createPanHandlers(){const{onPanSessionStart:e,onPanStart:t,onPan:n,onPanEnd:r}=this.node.getProps();return{onSessionStart:kv(e),onStart:kv(t),onMove:n,onEnd:(e,t)=>{delete this.session,r&&eh.postRender((()=>r(e,t)))}}}mount(){this.removePointerDownListener=Ig(this.node.current,\"pointerdown\",(e=>this.onPointerDown(e)))}update(){this.session&&this.session.updateHandlers(this.createPanHandlers())}unmount(){this.removePointerDownListener(),this.session&&this.session.end()}}},drag:{Feature:class extends Hg{constructor(e){super(e),this.removeGroupControls=Uu,this.removeListeners=Uu,this.controls=new xv(e)}mount(){const{dragControls:e}=this.node.getProps();e&&(this.removeGroupControls=e.subscribe(this.controls)),this.removeListeners=this.controls.addListeners()||Uu}unmount(){this.removeGroupControls(),this.removeListeners()}},ProjectionNode:Iw,MeasureLayout:Ev}};function Fw(e,t,n){const{props:r}=e;e.animationState&&r.whileHover&&e.animationState.setActive(\"whileHover\",\"Start\"===n);const o=r[\"onHover\"+n];o&&eh.postRender((()=>o(t,Ng(t))))}function jw(e,t,n){const{props:r}=e;e.animationState&&r.whileTap&&e.animationState.setActive(\"whileTap\",\"Start\"===n);const o=r[\"onTap\"+(\"End\"===n?\"\":n)];o&&eh.postRender((()=>o(t,Ng(t))))}const Bw=/* @__PURE__ */new WeakMap,Dw=/* @__PURE__ */new WeakMap,Ow=e=>{const t=Bw.get(e.target);t&&t(e)},zw=e=>{e.forEach(Ow)},_w={some:0,all:1},Ww={inView:{Feature:class extends Hg{constructor(){super(...arguments),this.hasEnteredView=!1,this.isInView=!1}startObserver(){this.unmount();const{viewport:e={}}=this.node.getProps(),{root:t,margin:n,amount:r=\"some\",once:o}=e,i={root:t?t.current:void 0,rootMargin:n,threshold:\"number\"==typeof r?r:_w[r]};return function(e,t,n){const r=function({root:e,...t}){const n=e||document;Dw.has(n)||Dw.set(n,{});const r=Dw.get(n),o=JSON.stringify(t);return r[o]||(r[o]=new IntersectionObserver(zw,{root:e,...t})),r[o]}(t);return Bw.set(e,n),r.observe(e),()=>{Bw.delete(e),r.unobserve(e)}}(this.node.current,i,(e=>{const{isIntersecting:t}=e;if(this.isInView===t||(this.isInView=t,o&&!t&&this.hasEnteredView))return;t&&(this.hasEnteredView=!0),this.node.animationState&&this.node.animationState.setActive(\"whileInView\",t);const{onViewportEnter:n,onViewportLeave:r}=this.node.getProps(),i=t?n:r;i&&i(e)}))}mount(){this.startObserver()}update(){if(typeof IntersectionObserver>\"u\")return;const{props:e,prevProps:t}=this.node;[\"amount\",\"margin\",\"root\"].some(function({viewport:e={}},{viewport:t={}}={}){return n=>e[n]!==t[n]}(e,t))&&this.startObserver()}unmount(){}}},tap:{Feature:class extends Hg{mount(){const{current:e}=this.node;e&&(this.unmount=function(e,t,n={}){const[r,o,i]=ep(e,n),a=e=>{const r=e.currentTarget;if(!lp(e)||ip.has(r))return;ip.add(r);const i=t(e),a=(e,t)=>{window.removeEventListener(\"pointerup\",s),window.removeEventListener(\"pointercancel\",l),lp(e)&&ip.has(r)&&(ip.delete(r),\"function\"==typeof i&&i(e,{success:t}))},s=e=>{a(e,n.useGlobalTarget||np(r,e.target))},l=e=>{a(e,!1)};window.addEventListener(\"pointerup\",s,o),window.addEventListener(\"pointercancel\",l,o)};return r.forEach((e=>{!function(e){return op.has(e.tagName)||-1!==e.tabIndex}(e)&&null===e.getAttribute(\"tabindex\")&&(e.tabIndex=0),(n.useGlobalTarget?window:e).addEventListener(\"pointerdown\",a,o),e.addEventListener(\"focus\",(e=>((e,t)=>{const n=e.currentTarget;if(!n)return;const r=ap((()=>{if(ip.has(n))return;sp(n,\"down\");const e=ap((()=>{sp(n,\"up\")}));n.addEventListener(\"keyup\",e,t),n.addEventListener(\"blur\",(()=>sp(n,\"cancel\")),t)}));n.addEventListener(\"keydown\",r,t),n.addEventListener(\"blur\",(()=>n.removeEventListener(\"keydown\",r)),t)})(e,o)),o)})),i}(e,(e=>(jw(this.node,e,\"Start\"),(e,{success:t})=>jw(this.node,e,t?\"End\":\"Cancel\"))),{useGlobalTarget:this.node.props.globalTapTarget}))}unmount(){}}},focus:{Feature:class extends Hg{constructor(){super(...arguments),this.isActive=!1}onFocus(){let e=!1;try{e=this.node.current.matches(\":focus-visible\")}catch{e=!0}!e||!this.node.animationState||(this.node.animationState.setActive(\"whileFocus\",!0),this.isActive=!0)}onBlur(){!this.isActive||!this.node.animationState||(this.node.animationState.setActive(\"whileFocus\",!1),this.isActive=!1)}mount(){this.unmount=jm(Ag(this.node.current,\"focus\",(()=>this.onFocus())),Ag(this.node.current,\"blur\",(()=>this.onBlur())))}unmount(){}}},hover:{Feature:class extends Hg{mount(){const{current:e}=this.node;e&&(this.unmount=function(e,t,n={}){const[r,o,i]=ep(e,n),a=tp((e=>{const{target:n}=e,r=t(e);if(\"function\"!=typeof r||!n)return;const i=tp((e=>{r(e),n.removeEventListener(\"pointerleave\",i)}));n.addEventListener(\"pointerleave\",i,o)}));return r.forEach((e=>{e.addEventListener(\"pointerenter\",a,o)})),i}(e,(e=>(Fw(this.node,e,\"Start\"),e=>Fw(this.node,e,\"End\")))))}unmount(){}}}},qw={layout:{ProjectionNode:Iw,MeasureLayout:Ev}},Zw={current:null},Uw={current:!1},Gw=[...km,_p,Jp],Yw=/* @__PURE__ */new WeakMap,Xw=[\"AnimationStart\",\"AnimationComplete\",\"Update\",\"BeforeLayoutMeasure\",\"LayoutMeasure\",\"LayoutAnimationStart\",\"LayoutAnimationComplete\"];class Kw{scrapeMotionValuesFromProps(e,t,n){return{}}constructor({parent:e,props:t,presenceContext:n,reducedMotionConfig:r,blockInitialAnimation:o,visualState:i},a={}){this.current=null,this.children=/* @__PURE__ */new Set,this.isVariantNode=!1,this.isControllingVariants=!1,this.shouldReduceMotion=null,this.values=/* @__PURE__ */new Map,this.KeyframeResolver=wm,this.features={},this.valueSubscriptions=/* @__PURE__ */new Map,this.prevMotionValues={},this.events={},this.propEventSubscriptions={},this.notifyUpdate=()=>this.notify(\"Update\",this.latestValues),this.render=()=>{this.current&&(this.triggerBuild(),this.renderInstance(this.current,this.renderState,this.props.style,this.projection))},this.renderScheduledAt=0,this.scheduleRender=()=>{const e=hp.now();this.renderScheduledAt<e&&(this.renderScheduledAt=e,eh.render(this.render,!1,!0))};const{latestValues:s,renderState:l,onUpdate:c}=i;this.onUpdate=c,this.latestValues=s,this.baseTarget={...s},this.initialValues=t.initial?{...s}:{},this.renderState=l,this.parent=e,this.props=t,this.presenceContext=n,this.depth=e?e.depth+1:0,this.reducedMotionConfig=r,this.options=a,this.blockInitialAnimation=!!o,this.isControllingVariants=vh(t),this.isVariantNode=wh(t),this.isVariantNode&&(this.variantChildren=/* @__PURE__ */new Set),this.manuallyAnimateOnMount=!(!e||!e.current);const{willChange:d,...u}=this.scrapeMotionValuesFromProps(t,{},this);for(const e in u){const t=u[e];void 0!==s[e]&&Ph(t)&&t.set(s[e],!1)}}mount(e){this.current=e,Yw.set(e,this),this.projection&&!this.projection.instance&&this.projection.mount(e),this.parent&&this.isVariantNode&&!this.isControllingVariants&&(this.removeFromVariantTree=this.parent.addVariantChild(this)),this.values.forEach(((e,t)=>this.bindToMotionValue(t,e))),Uw.current||function(){if(Uw.current=!0,Wu)if(window.matchMedia){const e=window.matchMedia(\"(prefers-reduced-motion)\"),t=()=>Zw.current=e.matches;e.addListener(t),t()}else Zw.current=!1}(),this.shouldReduceMotion=\"never\"!==this.reducedMotionConfig&&(\"always\"===this.reducedMotionConfig||Zw.current),this.parent&&this.parent.children.add(this),this.update(this.props,this.presenceContext)}unmount(){Yw.delete(this.current),this.projection&&this.projection.unmount(),th(this.notifyUpdate),th(this.render),this.valueSubscriptions.forEach((e=>e())),this.valueSubscriptions.clear(),this.removeFromVariantTree&&this.removeFromVariantTree(),this.parent&&this.parent.children.delete(this);for(const e in this.events)this.events[e].clear();for(const e in this.features){const t=this.features[e];t&&(t.unmount(),t.isMounted=!1)}this.current=null}bindToMotionValue(e,t){this.valueSubscriptions.has(e)&&this.valueSubscriptions.get(e)();const n=Oh.has(e),r=t.on(\"change\",(t=>{this.latestValues[e]=t,this.props.onUpdate&&eh.preRender(this.notifyUpdate),n&&this.projection&&(this.projection.isTransformDirty=!0)})),o=t.on(\"renderRequest\",this.scheduleRender);let i;window.MotionCheckAppearSync&&(i=window.MotionCheckAppearSync(this,e,t)),this.valueSubscriptions.set(e,(()=>{r(),o(),i&&i(),t.owner&&t.stop()}))}sortNodePosition(e){return this.current&&this.sortInstanceNodePosition&&this.type===e.type?this.sortInstanceNodePosition(this.current,e.current):0}updateFeatures(){let e=\"animation\";for(e in ah){const t=ah[e];if(!t)continue;const{isEnabled:n,Feature:r}=t;if(!this.features[e]&&r&&n(this.props)&&(this.features[e]=new r(this)),this.features[e]){const t=this.features[e];t.isMounted?t.update():(t.mount(),t.isMounted=!0)}}}triggerBuild(){this.build(this.renderState,this.latestValues,this.props)}measureViewportBox(){return this.current?this.measureInstanceViewportBox(this.current,this.props):{x:{min:0,max:0},y:{min:0,max:0}}}getStaticValue(e){return this.latestValues[e]}setStaticValue(e,t){this.latestValues[e]=t}update(e,t){(e.transformTemplate||this.props.transformTemplate)&&this.scheduleRender(),this.prevProps=this.props,this.props=e,this.prevPresenceContext=this.presenceContext,this.presenceContext=t;for(let t=0;t<Xw.length;t++){const n=Xw[t];this.propEventSubscriptions[n]&&(this.propEventSubscriptions[n](),delete this.propEventSubscriptions[n]);const r=e[\"on\"+n];r&&(this.propEventSubscriptions[n]=this.on(n,r))}this.prevMotionValues=function(e,t,n){for(const r in t){const o=t[r],i=n[r];if(Ph(o))e.addValue(r,o);else if(Ph(i))e.addValue(r,wp(o,{owner:e}));else if(i!==o)if(e.hasValue(r)){const t=e.getValue(r);!0===t.liveStyle?t.jump(o):t.hasAnimated||t.set(o)}else{const t=e.getStaticValue(r);e.addValue(r,wp(void 0!==t?t:o,{owner:e}))}}for(const r in n)void 0===t[r]&&e.removeValue(r);return t}(this,this.scrapeMotionValuesFromProps(e,this.prevProps,this),this.prevMotionValues),this.handleChildMotionValue&&this.handleChildMotionValue(),this.onUpdate&&this.onUpdate(this)}getProps(){return this.props}getVariant(e){return this.props.variants?this.props.variants[e]:void 0}getDefaultTransition(){return this.props.transition}getTransformPagePoint(){return this.props.transformPagePoint}getClosestVariantNode(){return this.isVariantNode?this:this.parent?this.parent.getClosestVariantNode():void 0}addVariantChild(e){const t=this.getClosestVariantNode();if(t)return t.variantChildren&&t.variantChildren.add(e),()=>t.variantChildren.delete(e)}addValue(e,t){const n=this.values.get(e);t!==n&&(n&&this.removeValue(e),this.bindToMotionValue(e,t),this.values.set(e,t),this.latestValues[e]=t.get())}removeValue(e){this.values.delete(e);const t=this.valueSubscriptions.get(e);t&&(t(),this.valueSubscriptions.delete(e)),delete this.latestValues[e],this.removeValueFromRenderState(e,this.renderState)}hasValue(e){return this.values.has(e)}getValue(e,t){if(this.props.values&&this.props.values[e])return this.props.values[e];let n=this.values.get(e);return void 0===n&&void 0!==t&&(n=wp(null===t?void 0:t,{owner:this}),this.addValue(e,n)),n}readValue(e,t){var n;let r=void 0===this.latestValues[e]&&this.current?null!==(n=this.getBaseTargetFromProps(this.props,e))&&void 0!==n?n:this.readValueFromInstance(this.current,e,this.options):this.latestValues[e];return null!=r&&(\"string\"==typeof r&&(ym(r)||Ap(r))?r=parseFloat(r):(o=r,!Gw.find(Cm(o))&&Jp.test(t)&&(r=im(e,t))),this.setBaseTarget(e,Ph(r)?r.get():r)),Ph(r)?r.get():r;var o}setBaseTarget(e,t){this.baseTarget[e]=t}getBaseTarget(e){var t;const{initial:n}=this.props;let r;if(\"string\"==typeof n||\"object\"==typeof n){const o=Nh(this.props,n,null===(t=this.presenceContext)||void 0===t?void 0:t.custom);o&&(r=o[e])}if(n&&void 0!==r)return r;const o=this.getBaseTargetFromProps(this.props,e);return void 0===o||Ph(o)?void 0!==this.initialValues[e]&&void 0===r?void 0:this.baseTarget[e]:o}on(e,t){return this.events[e]||(this.events[e]=new mp),this.events[e].add(t)}notify(e,...t){this.events[e]&&this.events[e].notify(...t)}}class Jw extends Kw{constructor(){super(...arguments),this.KeyframeResolver=Mm}sortInstanceNodePosition(e,t){return 2&e.compareDocumentPosition(t)?1:-1}getBaseTargetFromProps(e,t){return e.style?e.style[t]:void 0}removeValueFromRenderState(e,{vars:t,style:n}){delete t[e],delete n[e]}handleChildMotionValue(){this.childSubscription&&(this.childSubscription(),delete this.childSubscription);const{children:e}=this.props;Ph(e)&&(this.childSubscription=e.on(\"change\",(e=>{this.current&&(this.current.textContent=`${e}`)})))}}class Qw extends Jw{constructor(){super(...arguments),this.type=\"html\",this.renderInstance=wf}readValueFromInstance(e,t){if(Oh.has(t)){const e=om(t);return e&&e.default||0}{const r=(n=e,window.getComputedStyle(n)),o=(_h(t)?r.getPropertyValue(t):r[t])||0;return\"string\"==typeof o?o.trim():o}var n}measureInstanceViewportBox(e,{transformPagePoint:t}){return wv(e,t)}build(e,t,n){hf(e,t,n.transformTemplate)}scrapeMotionValuesFromProps(e,t,n){return kf(e,t,n)}}class ey extends Jw{constructor(){super(...arguments),this.type=\"svg\",this.isSVGTag=!1,this.measureInstanceViewportBox=tv}getBaseTargetFromProps(e,t){return e[t]}readValueFromInstance(e,t){if(Oh.has(t)){const e=om(t);return e&&e.default||0}return t=yf.has(t)?t:kh(t),e.getAttribute(t)}scrapeMotionValuesFromProps(e,t,n){return Lf(e,t,n)}build(e,t,n){gf(e,t,this.isSVGTag,n.transformTemplate)}renderInstance(e,t,n,r){bf(e,t,0,r)}mount(e){this.isSVGTag=vf(e.tagName),super.mount(e)}}const ty=/* @__PURE__ */uh(/* @__PURE__ */$f({...$g,...Ww,...Pw,...qw},((e,t)=>$h(e)?new ey(t):new Qw(t,{allowProjection:e!==react__WEBPACK_IMPORTED_MODULE_1__.Fragment})))),ny=function(){const e=function(e){const t={...e,color:he(e?.color)};return{light:Me({scheme:\"light\"},t),dark:Me({scheme:\"dark\"},t)}}(void 0);return q({_version:2,avatar:H.avatar,button:H.button,card:H.card,color:rt(e),container:H.container,font:O,input:H.input,layer:H.layer,media:H.media,radius:H.radius,shadow:H.shadow,space:H.space,style:H.style})}(),ry=[],oy={},iy=\"--motion-content-opacity\",ay={initial:{opacity:.5,[iy]:0,scale:.97,willChange:\"transform\"},animate:{opacity:[null,1,1],[iy]:[null,null,1],scale:1},exit:{opacity:[null,null,0],[iy]:[null,0,0],scale:.97},transition:{duration:.4,type:\"spring\"}};function sy(e){return 0===e?0:e/16+\"rem\"}function ly(e,t,n){return(t?.map(n)||[]).map(((t,n)=>0===n?t:{[`@media screen and (min-width: ${e[n-1]}px)`]:t}))}function cy(e,t){return void 0===e?t||ry:Array.isArray(e)?e:[e]}function dy(e,t,n=ry){if(!Array.isArray(n))throw new Error(\"the property must be array of numbers\");if(0===n.length)return null;const{media:r,space:o}=j(e);return ly(r,n,(e=>{return n=t,r=sy(o[e]),n.reduce(((e,t)=>(e[t]=r,e)),{});var n,r}))}function uy(e,t){const{$size:n,$weight:r}=t,{font:o,media:i}=j(t.theme),{family:a,sizes:s,weights:l}=o[e],c=r&&l[r]||l.regular,d=s[2],u={position:\"relative\",fontFamily:a,fontWeight:c,padding:\"1px 0\",margin:0,\"&:before\":{content:'\"\"',display:\"block\",height:0},\"&:after\":{content:'\"\"',display:\"block\",height:0},\"& > code, & > span\":{display:\"block\"},\"&:not([hidden])\":{display:\"block\"}};return n?[u,...ly(i,n,(e=>function(e){const{ascenderHeight:t,descenderHeight:n,fontSize:r,iconSize:o,letterSpacing:i,lineHeight:a}=e,s=t+n,l=a-s,c=(l-o)/2,d=2*Math.floor(1.125*r/2)+1,u=(l-d)/2;return{fontSize:sy(r),lineHeight:`calc(${a} / ${r})`,letterSpacing:sy(i),transform:`translateY(${sy(n)})`,\"&:before\":{marginTop:`calc(${sy(0-s)} - 1px)`},\"&:after\":{marginBottom:\"-1px\"},\"& svg:not([data-sanity-icon])\":{fontSize:`calc(${d} / 16 * 1rem)`,margin:sy(u)},\"& [data-sanity-icon]\":{fontSize:`calc(${o} / 16 * 1rem)`,margin:sy(c)}}}(s[e]||d)))]:(uy.warned||(console.warn(\"No size specified for responsive font\",{fontKey:e,$size:n,props:t,base:u}),uy.warned=!0),[u])}function hy(e){return uy(\"code\",e)}function fy(e){return uy(\"heading\",e)}function py(e){return uy(\"label\",e)}function my(e){const{media:t}=j(e.theme);return ly(t,e.$align,(e=>({textAlign:e})))}function gy(e){return uy(\"text\",e)}function vy(e,t){const n=St.c(3);let r;n[0]!==t||n[1]!==e?(r=()=>[cy(e,t),JSON.stringify(e??t)],n[0]=t,n[1]=e,n[2]=r):r=n[2];const[o,i]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(r),[a,s]=o,l=JSON.stringify(e??t);return l!==s&&i([cy(e,t),l]),a}function wy(e,t,n){const r=St.c(8),o=void 0===t?yy:t;let i;r[0]!==n||r[1]!==o||r[2]!==e?(i=t=>{if(!e)return;const n=t.target;if(!(n instanceof Node))return;const r=o().flat();for(const e of r)if(e&&(n===e||e.contains(n)))return;e(t)},r[0]=n,r[1]=o,r[2]=e,r[3]=i):i=r[3];const a=(0,use_effect_event__WEBPACK_IMPORTED_MODULE_3__.useEffectEvent)(i),s=!!e;let l,c;r[4]!==s||r[5]!==a?(l=()=>{if(!s)return;const e=e=>a(e);return document.addEventListener(\"mousedown\",e),()=>{document.removeEventListener(\"mousedown\",e)}},c=[s,a],r[4]=s,r[5]=a,r[6]=l,r[7]=c):(l=r[6],c=r[7]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(l,c),(0,react__WEBPACK_IMPORTED_MODULE_1__.useDebugValue)(e?\"MouseDown On\":\"MouseDown Off\")}function yy(){return ry}function by(e,t){const n=St.c(6);let r,o;n[0]!==t||n[1]!==e.current?(r=()=>{e.current?.setCustomValidity(t||\"\")},n[0]=t,n[1]=e.current,n[2]=r):r=n[2],n[3]!==t||n[4]!==e?(o=[t,e],n[3]=t,n[4]=e,n[5]=o):o=n[5],(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(r,o)}var xy,Cy,ky=[],Ly=\"ResizeObserver loop completed with undelivered notifications.\";(Cy=xy||(xy={})).BORDER_BOX=\"border-box\",Cy.CONTENT_BOX=\"content-box\",Cy.DEVICE_PIXEL_CONTENT_BOX=\"device-pixel-content-box\";var My,Sy=function(e){return Object.freeze(e)},Ry=/* @__PURE__ */function(){return function(e,t){this.inlineSize=e,this.blockSize=t,Sy(this)}}(),Vy=function(){function e(e,t,n,r){return this.x=e,this.y=t,this.width=n,this.height=r,this.top=this.y,this.left=this.x,this.bottom=this.top+this.height,this.right=this.left+this.width,Sy(this)}return e.prototype.toJSON=function(){var e=this;return{x:e.x,y:e.y,top:e.top,right:e.right,bottom:e.bottom,left:e.left,width:e.width,height:e.height}},e.fromRect=function(t){return new e(t.x,t.y,t.width,t.height)},e}(),Ey=function(e){return e instanceof SVGElement&&\"getBBox\"in e},Hy=function(e){if(Ey(e)){var t=e.getBBox(),n=t.width,r=t.height;return!n&&!r}var o=e,i=o.offsetWidth,a=o.offsetHeight;return!(i||a||e.getClientRects().length)},Ty=function(e){var t;if(e instanceof Element)return!0;var n=null===(t=e?.ownerDocument)||void 0===t?void 0:t.defaultView;return!!(n&&e instanceof n.Element)},$y=typeof window<\"u\"?window:{},Ay=/* @__PURE__ */new WeakMap,Ny=/auto|scroll/,Iy=/^tb|vertical/,Py=/msie|trident/i.test($y.navigator&&$y.navigator.userAgent),Fy=function(e){return parseFloat(e||\"0\")},jy=function(e,t,n){return void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=!1),new Ry((n?t:e)||0,(n?e:t)||0)},By=Sy({devicePixelContentBoxSize:jy(),borderBoxSize:jy(),contentBoxSize:jy(),contentRect:new Vy(0,0,0,0)}),Dy=function(e,t){if(void 0===t&&(t=!1),Ay.has(e)&&!t)return Ay.get(e);if(Hy(e))return Ay.set(e,By),By;var n=getComputedStyle(e),r=Ey(e)&&e.ownerSVGElement&&e.getBBox(),o=!Py&&\"border-box\"===n.boxSizing,i=Iy.test(n.writingMode||\"\"),a=!r&&Ny.test(n.overflowY||\"\"),s=!r&&Ny.test(n.overflowX||\"\"),l=r?0:Fy(n.paddingTop),c=r?0:Fy(n.paddingRight),d=r?0:Fy(n.paddingBottom),u=r?0:Fy(n.paddingLeft),h=r?0:Fy(n.borderTopWidth),f=r?0:Fy(n.borderRightWidth),p=r?0:Fy(n.borderBottomWidth),m=u+c,g=l+d,v=(r?0:Fy(n.borderLeftWidth))+f,w=h+p,y=s?e.offsetHeight-w-e.clientHeight:0,b=a?e.offsetWidth-v-e.clientWidth:0,x=o?m+v:0,C=o?g+w:0,k=r?r.width:Fy(n.width)-x-b,L=r?r.height:Fy(n.height)-C-y,M=k+m+b+v,S=L+g+y+w,R=Sy({devicePixelContentBoxSize:jy(Math.round(k*devicePixelRatio),Math.round(L*devicePixelRatio),i),borderBoxSize:jy(M,S,i),contentBoxSize:jy(k,L,i),contentRect:new Vy(u,l,k,L)});return Ay.set(e,R),R},Oy=function(e,t,n){var r=Dy(e,n),o=r.borderBoxSize,i=r.contentBoxSize,a=r.devicePixelContentBoxSize;switch(t){case xy.DEVICE_PIXEL_CONTENT_BOX:return a;case xy.BORDER_BOX:return o;default:return i}},zy=/* @__PURE__ */function(){return function(e){var t=Dy(e);this.target=e,this.contentRect=t.contentRect,this.borderBoxSize=Sy([t.borderBoxSize]),this.contentBoxSize=Sy([t.contentBoxSize]),this.devicePixelContentBoxSize=Sy([t.devicePixelContentBoxSize])}}(),_y=function(e){if(Hy(e))return 1/0;for(var t=0,n=e.parentNode;n;)t+=1,n=n.parentNode;return t},Wy=function(){var e=1/0,t=[];ky.forEach((function(n){if(0!==n.activeTargets.length){var r=[];n.activeTargets.forEach((function(t){var n=new zy(t.target),o=_y(t.target);r.push(n),t.lastReportedSize=Oy(t.target,t.observedBox),o<e&&(e=o)})),t.push((function(){n.callback.call(n.observer,r,n.observer)})),n.activeTargets.splice(0,n.activeTargets.length)}}));for(var n=0,r=t;n<r.length;n++)(0,r[n])();return e},qy=function(e){ky.forEach((function(t){t.activeTargets.splice(0,t.activeTargets.length),t.skippedTargets.splice(0,t.skippedTargets.length),t.observationTargets.forEach((function(n){n.isActive()&&(_y(n.target)>e?t.activeTargets.push(n):t.skippedTargets.push(n))}))}))},Zy=[],Uy=0,Gy={attributes:!0,characterData:!0,childList:!0,subtree:!0},Yy=[\"resize\",\"load\",\"transitionend\",\"animationend\",\"animationstart\",\"animationiteration\",\"keyup\",\"keydown\",\"mouseup\",\"mousedown\",\"mouseover\",\"mouseout\",\"blur\",\"focus\"],Xy=function(e){return void 0===e&&(e=0),Date.now()+e},Ky=!1,Jy=new(function(){function e(){var e=this;this.stopped=!0,this.listener=function(){return e.schedule()}}return e.prototype.run=function(e){var t,n=this;if(void 0===e&&(e=250),!Ky){Ky=!0;var r=Xy(e);t=function(){var t=!1;try{t=function(){var e,t=0;for(qy(t);ky.some((function(e){return e.activeTargets.length>0}));)t=Wy(),qy(t);return ky.some((function(e){return e.skippedTargets.length>0}))&&(\"function\"==typeof ErrorEvent?e=new ErrorEvent(\"error\",{message:Ly}):((e=document.createEvent(\"Event\")).initEvent(\"error\",!1,!1),e.message=Ly),window.dispatchEvent(e)),t>0}()}finally{if(Ky=!1,e=r-Xy(),!Uy)return;t?n.run(1e3):e>0?n.run(e):n.start()}},function(){if(!My){var e=0,n=document.createTextNode(\"\");new MutationObserver((function(){return Zy.splice(0).forEach((function(e){return e()}))})).observe(n,{characterData:!0}),My=function(){n.textContent=\"\".concat(e?e--:e++)}}Zy.push((function(){requestAnimationFrame(t)})),My()}()}},e.prototype.schedule=function(){this.stop(),this.run()},e.prototype.observe=function(){var e=this,t=function(){return e.observer&&e.observer.observe(document.body,Gy)};document.body?t():$y.addEventListener(\"DOMContentLoaded\",t)},e.prototype.start=function(){var e=this;this.stopped&&(this.stopped=!1,this.observer=new MutationObserver(this.listener),this.observe(),Yy.forEach((function(t){return $y.addEventListener(t,e.listener,!0)})))},e.prototype.stop=function(){var e=this;this.stopped||(this.observer&&this.observer.disconnect(),Yy.forEach((function(t){return $y.removeEventListener(t,e.listener,!0)})),this.stopped=!0)},e}()),Qy=function(e){!Uy&&e>0&&Jy.start(),!(Uy+=e)&&Jy.stop()},eb=function(){function e(e,t){this.target=e,this.observedBox=t||xy.CONTENT_BOX,this.lastReportedSize={inlineSize:0,blockSize:0}}return e.prototype.isActive=function(){var e,t=Oy(this.target,this.observedBox,!0);return e=this.target,!Ey(e)&&!function(e){switch(e.tagName){case\"INPUT\":if(\"image\"!==e.type)break;case\"VIDEO\":case\"AUDIO\":case\"EMBED\":case\"OBJECT\":case\"CANVAS\":case\"IFRAME\":case\"IMG\":return!0}return!1}(e)&&\"inline\"===getComputedStyle(e).display&&(this.lastReportedSize=t),this.lastReportedSize.inlineSize!==t.inlineSize||this.lastReportedSize.blockSize!==t.blockSize},e}(),tb=/* @__PURE__ */function(){return function(e,t){this.activeTargets=[],this.skippedTargets=[],this.observationTargets=[],this.observer=e,this.callback=t}}(),nb=/* @__PURE__ */new WeakMap,rb=function(e,t){for(var n=0;n<e.length;n+=1)if(e[n].target===t)return n;return-1},ob=function(){function e(){}return e.connect=function(e,t){var n=new tb(e,t);nb.set(e,n)},e.observe=function(e,t,n){var r=nb.get(e),o=0===r.observationTargets.length;rb(r.observationTargets,t)<0&&(o&&ky.push(r),r.observationTargets.push(new eb(t,n&&n.box)),Qy(1),Jy.schedule())},e.unobserve=function(e,t){var n=nb.get(e),r=rb(n.observationTargets,t),o=1===n.observationTargets.length;r>=0&&(o&&ky.splice(ky.indexOf(n),1),n.observationTargets.splice(r,1),Qy(-1))},e.disconnect=function(e){var t=this,n=nb.get(e);n.observationTargets.slice().forEach((function(n){return t.unobserve(e,n.target)})),n.activeTargets.splice(0,n.activeTargets.length)},e}(),ib=function(){function e(e){if(0===arguments.length)throw new TypeError(\"Failed to construct 'ResizeObserver': 1 argument required, but only 0 present.\");if(\"function\"!=typeof e)throw new TypeError(\"Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function.\");ob.connect(this,e)}return e.prototype.observe=function(e,t){if(0===arguments.length)throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': 1 argument required, but only 0 present.\");if(!Ty(e))throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': parameter 1 is not of type 'Element\");ob.observe(this,e,t)},e.prototype.unobserve=function(e){if(0===arguments.length)throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': 1 argument required, but only 0 present.\");if(!Ty(e))throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': parameter 1 is not of type 'Element\");ob.unobserve(this,e)},e.prototype.disconnect=function(){ob.disconnect(this)},e.toString=function(){return\"function ResizeObserver () { [polyfill code] }\"},e}();const ab=typeof document<\"u\"&&typeof window<\"u\"&&window.ResizeObserver?window.ResizeObserver:ib,sb=function(){const e=/* @__PURE__ */new WeakMap,t=/* @__PURE__ */new WeakMap;return{subscribe(n,r){const o=t.get(n)||[];let i=e.get(n);return t.has(n)||(t.set(n,o),i={subscribe(e,t){const n=new ab((([e])=>{t({_contentRect:e.contentRect,border:{width:e.borderBoxSize[0].inlineSize,height:e.borderBoxSize[0].blockSize},content:{width:e.contentRect.width,height:e.contentRect.height}})}));return n.observe(e),()=>{n.unobserve(e),n.disconnect()}}}.subscribe(n,(e=>{for(const t of o)t(e)}))),o.push(r),()=>{const e=o.indexOf(r);e>-1&&o.splice(e,1),0===o.length&&i&&i()}}}}();function lb(e){const t=St.c(3),[n,r]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);let o,i;return t[0]!==e?(o=()=>{if(e)return sb.subscribe(e,r)},i=[e],t[0]=e,t[1]=o,t[2]=i):(o=t[1],i=t[2]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(o,i),n}function cb(e){const t=St.c(5);let n;t[0]!==e?(n=t=>e(t),t[0]=e,t[1]=n):n=t[1];const r=(0,use_effect_event__WEBPACK_IMPORTED_MODULE_3__.useEffectEvent)(n);let o,i;t[2]!==r?(o=()=>{const e=e=>r(e);return window.addEventListener(\"keydown\",e),()=>window.removeEventListener(\"keydown\",e)},i=[r],t[2]=r,t[3]=o,t[4]=i):(o=t[3],i=t[4]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(o,i)}function db(e,t){const{subscribe:n,getSnapshot:r}=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>{let t;const n=()=>(t||(t=window.matchMedia(e)),t);return{subscribe:e=>{const t=n();return t.addEventListener(\"change\",e),()=>t.removeEventListener(\"change\",e)},getSnapshot:()=>n().matches}}),[e]);return (0,react__WEBPACK_IMPORTED_MODULE_1__.useDebugValue)(e),(0,react__WEBPACK_IMPORTED_MODULE_1__.useSyncExternalStore)(n,r,t)}const ub=function(){if(typeof globalThis<\"u\")return globalThis;if(typeof window<\"u\")return window;if(typeof self<\"u\")return self;if(typeof global<\"u\")return global;throw new Error(\"@sanity/ui: could not locate global scope\")}();function hb(e,t){const n=Symbol.for(e);return typeof document>\"u\"?(0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(t):(ub[n]=ub[n]||(0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(t),ub[n])}const fb=hb(\"@sanity/ui/context/theme\",null);function pb(t){const n=St.c(15),r=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(fb),{children:o}=t,a=t.scheme??(r?.scheme||\"light\"),s=t.theme??(r?.theme||null),l=t.tone??(r?.tone||\"default\");let c;e:{if(!s){c=null;break e}let e;n[0]!==s||n[1]!==a||n[2]!==l?(e={version:0,theme:s,scheme:a,tone:l},n[0]=s,n[1]=a,n[2]=l,n[3]=e):e=n[3],c=e}const d=c;let u;e:{if(!s){u=null;break e}let e;n[4]!==s||n[5]!==a||n[6]!==l?(e=function(e,t,n){const r=function(e,t,n){const r=yt.get(t);if(!r)return;const o=r.get(n);return o?o.get(e):void 0}(e,t,n);if(r)return r;const o=z(e)?q(e):e,i=z(e)?e:function(e){if(e.v2)return e.v2;const t=_.get(e);if(t)return t;const{avatar:n,button:r,color:o,container:i,focusRing:a,fonts:s,input:l,layer:c,media:d,radius:u,shadows:h,space:f,styles:p}=e,m={_version:2,avatar:{...H.avatar,...n},button:{...H.button,...r},card:H.card,color:{light:{transparent:$(o.light.transparent),default:$(o.light.default),neutral:$(o.light.transparent),primary:$(o.light.primary),suggest:$(o.light.primary),positive:$(o.light.positive),caution:$(o.light.caution),critical:$(o.light.critical)},dark:{transparent:$(o.dark.transparent),default:$(o.dark.default),neutral:$(o.dark.transparent),primary:$(o.dark.primary),suggest:$(o.dark.primary),positive:$(o.dark.positive),caution:$(o.dark.caution),critical:$(o.dark.critical)}},container:i,font:s,input:{...H.input,...l,checkbox:{...H.input.checkbox,...l.checkbox},radio:{...H.input.radio,...l.radio},switch:{...H.input.switch,...l.switch}},layer:c??H.layer,media:d,radius:u,shadow:h,space:f,style:p};return _.set(e,m),m}(e),a=o.color[t]||o.color.light,s=a[n]||a.default,l=o.layer||H.layer,c=i.color[t]||i.color.light,d=c[n]||c.default,u=i.layer||H.layer,h={sanity:{...o,color:s,layer:l,v2:{...i,_resolved:!0,color:d,layer:u}}};return function(e,t,n,r){yt.has(t)||yt.set(t,/* @__PURE__ */new Map);const o=yt.get(t);o.has(n)||o.set(n,/* @__PURE__ */new WeakMap),o.get(n).set(e,r)}(e,t,n,h),h}(s,a,l),n[4]=s,n[5]=a,n[6]=l,n[7]=e):e=n[7],u=e}const h=u;if(!h){let t;return n[8]===Symbol.for(\"react.memo_cache_sentinel\")?(t=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"pre\",{children:'ThemeProvider: no \"theme\" property provided'}),n[8]=t):t=n[8],t}let f,p;return n[9]!==o||n[10]!==h?(f=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(to,{theme:h,children:o}),n[9]=o,n[10]=h,n[11]=f):f=n[11],n[12]!==f||n[13]!==d?(p=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(fb.Provider,{value:d,children:f}),n[12]=f,n[13]=d,n[14]=p):p=n[14],p}function mb(){const e=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(fb);if(!e)throw new Error(\"useRootTheme(): missing context value\");return e}function gb(t){const n=St.c(5),{children:r,scheme:o,tone:i}=t,a=mb(),s=o||a.scheme;let l;return n[0]!==r||n[1]!==a.theme||n[2]!==s||n[3]!==i?(l=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(pb,{scheme:s,theme:a.theme,tone:i,children:r}),n[0]=r,n[1]=a.theme,n[2]=s,n[3]=i,n[4]=l):l=n[4],l}function vb(){const e=St.c(2),t=function(){var e=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(eo);if(!e)throw br(18);return e}();let n;return e[0]!==t?(n=j(t),e[0]=t,e[1]=n):n=e[1],n}function wb(e,t){return 0===t?`screen and (max-width: ${e[t]-1}px)`:t===e.length?`screen and (min-width: ${e[t-1]}px)`:`screen and (min-width: ${e[t-1]}px) and (max-width: ${e[t]-1}px)`}function yb(){return 0}function bb(){const e=St.c(2),{media:t}=vb();let n,r;e[0]!==t?(r=function(e){const t=e.length;let n;const r=()=>{if(!n){n=[];for(let r=t;r>-1;r-=1){const t=wb(e,r);n.push({index:r,mq:window.matchMedia(t)})}}return n};return{getSnapshot:()=>{for(const{index:e,mq:t}of r())if(t.matches)return e;return 0},subscribe:e=>{const t=[];for(const{mq:n}of r()){const r=()=>{n.matches&&e()};n.addEventListener(\"change\",r),t.push((()=>n.removeEventListener(\"change\",r)))}return()=>{for(const e of t)e()}}}}(t),e[0]=t,e[1]=r):r=e[1],n=r;const o=n;return (0,react__WEBPACK_IMPORTED_MODULE_1__.useSyncExternalStore)(o.subscribe,o.getSnapshot,yb)}function xb(e){return db(\"(prefers-color-scheme: dark)\",Cb)}function Cb(){return!1}function kb(e){return db(\"(prefers-reduced-motion: reduce)\",Lb)}function Lb(){return!1}function Mb(){return[Sb,Rb,Vb,Eb,Hb]}function Sb(e){const{card:t,media:n}=j(e.theme),r=`${t.border?.width??1}px solid var(--card-border-color)`;return ly(n,e.$border,(e=>e?{\"&&\":{border:r}}:{\"&&\":{border:0}}))}function Rb(e){const{card:t,media:n}=j(e.theme),r=`${t.border?.width??1}px solid var(--card-border-color)`;return ly(n,e.$borderTop,(e=>e?{\"&&\":{borderTop:r}}:{\"&&\":{borderTop:0}}))}function Vb(e){const{card:t,media:n}=j(e.theme),r=`${t.border?.width??1}px solid var(--card-border-color)`;return ly(n,e.$borderRight,(e=>e?{\"&&\":{borderRight:r}}:{\"&&\":{borderRight:0}}))}function Eb(e){const{card:t,media:n}=j(e.theme),r=`${t.border?.width??1}px solid var(--card-border-color)`;return ly(n,e.$borderBottom,(e=>e?{\"&&\":{borderBottom:r}}:{\"&&\":{borderBottom:0}}))}function Hb(e){const{card:t,media:n}=j(e.theme),r=`${t.border?.width??1}px solid var(--card-border-color)`;return ly(n,e.$borderLeft,(e=>e?{\"&&\":{borderLeft:r}}:{\"&&\":{borderLeft:0}}))}pb.displayName=\"ThemeProvider\",gb.displayName=\"ThemeColorProvider\";const Tb={'&[data-as=\"ul\"],&[data-as=\"ol\"]':{listStyle:\"none\"}},$b={content:\"content-box\",border:\"border-box\"},Ab={stretch:\"stretch\",fill:\"100%\"};function Nb(){return Tb}function Ib(){return[Fb,jb,Bb,Pb]}function Pb(e){const{media:t}=j(e.theme);return ly(t,e.$display,(e=>({\"&:not([hidden])\":{display:e}})))}function Fb(e){const{media:t}=j(e.theme);return ly(t,e.$sizing,(e=>({boxSizing:$b[e]})))}function jb(e){const{media:t}=j(e.theme);return ly(t,e.$height,(e=>({height:Ab[e]})))}function Bb(e){const{media:t}=j(e.theme);return ly(t,e.$overflow,(e=>({overflow:e})))}const Db={\"&&:not([hidden])\":{display:\"flex\"}};function Ob(){return[Db,zb,_b,Wb,qb,Zb]}function zb(e){const{media:t}=j(e.theme);return ly(t,e.$align,(e=>({alignItems:e})))}function _b(e){const{media:t,space:n}=j(e.theme);return ly(t,e.$gap,(e=>({gap:e?sy(n[e]):void 0})))}function Wb(e){const{media:t}=j(e.theme);return ly(t,e.$wrap,(e=>({flexWrap:e})))}function qb(e){const{media:t}=j(e.theme);return ly(t,e.$justify,(e=>({justifyContent:e})))}function Zb(e){const{media:t}=j(e.theme);return ly(t,e.$direction,(e=>({flexDirection:e})))}const Ub={minWidth:0,minHeight:0};function Gb(){return[Ub,Yb]}function Yb(e){const{media:t}=j(e.theme);return e.$flex?ly(t,e.$flex,(e=>({flex:e}))):ry}function Xb(e){return`inset 0 0 0 ${e.width}px ${e.color}`}function Kb(e){const{base:t,border:n,focusRing:r}=e,o=r.offset+r.width,i=0-r.offset,a=t?t.bg:\"var(--card-bg-color)\";return[i>0&&`inset 0 0 0 ${i}px var(--card-focus-ring-color)`,n&&Xb(n),i<0&&`0 0 0 ${0-i}px ${a}`,o>0&&`0 0 0 ${o}px var(--card-focus-ring-color)`].filter(Boolean).join(\",\")}const Jb={\"&&:not([hidden])\":{display:\"grid\"},'&[data-as=\"ul\"],&[data-as=\"ol\"]':{listStyle:\"none\"}},Qb={auto:\"auto\",min:\"min-content\",max:\"max-content\",fr:\"minmax(0, 1fr)\"},ex={auto:\"auto\",min:\"min-content\",max:\"max-content\",fr:\"minmax(0, 1fr)\"};function tx(){return[Jb,nx,rx,ox,ix,ax,sx,lx,cx]}function nx(e){const{media:t}=j(e.theme);return ly(t,e.$autoFlow,(e=>({gridAutoFlow:e})))}function rx(e){const{media:t}=j(e.theme);return ly(t,e.$autoRows,(e=>({gridAutoRows:e&&ex[e]})))}function ox(e){const{media:t}=j(e.theme);return ly(t,e.$autoCols,(e=>({gridAutoColumns:e&&Qb[e]})))}function ix(e){const{media:t}=j(e.theme);return ly(t,e.$columns,(e=>({gridTemplateColumns:e&&`repeat(${e},minmax(0,1fr));`})))}function ax(e){const{media:t}=j(e.theme);return ly(t,e.$rows,(e=>({gridTemplateRows:e&&`repeat(${e},minmax(0,1fr));`})))}function sx(e){const{media:t,space:n}=j(e.theme);return ly(t,e.$gap,(e=>({gridGap:e?sy(n[e]):void 0})))}function lx(e){const{media:t,space:n}=j(e.theme);return ly(t,e.$gapX,(e=>({columnGap:e?sy(n[e]):void 0})))}function cx(e){const{media:t,space:n}=j(e.theme);return ly(t,e.$gapY,(e=>({rowGap:e?sy(n[e]):void 0})))}function dx(){return[fx,px,mx,gx,vx,wx]}const ux={auto:\"auto\",full:\"1 / -1\"},hx={auto:\"auto\",full:\"1 / -1\"};function fx(e){const{media:t}=j(e.theme);return ly(t,e.$row,(e=>\"number\"==typeof e?{gridRow:`span ${e} / span ${e}`}:{gridRow:ux[e]}))}function px(e){const{media:t}=j(e.theme);return ly(t,e.$rowStart,(e=>({gridRowStart:e})))}function mx(e){const{media:t}=j(e.theme);return ly(t,e.$rowEnd,(e=>({gridRowEnd:e})))}function gx(e){const{media:t}=j(e.theme);return ly(t,e.$column,(e=>\"number\"==typeof e?{gridColumn:`span ${e} / span ${e}`}:{gridColumn:hx[e]}))}function vx(e){const{media:t}=j(e.theme);return ly(t,e.$columnStart,(e=>({gridColumnStart:e})))}function wx(e){const{media:t}=j(e.theme);return ly(t,e.$columnEnd,(e=>({gridColumnEnd:e})))}function yx(e){const{$fontSize:t,$iconLeft:n,$iconRight:r,$padding:o,$space:i}=e,{font:a,media:s,space:l}=j(e.theme),c=Math.max(o.length,i.length,t.length),d=[],u=[],h=[];for(let e=0;e<c;e+=1)h[e]=void 0===t[e]?h[e-1]:t[e],d[e]=void 0===o[e]?d[e-1]:o[e],u[e]=void 0===i[e]?u[e-1]:i[e];return ly(s,d,((e,t)=>{const o=a.text.sizes[h[t]]||a.text.sizes[2],i=o.lineHeight-o.ascenderHeight-o.descenderHeight,s=l[d[t]],c=l[u[t]],f={paddingTop:sy(s-o.ascenderHeight),paddingRight:sy(s),paddingBottom:sy(s-o.descenderHeight),paddingLeft:sy(s)};return r&&(f.paddingRight=sy(s+i+c)),n&&(f.paddingLeft=sy(s+i+c)),f}))}function bx(e){return yx({...e,$iconRight:!0})}const xx=ao`\n  &:not([hidden]) {\n    display: flex;\n  }\n\n  align-items: center;\n`;function Cx(){return xx}function kx(e){const{$scheme:t,$tone:n,$weight:r}=e,{color:o,font:i}=j(e.theme);return ao`\n    appearance: none;\n    background: none;\n    border: 0;\n    border-radius: 0;\n    outline: none;\n    width: 100%;\n    box-sizing: border-box;\n    font-family: ${i.text.family};\n    font-weight: ${r&&i.text.weights[r]||i.text.weights.regular};\n    margin: 0;\n    position: relative;\n    z-index: 1;\n    display: block;\n\n    /* NOTE: This is a hack to disable Chrome’s autofill styles */\n    &:-webkit-autofill,\n    &:-webkit-autofill:hover,\n    &:-webkit-autofill:focus,\n    &:-webkit-autofill:active {\n      -webkit-text-fill-color: var(--input-fg-color) !important;\n      transition: background-color 5000s;\n      transition-delay: 86400s /* 24h */;\n    }\n\n    /* &:is(textarea) */\n    &[data-as='textarea'] {\n      resize: none;\n    }\n\n    color: var(--input-fg-color);\n\n    &::placeholder {\n      color: var(--input-placeholder-color);\n    }\n\n    &[data-scheme='${t}'][data-tone='${n}'] {\n      --input-fg-color: ${o.input.default.enabled.fg};\n      --input-placeholder-color: ${o.input.default.enabled.placeholder};\n\n      /* enabled */\n      &:not(:invalid):not(:disabled):not(:read-only) {\n        --input-fg-color: ${o.input.default.enabled.fg};\n        --input-placeholder-color: ${o.input.default.enabled.placeholder};\n      }\n\n      /* disabled */\n      &:not(:invalid):disabled {\n        --input-fg-color: ${o.input.default.disabled.fg};\n        --input-placeholder-color: ${o.input.default.disabled.placeholder};\n      }\n\n      /* invalid */\n      &:invalid {\n        --input-fg-color: ${o.input.invalid.enabled.fg};\n        --input-placeholder-color: ${o.input.invalid.enabled.placeholder};\n      }\n\n      /* readOnly */\n      &:read-only {\n        --input-fg-color: ${o.input.default.readOnly.fg};\n        --input-placeholder-color: ${o.input.default.readOnly.placeholder};\n      }\n    }\n  `}function Lx(e){const{font:t,media:n}=j(e.theme);return ly(n,e.$fontSize,(e=>{const n=t.text.sizes[e]||t.text.sizes[2];return{fontSize:sy(n.fontSize),lineHeight:n.lineHeight/n.fontSize}}))}function Mx(e){const{$hasPrefix:t,$hasSuffix:n,$scheme:r,$tone:o,$unstableDisableFocusRing:i}=e,{color:a,input:s}=j(e.theme);return ao`\n    --input-box-shadow: none;\n\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    display: block;\n    pointer-events: none;\n    z-index: 0;\n\n    background-color: var(--card-bg-color);\n    box-shadow: var(--input-box-shadow);\n\n    border-top-left-radius: ${t?0:void 0};\n    border-bottom-left-radius: ${t?0:void 0};\n    border-top-right-radius: ${n?0:void 0};\n    border-bottom-right-radius: ${n?0:void 0};\n\n    &[data-scheme='${r}'][data-tone='${o}'] {\n      --card-bg-color: ${a.input.default.enabled.bg};\n      --card-fg-color: ${a.input.default.enabled.fg};\n\n      /* enabled */\n      *:not(:disabled) + &[data-border] {\n        --input-box-shadow: ${Xb({color:a.input.default.enabled.border,width:s.border.width})};\n      }\n\n      /* invalid */\n      *:not(:disabled):invalid + & {\n        --card-bg-color: ${a.input.invalid.enabled.bg};\n        --card-fg-color: ${a.input.invalid.enabled.fg};\n\n        &[data-border] {\n          --input-box-shadow: ${Xb({color:a.input.invalid.enabled.border,width:s.border.width})};\n        }\n      }\n\n      /* focused */\n      *:not(:disabled):focus + & {\n        &[data-border] {\n          --input-box-shadow: ${i?void 0:Kb({border:{color:a.input.default.enabled.border,width:s.border.width},focusRing:s.text.focusRing})};\n        }\n\n        &:not([data-border]) {\n          --input-box-shadow: ${i?void 0:Kb({focusRing:s.text.focusRing})};\n        }\n      }\n\n      /* disabled */\n      *:not(:invalid):disabled + & {\n        --card-bg-color: ${a.input.default.disabled.bg} !important;\n        --card-fg-color: ${a.input.default.disabled.fg} !important;\n        --card-icon-color: ${a.input.default.disabled.fg} !important;\n\n        &[data-border] {\n          --input-box-shadow: ${Xb({color:a.input.default.disabled.border,width:s.border.width})};\n        }\n      }\n\n      *:invalid:disabled + & {\n        --card-bg-color: ${a.input.invalid.disabled.bg} !important;\n        --card-fg-color: ${a.input.invalid.disabled.fg} !important;\n        --card-icon-color: ${a.input.invalid.disabled.fg} !important;\n\n        &[data-border] {\n          --input-box-shadow: ${Xb({color:a.input.invalid.disabled.border,width:s.border.width})};\n        }\n      }\n\n      /* readOnly */\n      *:not(:invalid):read-only + & {\n        --card-bg-color: ${a.input.default.readOnly.bg} !important;\n        --card-fg-color: ${a.input.default.readOnly.fg} !important;\n      }\n\n      *:invalid:read-only + & {\n        --card-bg-color: ${a.input.invalid.readOnly.bg} !important;\n        --card-fg-color: ${a.input.invalid.readOnly.fg} !important;\n      }\n\n      /* hovered */\n      @media (hover: hover) {\n        *:not(:disabled):not(:read-only):not(:invalid):hover + & {\n          --card-bg-color: ${a.input.default.hovered.bg};\n          --card-fg-color: ${a.input.default.hovered.fg};\n        }\n\n        *:invalid:not(:disabled):not(:read-only):hover + & {\n          --card-bg-color: ${a.input.invalid.hovered.bg};\n          --card-fg-color: ${a.input.invalid.hovered.fg};\n        }\n\n        *:not(:disabled):not(:read-only):not(:invalid):not(:focus):hover + &[data-border] {\n          --input-box-shadow: ${Xb({color:a.input.default.hovered.border,width:s.border.width})};\n        }\n\n        *:invalid:not(:disabled):not(:read-only):not(:focus):hover + &[data-border] {\n          --input-box-shadow: ${Xb({color:a.input.invalid.hovered.border,width:s.border.width})};\n        }\n      }\n    }\n  `}function Sx(e){const{theme:t}=e;return[dy(t,[\"margin\"],e.$margin),dy(t,[\"marginLeft\",\"marginRight\"],e.$marginX),dy(t,[\"marginTop\",\"marginBottom\"],e.$marginY),dy(t,[\"marginTop\"],e.$marginTop),dy(t,[\"marginRight\"],e.$marginRight),dy(t,[\"marginBottom\"],e.$marginBottom),dy(t,[\"marginLeft\"],e.$marginLeft)].filter(Boolean)}function Rx(e){const{theme:t}=e;return[dy(t,[\"padding\"],e.$padding),dy(t,[\"paddingLeft\",\"paddingRight\"],e.$paddingX),dy(t,[\"paddingTop\",\"paddingBottom\"],e.$paddingY),dy(t,[\"paddingTop\"],e.$paddingTop),dy(t,[\"paddingRight\"],e.$paddingRight),dy(t,[\"paddingBottom\"],e.$paddingBottom),dy(t,[\"paddingLeft\"],e.$paddingLeft)].filter(Boolean)}function Vx(e){const{media:t,radius:n}=j(e.theme);return ly(t,e.$radius,(e=>{let t=0;return\"number\"==typeof e&&(t=sy(n[e])),\"full\"===e&&(t=\"9999px\"),{borderRadius:t}}))}function Ex(e,t){return`${e.map(sy).join(\" \")} ${t}`}function Hx(e){const{card:t,media:n,shadow:r}=j(e.theme);return ly(n,e.$shadow,(e=>function(e,t=1){return e?{boxShadow:`0 0 0 ${sy(t)} var(--card-shadow-outline-color), ${Ex(e.umbra,\"var(--card-shadow-umbra-color)\")}, ${Ex(e.penumbra,\"var(--card-shadow-penumbra-color)\")}, ${Ex(e.ambient,\"var(--card-shadow-ambient-color)\")}`}:oy}(r[e],t.shadow.outline)))}const Tx=co.span.withConfig({displayName:\"SpanWithTextOverflow\",componentId:\"sc-ol2i3b-0\"})`display:block;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;overflow:clip;`;function $x(e){const{$accent:t,$muted:n}=e,{font:r}=j(e.theme);return ao`\n    text-transform: uppercase;\n\n    ${t&&ao`\n      color: var(--card-accent-fg-color);\n    `}\n\n    ${n&&ao`\n      color: var(--card-muted-fg-color);\n    `}\n\n    & code {\n      font-family: ${r.code.family};\n      border-radius: 1px;\n    }\n\n    & a {\n      text-decoration: none;\n      border-radius: 1px;\n    }\n\n    & svg {\n      /* Certain popular CSS libraries changes the defaults for SVG display */\n      /* Make sure SVGs are rendered as inline elements */\n      display: inline;\n    }\n\n    & [data-sanity-icon] {\n      vertical-align: baseline;\n    }\n  `}const Ax=/* @__PURE__ */co.div.withConfig({displayName:\"StyledLabel\",componentId:\"sc-1luap7z-0\"})(py,my,$x),Nx=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const r=St.c(22);let o,i,a,s,l,c,d,u;r[0]!==t?(({accent:o,align:i,children:a,muted:l,size:c,textOverflow:d,weight:u,...s}=t),r[0]=t,r[1]=o,r[2]=i,r[3]=a,r[4]=s,r[5]=l,r[6]=c,r[7]=d,r[8]=u):(o=r[1],i=r[2],a=r[3],s=r[4],l=r[5],c=r[6],d=r[7],u=r[8]);const h=void 0!==l&&l,f=void 0===c?2:c;let p=a;if(\"ellipsis\"===d){let t;r[9]!==p?(t=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Tx,{children:p}),r[9]=p,r[10]=t):t=r[10],p=t}else{let t;r[11]!==p?(t=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\",{children:p}),r[11]=p,r[12]=t):t=r[12],p=t}const m=vy(i),g=vy(f);let v;return r[13]!==o||r[14]!==p||r[15]!==h||r[16]!==n||r[17]!==s||r[18]!==m||r[19]!==g||r[20]!==u?(v=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Ax,{\"data-ui\":\"Label\",...s,$accent:o,$align:m,$muted:h,$size:g,$weight:u,ref:n,children:p}),r[13]=o,r[14]=p,r[15]=h,r[16]=n,r[17]=s,r[18]=m,r[19]=g,r[20]=u,r[21]=v):v=r[21],v}));Nx.displayName=\"ForwardRef(Label)\";const Ix=function(e){const{$color:t}=e,{avatar:n}=j(e.theme);return{\"--avatar-bg-color\":`var(--card-avatar-${t}-bg-color)`,\"--avatar-fg-color\":`var(--card-avatar-${t}-fg-color)`,backgroundColor:\"var(--avatar-bg-color)\",position:\"relative\",boxSizing:\"border-box\",userSelect:\"none\",boxShadow:\"0 0 0 1px var(--card-bg-color)\",'&[data-status=\"inactive\"]':{opacity:.5},\"&>svg\":{\"&:not([hidden])\":{display:\"block\"}},'&[data-as=\"button\"]':{WebkitFontSmoothing:\"inherit\",appearance:\"none\",margin:0,padding:0,border:0,font:\"inherit\",color:\"inherit\",outline:\"none\",\"&:focus\":{boxShadow:Kb({focusRing:n.focusRing})},\"&:focus:not(:focus-visible)\":{boxShadow:\"none\"}}}},Px=function(){return{position:\"absolute\",boxSizing:\"border-box\",zIndex:0,opacity:0,transition:\"all 0.2s linear\",transform:\"rotate(-90deg) translate3d(0, 6px, 0)\",left:0,right:0,top:0,bottom:0,\"& > svg\":{width:\"11px\",height:\"7px\",position:\"absolute\",top:\"-5px\",left:\"50%\",transform:\"translateX(-6px)\",\"&:not([hidden])\":{display:\"block\"}},\"[data-arrow-position='inside'] > &\":{transform:\"rotate(-90deg) translate3d(0, 6px, 0)\",opacity:0},\"[data-arrow-position='top'] > &\":{opacity:1,transform:\"rotate(0deg)\"},\"[data-arrow-position='bottom'] > &\":{opacity:1,transform:\"rotate(-180deg)\"}}},Fx=function(){return{strokeWidth:\"4px\",stroke:\"var(--card-bg-color)\"}},jx=function(){return{strokeWidth:\"2px\",stroke:\"var(--avatar-bg-color)\",'[data-status=\"editing\"] &':{strokeDasharray:\"2 4\",strokeLinecap:\"round\"}}},Bx=function(){return{width:\"100%\",height:\"100%\",color:\"var(--avatar-fg-color)\",alignItems:\"center\",justifyContent:\"center\",textTransform:\"uppercase\",textAlign:\"center\",borderRadius:\"50%\",\"&:not([hidden])\":{display:\"flex\"}}},Dx=function(){return{position:\"relative\"}};function Ox(e){const{avatar:t,media:n}=j(e.theme);return ly(n,e.$size,(e=>{const n=t.sizes[e]||t.sizes[0];return{width:sy(n.size),height:sy(n.size),borderRadius:sy(n.size/2),\"&>svg\":{width:sy(n.size),height:sy(n.size),borderRadius:sy(n.size/2)}}}))}const zx=/* @__PURE__ */co.div.withConfig({displayName:\"StyledAvatar\",componentId:\"sc-1rj7kl0-0\"})(Ox,Ix),_x=/* @__PURE__ */co.div.withConfig({displayName:\"Arrow\",componentId:\"sc-1rj7kl0-1\"})(Px),Wx=/* @__PURE__ */co.ellipse.withConfig({displayName:\"BgStroke\",componentId:\"sc-1rj7kl0-2\"})(Fx),qx=/* @__PURE__ */co.ellipse.withConfig({displayName:\"Stroke\",componentId:\"sc-1rj7kl0-3\"})(jx),Zx=/* @__PURE__ */co.div.withConfig({displayName:\"Initials\",componentId:\"sc-1rj7kl0-4\"})(Bx),Ux=/* @__PURE__ */co(Nx).withConfig({displayName:\"InitialsLabel\",componentId:\"sc-1rj7kl0-5\"})({color:\"inherit\"}),Gx=/* @__PURE__ */co.svg.withConfig({displayName:\"AvatarImage\",componentId:\"sc-1rj7kl0-6\"})(Dx);function Yx(e){return 1===e?1:2===e?3:3===e?5:0}function Xx(e){const{avatar:t,media:n}=j(e.theme);return ly(n,e.$size,(e=>{const n=t.sizes[e];return n?{borderRadius:sy(n.size/2),minWidth:sy(n.size),height:sy(n.size)}:oy}))}function Kx(e){const{space:t}=j(e.theme);return ao`\n    align-items: center;\n    justify-content: center;\n    box-sizing: border-box;\n    user-select: none;\n    color: inherit;\n    color: var(--card-fg-color);\n    background: var(--card-bg-color);\n    box-shadow:\n      0 0 0 1px var(--card-bg-color),\n      inset 0 0 0 1px var(--card-hairline-hard-color);\n    padding: 0 ${sy(t[2])};\n\n    &:not([hidden]) {\n      display: flex;\n    }\n  `}(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(r,o){const i=St.c(52);let a,s,l,c,u,h,p,m,g,v,y,b;i[0]!==r?(({__unstable_hideInnerStroke:a,as:c,color:g,src:m,title:b,initials:u,onImageLoadError:h,arrowPosition:l,animateArrowFrom:s,status:v,size:y,...p}=r),i[0]=r,i[1]=a,i[2]=s,i[3]=l,i[4]=c,i[5]=u,i[6]=h,i[7]=p,i[8]=m,i[9]=g,i[10]=v,i[11]=y,i[12]=b):(a=i[1],s=i[2],l=i[3],c=i[4],u=i[5],h=i[6],p=i[7],m=i[8],g=i[9],v=i[10],y=i[11],b=i[12]);const x=void 0===g?\"gray\":g,C=void 0===v?\"online\":v,k=void 0===y?1:y,{avatar:L}=vb(),M=Tt.isValidElementType(c)?c:\"div\",S=vy(k),R=(L.sizes[S[0]]||L.sizes[0]).size,V=R/2,E=(0,react__WEBPACK_IMPORTED_MODULE_1__.useId)(),[H,T]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(s||l||\"inside\"),[$,A]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1),N=`avatar-image-${E}`;let I,P,F,j,B;i[13]!==H||i[14]!==l?(I=()=>{if(H===l)return;const e=requestAnimationFrame((()=>T(l)));return()=>cancelAnimationFrame(e)},P=[H,l],i[13]=H,i[14]=l,i[15]=I,i[16]=P):(I=i[15],P=i[16]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(I,P),i[17]!==m?(F=()=>{m&&A(!1)},j=[m],i[17]=m,i[18]=F,i[19]=j):(F=i[18],j=i[19]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(F,j),i[20]!==h?(B=()=>{A(!0),h&&h(new Error(\"Avatar: the image failed to load\"))},i[20]=h,i[21]=B):B=i[21];const D=B;let O,z;i[22]!==S?(z=S.map(Yx),i[22]=S,i[23]=z):z=i[23],O=z;const _=O,W=\"string\"==typeof M?M:void 0;let q,Z,U,G;return i[24]!==x?(q=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_x,{children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{width:\"11\",height:\"7\",viewBox:\"0 0 11 7\",fill:\"none\",children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M6.67948 1.50115L11 7L0 7L4.32052 1.50115C4.92109 0.736796 6.07891 0.736795 6.67948 1.50115Z\",fill:x})})}),i[24]=x,i[25]=q):q=i[25],i[26]!==a||i[27]!==V||i[28]!==R||i[29]!==D||i[30]!==$||i[31]!==N||i[32]!==m?(Z=!$&&m&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Gx,{viewBox:`0 0 ${R} ${R}`,fill:\"none\",children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"defs\",{children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"pattern\",{id:N,patternContentUnits:\"objectBoundingBox\",width:\"1\",height:\"1\",children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"image\",{href:m,width:\"1\",height:\"1\",onError:D})})}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"circle\",{cx:V,cy:V,r:V,fill:`url(#${N})`}),!a&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Wx,{cx:V,cy:V,rx:V,ry:V,vectorEffect:\"non-scaling-stroke\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(qx,{cx:V,cy:V,rx:V,ry:V,vectorEffect:\"non-scaling-stroke\"})]}),i[26]=a,i[27]=V,i[28]=R,i[29]=D,i[30]=$,i[31]=N,i[32]=m,i[33]=Z):Z=i[33],i[34]!==$||i[35]!==u||i[36]!==_||i[37]!==m?(U=($||!m)&&u&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Zx,{children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Ux,{forwardedAs:\"span\",size:_,weight:\"medium\",children:u})})}),i[34]=$,i[35]=u,i[36]=_,i[37]=m,i[38]=U):U=i[38],i[39]!==H||i[40]!==M||i[41]!==x||i[42]!==o||i[43]!==p||i[44]!==S||i[45]!==C||i[46]!==W||i[47]!==q||i[48]!==Z||i[49]!==U||i[50]!==b?(G=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(zx,{as:M,\"data-as\":W,\"data-ui\":\"Avatar\",...p,$color:x,$size:S,\"aria-label\":b,\"data-arrow-position\":H,\"data-status\":C,ref:o,title:b,children:[q,Z,U]}),i[39]=H,i[40]=M,i[41]=x,i[42]=o,i[43]=p,i[44]=S,i[45]=C,i[46]=W,i[47]=q,i[48]=Z,i[49]=U,i[50]=b,i[51]=G):G=i[51],G})).displayName=\"ForwardRef(Avatar)\";const Jx=/* @__PURE__ */co.div.withConfig({displayName:\"StyledAvatarCounter\",componentId:\"sc-1ydx86y-0\"})(Xx,Kx),Qx=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const r=St.c(9),{count:o,size:i}=t,a=vy(void 0===i?1:i);let s,l;r[0]!==a?(l=a.map(eC),r[0]=a,r[1]=l):l=r[1],s=l;const c=s;let d,u;return r[2]!==o||r[3]!==c?(d=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Nx,{as:\"span\",size:c,weight:\"medium\",children:o}),r[2]=o,r[3]=c,r[4]=d):d=r[4],r[5]!==n||r[6]!==a||r[7]!==d?(u=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Jx,{$size:a,\"data-ui\":\"AvatarCounter\",ref:n,children:d}),r[5]=n,r[6]=a,r[7]=d,r[8]=u):u=r[8],u}));function eC(e){return 1===e?1:2===e?3:3===e?5:0}Qx.displayName=\"ForwardRef(AvatarCounter)\";const tC=ao`\n  white-space: nowrap;\n\n  & > div {\n    vertical-align: top;\n\n    &:not([hidden]) {\n      display: inline-block;\n    }\n  }\n`;function nC(){return tC}function rC(e){const{avatar:t,media:n}=j(e.theme);return ly(n,e.$size,(e=>{const n=t.sizes[e];return n?{\"& > div + div\":{marginLeft:sy(n.distance)}}:oy}))}const oC=/* @__PURE__ */co.div.withConfig({displayName:\"StyledAvatarStack\",componentId:\"sc-cysmbb-0\"})(rC,nC);(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){const o=St.c(15);let i,a,s,l;o[0]!==n?(({children:i,maxLength:s,size:l,...a}=n),o[0]=n,o[1]=i,o[2]=a,o[3]=s,o[4]=l):(i=o[1],a=o[2],s=o[3],l=o[4]);const c=void 0===s?4:s,d=void 0===l?1:l,u=react__WEBPACK_IMPORTED_MODULE_1__.Children.toArray(i).filter(react__WEBPACK_IMPORTED_MODULE_1__.isValidElement),h=Math.max(c,0),f=vy(d),p=u.length,m=p-(h-1),w=m>1?u.slice(m,p):u,y=oC,b=0===p&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\",{children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Qx,{count:p,size:f})}),x=0!==p&&m>1&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\",{children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Qx,{count:m,size:f})});let C;o[5]!==f?(C=(t,n)=>/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\",{children:(0,react__WEBPACK_IMPORTED_MODULE_1__.cloneElement)(t,{size:f})},String(n)),o[5]=f,o[6]=C):C=o[6];const L=w.map(C);let M;return o[7]!==y||o[8]!==r||o[9]!==a||o[10]!==f||o[11]!==b||o[12]!==x||o[13]!==L?(M=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(y,{\"data-ui\":\"AvatarStack\",...a,ref:r,$size:f,children:[b,x,L]}),o[7]=y,o[8]=r,o[9]=a,o[10]=f,o[11]=b,o[12]=x,o[13]=L,o[14]=M):M=o[14],M})).displayName=\"ForwardRef(AvatarStack)\";const iC=/* @__PURE__ */co.div.withConfig({displayName:\"StyledBox\",componentId:\"sc-1hhky9f-0\"})(Nb,Gb,Ib,dx,Sx,Rx),aC=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const r=St.c(59);let o,i,a,s,l,c,d,u,h,f,p,m,g,v,w,y,b,x,C,k,L,M,S,R,V,E,H;r[0]!==t?(({as:R,column:o,columnStart:a,columnEnd:i,display:V,flex:s,height:l,margin:E,marginX:f,marginY:p,marginTop:h,marginRight:u,marginBottom:c,marginLeft:d,overflow:m,padding:H,paddingX:b,paddingY:x,paddingTop:y,paddingRight:w,paddingBottom:g,paddingLeft:v,row:k,rowStart:M,rowEnd:L,sizing:S,...C}=t),r[0]=t,r[1]=o,r[2]=i,r[3]=a,r[4]=s,r[5]=l,r[6]=c,r[7]=d,r[8]=u,r[9]=h,r[10]=f,r[11]=p,r[12]=m,r[13]=g,r[14]=v,r[15]=w,r[16]=y,r[17]=b,r[18]=x,r[19]=C,r[20]=k,r[21]=L,r[22]=M,r[23]=S,r[24]=R,r[25]=V,r[26]=E,r[27]=H):(o=r[1],i=r[2],a=r[3],s=r[4],l=r[5],c=r[6],d=r[7],u=r[8],h=r[9],f=r[10],p=r[11],m=r[12],g=r[13],v=r[14],w=r[15],y=r[16],b=r[17],x=r[18],C=r[19],k=r[20],L=r[21],M=r[22],S=r[23],R=r[24],V=r[25],E=r[26],H=r[27]);const T=void 0===R?\"div\":R,$=void 0===V?\"block\":V,A=void 0===E?0:E,N=void 0===H?0:H,I=\"string\"==typeof T?T:void 0,P=vy(o),F=vy(a),j=vy(i),B=vy($),D=vy(s),O=vy(l),z=vy(A),_=vy(f),W=vy(p),q=vy(h),Z=vy(u),U=vy(c),G=vy(d),Y=vy(m),X=vy(N),K=vy(b),J=vy(x),Q=vy(y),ee=vy(w),te=vy(g),ne=vy(v),re=vy(k),oe=vy(M),ie=vy(L),ae=vy(S);let se;return r[28]!==T||r[29]!==t.children||r[30]!==n||r[31]!==C||r[32]!==O||r[33]!==z||r[34]!==_||r[35]!==W||r[36]!==q||r[37]!==Z||r[38]!==U||r[39]!==G||r[40]!==Y||r[41]!==X||r[42]!==K||r[43]!==J||r[44]!==Q||r[45]!==ee||r[46]!==te||r[47]!==ne||r[48]!==re||r[49]!==oe||r[50]!==ie||r[51]!==ae||r[52]!==I||r[53]!==P||r[54]!==F||r[55]!==j||r[56]!==B||r[57]!==D?(se=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(iC,{\"data-as\":I,\"data-ui\":\"Box\",...C,$column:P,$columnStart:F,$columnEnd:j,$display:B,$flex:D,$height:O,$margin:z,$marginX:_,$marginY:W,$marginTop:q,$marginRight:Z,$marginBottom:U,$marginLeft:G,$overflow:Y,$padding:X,$paddingX:K,$paddingY:J,$paddingTop:Q,$paddingRight:ee,$paddingBottom:te,$paddingLeft:ne,$row:re,$rowStart:oe,$rowEnd:ie,$sizing:ae,as:T,ref:n,children:t.children}),r[28]=T,r[29]=t.children,r[30]=n,r[31]=C,r[32]=O,r[33]=z,r[34]=_,r[35]=W,r[36]=q,r[37]=Z,r[38]=U,r[39]=G,r[40]=Y,r[41]=X,r[42]=K,r[43]=J,r[44]=Q,r[45]=ee,r[46]=te,r[47]=ne,r[48]=re,r[49]=oe,r[50]=ie,r[51]=ae,r[52]=I,r[53]=P,r[54]=F,r[55]=j,r[56]=B,r[57]=D,r[58]=se):se=r[58],se}));function sC(e){const{$accent:t,$muted:n}=e,{font:r}=j(e.theme);return ao`\n    color: var(--card-fg-color);\n\n    ${t&&ao`\n      color: var(--card-accent-fg-color);\n    `}\n\n    ${n&&ao`\n      color: var(--card-muted-fg-color);\n    `}\n\n    & code {\n      font-family: ${r.code.family};\n      border-radius: 1px;\n      background-color: var(--card-code-bg-color);\n      color: var(--card-code-fg-color);\n    }\n\n    & a {\n      text-decoration: none;\n      border-radius: 1px;\n      color: var(--card-link-color);\n      outline: none;\n\n      @media (hover: hover) {\n        &:hover {\n          text-decoration: underline;\n        }\n      }\n\n      &:focus {\n        box-shadow:\n          0 0 0 1px var(--card-bg-color),\n          0 0 0 3px var(--card-focus-ring-color);\n      }\n\n      &:focus:not(:focus-visible) {\n        box-shadow: none;\n      }\n    }\n\n    & strong {\n      font-weight: ${r.text.weights.bold};\n    }\n\n    & svg {\n      /* Certain popular CSS libraries changes the defaults for SVG display */\n      /* Make sure SVGs are rendered as inline elements */\n      display: inline;\n    }\n\n    & [data-sanity-icon] {\n      vertical-align: baseline;\n      color: var(--card-icon-color);\n\n      & path {\n        vector-effect: non-scaling-stroke !important;\n      }\n    }\n  `}aC.displayName=\"ForwardRef(Box)\";const lC=/* @__PURE__ */co.div.withConfig({displayName:\"StyledText\",componentId:\"sc-11ov82j-0\"})(gy,my,sC),cC=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const r=St.c(22);let o,i,a,s,l,c,d,u;r[0]!==t?(({accent:s,align:o,children:i,muted:l,size:c,textOverflow:d,weight:u,...a}=t),r[0]=t,r[1]=o,r[2]=i,r[3]=a,r[4]=s,r[5]=l,r[6]=c,r[7]=d,r[8]=u):(o=r[1],i=r[2],a=r[3],s=r[4],l=r[5],c=r[6],d=r[7],u=r[8]);const h=void 0!==s&&s,f=void 0!==l&&l,p=void 0===c?2:c;let m=i;if(\"ellipsis\"===d){let t;r[9]!==m?(t=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Tx,{children:m}),r[9]=m,r[10]=t):t=r[10],m=t}const g=vy(o),v=vy(p);let w,y;return r[11]!==m?(w=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\",{children:m}),r[11]=m,r[12]=w):w=r[12],r[13]!==h||r[14]!==f||r[15]!==n||r[16]!==a||r[17]!==g||r[18]!==v||r[19]!==w||r[20]!==u?(y=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(lC,{\"data-ui\":\"Text\",...a,$accent:h,$align:g,$muted:f,ref:n,$size:v,$weight:u,children:w}),r[13]=h,r[14]=f,r[15]=n,r[16]=a,r[17]=g,r[18]=v,r[19]=w,r[20]=u,r[21]=y):y=r[21],y}));function dC(e){const{$tone:t}=e;return{\"--card-bg-color\":`var(--card-badge-${t}-bg-color)`,\"--card-fg-color\":`var(--card-badge-${t}-fg-color)`,backgroundColor:\"var(--card-bg-color)\",cursor:\"default\",\"&:not([hidden])\":{display:\"inline-block\",verticalAlign:\"top\"}}}cC.displayName=\"ForwardRef(Text)\";const uC=/* @__PURE__ */co(aC).withConfig({displayName:\"StyledBadge\",componentId:\"sc-5u140l-0\"})(Vx,dC);(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const r=St.c(17);let o,i,a,s,l,c;if(r[0]!==t){const{children:e,fontSize:n,mode:d,padding:u,radius:h,tone:f,...p}=t;o=e,a=n,s=u,l=h,c=f,i=p,r[0]=t,r[1]=o,r[2]=i,r[3]=a,r[4]=s,r[5]=l,r[6]=c}else o=r[1],i=r[2],a=r[3],s=r[4],l=r[5],c=r[6];const d=void 0===a?1:a,u=void 0===s?1:s,h=void 0===c?\"default\":c,f=vy(void 0===l?\"full\":l),p=vy(u);let m,g;return r[7]!==o||r[8]!==d?(m=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(cC,{size:d,children:o}),r[7]=o,r[8]=d,r[9]=m):m=r[9],r[10]!==n||r[11]!==i||r[12]!==f||r[13]!==p||r[14]!==m||r[15]!==h?(g=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(uC,{\"data-ui\":\"Badge\",...i,$tone:h,$radius:f,padding:p,ref:n,children:m}),r[10]=n,r[11]=i,r[12]=f,r[13]=p,r[14]=m,r[15]=h,r[16]=g):g=r[16],g})).displayName=\"ForwardRef(Badge)\";const hC=/* @__PURE__ */co(aC).withConfig({displayName:\"StyledFlex\",componentId:\"sc-oxesg3-0\"})(Gb,Ob),fC=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const r=St.c(17);let o,i,a,s,l,c,d;r[0]!==t?(({align:o,as:i,direction:c,gap:a,justify:s,wrap:d,...l}=t),r[0]=t,r[1]=o,r[2]=i,r[3]=a,r[4]=s,r[5]=l,r[6]=c,r[7]=d):(o=r[1],i=r[2],a=r[3],s=r[4],l=r[5],c=r[6],d=r[7]);const u=void 0===c?\"row\":c,h=vy(o),f=vy(u),p=vy(a),m=vy(s),g=vy(d);let v;return r[8]!==i||r[9]!==n||r[10]!==l||r[11]!==h||r[12]!==f||r[13]!==p||r[14]!==m||r[15]!==g?(v=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(hC,{\"data-ui\":\"Flex\",...l,$align:h,$direction:f,$gap:p,$justify:m,$wrap:g,forwardedAs:i,ref:n}),r[8]=i,r[9]=n,r[10]=l,r[11]=h,r[12]=f,r[13]=p,r[14]=m,r[15]=g,r[16]=v):v=r[16],v}));fC.displayName=\"ForwardRef(Flex)\";const pC=uo`\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n`,mC=co(cC).withConfig({displayName:\"StyledSpinner\",componentId:\"sc-124hnd0-0\"})`& > span > svg{animation:${pC} 500ms linear infinite;}`,gC=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const r=St.c(4);let o,i;return r[0]===Symbol.for(\"react.memo_cache_sentinel\")?(o=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(bs,{}),r[0]=o):o=r[0],r[1]!==t||r[2]!==n?(i=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(mC,{\"data-ui\":\"Spinner\",...t,ref:n,children:o}),r[1]=t,r[2]=n,r[3]=i):i=r[3],i}));function vC(e,t,n=!1){return{\"--card-backdrop-color\":e.backdrop,\"--card-focus-ring-color\":e.focusRing,\"--card-shadow-outline-color\":e.shadow.outline,\"--card-shadow-umbra-color\":e.shadow.umbra,\"--card-shadow-penumbra-color\":e.shadow.penumbra,\"--card-shadow-ambient-color\":e.shadow.ambient,\"--card-accent-fg-color\":t.accent.fg,\"--card-avatar-gray-bg-color\":t.avatar.gray.bg,\"--card-avatar-gray-fg-color\":t.avatar.gray.fg,\"--card-avatar-blue-bg-color\":t.avatar.blue.bg,\"--card-avatar-blue-fg-color\":t.avatar.blue.fg,\"--card-avatar-purple-bg-color\":t.avatar.purple.bg,\"--card-avatar-purple-fg-color\":t.avatar.purple.fg,\"--card-avatar-magenta-bg-color\":t.avatar.magenta.bg,\"--card-avatar-magenta-fg-color\":t.avatar.magenta.fg,\"--card-avatar-red-bg-color\":t.avatar.red.bg,\"--card-avatar-red-fg-color\":t.avatar.red.fg,\"--card-avatar-orange-bg-color\":t.avatar.orange.bg,\"--card-avatar-orange-fg-color\":t.avatar.orange.fg,\"--card-avatar-yellow-bg-color\":t.avatar.yellow.bg,\"--card-avatar-yellow-fg-color\":t.avatar.yellow.fg,\"--card-avatar-green-bg-color\":t.avatar.green.bg,\"--card-avatar-green-fg-color\":t.avatar.green.fg,\"--card-avatar-cyan-bg-color\":t.avatar.cyan.bg,\"--card-avatar-cyan-fg-color\":t.avatar.cyan.fg,\"--card-bg-color\":t.bg,\"--card-bg-image\":n?`repeating-conic-gradient(${t.bg} 0% 25%, ${t.muted.bg} 0% 50%)`:void 0,\"--card-border-color\":t.border,\"--card-badge-default-bg-color\":t.badge.default.bg,\"--card-badge-default-dot-color\":t.badge.default.dot,\"--card-badge-default-fg-color\":t.badge.default.fg,\"--card-badge-default-icon-color\":t.badge.default.icon,\"--card-badge-neutral-bg-color\":t.badge.neutral?.bg,\"--card-badge-neutral-dot-color\":t.badge.neutral?.dot,\"--card-badge-neutral-fg-color\":t.badge.neutral?.fg,\"--card-badge-neutral-icon-color\":t.badge.neutral?.icon,\"--card-badge-primary-bg-color\":t.badge.primary.bg,\"--card-badge-primary-dot-color\":t.badge.primary.dot,\"--card-badge-primary-fg-color\":t.badge.primary.fg,\"--card-badge-primary-icon-color\":t.badge.primary.icon,\"--card-badge-suggest-bg-color\":t.badge.suggest?.bg,\"--card-badge-suggest-dot-color\":t.badge.suggest?.dot,\"--card-badge-suggest-fg-color\":t.badge.suggest?.fg,\"--card-badge-suggest-icon-color\":t.badge.suggest?.icon,\"--card-badge-positive-bg-color\":t.badge.positive.bg,\"--card-badge-positive-dot-color\":t.badge.positive.dot,\"--card-badge-positive-fg-color\":t.badge.positive.fg,\"--card-badge-positive-icon-color\":t.badge.positive.icon,\"--card-badge-caution-bg-color\":t.badge.caution.bg,\"--card-badge-caution-dot-color\":t.badge.caution.dot,\"--card-badge-caution-fg-color\":t.badge.caution.fg,\"--card-badge-caution-icon-color\":t.badge.caution.icon,\"--card-badge-critical-bg-color\":t.badge.critical.bg,\"--card-badge-critical-dot-color\":t.badge.critical.dot,\"--card-badge-critical-fg-color\":t.badge.critical.fg,\"--card-badge-critical-icon-color\":t.badge.critical.icon,\"--card-code-bg-color\":t.code.bg,\"--card-code-fg-color\":t.code.fg,\"--card-fg-color\":t.fg,\"--card-icon-color\":t.icon,\"--card-kbd-bg-color\":t.kbd.bg,\"--card-kbd-border-color\":t.kbd.border,\"--card-kbd-fg-color\":t.kbd.fg,\"--card-link-fg-color\":t.link.fg,\"--card-muted-bg-color\":t.muted.bg,\"--card-muted-fg-color\":t.muted.fg,\"--card-skeleton-color-from\":t.skeleton.from,\"--card-skeleton-color-to\":t.skeleton.to,\"--card-bg2-color\":t.muted.bg,\"--card-link-color\":t.link.fg,\"--card-hairline-soft-color\":t.border,\"--card-hairline-hard-color\":t.border}}function wC(e){const{$width:t}=e,{style:n}=j(e.theme);return ao`\n    ${n?.button};\n\n    -webkit-font-smoothing: inherit;\n    appearance: none;\n    display: inline-flex;\n    align-items: center;\n    font: inherit;\n    border: 0;\n    outline: none;\n    user-select: none;\n    text-decoration: none;\n    border: 0;\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n    white-space: nowrap;\n    text-align: left;\n    position: relative;\n    vertical-align: top;\n\n    ${\"fill\"===t&&ao`\n      width: -moz-available;\n      width: -webkit-fill-available;\n      width: stretch;\n    `}\n\n    & > span {\n      display: block;\n      flex: 1;\n      min-width: 0;\n      border-radius: inherit;\n    }\n\n    &::-moz-focus-inner {\n      border: 0;\n      padding: 0;\n    }\n  `}function yC(...e){return e.filter(Boolean).join(\",\")}function bC(e){const{$mode:t}=e,{button:n,color:r,style:o}=j(e.theme),i=\"ghost\"===e.$mode,a=r.button[t]||r.button.default,s=a[e.$tone]||a.default,l={width:n.border.width,color:\"var(--card-border-color)\"},c=void 0;return[vC(r,s.enabled),{backgroundColor:\"var(--card-bg-color)\",color:\"var(--card-fg-color)\",boxShadow:Xb(l),'&:disabled, &[data-disabled=\"true\"]':vC(r,s.disabled),\"&:not([data-disabled='true'])\":{boxShadow:yC(Xb(l),i?c:void 0),\"&:focus\":{boxShadow:Kb({base:r,border:{width:2,color:r.bg},focusRing:n.focusRing})},\"&:focus:not(:focus-visible)\":{boxShadow:yC(Xb(l),i?c:void 0)},\"@media (hover: hover)\":{\"&:hover\":vC(r,s.hovered),\"&:active\":vC(r,s.pressed),\"&[data-hovered]\":vC(r,s.hovered)},\"&[data-selected]\":vC(r,s.pressed)}},o?.button?.root].filter(Boolean)}gC.displayName=\"ForwardRef(Spinner)\";const xC=/* @__PURE__ */co.button.withConfig({displayName:\"StyledButton\",componentId:\"sc-aaekt4-0\"})(Vx,wC,bC),CC=co.div.withConfig({displayName:\"LoadingBox\",componentId:\"sc-aaekt4-1\"})`position:absolute;top:0;left:0;right:0;bottom:0;display:flex;align-items:center;justify-content:center;background-color:var(--card-bg-color);border-radius:inherit;z-index:1;box-shadow:inherit;`,kC=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){const o=St.c(64);let i,a,s,l,c,d,u,h,f,p,m,g,w,y,b,x,C,k,L,M,S,R,V,E,H;o[0]!==n?(({children:s,disabled:l,fontSize:y,icon:i,iconRight:a,justify:b,loading:c,mode:x,padding:C,paddingX:p,paddingY:m,paddingTop:f,paddingBottom:d,paddingLeft:u,paddingRight:h,radius:k,selected:w,space:L,text:V,textAlign:E,tone:M,type:S,muted:R,width:H,...g}=n),o[0]=n,o[1]=i,o[2]=a,o[3]=s,o[4]=l,o[5]=c,o[6]=d,o[7]=u,o[8]=h,o[9]=f,o[10]=p,o[11]=m,o[12]=g,o[13]=w,o[14]=y,o[15]=b,o[16]=x,o[17]=C,o[18]=k,o[19]=L,o[20]=M,o[21]=S,o[22]=R,o[23]=V,o[24]=E,o[25]=H):(i=o[1],a=o[2],s=o[3],l=o[4],c=o[5],d=o[6],u=o[7],h=o[8],f=o[9],p=o[10],m=o[11],g=o[12],w=o[13],y=o[14],b=o[15],x=o[16],C=o[17],k=o[18],L=o[19],M=o[20],S=o[21],R=o[22],V=o[23],E=o[24],H=o[25]);const T=void 0===y?1:y,$=void 0===b?\"center\":b,A=void 0===x?\"default\":x,N=void 0===C?3:C,I=void 0===k?2:k,P=void 0===L?3:L,F=void 0===M?\"default\":M,j=void 0===S?\"button\":S,B=void 0!==R&&R,{button:D}=vb(),O=vy($),z=vy(N),_=vy(p),W=vy(m),q=vy(f),Z=vy(d),U=vy(u),G=vy(h),Y=vy(I),X=vy(P);let K,J;o[26]!==z||o[27]!==Z||o[28]!==U||o[29]!==G||o[30]!==q||o[31]!==_||o[32]!==W?(J={padding:z,paddingX:_,paddingY:W,paddingTop:q,paddingBottom:Z,paddingLeft:U,paddingRight:G},o[26]=z,o[27]=Z,o[28]=U,o[29]=G,o[30]=q,o[31]=_,o[32]=W,o[33]=J):J=o[33],K=J;const Q=K,ee=!(!c&&!l),te=w?\"\":void 0,ne=!(!c&&!l);let re,oe,ie,ae;return o[34]!==c?(re=!!c&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(CC,{children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(gC,{})}),o[34]=c,o[35]=re):re=o[35],o[36]!==i||o[37]!==a||o[38]!==Q||o[39]!==D||o[40]!==T||o[41]!==O||o[42]!==B||o[43]!==X||o[44]!==V||o[45]!==E?(oe=(i||V||a)&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(aC,{as:\"span\",...Q,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(fC,{as:\"span\",justify:O,gap:X,children:[i&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(cC,{size:T,children:[(0,react__WEBPACK_IMPORTED_MODULE_1__.isValidElement)(i)&&i,Ht.isValidElementType(i)&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(i,{})]}),V&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(aC,{children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(cC,{muted:B,align:E,size:T,textOverflow:\"ellipsis\",weight:D.textWeight,children:V})}),a&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(cC,{size:T,children:[(0,react__WEBPACK_IMPORTED_MODULE_1__.isValidElement)(a)&&a,Ht.isValidElementType(a)&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(a,{})]})]})}),o[36]=i,o[37]=a,o[38]=Q,o[39]=D,o[40]=T,o[41]=O,o[42]=B,o[43]=X,o[44]=V,o[45]=E,o[46]=oe):oe=o[46],o[47]!==Q||o[48]!==s?(ie=s&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(aC,{as:\"span\",...Q,children:s}),o[47]=Q,o[48]=s,o[49]=ie):ie=o[49],o[50]!==A||o[51]!==Y||o[52]!==r||o[53]!==g||o[54]!==ee||o[55]!==te||o[56]!==ne||o[57]!==re||o[58]!==oe||o[59]!==ie||o[60]!==F||o[61]!==j||o[62]!==H?(ae=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(xC,{\"data-ui\":\"Button\",...g,$mode:A,$radius:Y,$tone:F,\"data-disabled\":ee,\"data-selected\":te,disabled:ne,ref:r,type:j,$width:H,children:[re,oe,ie]}),o[50]=A,o[51]=Y,o[52]=r,o[53]=g,o[54]=ee,o[55]=te,o[56]=ne,o[57]=re,o[58]=oe,o[59]=ie,o[60]=F,o[61]=j,o[62]=H,o[63]=ae):ae=o[63],ae}));function LC(e){return[MC(e),SC(e)]}function MC(e){const{$checkered:t}=e,{space:n}=j(e.theme);return ao`\n    ${t&&ao`\n      background-size: ${n[3]}px ${n[3]}px;\n      background-position: 50% 50%;\n      background-image: var(--card-bg-image);\n    `}\n\n    &[data-as='button'] {\n      -webkit-font-smoothing: inherit;\n      appearance: none;\n      outline: none;\n      font: inherit;\n      text-align: inherit;\n      border: 0;\n      width: -moz-available;\n      width: -webkit-fill-available;\n      width: stretch;\n    }\n\n    /* &:is(a) */\n    &[data-as='a'] {\n      outline: none;\n      text-decoration: none;\n    }\n\n    /* &:is(pre) */\n    &[data-as='pre'] {\n      font: inherit;\n    }\n  `}function SC(e){const{$checkered:t,$focusRing:n,$muted:r}=e,{card:o,color:i,style:a}=j(e.theme),s={width:o.border.width,color:\"var(--card-border-color)\"};return ao`\n    color-scheme: ${i._dark?\"dark\":\"light\"};\n\n    ${vC(i,i,t)}\n\n    background-color: ${r?\"var(--card-muted-bg-color)\":\"var(--card-bg-color)\"};\n    color: var(--card-fg-color);\n\n    /* &:is(button) */\n    &[data-as='button'] {\n      --card-focus-ring-box-shadow: none;\n\n      cursor: default;\n      box-shadow: var(--card-focus-ring-box-shadow);\n\n      &:disabled {\n        ${vC(i,i.selectable.default.disabled,t)}\n      }\n\n      &:not(:disabled) {\n        &[data-pressed] {\n          ${vC(i,i.selectable.default.pressed,t)}\n        }\n\n        &[data-selected] {\n          ${vC(i,i.selectable.default.selected,t)}\n        }\n\n        @media (hover: hover) {\n          &:not([data-pressed]):not([data-selected]) {\n            &[data-hovered],\n            &:hover {\n              ${vC(i,i.selectable.default.hovered,t)}\n            }\n\n            &:active {\n              ${vC(i,i.selectable.default.pressed,t)}\n            }\n          }\n        }\n\n        &:focus-visible {\n          --card-focus-ring-box-shadow: ${n?Kb({base:i,border:s,focusRing:o.focusRing}):void 0};\n        }\n      }\n    }\n\n    /* &:is(a) */\n    &[data-as='a'] {\n      cursor: pointer;\n      box-shadow: var(--card-focus-ring-box-shadow);\n\n      &[data-disabled] {\n        ${vC(i,i.selectable.default.disabled,t)}\n      }\n\n      &:not([data-disabled]) {\n        &[data-pressed] {\n          ${vC(i,i.selectable.default.pressed,t)}\n        }\n\n        &[data-selected] {\n          ${vC(i,i.selectable.default.selected,t)}\n        }\n\n        @media (hover: hover) {\n          &:not([data-pressed]):not([data-selected]) {\n            &[data-hovered],\n            &:hover {\n              ${vC(i,i.selectable.default.hovered,t)}\n            }\n\n            &:active {\n              ${vC(i,i.selectable.default.pressed,t)}\n            }\n          }\n        }\n\n        &:focus-visible {\n          --card-focus-ring-box-shadow: ${n?Kb({base:i,border:s,focusRing:o.focusRing}):void 0};\n        }\n      }\n    }\n\n    ${a?.card?.root}\n  `}kC.displayName=\"ForwardRef(Button)\";const RC=/* @__PURE__ */co(aC).withConfig({displayName:\"StyledCard\",componentId:\"sc-osnro2-0\"})(Mb,Vx,Hx,LC),VC=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const r=St.c(42);let o,i,a,s,l,c,d,u,h,f,p,m,g,v,w,y;r[0]!==t?(({__unstable_checkered:g,__unstable_focusRing:v,as:o,border:i,borderTop:c,borderRight:l,borderBottom:a,borderLeft:s,muted:d,pressed:u,radius:w,scheme:f,selected:p,shadow:m,tone:y,...h}=t),r[0]=t,r[1]=o,r[2]=i,r[3]=a,r[4]=s,r[5]=l,r[6]=c,r[7]=d,r[8]=u,r[9]=h,r[10]=f,r[11]=p,r[12]=m,r[13]=g,r[14]=v,r[15]=w,r[16]=y):(o=r[1],i=r[2],a=r[3],s=r[4],l=r[5],c=r[6],d=r[7],u=r[8],h=r[9],f=r[10],p=r[11],m=r[12],g=r[13],v=r[14],w=r[15],y=r[16]);const b=void 0!==g&&g,x=void 0!==v&&v,C=void 0===w?0:w,k=void 0===y?\"default\":y,L=Ht.isValidElementType(o)?o:\"div\",M=mb(),S=\"inherit\"===k?M.tone:k,R=\"string\"==typeof L?L:void 0,V=M.scheme,E=vy(i),H=vy(c),T=vy(l),$=vy(a),A=vy(s),N=vy(C),I=vy(m),P=b?\"\":void 0,F=u?\"\":void 0,j=p?\"\":void 0;let B,D;return r[17]!==L||r[18]!==b||r[19]!==x||r[20]!==d||r[21]!==n||r[22]!==h||r[23]!==M.scheme||r[24]!==p||r[25]!==A||r[26]!==N||r[27]!==I||r[28]!==P||r[29]!==F||r[30]!==j||r[31]!==R||r[32]!==E||r[33]!==H||r[34]!==T||r[35]!==$||r[36]!==S?(B=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(RC,{\"data-as\":R,\"data-scheme\":V,\"data-ui\":\"Card\",\"data-tone\":S,...h,$border:E,$borderTop:H,$borderRight:T,$borderBottom:$,$borderLeft:A,$checkered:b,$focusRing:x,$muted:d,$radius:N,$shadow:I,$tone:S,\"data-checkered\":P,\"data-pressed\":F,\"data-selected\":j,forwardedAs:L,ref:n,selected:p}),r[17]=L,r[18]=b,r[19]=x,r[20]=d,r[21]=n,r[22]=h,r[23]=M.scheme,r[24]=p,r[25]=A,r[26]=N,r[27]=I,r[28]=P,r[29]=F,r[30]=j,r[31]=R,r[32]=E,r[33]=H,r[34]=T,r[35]=$,r[36]=S,r[37]=B):B=r[37],r[38]!==f||r[39]!==B||r[40]!==S?(D=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(gb,{scheme:f,tone:S,children:B}),r[38]=f,r[39]=B,r[40]=S,r[41]=D):D=r[41],D}));function EC(){return ao`\n    position: relative;\n    display: inline-block;\n  `}function HC(e){const{color:t,input:n,radius:r}=j(e.theme),{focusRing:o}=n.checkbox;return ao`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    outline: none;\n    opacity: 0;\n    z-index: 1;\n    padding: 0;\n    margin: 0;\n\n    & + span {\n      position: relative;\n      display: block;\n      height: ${sy(n.checkbox.size)};\n      width: ${sy(n.checkbox.size)};\n      box-sizing: border-box;\n      box-shadow: ${Xb({color:t.input.default.enabled.border,width:n.border.width})};\n      border-radius: ${sy(r[2])};\n      line-height: 1;\n      background-color: ${t.input.default.enabled.bg};\n\n      & > svg {\n        display: block;\n        position: absolute;\n        opacity: 0;\n        height: 100%;\n        width: 100%;\n\n        & > path {\n          vector-effect: non-scaling-stroke;\n          stroke-width: 1.5px !important;\n        }\n      }\n    }\n\n    &:checked + span {\n      background: ${t.input.default.enabled.fg};\n      box-shadow: ${Xb({color:t.input.default.enabled.fg,width:n.border.width})};\n      color: ${t.input.default.enabled.bg};\n    }\n\n    /* focus */\n    &:not(:disabled):focus:focus-visible + span {\n      box-shadow: ${Kb({focusRing:o})};\n    }\n\n    /* focus when checked - uses a different offset */\n    &:not(:disabled):focus:focus-visible&:checked + span {\n      box-shadow: ${Kb({focusRing:{width:1,offset:1}})};\n    }\n\n    &[data-error] + span {\n      background-color: ${t.input.invalid.enabled.border};\n      box-shadow: ${Xb({width:n.border.width,color:t.input.invalid.enabled.muted.bg})};\n      color: ${t.input.default.disabled.fg};\n    }\n    &[data-error]&:checked + span {\n      background-color: ${t.input.invalid.enabled.muted.bg};\n      color: ${t.input.default.enabled.bg};\n    }\n    &[data-error]&:checked&:not(:disabled):focus:focus-visible + span {\n      box-shadow: ${Kb({border:{width:n.border.width,color:t.input.invalid.readOnly.muted.bg},focusRing:{width:1,offset:1}})};\n    }\n\n    &:disabled + span {\n      background-color: ${t.input.default.disabled.bg};\n      box-shadow: ${Xb({width:n.border.width,color:t.input.default.disabled.border})};\n      color: ${t.input.default.disabled.fg};\n    }\n    &:disabled&:checked + span {\n      background-color: ${t.input.default.disabled.muted.bg};\n    }\n\n    &[data-read-only] + span {\n      background-color: ${t.input.default.readOnly.bg};\n      box-shadow: ${Xb({width:n.border.width,color:t.input.default.readOnly.border})};\n      color: ${t.input.default.readOnly.fg};\n    }\n\n    &[data-read-only]&:checked + span {\n      background-color: ${t.input.default.readOnly.muted.bg};\n    }\n\n    &:checked + span > svg:first-child {\n      opacity: 1;\n    }\n    &:indeterminate + span > svg:last-child {\n      opacity: 1;\n    }\n  `}VC.displayName=\"ForwardRef(Card)\";const TC=/* @__PURE__ */co.div.withConfig({displayName:\"StyledCheckbox\",componentId:\"sc-1l5mt2l-0\"})(EC),$C=/* @__PURE__ */co.input.withConfig({displayName:\"Input\",componentId:\"sc-1l5mt2l-1\"})(HC);function AC({theme:e}){const{color:{syntax:t}}=j(e);return{\"&.atrule\":{color:t.atrule},\"&.attr-name\":{color:t.attrName},\"&.attr-value\":{color:t.attrValue},\"&.attribute\":{color:t.attribute},\"&.boolean\":{color:t.boolean},\"&.builtin\":{color:t.builtin},\"&.cdata\":{color:t.cdata},\"&.char\":{color:t.char},\"&.class\":{color:t.class},\"&.class-name\":{color:t.className},\"&.comment\":{color:t.comment},\"&.constant\":{color:t.constant},\"&.deleted\":{color:t.deleted},\"&.doctype\":{color:t.doctype},\"&.entity\":{color:t.entity},\"&.function\":{color:t.function},\"&.hexcode\":{color:t.hexcode},\"&.id\":{color:t.id},\"&.important\":{color:t.important},\"&.inserted\":{color:t.inserted},\"&.keyword\":{color:t.keyword},\"&.number\":{color:t.number},\"&.operator\":{color:t.operator},\"&.prolog\":{color:t.prolog},\"&.property\":{color:t.property},\"&.pseudo-class\":{color:t.pseudoClass},\"&.pseudo-element\":{color:t.pseudoElement},\"&.punctuation\":{color:t.punctuation},\"&.regex\":{color:t.regex},\"&.selector\":{color:t.selector},\"&.string\":{color:t.string},\"&.symbol\":{color:t.symbol},\"&.tag\":{color:t.tag},\"&.unit\":{color:t.unit},\"&.url\":{color:t.url},\"&.variable\":{color:t.variable}}}function NC(){return ao`\n    color: var(--card-code-fg-color);\n\n    & code {\n      font-family: inherit;\n\n      &.refractor .token {\n        ${AC}\n      }\n    }\n\n    & a {\n      color: inherit;\n      text-decoration: underline;\n      border-radius: 1px;\n    }\n\n    & svg {\n      /* Certain popular CSS libraries changes the defaults for SVG display */\n      /* Make sure SVGs are rendered as inline elements */\n      display: inline;\n    }\n\n    & [data-sanity-icon] {\n      vertical-align: baseline;\n    }\n  `}(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){const o=St.c(25);let i,a,s,l,c,u,f,p;o[0]!==n?(({checked:i,className:a,disabled:l,indeterminate:c,customValidity:s,readOnly:u,style:p,...f}=n),o[0]=n,o[1]=i,o[2]=a,o[3]=s,o[4]=l,o[5]=c,o[6]=u,o[7]=f,o[8]=p):(i=o[1],a=o[2],s=o[3],l=o[4],c=o[5],u=o[6],f=o[7],p=o[8]);const m=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);let g,v,w;o[9]===Symbol.for(\"react.memo_cache_sentinel\")?(g=()=>m.current,o[9]=g):g=o[9],(0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(r,g),o[10]!==c?(v=()=>{m.current&&(m.current.indeterminate=c||!1)},w=[c],o[10]=c,o[11]=v,o[12]=w):(v=o[11],w=o[12]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(v,w),by(m,s);const y=!l&&u?\"\":void 0,b=s?\"\":void 0,C=l||u;let k,L,M;return o[13]!==i||o[14]!==u||o[15]!==f||o[16]!==y||o[17]!==b||o[18]!==C?(k=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)($C,{\"data-read-only\":y,\"data-error\":b,...f,checked:i,disabled:C,type:\"checkbox\",readOnly:u,ref:m}),o[13]=i,o[14]=u,o[15]=f,o[16]=y,o[17]=b,o[18]=C,o[19]=k):k=o[19],o[20]===Symbol.for(\"react.memo_cache_sentinel\")?(L=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"span\",{children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Zo,{}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(is,{})]}),o[20]=L):L=o[20],o[21]!==a||o[22]!==p||o[23]!==k?(M=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(TC,{className:a,\"data-ui\":\"Checkbox\",style:p,children:[k,L]}),o[21]=a,o[22]=p,o[23]=k,o[24]=M):M=o[24],M})).displayName=\"ForwardRef(Checkbox)\";const IC=/* @__PURE__ */co.pre.withConfig({displayName:\"StyledCode\",componentId:\"sc-4dymyn-0\"})(NC,hy);(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){const o=St.c(23);let i,a,s,l,c;o[0]!==n?(({children:i,language:a,size:l,weight:c,...s}=n),o[0]=n,o[1]=i,o[2]=a,o[3]=s,o[4]=l,o[5]=c):(i=o[1],a=o[2],s=o[3],l=o[4],c=o[5]);const d=void 0===l?2:l,u=\"string\"==typeof a?a:void 0;let h;o[6]!==u?(h=!!u&&sd.hasLanguage(u),o[6]=u,o[7]=h):h=o[7];const f=h,p=vy(d);let m,g,v;return o[8]!==i||o[9]!==u||o[10]!==f?(m=!(u&&f)&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"code\",{children:i}),o[8]=i,o[9]=u,o[10]=f,o[11]=m):m=o[11],o[12]!==i||o[13]!==u||o[14]!==f?(g=u&&f&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(sd,{inline:!0,language:u,value:String(i)}),o[12]=i,o[13]=u,o[14]=f,o[15]=g):g=o[15],o[16]!==r||o[17]!==s||o[18]!==p||o[19]!==m||o[20]!==g||o[21]!==c?(v=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(IC,{\"data-ui\":\"Code\",...s,$size:p,$weight:c,ref:r,children:[m,g]}),o[16]=r,o[17]=s,o[18]=p,o[19]=m,o[20]=g,o[21]=c,o[22]=v):v=o[22],v})).displayName=\"ForwardRef(Code)\";const PC={width:\"100%\",margin:\"0 auto\"};function FC(){return PC}function jC(e){const{container:t,media:n}=j(e.theme);return ly(n,e.$width,(e=>({maxWidth:\"auto\"===e?\"none\":sy(t[e])})))}const BC=/* @__PURE__ */co(aC).withConfig({displayName:\"StyledContainer\",componentId:\"sc-wyroop-0\"})(FC,jC),DC=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const r=St.c(9);let o,i,a;r[0]!==t?(({as:o,width:a,...i}=t),r[0]=t,r[1]=o,r[2]=i,r[3]=a):(o=r[1],i=r[2],a=r[3]);const s=vy(void 0===a?2:a);let l;return r[4]!==o||r[5]!==n||r[6]!==i||r[7]!==s?(l=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(BC,{\"data-ui\":\"Container\",...i,$width:s,forwardedAs:o,ref:n}),r[4]=o,r[5]=n,r[6]=i,r[7]=s,r[8]=l):l=r[8],l}));DC.displayName=\"ForwardRef(Container)\";const OC=/* @__PURE__ */co(aC).withConfig({displayName:\"StyledGrid\",componentId:\"sc-v8t8oz-0\"})(tx),zC=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const r=St.c(26);let o,i,a,s,l,c,d,u,h,f,p;r[0]!==t?(({as:o,autoRows:s,autoCols:i,autoFlow:a,columns:c,gap:d,gapX:u,gapY:h,rows:p,children:l,...f}=t),r[0]=t,r[1]=o,r[2]=i,r[3]=a,r[4]=s,r[5]=l,r[6]=c,r[7]=d,r[8]=u,r[9]=h,r[10]=f,r[11]=p):(o=r[1],i=r[2],a=r[3],s=r[4],l=r[5],c=r[6],d=r[7],u=r[8],h=r[9],f=r[10],p=r[11]);const m=\"string\"==typeof o?o:void 0,g=vy(s),v=vy(i),w=vy(a),y=vy(c),b=vy(d),x=vy(u),C=vy(h),k=vy(p);let L;return r[12]!==o||r[13]!==l||r[14]!==n||r[15]!==f||r[16]!==m||r[17]!==g||r[18]!==v||r[19]!==w||r[20]!==y||r[21]!==b||r[22]!==x||r[23]!==C||r[24]!==k?(L=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(OC,{\"data-as\":m,\"data-ui\":\"Grid\",...f,$autoRows:g,$autoCols:v,$autoFlow:w,$columns:y,$gap:b,$gapX:x,$gapY:C,$rows:k,forwardedAs:o,ref:n,children:l}),r[12]=o,r[13]=l,r[14]=n,r[15]=f,r[16]=m,r[17]=g,r[18]=v,r[19]=w,r[20]=y,r[21]=b,r[22]=x,r[23]=C,r[24]=k,r[25]=L):L=r[25],L}));function _C(e){const{$accent:t,$muted:n}=e,{font:r}=j(e.theme);return ao`\n    ${t&&ao`\n      color: var(--card-accent-fg-color);\n    `}\n\n    ${n&&ao`\n      color: var(--card-muted-fg-color);\n    `}\n\n    & code {\n      font-family: ${r.code.family};\n      border-radius: 1px;\n    }\n\n    & a {\n      text-decoration: none;\n      border-radius: 1px;\n      color: var(--card-link-color);\n      outline: none;\n\n      @media (hover: hover) {\n        &:hover {\n          text-decoration: underline;\n        }\n      }\n\n      &:focus {\n        box-shadow:\n          0 0 0 1px var(--card-bg-color),\n          0 0 0 3px var(--card-focus-ring-color);\n      }\n\n      &:focus:not(:focus-visible) {\n        box-shadow: none;\n      }\n    }\n\n    & strong {\n      font-weight: ${r.heading.weights.bold};\n    }\n\n    & svg {\n      /* Certain popular CSS libraries changes the defaults for SVG display */\n      /* Make sure SVGs are rendered as inline elements */\n      display: inline;\n    }\n\n    & [data-sanity-icon] {\n      vertical-align: baseline;\n    }\n  `}zC.displayName=\"ForwardRef(Grid)\";const WC=/* @__PURE__ */co.div.withConfig({displayName:\"StyledHeading\",componentId:\"sc-137lwim-0\"})(_C,my,fy);function qC(){return{lineHeight:0,\"&&:not([hidden])\":{display:\"block\"},\"& > div\":{display:\"inline-block\",verticalAlign:\"middle\"}}}function ZC(e){const{media:t,space:n}=j(e.theme);return ly(t,e.$space,(e=>{const t=sy(.5===e?n[1]/2:n[e]);return{margin:`-${t} 0 0 -${t}`,\"& > div\":{padding:`${t} 0 0 ${t}`}}}))}(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const r=St.c(22);let o,i,a,s,l,c,d,u;r[0]!==t?(({accent:s,align:o,children:i,muted:l,size:c,textOverflow:d,weight:u,...a}=t),r[0]=t,r[1]=o,r[2]=i,r[3]=a,r[4]=s,r[5]=l,r[6]=c,r[7]=d,r[8]=u):(o=r[1],i=r[2],a=r[3],s=r[4],l=r[5],c=r[6],d=r[7],u=r[8]);const h=void 0!==s&&s,f=void 0!==l&&l,p=void 0===c?2:c;let m=i;if(\"ellipsis\"===d){let t;r[9]!==m?(t=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Tx,{children:m}),r[9]=m,r[10]=t):t=r[10],m=t}const g=vy(o),v=vy(p);let w,y;return r[11]!==m?(w=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\",{children:m}),r[11]=m,r[12]=w):w=r[12],r[13]!==h||r[14]!==f||r[15]!==n||r[16]!==a||r[17]!==g||r[18]!==v||r[19]!==w||r[20]!==u?(y=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(WC,{\"data-ui\":\"Heading\",...a,$accent:h,$align:g,$muted:f,$size:v,$weight:u,ref:n,children:w}),r[13]=h,r[14]=f,r[15]=n,r[16]=a,r[17]=g,r[18]=v,r[19]=w,r[20]=u,r[21]=y):y=r[21],y})).displayName=\"ForwardRef(Heading)\";const UC=/* @__PURE__ */co(aC).withConfig({displayName:\"StyledInline\",componentId:\"sc-1pkiy6j-0\"})(qC,ZC),GC=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const r=St.c(12);let o,i,a,s,l,c;r[0]!==t?(({as:o,children:i,space:s,...a}=t),r[0]=t,r[1]=o,r[2]=i,r[3]=a,r[4]=s):(o=r[1],i=r[2],a=r[3],s=r[4]),r[5]!==i?(c=react__WEBPACK_IMPORTED_MODULE_1__.Children.map(i,YC),r[5]=i,r[6]=c):c=r[6],l=c;const d=l,u=vy(s);let h;return r[7]!==o||r[8]!==d||r[9]!==a||r[10]!==u?(h=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(UC,{\"data-ui\":\"Inline\",...a,$space:u,forwardedAs:o,ref:n,children:d}),r[7]=o,r[8]=d,r[9]=a,r[10]=u,r[11]=h):h=r[11],h}));function YC(t){return t&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\",{children:t})}function XC(){return ao`\n    --card-bg-color: var(--card-kbd-bg-color);\n    --card-border-color: var(--card-kbd-border-color);\n    --card-fg-color: var(--card-kbd-fg-color);\n\n    box-shadow: inset 0 0 0 1px var(--card-border-color);\n    background: var(--card-bg-color);\n    font: inherit;\n\n    vertical-align: top;\n\n    &:not([hidden]) {\n      display: inline-block;\n    }\n  `}GC.displayName=\"ForwardRef(Inline)\";const KC=/* @__PURE__ */co.kbd.withConfig({displayName:\"StyledKBD\",componentId:\"sc-1w7yd8w-0\"})(Vx,XC),JC=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const r=St.c(17);let o,i,a,s,l;r[0]!==t?(({children:o,fontSize:a,padding:s,radius:l,...i}=t),r[0]=t,r[1]=o,r[2]=i,r[3]=a,r[4]=s,r[5]=l):(o=r[1],i=r[2],a=r[3],s=r[4],l=r[5]);const c=void 0===a?0:a,d=void 0===s?1:s,u=vy(void 0===l?2:l);let h,f,p;return r[6]!==o||r[7]!==c?(h=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(cC,{as:\"span\",size:c,weight:\"semibold\",children:o}),r[6]=o,r[7]=c,r[8]=h):h=r[8],r[9]!==d||r[10]!==h?(f=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(aC,{as:\"span\",padding:d,children:h}),r[9]=d,r[10]=h,r[11]=f):f=r[11],r[12]!==n||r[13]!==i||r[14]!==u||r[15]!==f?(p=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(KC,{\"data-ui\":\"KBD\",...i,$radius:u,ref:n,children:f}),r[12]=n,r[13]=i,r[14]=u,r[15]=f,r[16]=p):p=r[16],p}));JC.displayName=\"ForwardRef(KBD)\";const QC={name:\"@sanity/ui/origin\",fn({middlewareData:e,placement:t,rects:n}){const[r]=t.split(\"-\"),o=n.floating.width,i=n.floating.height,a=e.shift?.x||0,s=e.shift?.y||0;if(o<=0||i<=0)return{};const l=[\"bottom\",\"top\"].includes(r),{originX:c,originY:d}=l?{originX:ek(.5-a/o,0,1),originY:\"bottom\"===r?0:1}:{originX:\"left\"===r?1:0,originY:ek(.5-s/i,0,1)};return{data:{originX:c,originY:d}}}};function ek(e,t,n){return Math.min(Math.max(e,t),n)}function tk(e,t,n){const r=t.x-e.x,o=t.y-e.y,i=Math.sqrt(r*r+o*o);return nk(e,t,Math.min(1,n/i))}function nk(e,t,n){return{x:e.x+(t.x-e.x)*n,y:e.y+(t.y-e.y)*n}}const rk=/* @__PURE__ */co.div.withConfig({displayName:\"StyledArrow\",componentId:\"sc-12vzy6c-0\"})((({$w:e})=>ao`\n    position: absolute;\n    width: ${e}px;\n    height: ${e}px;\n\n    :empty + & {\n      display: none;\n    }\n\n    & > svg {\n      display: block;\n      line-height: 0;\n      transform-origin: ${e/2}px ${e/2}px;\n    }\n\n    [data-placement^='top'] > & {\n      bottom: -${e}px;\n\n      & > svg {\n        transform: rotate(0);\n      }\n    }\n\n    [data-placement^='right'] > & {\n      left: -${e}px;\n\n      & > svg {\n        transform: rotate(90deg);\n      }\n    }\n\n    [data-placement^='left'] > & {\n      right: -${e}px;\n\n      & > svg {\n        transform: rotate(-90deg);\n      }\n    }\n\n    [data-placement^='bottom'] > & {\n      top: -${e}px;\n\n      & > svg {\n        transform: rotate(180deg);\n      }\n    }\n  `)),ok=co.path.withConfig({displayName:\"StrokePath\",componentId:\"sc-12vzy6c-1\"})`stroke:var(--card-shadow-outline-color);`,ik=co.path.withConfig({displayName:\"ShapePath\",componentId:\"sc-12vzy6c-2\"})`fill:var(--card-bg-color);`,ak=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){const o=St.c(24);let i,a,s,l;o[0]!==n?(({width:l,height:i,radius:s,...a}=n),o[0]=n,o[1]=i,o[2]=a,o[3]=s,o[4]=l):(i=o[1],a=o[2],s=o[3],l=o[4]);const c=void 0===s?0:s,{card:d}=vb(),u=d.shadow.outline,h=function(e){const t=e.length,n=[];for(let r=0;r<t;r+=1){const t=e[r],o=e[r-1],i=e[r+1];if(o&&t.radius){const e=tk(t,o,t.radius),r=tk(t,i,t.radius),a=nk(e,t,.5),s=nk(t,r,.5);n.push({type:\"point\",...e}),n.push({type:\"curve\",curveEnd:r,startControl:a,endControl:s})}else n.push({type:\"point\",...t})}return n}([{x:0,y:0},{x:c,y:0,radius:c},{x:l/2,y:i-1,radius:c},{x:l-c,y:0,radius:c},{x:l,y:0}]).map(((e,t)=>\"point\"===e.type?`${0===t?\"M\":\"L\"} ${e.x} ${e.y}`:\"curve\"===e.type?`C ${e.startControl.x} ${e.startControl.y} ${e.endControl.x} ${e.endControl.y} ${e.curveEnd.x} ${e.curveEnd.y}`:\"\")).join(\" \"),f=`${h}`,p=`${h} M ${l} -1 M 0 -1 Z`,m=`0 0 ${l} ${l}`;let g;o[5]!==u||o[6]!==l?(g=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"mask\",{id:\"stroke-mask\",children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"rect\",{x:0,y:u,width:l,height:l,fill:\"white\"})}),o[5]=u,o[6]=l,o[7]=g):g=o[7];const v=2*u;let w,y,b,x;return o[8]!==f||o[9]!==v?(w=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ok,{d:f,mask:\"url(#stroke-mask)\",strokeWidth:v}),o[8]=f,o[9]=v,o[10]=w):w=o[10],o[11]!==p?(y=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ik,{d:p}),o[11]=p,o[12]=y):y=o[12],o[13]!==m||o[14]!==g||o[15]!==w||o[16]!==y||o[17]!==l?(b=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{width:l,height:l,viewBox:m,children:[g,w,y]}),o[13]=m,o[14]=g,o[15]=w,o[16]=y,o[17]=l,o[18]=b):b=o[18],o[19]!==r||o[20]!==a||o[21]!==b||o[22]!==l?(x=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(rk,{...a,$w:l,ref:r,children:b}),o[19]=r,o[20]=a,o[21]=b,o[22]=l,o[23]=x):x=o[23],x}));ak.displayName=\"ForwardRef(Arrow)\";const sk=hb(\"@sanity/ui/context/boundaryElement\",null);function lk(e){return!(!e||\"object\"!=typeof e||Array.isArray(e))}const ck={version:0,element:null};function dk(){const e=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(sk);if(e&&(!lk(e)||0!==e.version))throw new Error(\"useBoundaryElement(): the context value is not compatible\");return e||ck}function uk(e){if(!lk(e)||0!==e.version)throw new Error(\"the context value is not compatible\");if(!e)throw new Error(\"components using `useLayer()` should be wrapped in a <LayerProvider>.\");if(0===e.version)return e;throw new Error(\"could not get layer context\")}(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const r=St.c(18),o=vb();let i,a,s;r[0]!==t?(({children:a,media:i,...s}=t),r[0]=t,r[1]=i,r[2]=a,r[3]=s):(i=r[1],a=r[2],s=r[3]);const l=i??o.media,[c,d]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null),u=lb(c);let h;h=u?.border.width??window.innerWidth;const f=h;let p,m;if(r[4]!==l||r[5]!==f){const e=function(e,t){const n=[];for(let r=0;r<e.length;r+=1)e[r]>t&&n.push(r);return n}(l,f);m=e.length?e.join(\" \"):void 0,r[4]=l,r[5]=f,r[6]=m}else m=r[6];p=m;const g=p;let v,y;if(r[7]!==l||r[8]!==f){const e=function(e,t){const n=[];for(let r=0;r<e.length;r+=1)e[r]<=t&&n.push(r);return n}(l,f);y=e.length?e.join(\" \"):void 0,r[7]=l,r[8]=f,r[9]=y}else y=r[9];v=y;const b=v;let C,k,L;return r[10]!==c?(C=()=>c,k=[c],r[10]=c,r[11]=C,r[12]=k):(C=r[11],k=r[12]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(n,C,k),r[13]!==a||r[14]!==g||r[15]!==b||r[16]!==s?(L=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\",{\"data-ui\":\"ElementQuery\",...s,\"data-eq-max\":g,\"data-eq-min\":b,ref:d,children:a}),r[13]=a,r[14]=g,r[15]=b,r[16]=s,r[17]=L):L=r[17],L})).displayName=\"ForwardRef(ElementQuery)\";const hk=hb(\"@sanity/ui/context/layer\",null);function fk(){const e=St.c(2),t=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(hk);if(!t)throw new Error(\"useLayer(): missing context value\");try{let n;return e[0]!==t?(n=uk(t),e[0]=t,e[1]=n):n=e[1],n}catch(e){const t=e;throw t instanceof Error?new Error(`useLayer(): ${t.message}`):new Error(`useLayer(): ${t}`)}}function pk(e){return e instanceof Node&&e.nodeType===Node.ELEMENT_NODE}function mk(e){return pk(e)&&\"A\"===e.nodeName}function gk(e){return pk(e)&&\"BUTTON\"===e.nodeName}function vk(e,t){return e.contains(t)||e===t}function wk(e){if(!function(e){return e.tabIndex>0||0===e.tabIndex&&null!==e.getAttribute(\"tabIndex\")||(mk(e)?!!e.href&&\"ignore\"!==e.rel:function(e){return pk(e)&&\"INPUT\"===e.nodeName}(e)?\"hidden\"!==e.type&&\"file\"!==e.type&&!e.disabled:!!(gk(e)||function(e){return pk(e)&&\"SELECT\"===e.nodeName}(e)||function(e){return pk(e)&&\"TEXTAREA\"===e.nodeName}(e))&&!e.disabled)}(e))return!1;try{e.focus()}catch{}return document.activeElement===e}function yk(e){for(let t=0;t<e.childNodes.length;t++){const n=e.childNodes[t];if(pk(n)&&(wk(n)||yk(n)))return!0}return!1}function bk(e){for(let t=e.childNodes.length-1;t>=0;t--){const n=e.childNodes[t];if(pk(n)&&(wk(n)||bk(n)))return!0}return!1}function xk(e){if(!(e instanceof Element))return!1;const t=window.getComputedStyle(e);return t.overflowX.includes(\"auto\")||t.overflowX.includes(\"scroll\")||t.overflowY.includes(\"auto\")||t.overflowY.includes(\"scroll\")}function Ck(t){const n=St.c(19),{children:r,zOffset:o}=t,a=void 0===o?0:o,s=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(hk);let l;n[0]!==s?(l=s&&uk(s),n[0]=s,n[1]=l):l=n[1];const c=l,u=c?.registerChild,h=(c?.level??0)+1,f=vy(a),p=f.length-1,m=Math.min(bb(),p),g=c?c.zIndex+f[m]:f[m];let v;n[2]===Symbol.for(\"react.memo_cache_sentinel\")?(v={},n[2]=v):v=n[2];const[,y]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(v),[b,x]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0),C=0===b;let k;n[3]!==u||n[4]!==y?(k=e=>{const t=u?.(e);return void 0!==e?y((t=>{const n=t[e]??0,r={...t,[e]:n+1};return x(Object.keys(r).length),r})):x(Lk),()=>{void 0!==e?y((t=>{const n={...t};return 1===n[e]?(delete n[e],x(Object.keys(n).length)):n[e]=n[e]-1,n})):x(kk),t?.()}},n[3]=u,n[4]=y,n[5]=k):k=n[5];const L=k;let M,S,R,V;n[6]!==h||n[7]!==u?(M=()=>u?.(h),S=[h,u],n[6]=h,n[7]=u,n[8]=M,n[9]=S):(M=n[8],S=n[9]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(M,S),n[10]!==C||n[11]!==h||n[12]!==L||n[13]!==b||n[14]!==g?(V={version:0,isTopLayer:C,level:h,registerChild:L,size:b,zIndex:g},n[10]=C,n[11]=h,n[12]=L,n[13]=b,n[14]=g,n[15]=V):V=n[15],R=V;const E=R;let H;return n[16]!==r||n[17]!==E?(H=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(hk.Provider,{value:E,children:r}),n[16]=r,n[17]=E,n[18]=H):H=n[18],H}function kk(e){return e-1}function Lk(e){return e+1}Ck.displayName=\"LayerProvider\";const Mk=/* @__PURE__ */co.div.withConfig({displayName:\"StyledLayer\",componentId:\"sc-16kojrv-0\"})({position:\"relative\"}),Sk=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const r=St.c(22);let o,i,a,s,l;r[0]!==t?(({children:o,onActivate:i,onFocus:a,style:l,...s}=t),r[0]=t,r[1]=o,r[2]=i,r[3]=a,r[4]=s,r[5]=l):(o=r[1],i=r[2],a=r[3],s=r[4],l=r[5]);const c=void 0===l?oy:l,{zIndex:u,isTopLayer:f}=fk(),p=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),m=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),g=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(f);let v,w,y,b;r[6]===Symbol.for(\"react.memo_cache_sentinel\")?(v=()=>m.current,r[6]=v):v=r[6],(0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(n,v),r[7]!==f||r[8]!==i?(w=()=>{g.current!==f&&f&&i?.({activeElement:p.current}),g.current=f},y=[f,i],r[7]=f,r[8]=i,r[9]=w,r[10]=y):(w=r[9],y=r[10]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(w,y),r[11]!==f||r[12]!==a?(b=e=>{a?.(e);const t=m.current,n=document.activeElement;!f||!t||!n||pk(n)&&vk(t,n)&&(p.current=n)},r[11]=f,r[12]=a,r[13]=b):b=r[13];const C=b;let k,L;return r[14]!==c||r[15]!==u?(k={...c,zIndex:u},r[14]=c,r[15]=u,r[16]=k):k=r[16],r[17]!==o||r[18]!==C||r[19]!==s||r[20]!==k?(L=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Mk,{...s,\"data-ui\":\"Layer\",onFocus:C,ref:m,style:k,children:o}),r[17]=o,r[18]=C,r[19]=s,r[20]=k,r[21]=L):L=r[21],L})),Rk=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const r=St.c(11);let o,i,a;r[0]!==t?(({children:o,zOffset:a,...i}=t),r[0]=t,r[1]=o,r[2]=i,r[3]=a):(o=r[1],i=r[2],a=r[3]);const s=void 0===a?1:a;let l,c;return r[4]!==o||r[5]!==n||r[6]!==i?(l=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Sk,{...i,ref:n,children:o}),r[4]=o,r[5]=n,r[6]=i,r[7]=l):l=r[7],r[8]!==l||r[9]!==s?(c=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Ck,{zOffset:s,children:l}),r[8]=l,r[9]=s,r[10]=c):c=r[10],c}));Rk.displayName=\"ForwardRef(Layer)\";const Vk=\"@sanity/ui/context/portal\",Ek=Symbol.for(`${Vk}/element`);ub[Ek]=null;const Hk=hb(Vk,{version:0,boundaryElement:null,get element(){return typeof document>\"u\"?null:(ub[Ek]||(ub[Ek]=document.createElement(\"div\"),ub[Ek].setAttribute(\"data-portal\",\"\"),document.body.appendChild(ub[Ek])),ub[Ek])}});function Tk(){const e=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(Hk);if(!e)throw new Error(\"usePortal(): missing context value\");if(!lk(e)||0!==e.version)throw new Error(\"usePortal(): the context value is not compatible\");return e}function $k(e){const t=St.c(3),{children:n,__unstable_name:r}=e,o=Tk(),i=(r?o.elements&&o.elements[r]:o.element)||o.elements?.default;if(!i)return null;let a;return t[0]!==n||t[1]!==i?(a=(0,react_dom__WEBPACK_IMPORTED_MODULE_2__.createPortal)(n,i),t[0]=n,t[1]=i,t[2]=a):a=t[2],a}function Ak(t){const n=St.c(7),{boundaryElement:r,children:o,element:i,__unstable_elements:a}=t,s=function(e){const t=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(e);return function(e,t){if(!e||!t)return e===t;const n=Object.keys(e),r=Object.keys(t);return n.length===r.length&&n.every((n=>e[n]===t[n]))}(t.current,e)||(t.current=e),t.current}(a),l=(0,react__WEBPACK_IMPORTED_MODULE_1__.useSyncExternalStore)(Pk,Ik,Nk);let c;const d=r||null,u=i||l;let f;n[0]!==s||n[1]!==d||n[2]!==u?(f={version:0,boundaryElement:d,element:u,elements:s},n[0]=s,n[1]=d,n[2]=u,n[3]=f):f=n[3],c=f;const p=c;let m;return n[4]!==o||n[5]!==p?(m=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Hk.Provider,{value:p,children:o}),n[4]=o,n[5]=p,n[6]=m):m=n[6],m}function Nk(){return null}function Ik(){return document.body}$k.displayName=\"Portal\",Ak.displayName=\"PortalProvider\";const Pk=()=>()=>{},Fk=co.div.withConfig({displayName:\"StyledSrOnly\",componentId:\"sc-mubr0c-0\"})`display:block;width:0;height:0;position:absolute;overflow:hidden;overflow:clip;`;(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const r=St.c(4),{as:o,children:i}=t;let a;return r[0]!==o||r[1]!==i||r[2]!==n?(a=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Fk,{\"aria-hidden\":!0,as:o,\"data-ui\":\"SrOnly\",ref:n,children:i}),r[0]=o,r[1]=i,r[2]=n,r[3]=a):a=r[3],a})).displayName=\"ForwardRef(SrOnly)\";const jk=co.div.withConfig({displayName:\"StyledVirtualList\",componentId:\"sc-dlqsj4-0\"})`position:relative;`,Bk=co.div.withConfig({displayName:\"ItemWrapper\",componentId:\"sc-dlqsj4-1\"})`position:absolute;left:0;right:0;`;(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const r=St.c(56);let o,i,a,s,l,c,u;r[0]!==t?(({as:l,gap:c,getItemKey:o,items:u,onChange:i,renderItem:a,...s}=t),r[0]=t,r[1]=o,r[2]=i,r[3]=a,r[4]=s,r[5]=l,r[6]=c,r[7]=u):(o=r[1],i=r[2],a=r[3],s=r[4],l=r[5],c=r[6],u=r[7]);const f=void 0===l?\"div\":l,p=void 0===c?0:c;let m;r[8]!==u?(m=void 0===u?[]:u,r[8]=u,r[9]=m):m=r[9];const g=m,{space:v}=vb(),y=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),b=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),[C,k]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0),[L,M]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0),[S,R]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(-1);let V,E,H,T,$;r[10]===Symbol.for(\"react.memo_cache_sentinel\")?(V=()=>y.current,r[10]=V):V=r[10],(0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(n,V),r[11]===Symbol.for(\"react.memo_cache_sentinel\")?(E=()=>{if(!b.current)return;const e=b.current.firstChild;e instanceof HTMLElement&&R(e.offsetHeight)},r[11]=E):E=r[11],r[12]!==a?(H=[a],r[12]=a,r[13]=H):H=r[13],(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(E,H),r[14]===Symbol.for(\"react.memo_cache_sentinel\")?(T=()=>{if(!y.current)return;let e=y.current.parentNode;for(;e&&!xk(e);)e=e.parentNode;if(e){const t=e;if(!(t instanceof HTMLElement))return;const n=()=>{k(t.scrollTop)};t.addEventListener(\"scroll\",n,{passive:!0});const r=new ab((e=>{M(e[0].contentRect.height)}));return r.observe(t),n(),()=>{t.removeEventListener(\"scroll\",n),r.unobserve(t),r.disconnect()}}const t=()=>{k(window.scrollY)},n=()=>{M(window.innerHeight)};return window.addEventListener(\"scroll\",t,{passive:!0}),window.addEventListener(\"resize\",n),M(window.innerHeight),t(),()=>{window.removeEventListener(\"scroll\",t),window.removeEventListener(\"resize\",n)}},$=[],r[14]=T,r[15]=$):(T=r[14],$=r[15]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(T,$);const A=g.length,N=S?A*(S+v[p])-v[p]:0,I=N?Math.max(Math.floor(C/N*A)-2,0):0,P=N?Math.ceil((C+L)/N*A)+1:0;let F,j,B;r[16]!==I||r[17]!==p||r[18]!==S||r[19]!==i||r[20]!==L||r[21]!==C||r[22]!==v||r[23]!==P?(j=()=>{i&&i({fromIndex:I,gap:v[p],itemHeight:S,scrollHeight:L,scrollTop:C,toIndex:P})},F=[I,p,S,i,L,C,v,P],r[16]=I,r[17]=p,r[18]=S,r[19]=i,r[20]=L,r[21]=C,r[22]=v,r[23]=P,r[24]=F,r[25]=j):(F=r[24],j=r[25]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(j,F);e:{if(!a||0===g.length){B=null;break e}if(-1===S){const t=g[0];let n,o;r[26]!==a||r[27]!==t?(n=a(t),r[26]=a,r[27]=t,r[28]=n):n=r[28],r[29]!==n?(o=[/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Bk,{children:n},0)],r[29]=n,r[30]=o):o=r[30],B=o;break e}let t;if(r[31]!==I||r[32]!==p||r[33]!==o||r[34]!==S||r[35]!==g||r[36]!==a||r[37]!==v||r[38]!==P){let n;r[40]!==I||r[41]!==p||r[42]!==o||r[43]!==S||r[44]!==a||r[45]!==v?(n=(t,n)=>{const r=I+n,i=a(t),s=o?o(t,r):r;/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Bk,{style:{top:r*(S+v[p])},children:i},s)},r[40]=I,r[41]=p,r[42]=o,r[43]=S,r[44]=a,r[45]=v,r[46]=n):n=r[46],t=g.slice(I,P).map(n),r[31]=I,r[32]=p,r[33]=o,r[34]=S,r[35]=g,r[36]=a,r[37]=v,r[38]=P,r[39]=t}else t=r[39];B=t}const D=B;let O,z;r[47]!==N?(z={height:N},r[47]=N,r[48]=z):z=r[48],O=z;const _=O;let W,q;return r[49]!==D||r[50]!==_?(W=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\",{ref:b,style:_,children:D}),r[49]=D,r[50]=_,r[51]=W):W=r[51],r[52]!==f||r[53]!==s||r[54]!==W?(q=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(jk,{as:f,\"data-ui\":\"VirtualList\",...s,ref:y,children:W}),r[52]=f,r[53]=s,r[54]=W,r[55]=q):q=r[55],q})).displayName=\"ForwardRef(VirtualList)\";const Dk=[0,0,0,0],Ok={top:[\"bottom\",\"left\",\"right\"],\"top-start\":[\"bottom-start\",\"left-start\",\"right-start\"],\"top-end\":[\"bottom-end\",\"left-end\",\"right-end\"],bottom:[\"top\",\"left\",\"right\"],\"bottom-start\":[\"top-start\",\"left-start\",\"right-start\"],\"bottom-end\":[\"top-end\",\"left-end\",\"right-end\"],left:[\"right\",\"top\",\"bottom\"],\"left-start\":[\"right-start\",\"top-start\",\"bottom-start\"],\"left-end\":[\"right-end\",\"top-end\",\"bottom-end\"],right:[\"left\",\"top\",\"bottom\"],\"right-start\":[\"left-start\",\"top-start\",\"bottom-start\"],\"right-end\":[\"left-end\",\"top-end\",\"bottom-end\"]},zk=co(ty.create(VC)).withConfig({displayName:\"MotionCard\",componentId:\"sc-ihg31s-0\"})`&:not([hidden]){display:flex;}flex-direction:column;width:max-content;min-width:min-content;& > *{opacity:var(${iy},1);will-change:opacity;}`,_k=(0,react__WEBPACK_IMPORTED_MODULE_1__.memo)((0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){const o=St.c(60);let i,a,s,l,c,d,u,h,f,p,m,g,v,w,y,b,x,C,k,L,M,S;o[0]!==n?(({__unstable_margins:u,animate:i,arrow:a,arrowRef:s,arrowX:l,arrowY:c,children:d,padding:m,placement:g,originX:h,originY:f,overflow:p,radius:v,scheme:y,shadow:b,strategy:x,style:C,tone:k,width:L,x:M,y:S,...w}=n),o[0]=n,o[1]=i,o[2]=a,o[3]=s,o[4]=l,o[5]=c,o[6]=d,o[7]=u,o[8]=h,o[9]=f,o[10]=p,o[11]=m,o[12]=g,o[13]=v,o[14]=w,o[15]=y,o[16]=b,o[17]=x,o[18]=C,o[19]=k,o[20]=L,o[21]=M,o[22]=S):(i=o[1],a=o[2],s=o[3],l=o[4],c=o[5],d=o[6],u=o[7],h=o[8],f=o[9],p=o[10],m=o[11],g=o[12],v=o[13],w=o[14],y=o[15],b=o[16],x=o[17],C=o[18],k=o[19],L=o[20],M=o[21],S=o[22]);const{zIndex:R}=fk();let V;V=u||Dk;const E=V,H=(M??0)+E[3],T=(S??0)+E[0];let $;const A=i?\"transform\":void 0;let N;o[23]!==h||o[24]!==f||o[25]!==x||o[26]!==C||o[27]!==A||o[28]!==L||o[29]!==H||o[30]!==T||o[31]!==R?(N={left:H,originX:h,originY:f,position:x,top:T,width:L,zIndex:R,willChange:A,...C},o[23]=h,o[24]=f,o[25]=x,o[26]=C,o[27]=A,o[28]=L,o[29]=H,o[30]=T,o[31]=R,o[32]=N):N=o[32],$=N;const I=$;let P;const F=null!==l?l:void 0,j=null!==c?c:void 0;let B;o[33]!==F||o[34]!==j?(B={left:F,top:j,right:void 0,bottom:void 0},o[33]=F,o[34]=j,o[35]=B):B=o[35],P=B;const D=P,O=w;let z,_,W,q,Z;return o[36]!==i?(z=i?ay:{},o[36]=i,o[37]=z):z=o[37],o[38]!==d||o[39]!==m?(_=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(fC,{direction:\"column\",flex:1,padding:m,children:d}),o[38]=d,o[39]=m,o[40]=_):_=o[40],o[41]!==p||o[42]!==_?(W=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(fC,{\"data-ui\":\"Popover__wrapper\",direction:\"column\",flex:1,overflow:p,children:_}),o[41]=p,o[42]=_,o[43]=W):W=o[43],o[44]!==a||o[45]!==s||o[46]!==D?(q=a&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ak,{ref:s,style:D,width:19,height:8,radius:2}),o[44]=a,o[45]=s,o[46]=D,o[47]=q):q=o[47],o[48]!==g||o[49]!==v||o[50]!==r||o[51]!==I||o[52]!==y||o[53]!==b||o[54]!==W||o[55]!==q||o[56]!==O||o[57]!==z||o[58]!==k?(Z=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(zk,{\"data-ui\":\"Popover\",...O,\"data-placement\":g,radius:v,ref:r,scheme:y,shadow:b,sizing:\"border\",style:I,tone:k,...z,children:[W,q]}),o[48]=g,o[49]=v,o[50]=r,o[51]=I,o[52]=y,o[53]=b,o[54]=W,o[55]=q,o[56]=O,o[57]=z,o[58]=k,o[59]=Z):Z=o[59],Z})));_k.displayName=\"Memo(ForwardRef(PopoverCard))\";const Wk=(0,react__WEBPACK_IMPORTED_MODULE_1__.memo)((0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(r,o){const{container:i,layer:a}=vb(),l=dk(),{__unstable_margins:c=Dk,animate:u=!1,arrow:f=!1,boundaryElement:p=l.element,children:g,constrainSize:v=!1,content:w,disabled:y,fallbackPlacements:b=r.fallbackPlacements??Ok[r.placement??\"bottom\"],matchReferenceWidth:C,floatingBoundary:L=r.boundaryElement??l.element,onActivate:M,open:S,overflow:R=\"hidden\",padding:V,placement:E=\"bottom\",portal:H,preventOverflow:T=!0,radius:$=3,referenceBoundary:A=r.boundaryElement??l.element,referenceElement:N,scheme:I,shadow:P=3,tone:F=\"inherit\",width:j=\"auto\",zOffset:B=a.popover.zOffset,updateRef:D,...O}=r,z=!kb()&&u,_=lb(p)?.border,W=vy(V),q=vy($),Z=vy(P),U=vy(j),G=vy(B),Y=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),X=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),K=\"viewport\";(0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(o,(()=>Y.current));const J=bb(),Q=v||T?_?.width:void 0,ee=function(e){const{container:t,mediaIndex:n,width:r}=e,o=r[n],i=void 0===o?r[r.length-1]:o;return\"number\"==typeof i?t[i]:void 0}({container:i,mediaIndex:J,width:U}),te=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(ee);(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{te.current=ee}),[ee]);const ne=function(e){const{boundaryWidth:t,currentWidth:n}=e;if(void 0!==n||void 0!==t)return Math.min(n??1/0,(t||1/0)-8)}({boundaryWidth:Q,currentWidth:ee}),re=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(ne);(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{re.current=ne}),[ne]);const oe=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(void 0);(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{const e=Y.current;if(!S||!e)return;const t=oe.current;C?void 0!==t&&(e.style.width=`${t}px`):void 0!==ee&&(e.style.width=`${ee}px`),\"number\"==typeof ne&&(e.style.maxWidth=`${ne}px`)}),[ee,C,ne,S]);const ie=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>{const e=[];return(v||T)&&e.push(Tu({boundary:L||void 0,fallbackPlacements:b,padding:4,rootBoundary:K})),e.push(Eu({mainAxis:4})),(v||C)&&e.push(function(e){const{apply:t,margins:n,padding:r=0}=e;return{name:\"@sanity/ui/size\",async fn(o){const{elements:i,placement:a,platform:s,rects:l}=o,{floating:c,reference:d}=l,u=await gu(o,{altBoundary:!0,boundary:e.boundaryElement||void 0,elementContext:\"floating\",padding:r,rootBoundary:\"viewport\"});let h=1/0,f=1/0;const p=c.width,m=c.height;a.includes(\"top\")&&(h=p-(u.left+u.right),f=m-u.top),a.includes(\"right\")&&(h=p-u.right,f=m-(u.top+u.bottom)),a.includes(\"bottom\")&&(h=p-(u.left+u.right),f=m-u.bottom),a.includes(\"left\")&&(h=p-u.left,f=m-(u.top+u.bottom)),t({availableWidth:h-n[1]-n[3],availableHeight:f-n[0]-n[2],elements:i,referenceWidth:d.width-n[1]-n[3]});const g=await s.getDimensions(i.floating),v=g.height;return p!==g.width||m!==v?{reset:{rects:!0}}:{}}}}({apply({availableWidth:e,availableHeight:t,elements:n,referenceWidth:r}){oe.current=r;const o=te.current,i=re.current;C?n.floating.style.width=`${r}px`:void 0!==o&&(n.floating.style.width=`${o}px`),v&&(n.floating.style.maxWidth=`${Math.min(e,i??1/0)}px`,n.floating.style.maxHeight=`${t}px`)},boundaryElement:L||void 0,constrainSize:v,margins:c,matchReferenceWidth:C,padding:4})),T&&e.push(Hu({boundary:L||void 0,rootBoundary:K,padding:4})),f&&e.push($u({element:X,padding:4})),z&&e.push(QC),e.push({...bu(t={boundary:A||void 0,padding:4,strategy:\"referenceHidden\"}),options:[t,void 0]}),e;var t}),[z,f,v,b,L,c,C,T,A]),{x:ae,y:se,middlewareData:le,placement:ce,refs:de,strategy:ue,update:he}=Ru({middleware:ie,placement:E,whileElementsMounted:mu,elements:N?{reference:N}:void 0}),fe=le.hide?.referenceHidden,pe=le.arrow?.x,me=le.arrow?.y,ge=le[\"@sanity/ui/origin\"]?.originX,ve=le[\"@sanity/ui/origin\"]?.originY,we=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{X.current=e}),[]),ye=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{Y.current=e,de.setFloating(e)}),[de]),be=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{de.setReference(e);const t=function(e){let t=Object.getOwnPropertyDescriptor(e.props,\"ref\")?.get,n=t&&\"isReactWarning\"in t&&t.isReactWarning;return n?e.ref:(t=Object.getOwnPropertyDescriptor(e,\"ref\")?.get,n=t&&\"isReactWarning\"in t&&t.isReactWarning,n?e.props.ref:e.props.ref||e.ref)}(g);\"function\"==typeof t?t(e):t&&(t.current=e)}),[g,de]),xe=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>N?g:g?(0,react__WEBPACK_IMPORTED_MODULE_1__.cloneElement)(g,{ref:be}):null),[g,N,be]);if((0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{D&&(\"function\"==typeof D?D(he):D&&(D.current=he))}),[he,D]),y)return g||/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{});const Ce=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Ck,{zOffset:G,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_k,{...O,__unstable_margins:c,animate:z,arrow:f,arrowRef:we,arrowX:pe,arrowY:me,hidden:fe,overflow:R,padding:W,placement:ce,radius:q,ref:ye,scheme:I,shadow:Z,originX:ge,originY:ve,strategy:ue,tone:F,width:C?oe.current:ee,x:ae,y:se,children:w})}),ke=S&&(H?/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)($k,{__unstable_name:\"string\"==typeof H?H:void 0,children:Ce}):Ce);/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[z?/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Zu,{children:ke}):ke,xe]})})));function qk(){return ao`\n    position: relative;\n\n    &:not([hidden]) {\n      display: inline-block;\n    }\n\n    &[data-read-only] {\n      outline: 1px solid red;\n    }\n  `}function Zk(e){const{color:t,input:n}=j(e.theme),r=(n.radio.size-n.radio.markSize)/2;return ao`\n    appearance: none;\n    position: absolute;\n    top: 0;\n    left: 0;\n    opacity: 0;\n    height: 100%;\n    width: 100%;\n    outline: none;\n    z-index: 1;\n    padding: 0;\n    margin: 0;\n    border-radius: ${sy(n.radio.size/2)};\n    border: none;\n\n    /* enabled */\n    & + span {\n      display: block;\n      position: relative;\n      height: ${sy(n.radio.size)};\n      width: ${sy(n.radio.size)};\n      border-radius: ${sy(n.radio.size/2)};\n      background: ${t.input.default.enabled.bg};\n      box-shadow: ${Xb({color:t.input.default.enabled.border,width:n.border.width})};\n\n      &::after {\n        content: '';\n        position: absolute;\n        top: ${sy(r)};\n        left: ${sy(r)};\n        height: ${sy(n.radio.markSize)};\n        width: ${sy(n.radio.markSize)};\n        border-radius: ${sy(n.radio.markSize/2)};\n        background: ${t.input.default.enabled.fg};\n        opacity: 0;\n      }\n    }\n\n    /* focused */\n    &:not(:disabled):focus + span {\n      box-shadow: ${Kb({border:{width:n.border.width,color:t.input.default.enabled.border},focusRing:n.radio.focusRing})};\n    }\n\n    &:not(:disabled):focus:not(:focus-visible) + span {\n      box-shadow: ${Xb({color:t.input.default.enabled.border,width:n.border.width})};\n    }\n\n    &:checked + span::after {\n      opacity: 1;\n    }\n\n    /* customValidity */\n    &[data-error] + span {\n      background-color: ${t.input.invalid.enabled.border};\n      box-shadow: ${Xb({width:n.border.width,color:t.input.invalid.enabled.muted.bg})};\n      &::after {\n        background: ${t.input.invalid.enabled.muted.bg};\n      }\n    }\n\n    /* read only */\n    &[data-read-only] + span {\n      box-shadow: 0 0 0 1px ${t.input.default.readOnly.border};\n      background: ${t.input.default.readOnly.bg};\n\n      &::after {\n        background: ${t.input.default.readOnly.border};\n      }\n    }\n\n    /* disabled */\n    &:not([data-read-only]):disabled + span {\n      box-shadow: 0 0 0 1px ${t.input.default.disabled.border};\n      background: ${t.input.default.disabled.bg};\n\n      &::after {\n        background: ${t.input.default.disabled.border};\n      }\n    }\n  `}Wk.displayName=\"Memo(ForwardRef(Popover))\";const Uk=/* @__PURE__ */co.div.withConfig({displayName:\"StyledRadio\",componentId:\"sc-ccrwkf-0\"})(qk),Gk=/* @__PURE__ */co.input.withConfig({displayName:\"Input\",componentId:\"sc-ccrwkf-1\"})(Zk);function Yk(e){const{font:t}=j(e.theme);return ao`\n    -webkit-font-smoothing: antialiased;\n    appearance: none;\n    border: 0;\n    font-family: ${t.text.family};\n    color: inherit;\n    width: 100%;\n    outline: none;\n    margin: 0;\n\n    &:disabled {\n      opacity: 1;\n    }\n  `}function Xk(e){const{color:t,input:n}=j(e.theme);return ao`\n    /* enabled */\n    background-color: ${t.input.default.enabled.bg};\n    color: ${t.input.default.enabled.fg};\n    box-shadow: ${Xb({color:t.input.default.enabled.border,width:n.border.width})};\n\n    /* hovered */\n    @media (hover: hover) {\n      &:not(:disabled):hover {\n        background-color: ${t.input.default.hovered.bg};\n        color: ${t.input.default.hovered.fg};\n        box-shadow: ${Xb({color:t.input.default.hovered.border,width:n.border.width})};\n      }\n    }\n\n    /* focused */\n    &:not(:disabled):focus {\n      box-shadow: ${Kb({border:{width:n.border.width,color:t.input.default.enabled.border},focusRing:n.select.focusRing})};\n    }\n\n    /* read-only */\n    &[data-read-only] {\n      background-color: ${t.input.default.readOnly.bg};\n      color: ${t.input.default.readOnly.fg};\n      box-shadow: ${Xb({color:t.input.default.readOnly.border,width:n.border.width})};\n    }\n\n    /* disabled */\n    &:not([data-read-only]):disabled {\n      background-color: ${t.input.default.disabled.bg};\n      color: ${t.input.default.disabled.fg};\n      box-shadow: ${Xb({color:t.input.default.disabled.border,width:n.border.width})};\n    }\n  `}function Kk(e){const{$fontSize:t}=e,{font:n,media:r}=j(e.theme);return ly(r,t,(e=>{return{fontSize:sy((t=n.text.sizes[e]||n.text.sizes[2]).fontSize),lineHeight:sy(t.lineHeight)};var t}))}(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){const o=St.c(19);let i,a,s,l,c,d;o[0]!==n?(({className:i,disabled:s,style:d,customValidity:a,readOnly:l,...c}=n),o[0]=n,o[1]=i,o[2]=a,o[3]=s,o[4]=l,o[5]=c,o[6]=d):(i=o[1],a=o[2],s=o[3],l=o[4],c=o[5],d=o[6]);const u=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);let f;o[7]===Symbol.for(\"react.memo_cache_sentinel\")?(f=()=>u.current,o[7]=f):f=o[7],(0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(r,f),by(u,a);const p=!s&&l?\"\":void 0,m=a?\"\":void 0,g=s||l;let v,w,y;return o[8]!==l||o[9]!==c||o[10]!==p||o[11]!==m||o[12]!==g?(v=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Gk,{\"data-read-only\":p,\"data-error\":m,...c,disabled:g,readOnly:l,ref:u,type:\"radio\"}),o[8]=l,o[9]=c,o[10]=p,o[11]=m,o[12]=g,o[13]=v):v=o[13],o[14]===Symbol.for(\"react.memo_cache_sentinel\")?(w=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\",{}),o[14]=w):w=o[14],o[15]!==i||o[16]!==d||o[17]!==v?(y=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Uk,{className:i,\"data-ui\":\"Radio\",style:d,children:[v,w]}),o[15]=i,o[16]=d,o[17]=v,o[18]=y):y=o[18],y})).displayName=\"ForwardRef(Radio)\";const Jk=function(){return ao`\n    position: relative;\n    width: -moz-available;\n    width: -webkit-fill-available;\n    width: stretch;\n\n    &:not([hidden]) {\n      display: inline-block;\n    }\n  `},Qk=function(){return[Vx,Yk,Xk,Kk,bx]},eL=function(e){const{color:t}=j(e.theme);return ao`\n    pointer-events: none;\n    position: absolute;\n    top: 0;\n    right: 0;\n\n    /* enabled */\n    --card-fg-color: ${t.input.default.enabled.fg};\n\n    /* hover */\n    @media (hover: hover) {\n      select:not(disabled):not(:read-only):hover + && {\n        --card-fg-color: ${t.input.default.hovered.fg};\n      }\n    }\n\n    /* disabled */\n    select:disabled + && {\n      --card-fg-color: ${t.input.default.disabled.fg};\n    }\n\n    /* read-only */\n    select[data-read-only] + && {\n      --card-fg-color: ${t.input.default.readOnly.fg};\n    }\n  `},tL=/* @__PURE__ */co.div.withConfig({displayName:\"StyledSelect\",componentId:\"sc-5mxno7-0\"})(Jk),nL=/* @__PURE__ */co.select.withConfig({displayName:\"Input\",componentId:\"sc-5mxno7-1\"})(Qk),rL=/* @__PURE__ */co(aC).withConfig({displayName:\"IconBox\",componentId:\"sc-5mxno7-2\"})(eL);(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){const o=St.c(29);let i,a,s,l,c,d,u,f,p;o[0]!==n?(({children:i,customValidity:a,disabled:s,fontSize:d,padding:u,radius:f,readOnly:l,space:p,...c}=n),o[0]=n,o[1]=i,o[2]=a,o[3]=s,o[4]=l,o[5]=c,o[6]=d,o[7]=u,o[8]=f,o[9]=p):(i=o[1],a=o[2],s=o[3],l=o[4],c=o[5],d=o[6],u=o[7],f=o[8],p=o[9]);const m=void 0===d?2:d,g=void 0===u?3:u,v=void 0===f?2:f,w=void 0===p?3:p,y=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);let b;o[10]===Symbol.for(\"react.memo_cache_sentinel\")?(b=()=>y.current,o[10]=b):b=o[10],(0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(r,b),by(y,a);const C=!s&&l?\"\":void 0,k=vy(m),L=vy(g),M=vy(v),S=vy(w),R=s||l;let V,E,H,T,$;return o[11]!==i||o[12]!==c||o[13]!==R||o[14]!==C||o[15]!==k||o[16]!==L||o[17]!==M||o[18]!==S?(V=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(nL,{\"data-read-only\":C,\"data-ui\":\"Select\",...c,$fontSize:k,$padding:L,$radius:M,$space:S,disabled:R,ref:y,children:i}),o[11]=i,o[12]=c,o[13]=R,o[14]=C,o[15]=k,o[16]=L,o[17]=M,o[18]=S,o[19]=V):V=o[19],o[20]===Symbol.for(\"react.memo_cache_sentinel\")?(E=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Uo,{}),o[20]=E):E=o[20],o[21]!==m?(H=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(cC,{size:m,children:E}),o[21]=m,o[22]=H):H=o[22],o[23]!==g||o[24]!==H?(T=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(rL,{padding:g,children:H}),o[23]=g,o[24]=H,o[25]=T):T=o[25],o[26]!==V||o[27]!==T?($=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tL,{\"data-ui\":\"Select\",children:[V,T]}),o[26]=V,o[27]=T,o[28]=$):$=o[28],$})).displayName=\"ForwardRef(Select)\";const oL={\"&&:not([hidden])\":{display:\"grid\"},'&[data-as=\"ul\"],&[data-as=\"ol\"]':{listStyle:\"none\"},gridTemplateColumns:\"minmax(0, 1fr)\",gridAutoRows:\"min-content\"};function iL(){return oL}function aL(e){const{media:t,space:n}=j(e.theme);return ly(t,e.$space,(e=>({gridGap:sy(n[e])})))}const sL=/* @__PURE__ */co(aC).withConfig({displayName:\"StyledStack\",componentId:\"sc-8dpfq2-0\"})(iL,aL),lL=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const r=St.c(10);let o,i,a;r[0]!==t?(({as:o,space:a,...i}=t),r[0]=t,r[1]=o,r[2]=i,r[3]=a):(o=r[1],i=r[2],a=r[3]);const s=\"string\"==typeof o?o:void 0,l=vy(a);let c;return r[4]!==o||r[5]!==n||r[6]!==i||r[7]!==s||r[8]!==l?(c=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(sL,{\"data-as\":s,\"data-ui\":\"Stack\",...i,$space:l,forwardedAs:o,ref:n}),r[4]=o,r[5]=n,r[6]=i,r[7]=s,r[8]=l,r[9]=c):c=r[9],c}));function cL(){return ao`\n    position: relative;\n    &:not([hidden]) {\n      display: inline-block;\n    }\n  `}function dL(){return ao`\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    opacity: 0;\n    height: 100%;\n    width: 100%;\n    outline: none;\n    padding: 0;\n    margin: 0;\n\n    /* Place the input element above the representation element */\n    z-index: 1;\n  `}function uL(e){const{color:t,input:n}=j(e.theme);return ao`\n    --switch-bg-color: ${t.input.default.enabled.border};\n    --switch-fg-color: ${t.input.default.enabled.bg};\n    --switch-box-shadow: none;\n\n    &:not([hidden]) {\n      display: block;\n    }\n    position: relative;\n    width: ${sy(n.switch.width)};\n    height: ${sy(n.switch.height)};\n    border-radius: ${sy(n.switch.height/2)};\n\n    /* Make sure it’s not possible to interact with the wrapper element */\n    pointer-events: none;\n\n    &:after {\n      content: '';\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      z-index: 1;\n      box-shadow: var(--switch-box-shadow);\n      border-radius: inherit;\n    }\n\n    /* Focus styles */\n    input:focus + && {\n      --switch-box-shadow: ${Kb({focusRing:n.switch.focusRing})};\n    }\n\n    input:focus:not(:focus-visible) + && {\n      --switch-box-shadow: none;\n    }\n\n    input:checked + && {\n      --switch-bg-color: ${t.input.default.enabled.fg};\n      --switch-fg-color: ${t.input.default.enabled.bg};\n    }\n\n    @media (hover: hover) {\n      input:not(:disabled):hover + && {\n        --switch-bg-color: ${t.input.default.hovered.border};\n        --switch-fg-color: ${t.input.default.hovered.bg};\n      }\n\n      input:not(:disabled):checked:hover + && {\n        --switch-bg-color: ${t.input.default.enabled.fg};\n        --switch-fg-color: ${t.input.default.enabled.bg};\n      }\n    }\n\n    input:not([data-read-only]):disabled + && {\n      --switch-bg-color: ${t.input.default.disabled.border};\n      --switch-fg-color: ${t.input.default.disabled.bg};\n    }\n\n    input[data-read-only]:disabled + && {\n      --switch-bg-color: ${t.input.default.readOnly.border};\n      --switch-fg-color: ${t.input.default.readOnly.bg};\n    }\n\n    input:checked[data-read-only]:disabled + && {\n      --switch-bg-color: ${t.input.default.readOnly.fg};\n      --switch-fg-color: ${t.input.default.readOnly.bg};\n    }\n  `}function hL(e){const{input:t}=j(e.theme);return ao`\n    &:not([hidden]) {\n      display: block;\n    }\n    background-color: var(--switch-bg-color);\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: ${sy(t.switch.width)};\n    height: ${sy(t.switch.height)};\n    border-radius: ${sy(t.switch.height/2)};\n  `}function fL(e){const{$indeterminate:t}=e,{input:n}=j(e.theme),r=n.switch.width,o=n.switch.height,i=n.switch.padding,a=o-2*n.switch.padding,s=r-2*i-a,l=r/2-a/2-i,c=!0!==t&&!0===e.$checked;return ao`\n    &:not([hidden]) {\n      display: block;\n    }\n    position: absolute;\n    left: ${sy(i)};\n    top: ${sy(i)};\n    height: ${sy(a)};\n    width: ${sy(a)};\n    border-radius: ${sy(a/2)};\n    transition-property: transform;\n    transition-duration: ${n.switch.transitionDurationMs}ms;\n    transition-timing-function: ${n.switch.transitionTimingFunction};\n    background: var(--switch-fg-color);\n    transform: translate3d(0, 0, 0);\n    box-shadow: 0px 1px 0px 0px rgba(0, 0, 0, 0.05);\n\n    ${c&&ao`\n      transform: translate3d(${s}px, 0, 0);\n    `}\n\n    ${t&&ao`\n      transform: translate3d(${l}px, 0, 0);\n    `}\n  `}lL.displayName=\"ForwardRef(Stack)\";const pL=/* @__PURE__ */co.span.withConfig({displayName:\"StyledSwitch\",componentId:\"sc-dw1foe-0\"})(cL),mL=/* @__PURE__ */co.input.withConfig({displayName:\"Input\",componentId:\"sc-dw1foe-1\"})(dL),gL=/* @__PURE__ */co.span.withConfig({displayName:\"Representation\",componentId:\"sc-dw1foe-2\"})(uL),vL=/* @__PURE__ */co.span.withConfig({displayName:\"Track\",componentId:\"sc-dw1foe-3\"})(hL),wL=/* @__PURE__ */co.span.withConfig({displayName:\"Thumb\",componentId:\"sc-dw1foe-4\"})(fL);(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){const o=St.c(26);let i,a,s,l,c,u,f;o[0]!==n?(({checked:i,className:a,disabled:s,indeterminate:l,readOnly:c,style:f,...u}=n),o[0]=n,o[1]=i,o[2]=a,o[3]=s,o[4]=l,o[5]=c,o[6]=u,o[7]=f):(i=o[1],a=o[2],s=o[3],l=o[4],c=o[5],u=o[6],f=o[7]);const p=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);let m,g,v;o[8]===Symbol.for(\"react.memo_cache_sentinel\")?(m=()=>p.current,o[8]=m):m=o[8],(0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(r,m),o[9]!==l?(g=()=>{p.current&&(p.current.indeterminate=l||!1)},v=[l],o[9]=l,o[10]=g,o[11]=v):(g=o[10],v=o[11]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(g,v);const w=!s&&c?\"\":void 0,y=!0!==l&&i,b=s||c;let C,k,L,M;return o[12]!==u||o[13]!==w||o[14]!==y||o[15]!==b?(C=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(mL,{\"data-read-only\":w,...u,checked:y,disabled:b,type:\"checkbox\",ref:p}),o[12]=u,o[13]=w,o[14]=y,o[15]=b,o[16]=C):C=o[16],o[17]===Symbol.for(\"react.memo_cache_sentinel\")?(k=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(vL,{}),o[17]=k):k=o[17],o[18]!==i||o[19]!==l?(L=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(gL,{\"aria-hidden\":!0,\"data-name\":\"representation\",children:[k,\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(wL,{$checked:i,$indeterminate:l})]}),o[18]=i,o[19]=l,o[20]=L):L=o[20],o[21]!==a||o[22]!==f||o[23]!==C||o[24]!==L?(M=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(pL,{className:a,\"data-ui\":\"Switch\",style:f,children:[C,L]}),o[21]=a,o[22]=f,o[23]=C,o[24]=L,o[25]=M):M=o[25],M})).displayName=\"ForwardRef(Switch)\";const yL=/* @__PURE__ */co.span.withConfig({displayName:\"StyledTextArea\",componentId:\"sc-1d6h1o8-0\"})(Cx),bL=co.span.withConfig({displayName:\"InputRoot\",componentId:\"sc-1d6h1o8-1\"})`flex:1;min-width:0;display:block;position:relative;`,xL=/* @__PURE__ */co.textarea.withConfig({displayName:\"Input\",componentId:\"sc-1d6h1o8-2\"})(yx,kx,Lx),CL=/* @__PURE__ */co.div.withConfig({displayName:\"Presentation\",componentId:\"sc-1d6h1o8-3\"})(Vx,Mx);(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){const o=St.c(29);let i,a,s,l,c,d,u,f,p;o[0]!==n?(({border:l,customValidity:a,disabled:c,fontSize:d,padding:u,radius:f,weight:p,__unstable_disableFocusRing:i,...s}=n),o[0]=n,o[1]=i,o[2]=a,o[3]=s,o[4]=l,o[5]=c,o[6]=d,o[7]=u,o[8]=f,o[9]=p):(i=o[1],a=o[2],s=o[3],l=o[4],c=o[5],d=o[6],u=o[7],f=o[8],p=o[9]);const m=void 0===l||l,g=void 0!==c&&c,v=void 0===d?2:d,w=void 0===u?3:u,y=void 0===f?2:f,b=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),C=mb();let k;o[10]===Symbol.for(\"react.memo_cache_sentinel\")?(k=()=>b.current,o[10]=k):k=o[10],(0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(r,k),by(b,a);const L=C.scheme,M=C.tone,S=vy(v),R=vy(w),V=C.scheme,E=vy(0);let H;o[11]!==g||o[12]!==s||o[13]!==C.scheme||o[14]!==C.tone||o[15]!==E||o[16]!==S||o[17]!==R||o[18]!==p?(H=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(xL,{\"data-as\":\"textarea\",\"data-scheme\":L,\"data-tone\":M,...s,$fontSize:S,$padding:R,$scheme:V,$space:E,$tone:C.tone,$weight:p,disabled:g,ref:b}),o[11]=g,o[12]=s,o[13]=C.scheme,o[14]=C.tone,o[15]=E,o[16]=S,o[17]=R,o[18]=p,o[19]=H):H=o[19];const T=vy(y),$=m?\"\":void 0;let A,N;return o[20]!==i||o[21]!==C.scheme||o[22]!==C.tone||o[23]!==T||o[24]!==$?(A=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(CL,{$radius:T,$unstableDisableFocusRing:i,$scheme:C.scheme,$tone:C.tone,\"data-border\":$,\"data-scheme\":C.scheme,\"data-tone\":C.tone}),o[20]=i,o[21]=C.scheme,o[22]=C.tone,o[23]=T,o[24]=$,o[25]=A):A=o[25],o[26]!==H||o[27]!==A?(N=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(yL,{\"data-ui\":\"TextArea\",children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(bL,{children:[H,A]})}),o[26]=H,o[27]=A,o[28]=N):N=o[28],N})).displayName=\"ForwardRef(TextArea)\";const kL={zIndex:2},LL=/* @__PURE__ */co(VC).attrs({forwardedAs:\"span\"}).withConfig({displayName:\"StyledTextInput\",componentId:\"sc-h62wco-0\"})(Cx),ML=co.span.withConfig({displayName:\"InputRoot\",componentId:\"sc-h62wco-1\"})`flex:1;min-width:0;display:block;position:relative;`,SL=co(VC).attrs({forwardedAs:\"span\"}).withConfig({displayName:\"Prefix\",componentId:\"sc-h62wco-2\"})`border-top-right-radius:0;border-bottom-right-radius:0;& > span{display:block;margin:-1px;}`,RL=co(VC).attrs({forwardedAs:\"span\"}).withConfig({displayName:\"Suffix\",componentId:\"sc-h62wco-3\"})`border-top-left-radius:0;border-bottom-left-radius:0;& > span{display:block;margin:-1px;}`,VL=/* @__PURE__ */co.input.withConfig({displayName:\"Input\",componentId:\"sc-h62wco-4\"})(yx,kx,Lx),EL=/* @__PURE__ */co.span.withConfig({displayName:\"Presentation\",componentId:\"sc-h62wco-5\"})(Vx,Mx),HL=co(aC).withConfig({displayName:\"LeftBox\",componentId:\"sc-h62wco-6\"})`position:absolute;top:0;left:0;`,TL=co(aC).withConfig({displayName:\"RightBox\",componentId:\"sc-h62wco-7\"})`position:absolute;top:0;right:0;`,$L=co(VC).withConfig({displayName:\"RightCard\",componentId:\"sc-h62wco-8\"})`background-color:transparent;position:absolute;top:0;right:0;`,AL=/* @__PURE__ */co(kC).withConfig({displayName:\"TextInputClearButton\",componentId:\"sc-h62wco-9\"})({\"&:not([hidden])\":{display:\"block\"}}),NL=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){const o=St.c(84);let i,a,s,l,c,d,u,f,p,m,g,w,y,b,C,k,L,M;o[0]!==n?(({__unstable_disableFocusRing:s,border:g,clearButton:l,disabled:w,fontSize:y,icon:i,iconRight:a,onClear:d,padding:b,prefix:u,radius:C,readOnly:f,space:k,suffix:m,customValidity:c,type:L,weight:M,...p}=n),o[0]=n,o[1]=i,o[2]=a,o[3]=s,o[4]=l,o[5]=c,o[6]=d,o[7]=u,o[8]=f,o[9]=p,o[10]=m,o[11]=g,o[12]=w,o[13]=y,o[14]=b,o[15]=C,o[16]=k,o[17]=L,o[18]=M):(i=o[1],a=o[2],s=o[3],l=o[4],c=o[5],d=o[6],u=o[7],f=o[8],p=o[9],m=o[10],g=o[11],w=o[12],y=o[13],b=o[14],C=o[15],k=o[16],L=o[17],M=o[18]);const S=void 0===g||g,R=void 0!==w&&w,V=void 0===y?2:y,E=void 0===b?3:b,H=void 0===C?2:C,T=void 0===k?3:k,$=void 0===L?\"text\":L,A=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),N=mb(),I=vy(V),P=vy(E),F=vy(H),j=vy(T),B=!!l,D=!!i,O=!!a,z=!!m,_=!!u;let W;o[19]===Symbol.for(\"react.memo_cache_sentinel\")?(W=()=>A.current,o[19]=W):W=o[19],(0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(r,W),by(A,c);const q=IL;let Z;o[20]!==d?(Z=e=>{e.preventDefault(),e.stopPropagation(),d&&d(),A.current?.focus()},o[20]=d,o[21]=Z):Z=o[21];const U=Z;let G,Y;o[22]!==u||o[23]!==F?(Y=u&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SL,{borderTop:!0,borderLeft:!0,borderBottom:!0,radius:F,sizing:\"border\",tone:\"inherit\",children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\",{children:u})}),o[22]=u,o[23]=F,o[24]=Y):Y=o[24],G=Y;const X=G;let K;const J=S?\"\":void 0;let Q,ee,te;o[25]!==i||o[26]!==I||o[27]!==P?(Q=i&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(HL,{padding:P,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(cC,{size:I,children:[(0,react__WEBPACK_IMPORTED_MODULE_1__.isValidElement)(i)&&i,Ht.isValidElementType(i)&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(i,{})]})}),o[25]=i,o[26]=I,o[27]=P,o[28]=Q):Q=o[28],o[29]!==B||o[30]!==a||o[31]!==I||o[32]!==P?(ee=!B&&a&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(TL,{padding:P,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(cC,{size:I,children:[(0,react__WEBPACK_IMPORTED_MODULE_1__.isValidElement)(a)&&a,Ht.isValidElementType(a)&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(a,{})]})}),o[29]=B,o[30]=a,o[31]=I,o[32]=P,o[33]=ee):ee=o[33],o[34]!==_||o[35]!==z||o[36]!==s||o[37]!==F||o[38]!==N.scheme||o[39]!==N.tone||o[40]!==J||o[41]!==Q||o[42]!==ee?(te=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(EL,{$hasPrefix:_,$unstableDisableFocusRing:s,$hasSuffix:z,$radius:F,$scheme:N.scheme,$tone:N.tone,\"data-border\":J,\"data-scheme\":N.scheme,\"data-tone\":N.tone,children:[Q,ee]}),o[34]=_,o[35]=z,o[36]=s,o[37]=F,o[38]=N.scheme,o[39]=N.tone,o[40]=J,o[41]=Q,o[42]=ee,o[43]=te):te=o[43],K=te;const ne=K;let re,oe;o[44]!==P?(oe=P.map(PL),o[44]=P,o[45]=oe):oe=o[45],re=oe;const ie=re;let ae,se;o[46]!==P?(se=P.map(FL),o[46]=P,o[47]=se):se=o[47],ae=se;const le=ae;let ce;ce=\"object\"==typeof l?l:oy;const de=ce;let ue,he;o[48]!==l||o[49]!==ie||o[50]!==le||o[51]!==de||o[52]!==c||o[53]!==R||o[54]!==I||o[55]!==U||o[56]!==F||o[57]!==f?(he=!R&&!f&&l&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)($L,{forwardedAs:\"span\",padding:ie,style:kL,tone:c?\"critical\":\"inherit\",children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(AL,{\"aria-label\":\"Clear\",\"data-qa\":\"clear-button\",fontSize:I,icon:ni,mode:\"bleed\",padding:le,radius:F,...de,onClick:U,onMouseDown:q})}),o[48]=l,o[49]=ie,o[50]=le,o[51]=de,o[52]=c,o[53]=R,o[54]=I,o[55]=U,o[56]=F,o[57]=f,o[58]=he):he=o[58],ue=he;const fe=ue;let pe,me;o[59]!==F||o[60]!==m?(me=m&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(RL,{borderTop:!0,borderRight:!0,borderBottom:!0,radius:F,sizing:\"border\",tone:\"inherit\",children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\",{children:m})}),o[59]=F,o[60]=m,o[61]=me):me=o[61],pe=me;const ge=pe,ve=O||B;let we,ye,be;return o[62]!==D||o[63]!==R||o[64]!==I||o[65]!==P||o[66]!==f||o[67]!==p||o[68]!==N.scheme||o[69]!==N.tone||o[70]!==j||o[71]!==ve||o[72]!==$||o[73]!==M?(we=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(VL,{\"data-as\":\"input\",\"data-scheme\":N.scheme,\"data-tone\":N.tone,...p,$fontSize:I,$iconLeft:D,$iconRight:ve,$padding:P,$scheme:N.scheme,$space:j,$tone:N.tone,$weight:M,disabled:R,readOnly:f,ref:A,type:$}),o[62]=D,o[63]=R,o[64]=I,o[65]=P,o[66]=f,o[67]=p,o[68]=N.scheme,o[69]=N.tone,o[70]=j,o[71]=ve,o[72]=$,o[73]=M,o[74]=we):we=o[74],o[75]!==fe||o[76]!==ne||o[77]!==we?(ye=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(ML,{children:[we,ne,fe]}),o[75]=fe,o[76]=ne,o[77]=we,o[78]=ye):ye=o[78],o[79]!==X||o[80]!==N.tone||o[81]!==ge||o[82]!==ye?(be=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(LL,{\"data-ui\":\"TextInput\",tone:N.tone,children:[X,ye,ge]}),o[79]=X,o[80]=N.tone,o[81]=ge,o[82]=ye,o[83]=be):be=o[83],be}));function IL(e){e.preventDefault(),e.stopPropagation()}function PL(e){return 0===e?0:1===e||2===e?1:e-2}function FL(e){return 0===e||1===e?0:2===e?1:e-1}NL.displayName=\"ForwardRef(TextInput)\";const jL={top:[\"top-end\",\"top-start\",\"bottom\",\"left\",\"right\"],\"top-start\":[\"top\",\"top-end\",\"bottom-start\",\"left-start\",\"right-start\"],\"top-end\":[\"top\",\"top-start\",\"bottom-end\",\"left-end\",\"right-end\"],bottom:[\"bottom-end\",\"bottom-start\",\"top\",\"left\",\"right\"],\"bottom-start\":[\"bottom\",\"bottom-end\",\"top-start\",\"left-start\",\"right-start\"],\"bottom-end\":[\"bottom\",\"bottom-start\",\"top-end\",\"left-end\",\"right-end\"],left:[\"left-end\",\"left-start\",\"right\",\"top\",\"bottom\"],\"left-start\":[\"left\",\"left-end\",\"right-start\",\"top-start\",\"bottom-start\"],\"left-end\":[\"left\",\"left-start\",\"right-end\",\"top-end\",\"bottom-end\"],right:[\"right-end\",\"right-start\",\"left\",\"top\",\"bottom\"],\"right-start\":[\"right\",\"right-end\",\"left-start\",\"top-start\",\"bottom-start\"],\"right-end\":[\"right\",\"right-start\",\"left-end\",\"top-end\",\"bottom-end\"]},BL=co(ty.create(VC)).withConfig({displayName:\"MotionCard\",componentId:\"sc-1xn138w-0\"})`& > *{opacity:var(${iy},1);will-change:opacity;}`,DL=(0,react__WEBPACK_IMPORTED_MODULE_1__.memo)((0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){const o=St.c(42);let i,a,s,l,c,d,u,h,f,p,m,g,v,w,y,b;o[0]!==n?(({animate:i,arrow:a,arrowRef:s,arrowX:l,arrowY:c,children:d,originX:u,originY:h,padding:f,placement:p,radius:m,scheme:v,shadow:w,style:y,...g}=n),o[0]=n,o[1]=i,o[2]=a,o[3]=s,o[4]=l,o[5]=c,o[6]=d,o[7]=u,o[8]=h,o[9]=f,o[10]=p,o[11]=m,o[12]=g,o[13]=v,o[14]=w,o[15]=y):(i=o[1],a=o[2],s=o[3],l=o[4],c=o[5],d=o[6],u=o[7],h=o[8],f=o[9],p=o[10],m=o[11],g=o[12],v=o[13],w=o[14],y=o[15]);const x=i?\"transform\":void 0;let C;o[16]!==u||o[17]!==h||o[18]!==y||o[19]!==x?(C={originX:u,originY:h,willChange:x,...y},o[16]=u,o[17]=h,o[18]=y,o[19]=x,o[20]=C):C=o[20],b=C;const k=b;let L;const M=null!==l?l:void 0,S=null!==c?c:void 0;let R;o[21]!==M||o[22]!==S?(R={left:M,top:S,right:void 0,bottom:void 0},o[21]=M,o[22]=S,o[23]=R):R=o[23],L=R;const V=L,E=g;let H,T,$;return o[24]!==i?(H=i?ay:{},o[24]=i,o[25]=H):H=o[25],o[26]!==a||o[27]!==s||o[28]!==V?(T=a&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ak,{ref:s,style:V,width:15,height:6,radius:2}),o[26]=a,o[27]=s,o[28]=V,o[29]=T):T=o[29],o[30]!==d||o[31]!==f||o[32]!==p||o[33]!==m||o[34]!==r||o[35]!==k||o[36]!==v||o[37]!==w||o[38]!==E||o[39]!==H||o[40]!==T?($=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(BL,{\"data-ui\":\"Tooltip__card\",...E,\"data-placement\":p,padding:f,radius:m,ref:r,scheme:v,shadow:w,style:k,...H,children:[d,T]}),o[30]=d,o[31]=f,o[32]=p,o[33]=m,o[34]=r,o[35]=k,o[36]=v,o[37]=w,o[38]=E,o[39]=H,o[40]=T,o[41]=$):$=o[41],$})));DL.displayName=\"Memo(ForwardRef(TooltipCard))\";const OL=hb(\"@sanity/ui/context/tooltipDelayGroup\",null),zL=co(Rk).withConfig({displayName:\"StyledTooltip\",componentId:\"sc-13f2zvh-0\"})`pointer-events:none;`,_L=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(r,o){const a=dk(),{layer:l}=vb(),{animate:u=!1,arrow:p=!1,boundaryElement:g=a?.element,children:v,content:y,disabled:b,fallbackPlacements:C=r.fallbackPlacements??jL[r.placement??\"bottom\"],padding:L=2,placement:M=\"bottom\",portal:S,radius:R=2,scheme:V,shadow:H=2,zOffset:T=l.tooltip.zOffset,delay:$,...A}=r,N=!kb()&&u,I=vy(C),P=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),[F,j]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null),B=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),D=\"viewport\",[O,z]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);(0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(o,(()=>P.current));const _=Tk(),W=\"string\"==typeof S?_.elements?.[S]||null:_.element,q=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>{const e=[];return e.push(Tu({boundary:g||void 0,fallbackPlacements:I,padding:4,rootBoundary:D})),e.push(Eu({mainAxis:4})),e.push(Hu({boundary:g||void 0,rootBoundary:D,padding:4})),p&&e.push($u({element:B,padding:4})),N&&e.push(QC),e}),[N,p,g,I]),{floatingStyles:Z,placement:U,middlewareData:G,refs:Y,update:X}=Ru({middleware:q,placement:M,whileElementsMounted:mu,elements:{reference:F}}),K=G.arrow?.x,J=G.arrow?.y,Q=G[\"@sanity/ui/origin\"]?.originX,ee=G[\"@sanity/ui/origin\"]?.originY,te=(0,react__WEBPACK_IMPORTED_MODULE_1__.useId)(),[ne,re]=function(){const e=St.c(3),[t,n]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1),r=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(void 0);let o;e[0]===Symbol.for(\"react.memo_cache_sentinel\")?(o=(e,t)=>{const o=()=>{n(e)};if(r.current&&(clearTimeout(r.current),r.current=void 0),!t)return o();r.current=setTimeout(o,t)},e[0]=o):o=e[0];const i=o;let a;return e[1]!==t?(a=[t,i],e[1]=t,e[2]=a):a=e[2],a}(),oe=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(OL),ie=ne||oe?.openTooltipId===te,ae=null!==oe,se=\"number\"==typeof $?$:$?.open||0,le=\"number\"==typeof $?$:$?.close||0,ce=ae?oe.openDelay:se,de=ae?oe.closeDelay:le,ue=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(((e,t)=>{if(ae)if(e){const n=t?0:ce;oe.setIsGroupActive(e,n),oe.setOpenTooltipId(te,n)}else{const n=de>200?de:200;oe.setIsGroupActive(e,n),oe.setOpenTooltipId(null,t?0:de)}else re(e,t?0:e?ce:de)}),[ae,oe,ce,te,de,re]),he=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{ue(!1),v?.props?.onBlur?.(e)}),[v?.props,ue]),fe=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{ue(!1,!0),v?.props.onClick?.(e)}),[v?.props,ue]),pe=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{ue(!1,!0),v?.props.onContextMenu?.(e)}),[v?.props,ue]),me=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{ue(!0),v?.props?.onFocus?.(e)}),[v?.props,ue]),ge=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{ue(!0),v?.props?.onMouseEnter?.(e)}),[v?.props,ue]),ve=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{ue(!1),v?.props?.onMouseLeave?.(e)}),[v?.props,ue]);(function(e){const t=St.c(7),{handleIsOpenChange:n,referenceElement:r,showTooltip:o}=e;let i;t[0]!==n||t[1]!==r?(i=(e,t)=>{r&&(r===e||e instanceof Node&&r.contains(e)||(n(!1),t()))},t[0]=n,t[1]=r,t[2]=i):i=t[2];const a=(0,use_effect_event__WEBPACK_IMPORTED_MODULE_3__.useEffectEvent)(i);let s,l;t[3]!==a||t[4]!==o?(s=()=>{if(!o)return;const e=t=>{a(t.target,(()=>window.removeEventListener(\"mousemove\",e)))};return window.addEventListener(\"mousemove\",e),()=>window.removeEventListener(\"mousemove\",e)},l=[a,o],t[3]=a,t[4]=o,t[5]=s,t[6]=l):(s=t[5],l=t[6]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(s,l)})({handleIsOpenChange:ue,referenceElement:F,showTooltip:ie}),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{b&&ie&&ue(!1)}),[b,ue,ie]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{!y&&ie&&ue(!1)}),[y,ue,ie]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{if(ie)return window.addEventListener(\"keydown\",e),()=>{window.removeEventListener(\"keydown\",e)};function e(e){\"Escape\"===e.key&&ue(!1,!0)}}),[ue,ie]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)((()=>{const e=[...g?[g.offsetWidth]:[],W?.offsetWidth||document.body.offsetWidth];z(Math.min(...e)-8)}),[g,W]);const we=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{B.current=e,X()}),[X]),ye=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{P.current=e,Y.setFloating(e)}),[Y]),be=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);(0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(v?.ref,(()=>be.current));const xe=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>v?(0,react__WEBPACK_IMPORTED_MODULE_1__.cloneElement)(v,{onBlur:he,onFocus:me,onMouseEnter:ge,onMouseLeave:ve,onClick:fe,onContextMenu:pe,ref:be}):null),[v,he,fe,pe,me,ge,ve]);if((0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{if(xe)return j(be.current),()=>j(null)}),[xe]),!xe/* @__PURE__ */)return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{});if(b)return xe;const Ce=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(zL,{\"data-ui\":\"Tooltip\",...A,ref:ye,style:{...Z,maxWidth:O>0?`${O}px`:void 0},zOffset:T,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(DL,{...A,animate:N,arrow:p,arrowRef:we,arrowX:K,arrowY:J,originX:Q,originY:ee,padding:L,placement:U,radius:R,ref:ye,scheme:V,shadow:H,children:y})}),ke=ie&&(S?/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)($k,{__unstable_name:\"string\"==typeof S?S:void 0,children:Ce}):Ce);/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[N?/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Zu,{children:ke}):ke,xe]})}));_L.displayName=\"ForwardRef(Tooltip)\";const WL=co.div.withConfig({displayName:\"StyledAutocomplete\",componentId:\"sc-1igauft-0\"})`line-height:0;`,qL=co(aC).withConfig({displayName:\"ListBox\",componentId:\"sc-1igauft-1\"})`& > ul{list-style:none;padding:0;margin:0;}`,ZL=uo`\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n`,UL=co(bs).withConfig({displayName:\"AnimatedSpinnerIcon\",componentId:\"sc-1igauft-2\"})`animation:${ZL} 500ms linear infinite;`;function GL(t){const n=St.c(11),{children:r,id:o,onSelect:i,selected:a,value:s}=t;let l;n[0]!==i||n[1]!==s?(l=()=>{setTimeout((()=>{i(s)}),0)},n[0]=i,n[1]=s,n[2]=l):l=n[2];const c=l;let d;n[3]!==c?(d=e=>{var t;\"Enter\"===e.key&&!mk(t=e.currentTarget)&&!gk(t)&&c()},n[3]=c,n[4]=d):d=n[4];const u=d;let h;return n[5]!==r||n[6]!==c||n[7]!==u||n[8]!==o||n[9]!==a?(h=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"li\",{\"aria-selected\":a,\"data-ui\":\"AutocompleteOption\",id:o,role:\"option\",onClick:c,onKeyDown:u,children:r}),n[5]=r,n[6]=c,n[7]=u,n[8]=o,n[9]=a,n[10]=h):h=n[10],h}function YL(e,t){return\"input/change\"===t.type?{...e,activeValue:null,focused:!0,query:t.query}:\"input/focus\"===t.type?{...e,focused:!0}:\"root/blur\"===t.type?{...e,focused:!1,query:null}:\"root/clear\"===t.type?{...e,activeValue:null,query:null,value:null}:\"root/escape\"===t.type?{...e,focused:!1,query:null}:\"root/open\"===t.type?{...e,query:e.query||t.query}:\"root/setActiveValue\"===t.type?{...e,activeValue:t.value,listFocused:t.listFocused||e.listFocused}:\"root/setListFocused\"===t.type?{...e,listFocused:t.listFocused}:\"value/change\"===t.type?{...e,activeValue:t.value,query:null,value:t.value}:e}const XL=[\"Control\",\"Shift\",\"Alt\",\"Enter\",\"Home\",\"End\",\"PageUp\",\"PageDown\",\"Meta\",\"Tab\",\"CapsLock\"],KL=[\"bottom-start\",\"top-start\"],JL=(e,t)=>t?t.value:e,QL=(e,t)=>t.value.toLowerCase().indexOf(e.toLowerCase())>-1;(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){const{border:o=!0,customValidity:i,disabled:a,filterOption:l,fontSize:c=2,icon:u,id:f,listBox:p=oy,loading:g,onBlur:v,onChange:w,onFocus:y,onQueryChange:b,onSelect:C,openButton:M,openOnFocus:S,options:R,padding:V=3,popover:E=oy,prefix:H,radius:T=2,readOnly:$,relatedElements:A,renderOption:N,renderPopover:I,renderValue:P=JL,suffix:F,value:j,...B}=n,[D,O]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useReducer)(YL,{activeValue:j||null,focused:!1,listFocused:!1,query:null,value:j||null}),{activeValue:z,focused:_,listFocused:W,query:q,value:Z}=D,U=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((({value:t})=>/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(VC,{\"data-as\":\"button\",padding:V,radius:2,tone:\"inherit\",children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(cC,{size:c,textOverflow:\"ellipsis\",children:t})})),[c,V]),G=\"function\"==typeof N?N:U,Y=\"function\"==typeof l?l:QL,X=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),K=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),J=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),Q=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),ee=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(!1),te=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(Z),ne=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(j),re=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(!1);(0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(r,(()=>J.current));const oe=`${f}-listbox`,ie=Array.isArray(R)?R:ry,ae=vy(V),se=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>null!==Z?ie.find((e=>e.value===Z)):void 0),[ie,Z]),le=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>ie.filter((e=>!q||Y(q,e)))),[Y,ie,q]),ce=le.length,de=z?`${f}-option-${z}`:void 0,ue=null!==q&&g||_&&null!==q,he=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{setTimeout((()=>{if(re.current)return;const t=(A||[]).concat(X.current?[X.current]:[],K.current?[K.current]:[]);let n=!1;if(document.activeElement)for(const e of t)if(e===document.activeElement||e.contains(document.activeElement)){n=!0;break}!1===n&&(O({type:\"root/blur\"}),re.current=!1,b&&b(null),v&&v(e))}),0)}),[v,b,A]),fe=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{const t=Q.current,n=e.target instanceof HTMLElement?e.target:null,r=t?.contains(n)||!1;r!==ee.current&&(ee.current=r,O({type:\"root/setListFocused\",listFocused:r}))}),[]),pe=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{O({type:\"value/change\",value:e}),re.current=!1,C&&C(e),te.current=e,w&&w(e),b&&b(null),J.current?.focus()}),[w,C,b]),me=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{if(\"ArrowDown\"===e.key){if(e.preventDefault(),!ce)return;const t=le.find((e=>e.value===z)),n=t?le.indexOf(t):-1,r=le[(n+1)%ce];return void(r&&O({type:\"root/setActiveValue\",value:r.value,listFocused:!0}))}if(\"ArrowUp\"===e.key){if(e.preventDefault(),!ce)return;const t=le.find((e=>e.value===z)),n=t?le.indexOf(t):-1,r=le[-1===n?ce-1:(ce+n-1)%ce];return void(r&&O({type:\"root/setActiveValue\",value:r.value,listFocused:!0}))}if(\"Escape\"===e.key)return O({type:\"root/escape\"}),re.current=!1,b&&b(null),void J.current?.focus();const t=e.target,n=Q.current;n!==t&&!n?.contains(t)||XL.includes(e.key)||J.current?.focus()}),[z,le,ce,b]),ge=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{const t=e.currentTarget.value;O({type:\"input/change\",query:t}),b&&b(t)}),[b]),ve=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((()=>{O({type:\"root/open\",query:Z?P(Z,se):\"\"})}),[se,P,Z]),we=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{_||(O({type:\"input/focus\"}),y&&y(e),S&&ve())}),[_,y,S,ve]),ye=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((()=>{re.current=!0}),[]),be=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((()=>{re.current=!1}),[]),xe=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((()=>{O({type:\"root/clear\"}),te.current=\"\",w&&w(\"\"),b&&b(null),J.current?.focus()}),[w,b]),Ce=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((()=>{O({type:\"input/focus\"})}),[]);(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{if(j!==ne.current)return ne.current=j,void(void 0!==j&&(O({type:\"value/change\",value:j}),te.current=j));j!==te.current&&(te.current=j||null,O({type:\"value/change\",value:j||null}))}),[j]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{!_&&te.current&&O({type:\"root/setActiveValue\",value:te.current})}),[_]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{const e=Q.current;if(!e)return;const t=le.find((e=>e.value===z));if(t){const r=le.indexOf(t),o=e.childNodes[r];if(o){if(n=o,document.activeElement&&n.contains(document.activeElement))return;yk(o)}}var n}),[z,le]);const ke=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>{if(!g&&!a&&Z)return{\"aria-label\":\"Clear\",onFocus:Ce}}),[a,Ce,g,Z]),Le=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>ae.map((e=>0===e?0:1===e||2===e?1:e-2))),[ae]),Me=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>ae.map((e=>Math.max(e-1,0)))),[ae]),Se=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>\"object\"==typeof M?M:oy),[M]),Re=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{ve(),Se.onClick&&Se.onClick(e),requestAnimationFrame((()=>J.current?.focus()))}),[Se,ve]),Ve=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>a||$||!M?void 0:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(aC,{\"aria-hidden\":ue,padding:Le,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(kC,{\"aria-label\":\"Open\",disabled:ue,fontSize:c,icon:Uo,mode:\"bleed\",padding:Me,...Se,onClick:Re})})),[a,ue,c,Re,M,Le,Me,Se,$]),Ee=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>null===q?null!==Z?P(Z,se):\"\":q),[se,q,P,Z]),He=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NL,{...B,\"aria-activedescendant\":de,\"aria-autocomplete\":\"list\",\"aria-expanded\":ue,\"aria-owns\":oe,autoCapitalize:\"off\",autoComplete:\"off\",autoCorrect:\"off\",border:o,clearButton:ke,customValidity:i,disabled:a,fontSize:c,icon:u,iconRight:g&&UL,id:f,inputMode:\"search\",onChange:ge,onClear:xe,onFocus:we,padding:ae,prefix:H,radius:T,readOnly:$,ref:J,role:\"combobox\",spellCheck:!1,suffix:F||Ve,value:Ee}),Te=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{\"Tab\"===e.key&&W&&J.current?.focus()}),[W]),$e=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>0===le.length?null:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(qL,{\"data-ui\":\"AutoComplete__results\",onKeyDown:Te,padding:1,...p,tabIndex:-1,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(lL,{as:\"ul\",\"aria-multiselectable\":!1,\"data-ui\":\"AutoComplete__resultsList\",id:oe,ref:Q,role:\"listbox\",space:1,children:le.map((t=>{const n=null!==z?t.value===z:se===t;/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(GL,{id:`${f}-option-${t.value}`,onSelect:pe,selected:n,value:t.value,children:(0,react__WEBPACK_IMPORTED_MODULE_1__.cloneElement)(G(t),{disabled:g,selected:n,tabIndex:W&&n?0:-1})},t.value)}))})})),[z,se,le,pe,Te,f,p,oe,W,g,G]),Ae=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>I?I({content:$e,hidden:!ue,inputElement:J.current,onMouseEnter:ye,onMouseLeave:be},K):0===ce?null:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Wk,{arrow:!1,constrainSize:!0,content:$e,fallbackPlacements:KL,matchReferenceWidth:!0,onMouseEnter:ye,onMouseLeave:be,open:ue,overflow:\"auto\",placement:\"bottom-start\",portal:!0,radius:T,ref:K,referenceElement:J.current,...E})),[$e,ue,ce,ye,be,E,T,I]);/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(WL,{\"data-ui\":\"Autocomplete\",onBlur:he,onFocus:fe,onKeyDown:me,ref:X,children:[He,Ae]})})).displayName=\"ForwardRef(Autocomplete)\";const eM=co.ol.withConfig({displayName:\"StyledBreadcrumbs\",componentId:\"sc-1es8h8q-0\"})`margin:0;padding:0;display:flex;list-style:none;align-items:center;white-space:nowrap;line-height:0;`,tM=co(kC).withConfig({displayName:\"ExpandButton\",componentId:\"sc-1es8h8q-1\"})`appearance:none;margin:-4px;`;function nM({theme:e}){const{color:t}=j(e);return{\"&:not([hidden])\":{display:\"flex\"},top:0,left:0,right:0,bottom:0,alignItems:\"center\",justifyContent:\"center\",outline:\"none\",background:t.backdrop}}function rM(e){const{media:t}=j(e.theme);return ly(t,e.$position,(e=>({\"&&\":{position:e}})))}function oM(e){return e.$animate?ao`\n    @keyframes zoomIn {\n      from {\n        opacity: 0;\n        transform: scale(0.95);\n      }\n      to {\n        opacity: 1;\n        transform: scale(1);\n      }\n    }\n    @keyframes fadeIn {\n      from {\n        opacity: 0;\n      }\n      to {\n        opacity: 1;\n      }\n    }\n\n    animation: fadeIn 200ms ease-out;\n    // Animates the dialog card.\n    & > [data-ui='DialogCard'] {\n      animation: zoomIn 200ms ease-out;\n    }\n  `:ao``}(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){const{children:o,maxLength:i,separator:a,space:l=2,...c}=n,d=vy(l),[u,f]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1),p=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),b=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),x=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((()=>f(!1)),[]),C=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((()=>f(!0)),[]);wy(x,(()=>[p.current,b.current]));const k=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>react__WEBPACK_IMPORTED_MODULE_1__.Children.toArray(o).filter(react__WEBPACK_IMPORTED_MODULE_1__.isValidElement)),[o]),L=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>{const t=k.length;if(i&&t>i){const n=Math.ceil(i/2),r=Math.floor(i/2);return[...k.slice(0,n-1)/* @__PURE__ */,(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Wk,{constrainSize:!0,content:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(lL,{as:\"ol\",overflow:\"auto\",padding:d,space:d,children:k.slice(n-1,t-r)}),open:u,placement:\"top\",portal:!0,ref:b,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tM,{fontSize:1,mode:\"bleed\",onClick:u?x:C,padding:1,ref:p,selected:u,text:\"…\"})},\"button\"),...k.slice(t-r)]}return k}),[x,C,i,u,k,d]);/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(eM,{\"data-ui\":\"Breadcrumbs\",...c,ref:r,children:L.map(((n,r)=>/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[r>0&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(aC,{\"aria-hidden\":!0,as:\"li\",paddingX:d,children:a||/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(cC,{muted:!0,children:\"/\"})}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(aC,{as:\"li\",children:n})]},r)))})})).displayName=\"ForwardRef(Breadcrumbs)\";const iM=hb(\"@sanity/ui/context/dialog\",{version:0});function aM(e,t,n){return!e||!t||vk(e,n)||vk(t,n)}const sM=/* @__PURE__ */co(Rk).withConfig({displayName:\"StyledDialog\",componentId:\"sc-4n4xb3-0\"})(Rx,nM,rM,oM),lM=co(DC).withConfig({displayName:\"DialogContainer\",componentId:\"sc-4n4xb3-1\"})`&:not([hidden]){display:flex;}width:100%;height:100%;flex-direction:column;align-items:center;justify-content:center;`,cM=co(VC).withConfig({displayName:\"DialogCardRoot\",componentId:\"sc-4n4xb3-2\"})`&:not([hidden]){display:flex;}width:100%;min-height:0;max-height:100%;overflow:hidden;overflow:clip;`,dM=co(fC).withConfig({displayName:\"DialogLayout\",componentId:\"sc-4n4xb3-3\"})`flex:1;min-height:0;width:100%;`,uM=co(aC).withConfig({displayName:\"DialogHeader\",componentId:\"sc-4n4xb3-4\"})`position:relative;z-index:2;`,hM=co(aC).withConfig({displayName:\"DialogContent\",componentId:\"sc-4n4xb3-5\"})`position:relative;z-index:1;overflow:auto;outline:none;`,fM=co(aC).withConfig({displayName:\"DialogFooter\",componentId:\"sc-4n4xb3-6\"})`position:relative;z-index:3;`,pM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){const o=St.c(38),{__unstable_autoFocus:i,__unstable_hideCloseButton:a,children:s,contentRef:l,footer:c,header:u,id:f,onClickOutside:p,onClose:m,portal:g,radius:v,scheme:w,shadow:y,width:b}=n,C=Tk(),k=g?C.elements?.[g]||null:C.element,L=dk().element,M=vy(v),S=vy(y),R=vy(b),V=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),E=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),H=fk(),{isTopLayer:T}=H,$=`${f}_label`,A=!!m&&!1===a,N=!!u||A;let I,P,F,j,B,D,O,z,_,W,q,Z,U;return o[0]===Symbol.for(\"react.memo_cache_sentinel\")?(I=()=>V.current,o[0]=I):I=o[0],(0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(r,I),o[1]===Symbol.for(\"react.memo_cache_sentinel\")?(P=()=>E.current,o[1]=P):P=o[1],(0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(l,P),o[2]!==i?(F=()=>{i&&V.current&&yk(V.current)},j=[i,V],o[2]=i,o[3]=F,o[4]=j):(F=o[3],j=o[4]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(F,j),o[5]!==L||o[6]!==T||o[7]!==m||o[8]!==k?(B=e=>{if(!T||!m)return;const t=document.activeElement;t&&!aM(L,k,t)||\"Escape\"===e.key&&(e.preventDefault(),e.stopPropagation(),m())},o[5]=L,o[6]=T,o[7]=m,o[8]=k,o[9]=B):B=o[9],cb(B),o[10]!==L||o[11]!==T||o[12]!==p||o[13]!==k?(D=T&&p&&(e=>{const t=e.target;t&&!aM(L,k,t)||p()}),o[10]=L,o[11]=T,o[12]=p,o[13]=k,o[14]=D):D=o[14],o[15]===Symbol.for(\"react.memo_cache_sentinel\")?(O=()=>[V.current],o[15]=O):O=o[15],wy(D,O),o[16]!==u||o[17]!==$||o[18]!==m||o[19]!==A||o[20]!==N?(z=N&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(uM,{children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(fC,{align:\"flex-start\",padding:3,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(aC,{flex:1,padding:2,children:u&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(cC,{id:$,size:1,weight:\"semibold\",children:u})}),A&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(aC,{flex:\"none\",children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(kC,{\"aria-label\":\"Close dialog\",disabled:!m,icon:ni,mode:\"bleed\",onClick:m,padding:2})})]})}),o[16]=u,o[17]=$,o[18]=m,o[19]=A,o[20]=N,o[21]=z):z=o[21],o[22]!==s?(_=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(hM,{flex:1,ref:E,tabIndex:-1,children:s}),o[22]=s,o[23]=_):_=o[23],o[24]!==c?(W=c&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(fM,{children:c}),o[24]=c,o[25]=W):W=o[25],o[26]!==z||o[27]!==_||o[28]!==W?(q=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(dM,{direction:\"column\",children:[z,_,W]}),o[26]=z,o[27]=_,o[28]=W,o[29]=q):q=o[29],o[30]!==M||o[31]!==w||o[32]!==S||o[33]!==q?(Z=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(cM,{radius:M,ref:V,scheme:w,shadow:S,children:q}),o[30]=M,o[31]=w,o[32]=S,o[33]=q,o[34]=Z):Z=o[34],o[35]!==Z||o[36]!==R?(U=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(lM,{\"data-ui\":\"DialogCard\",width:R,children:Z}),o[35]=Z,o[36]=R,o[37]=U):U=o[37],U}));pM.displayName=\"ForwardRef(DialogCard)\",(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){const o=St.c(60),a=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(iM),{layer:s}=vb();let l,c,d,u,f,p,m,g,v,w,y,b,x,C,k,L,M,S,R,V,E;o[0]!==n?(({__unstable_autoFocus:k,__unstable_hideCloseButton:L,cardRadius:M,cardShadow:S,children:d,contentRef:u,footer:f,header:p,id:m,onActivate:g,onClickOutside:v,onClose:w,onFocus:y,padding:R,portal:b,position:l,scheme:C,width:V,zOffset:c,animate:E,...x}=n),o[0]=n,o[1]=l,o[2]=c,o[3]=d,o[4]=u,o[5]=f,o[6]=p,o[7]=m,o[8]=g,o[9]=v,o[10]=w,o[11]=y,o[12]=b,o[13]=x,o[14]=C,o[15]=k,o[16]=L,o[17]=M,o[18]=S,o[19]=R,o[20]=V,o[21]=E):(l=o[1],c=o[2],d=o[3],u=o[4],f=o[5],p=o[6],m=o[7],g=o[8],v=o[9],w=o[10],y=o[11],b=o[12],x=o[13],C=o[14],k=o[15],L=o[16],M=o[17],S=o[18],R=o[19],V=o[20],E=o[21]);const H=void 0===k||k,T=void 0!==L&&L,$=void 0===M?4:M,A=void 0===S?3:S,N=void 0===R?3:R,I=void 0===V?0:V,P=void 0!==E&&E,F=l??(a.position||\"fixed\"),j=c??(a.zOffset||s.dialog.zOffset),B=!kb()&&P,D=Tk(),O=b?D.elements?.[b]||null:D.element,z=dk().element,_=vy($),W=vy(N),q=vy(F),Z=vy(I),U=vy(j),G=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),Y=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),X=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),K=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);let J;o[22]!==y?(J=e=>{y?.(e);const t=e.target,n=X.current;n&&t===G.current?bk(n):n&&t===Y.current?yk(n):pk(e.target)&&(K.current=e.target)},o[22]=y,o[23]=J):J=o[23];const Q=J,ee=`${m}_label`,te=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(void 0);let ne;o[24]!==z||o[25]!==O?(ne=()=>{te.current&&clearTimeout(te.current),te.current=setTimeout((()=>{const e=document.activeElement;if(e&&!aM(z,O,e)){const e=K.current;if(!e||!document.body.contains(e)){const e=X.current;return void(e&&yk(e))}e.focus()}}),0)},o[24]=z,o[25]=O,o[26]=ne):ne=o[26];const re=ne;let oe,ie,ae,se,le;return o[27]===Symbol.for(\"react.memo_cache_sentinel\")?(oe=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\",{ref:G,tabIndex:0}),o[27]=oe):oe=o[27],o[28]!==H||o[29]!==_||o[30]!==A||o[31]!==d||o[32]!==u||o[33]!==f||o[34]!==p||o[35]!==T||o[36]!==m||o[37]!==v||o[38]!==w||o[39]!==b||o[40]!==C||o[41]!==Z?(ie=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(pM,{__unstable_autoFocus:H,__unstable_hideCloseButton:T,contentRef:u,footer:f,header:p,id:m,onClickOutside:v,onClose:w,portal:b,radius:_,ref:X,scheme:C,shadow:A,width:Z,children:d}),o[28]=H,o[29]=_,o[30]=A,o[31]=d,o[32]=u,o[33]=f,o[34]=p,o[35]=T,o[36]=m,o[37]=v,o[38]=w,o[39]=b,o[40]=C,o[41]=Z,o[42]=ie):ie=o[42],o[43]===Symbol.for(\"react.memo_cache_sentinel\")?(ae=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\",{ref:Y,tabIndex:0}),o[43]=ae):ae=o[43],o[44]!==B||o[45]!==Q||o[46]!==re||o[47]!==m||o[48]!==ee||o[49]!==g||o[50]!==W||o[51]!==q||o[52]!==r||o[53]!==x||o[54]!==ie||o[55]!==U?(se=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(sM,{...x,$animate:B,$padding:W,$position:q,\"aria-labelledby\":ee,\"aria-modal\":!0,\"data-ui\":\"Dialog\",id:m,onActivate:g,onClick:re,onFocus:Q,ref:r,role:\"dialog\",zOffset:U,children:[oe,ie,ae]}),o[44]=B,o[45]=Q,o[46]=re,o[47]=m,o[48]=ee,o[49]=g,o[50]=W,o[51]=q,o[52]=r,o[53]=x,o[54]=ie,o[55]=U,o[56]=se):se=o[56],o[57]!==b||o[58]!==se?(le=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)($k,{__unstable_name:b,children:se}),o[57]=b,o[58]=se,o[59]=le):le=o[59],le})).displayName=\"ForwardRef(Dialog)\";const mM=co.kbd.withConfig({displayName:\"StyledHotkeys\",componentId:\"sc-b37mge-0\"})`font:inherit;padding:1px;&:not([hidden]){display:block;}`,gM=co(JC).withConfig({displayName:\"Key\",componentId:\"sc-b37mge-1\"})`&:not([hidden]){display:block;}`,vM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,r){const o=St.c(24);let i,a,s,l,c,d;o[0]!==t?(({fontSize:i,keys:a,padding:s,radius:l,space:d,...c}=t),o[0]=t,o[1]=i,o[2]=a,o[3]=s,o[4]=l,o[5]=c,o[6]=d):(i=o[1],a=o[2],s=o[3],l=o[4],c=o[5],d=o[6]);const u=vy(void 0===d?.5:d);if(!a||0===a.length){let t;return o[7]===Symbol.for(\"react.memo_cache_sentinel\")?(t=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{}),o[7]=t):t=o[7],t}let h,f,p;if(o[8]!==i||o[9]!==a||o[10]!==s||o[11]!==l){let t;o[13]!==i||o[14]!==s||o[15]!==l?(t=(t,n)=>/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(gM,{fontSize:i,padding:s,radius:l,children:t},n),o[13]=i,o[14]=s,o[15]=l,o[16]=t):t=o[16],h=a.map(t),o[8]=i,o[9]=a,o[10]=s,o[11]=l,o[12]=h}else h=o[12];return o[17]!==u||o[18]!==h?(f=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(GC,{as:\"span\",space:u,children:h}),o[17]=u,o[18]=h,o[19]=f):f=o[19],o[20]!==r||o[21]!==c||o[22]!==f?(p=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(mM,{\"data-ui\":\"Hotkeys\",...c,ref:r,children:f}),o[20]=r,o[21]=c,o[22]=f,o[23]=p):p=o[23],p}));vM.displayName=\"ForwardRef(Hotkeys)\";const wM=hb(\"@sanity/ui/context/menu\",null);function yM(e){return mk(e)&&\"true\"!==e.getAttribute(\"data-disabled\")||gk(e)&&!e.disabled}function bM(e){return e.filter(yM)}function xM(e,t){const n=[];let r=t;for(;r!==e;){const t=r.parentElement;if(!t)return n;const o=Array.from(t.childNodes).indexOf(r);if(n.unshift(o),t===e)return n;r=t}return n}const CM=[],kM=co(aC).withConfig({displayName:\"StyledMenu\",componentId:\"sc-xt0tnv-0\"})`outline:none;overflow:auto;`,LM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const r=St.c(50);let o,i,a,l,c,u,f,p,g,v,y,b;if(r[0]!==t){const{children:e,focusFirst:n,focusLast:s,onClickOutside:d,onEscape:h,onItemClick:m,onItemSelect:w,onKeyDown:x,originElement:C,padding:k,registerElement:L,shouldFocus:M,space:S,...R}=t;i=e,a=d,l=h,c=m,u=w,f=x,p=C,y=k,g=L,o=M,b=S,v=R,r[0]=t,r[1]=o,r[2]=i,r[3]=a,r[4]=l,r[5]=c,r[6]=u,r[7]=f,r[8]=p,r[9]=g,r[10]=v,r[11]=y,r[12]=b}else o=r[1],i=r[2],a=r[3],l=r[4],c=r[5],u=r[6],f=r[7],p=r[8],g=r[9],v=r[10],y=r[11],b=r[12];const C=void 0===y?1:y,k=void 0===b?1:b,L=o??((t.focusFirst?\"first\":t.focusLast&&\"last\")||null),M=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);let S;r[13]===Symbol.for(\"react.memo_cache_sentinel\")?(S=()=>M.current,r[13]=S):S=r[13],(0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(n,S);const{isTopLayer:R}=fk();let V;r[14]!==f||r[15]!==p||r[16]!==L?(V={onKeyDown:f,originElement:p,shouldFocus:L,rootElementRef:M},r[14]=f,r[15]=p,r[16]=L,r[17]=V):V=r[17];const{activeElement:E,activeIndex:H,handleItemMouseEnter:T,handleItemMouseLeave:$,handleKeyDown:A,mount:N}=function(e){const{onKeyDown:t,originElement:n,shouldFocus:r,rootElementRef:o}=e,i=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)([]),[a,l]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(-1),c=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(a),u=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>i.current[a]||null),[a]),f=!!o.current,p=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{l(e),c.current=e}),[]),g=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(((e,t)=>{if(!e)return()=>{};if(-1===i.current.indexOf(e)&&(i.current.push(e),function(e,t){if(!e)return;const n=/* @__PURE__ */new WeakMap;for(const r of t)n.set(r,xM(e,r));t.sort(((e,t)=>{const r=n.get(e)||CM,o=n.get(t)||CM,i=Math.max(r.length,o.length);for(let e=0;e<i;e+=1){const t=r[e]||-1,n=o[e]||-1;if(t!==n)return t-n}return 0}))}(o.current,i.current)),t){const t=i.current.indexOf(e);p(t)}return()=>{const t=i.current.indexOf(e);t>-1&&i.current.splice(t,1)}}),[o,p]),v=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{if(\"Tab\"!==e.key)if(\"Home\"!==e.key)if(\"End\"!==e.key)if(\"ArrowUp\"!==e.key)if(\"ArrowDown\"!==e.key)t&&t(e);else{e.preventDefault(),e.stopPropagation();const t=bM(i.current),n=t.length;if(0===n)return;const r=i.current[c.current];let o=t.indexOf(r);o=(o+1)%n;const a=t[o],s=i.current.indexOf(a);p(s)}else{e.preventDefault(),e.stopPropagation();const t=bM(i.current),n=t.length;if(0===n)return;const r=i.current[c.current];let o=t.indexOf(r);o=(o-1+n)%n;const a=t[o],s=i.current.indexOf(a);p(s)}else{e.preventDefault(),e.stopPropagation();const t=bM(i.current),n=t[t.length-1];if(!n)return;const r=i.current.indexOf(n);p(r)}else{e.preventDefault(),e.stopPropagation();const t=bM(i.current)[0];if(!t)return;const n=i.current.indexOf(t);p(n)}else n&&n.focus()}),[t,n,p]),y=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{const t=e.currentTarget,n=i.current.indexOf(t);p(n)}),[p]),b=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((()=>{p(-2),o.current?.focus()}),[o,p]);return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{if(!f)return;const e=requestAnimationFrame((()=>{if(-1!==a)(i.current[a]||null)?.focus();else{if(\"first\"===r){const e=bM(i.current)[0];if(e){const t=i.current.indexOf(e);p(t)}}if(\"last\"===r){const e=bM(i.current),t=e[e.length-1];if(t){const e=i.current.indexOf(t);p(e)}}}}));return()=>cancelAnimationFrame(e)}),[a,f,p,r]),{activeElement:u,activeIndex:a,handleItemMouseEnter:y,handleItemMouseLeave:b,handleKeyDown:v,mount:g}}(V),I=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);let P;r[18]!==g?(P=e=>{I.current&&(I.current(),I.current=null),M.current=e,M.current&&g&&(I.current=g(M.current))},r[18]=g,r[19]=P):P=r[19];const F=P;let j,B,D,O,z,_;r[20]!==H||r[21]!==u?(j=()=>{u&&u(H)},B=[H,u],r[20]=H,r[21]=u,r[22]=j,r[23]=B):(j=r[22],B=r[23]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(j,B),r[24]===Symbol.for(\"react.memo_cache_sentinel\")?(D=()=>[M.current],r[24]=D):D=r[24],wy(R&&a,D),r[25]!==R||r[26]!==l?(O=e=>{R&&\"Escape\"===e.key&&(e.stopPropagation(),l&&l())},r[25]=R,r[26]=l,r[27]=O):O=r[27],cb(O),r[28]!==E||r[29]!==H||r[30]!==T||r[31]!==$||r[32]!==N||r[33]!==a||r[34]!==l||r[35]!==c||r[36]!==g?(_={version:0,activeElement:E,activeIndex:H,mount:N,onClickOutside:a,onEscape:l,onItemClick:c,onItemMouseEnter:T,onItemMouseLeave:$,registerElement:g,onMouseEnter:T,onMouseLeave:$},r[28]=E,r[29]=H,r[30]=T,r[31]=$,r[32]=N,r[33]=a,r[34]=l,r[35]=c,r[36]=g,r[37]=_):_=r[37],z=_;const W=z;let q,Z,U;return r[38]!==i||r[39]!==k?(q=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(lL,{space:k,children:i}),r[38]=i,r[39]=k,r[40]=q):q=r[40],r[41]!==A||r[42]!==F||r[43]!==C||r[44]!==v||r[45]!==q?(Z=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(kM,{\"data-ui\":\"Menu\",...v,onKeyDown:A,padding:C,ref:F,role:\"menu\",tabIndex:-1,children:q}),r[41]=A,r[42]=F,r[43]=C,r[44]=v,r[45]=q,r[46]=Z):Z=r[46],r[47]!==Z||r[48]!==W?(U=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(wM.Provider,{value:W,children:Z}),r[47]=Z,r[48]=W,r[49]=U):U=r[49],U}));function MM(e){return!e}LM.displayName=\"ForwardRef(Menu)\",(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,r){const o=St.c(62),{__unstable_disableRestoreFocusOnClose:i,boundaryElement:a,button:s,id:l,menu:c,onClose:u,onOpen:f,placement:p,popoverScheme:m,portal:g,popover:v,popoverRadius:y,preventOverflow:b}=t,C=void 0!==i&&i,L=void 0===g||g,[M,S]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1),[R,V]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null),[E,H]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);let T;o[0]===Symbol.for(\"react.memo_cache_sentinel\")?(T=[],o[0]=T):T=o[0];const[$,A]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(T),N=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(M);let I,P,F,j,B,D,O;o[1]!==f||o[2]!==M?(I=()=>{f&&M&&!N.current&&f()},P=[f,M],o[1]=f,o[2]=M,o[3]=I,o[4]=P):(I=o[3],P=o[4]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(I,P),o[5]!==u||o[6]!==M?(F=()=>{u&&!M&&N.current&&u()},j=[u,M],o[5]=u,o[6]=M,o[7]=F,o[8]=j):(F=o[7],j=o[8]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(F,j),o[9]!==M?(B=()=>{N.current=M},D=[M],o[9]=M,o[10]=B,o[11]=D):(B=o[10],D=o[11]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(B,D),o[12]===Symbol.for(\"react.memo_cache_sentinel\")?(O=()=>{S(MM),V(null)},o[12]=O):O=o[12];const z=O;let _;o[13]!==M?(_=e=>{M&&e.preventDefault()},o[13]=M,o[14]=_):_=o[14];const W=_;let q;o[15]===Symbol.for(\"react.memo_cache_sentinel\")?(q=e=>\"ArrowDown\"===e.key||\"Enter\"===e.key||\" \"===e.key?(e.preventDefault(),S(!0),void V(\"first\")):\"ArrowUp\"===e.key?(e.preventDefault(),S(!0),void V(\"last\")):void 0,o[15]=q):q=o[15];const Z=q;let U;o[16]!==E||o[17]!==$?(U=e=>{const t=e.target;if(t instanceof Node&&(!E||t!==E&&!E.contains(t))){for(const e of $)if(t===e||e.contains(t))return;S(!1)}},o[16]=E,o[17]=$,o[18]=U):U=o[18];const G=U;let Y;o[19]!==E||o[20]!==C?(Y=()=>{S(!1),!C&&E&&E.focus()},o[19]=E,o[20]=C,o[21]=Y):Y=o[21];const X=Y;let K;o[22]!==$?(K=e=>{const t=e.relatedTarget;if(t instanceof Node){for(const e of $)if(e===t||e.contains(t))return;S(!1)}},o[22]=$,o[23]=K):K=o[23];const J=K;let Q;o[24]!==E||o[25]!==C?(Q=()=>{S(!1),!C&&E&&E.focus()},o[24]=E,o[25]=C,o[26]=Q):Q=o[26];const ee=Q;let te;o[27]===Symbol.for(\"react.memo_cache_sentinel\")?(te=e=>(A((t=>t.concat([e]))),()=>A((t=>t.filter((t=>t!==e))))),o[27]=te):te=o[27];const ne=te;let re;o[28]!==E||o[29]!==J||o[30]!==ee||o[31]!==G||o[32]!==X||o[33]!==l||o[34]!==c||o[35]!==R?(re=c&&(0,react__WEBPACK_IMPORTED_MODULE_1__.cloneElement)(c,{\"aria-labelledby\":l,onBlurCapture:J,onClickOutside:G,onEscape:X,onItemClick:ee,originElement:E,registerElement:ne,shouldFocus:R}),o[28]=E,o[29]=J,o[30]=ee,o[31]=G,o[32]=X,o[33]=l,o[34]=c,o[35]=R,o[36]=re):re=o[36];const oe=re;let ie,ae;o[37]!==s||o[38]!==W||o[39]!==l||o[40]!==M?(ae=s&&(0,react__WEBPACK_IMPORTED_MODULE_1__.cloneElement)(s,{\"data-ui\":\"MenuButton\",id:l,onClick:z,onKeyDown:Z,onMouseDown:W,\"aria-haspopup\":!0,\"aria-expanded\":M,ref:H,selected:s.props.selected??M}),o[37]=s,o[38]=W,o[39]=l,o[40]=M,o[41]=ae):ae=o[41],ie=ae;const se=ie;let le,ce,de,ue,he;o[42]!==E?(le=()=>E,ce=[E],o[42]=E,o[43]=le,o[44]=ce):(le=o[43],ce=o[44]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(r,le,ce),o[45]!==v?(ue=v||{},o[45]=v,o[46]=ue):ue=o[46],o[47]!==a||o[48]!==p||o[49]!==y||o[50]!==m||o[51]!==L||o[52]!==b||o[53]!==ue?(he={boundaryElement:a,overflow:\"auto\",placement:p,portal:L,preventOverflow:b,radius:y,scheme:m,...ue},o[47]=a,o[48]=p,o[49]=y,o[50]=m,o[51]=L,o[52]=b,o[53]=ue,o[54]=he):he=o[54],de=he;const fe=de;let pe,me;return o[55]!==se?(pe=se||/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{}),o[55]=se,o[56]=pe):pe=o[56],o[57]!==oe||o[58]!==M||o[59]!==fe||o[60]!==pe?(me=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Wk,{\"data-ui\":\"MenuButton__popover\",...fe,content:oe,open:M,children:pe}),o[57]=oe,o[58]=M,o[59]=fe,o[60]=pe,o[61]=me):me=o[61],me})).displayName=\"ForwardRef(MenuButton)\";const SM=co.hr.withConfig({displayName:\"MenuDivider\",componentId:\"sc-uhoxwu-0\"})`height:1px;border:0;background:var(--card-hairline-soft-color);margin:0;`;function RM(){return ao`\n    background-color: inherit;\n    color: inherit;\n\n    &[data-as='button'] {\n      -webkit-font-smoothing: inherit;\n      appearance: none;\n      outline: none;\n      font: inherit;\n      text-align: inherit;\n      border: 0;\n      width: -moz-available;\n      width: -webkit-fill-available;\n      width: stretch;\n    }\n\n    /* &:is(a) */\n    &[data-as='a'] {\n      text-decoration: none;\n    }\n  `}function VM(e){const{$tone:t}=e,{color:n,style:r}=j(e.theme),o=n.selectable[t];return ao`\n    ${vC(n,o.enabled)}\n\n    background-color: var(--card-bg-color);\n    color: var(--card-fg-color);\n    outline: none;\n\n    /* &:is(button) */\n    &[data-as='button'] {\n      &:disabled {\n        ${vC(n,o.disabled)}\n      }\n\n      &:not(:disabled) {\n        &[aria-pressed='true'] {\n          ${vC(n,o.pressed)}\n        }\n\n        &[data-selected],\n        &[aria-selected='true'] > & {\n          ${vC(n,o.selected)}\n        }\n\n        @media (hover: hover) {\n          &:not([data-selected]) {\n            &[data-hovered],\n            &:hover {\n              ${vC(n,o.hovered)}\n            }\n\n            &:active {\n              ${vC(n,o.pressed)}\n            }\n          }\n        }\n      }\n    }\n\n    /* &:is(a) */\n    &[data-as='a'] {\n      &[data-disabled] {\n        ${vC(n,o.disabled)}\n      }\n\n      &:not([data-disabled]) {\n        &[data-pressed] {\n          ${vC(n,o.pressed)}\n        }\n\n        &[data-selected] {\n          ${vC(n,o.selected)}\n        }\n\n        @media (hover: hover) {\n          &:not([data-selected]) {\n            &[data-hovered],\n            &:hover {\n              ${vC(n,o.hovered)}\n            }\n            &:active {\n              ${vC(n,o.pressed)}\n            }\n          }\n        }\n      }\n    }\n\n    ${r?.card?.root}\n  `}SM.displayName=\"MenuDivider\";const EM=/* @__PURE__ */co(aC).withConfig({displayName:\"Selectable\",componentId:\"sc-1w01ang-0\"})(Vx,RM,VM);function HM(){const e=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(wM);if(!e)throw new Error(\"useMenu(): missing context value\");if(!lk(e)||0!==e.version)throw new Error(\"useMenu(): the context value is not compatible\");return e}function TM(n){const r=St.c(79);let o,i,a,s,l,c,u,h,f,p,m,g,y;r[0]!==n?(({as:u,children:i,fontSize:h,icon:o,menu:a,onClick:s,padding:f,popover:l,radius:p,space:m,text:y,tone:g,...c}=n),r[0]=n,r[1]=o,r[2]=i,r[3]=a,r[4]=s,r[5]=l,r[6]=c,r[7]=u,r[8]=h,r[9]=f,r[10]=p,r[11]=m,r[12]=g,r[13]=y):(o=r[1],i=r[2],a=r[3],s=r[4],l=r[5],c=r[6],u=r[7],h=r[8],f=r[9],p=r[10],m=r[11],g=r[12],y=r[13]);const b=void 0===u?\"button\":u,x=void 0===h?1:h,C=void 0===f?3:f,k=void 0===p?2:p,L=void 0===m?3:m,M=void 0===g?\"default\":g,S=HM(),{scheme:R}=mb(),{activeElement:V,mount:E,onClickOutside:H,onEscape:T,onItemClick:$,onItemMouseEnter:A,registerElement:N}=S,I=A??S.onMouseEnter,[P,F]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null),[j,B]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1),[D,O]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null),z=!!V&&V===P,[_,W]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1);let q;r[14]!==I?(q=e=>{W(!1),I(e),B(!0)},r[14]=I,r[15]=q):q=r[15];const Z=q;let U;r[16]!==P?(U=e=>{\"ArrowLeft\"===e.key&&(e.stopPropagation(),B(!1),requestAnimationFrame((()=>{P?.focus()})))},r[16]=P,r[17]=U):U=r[17];const G=U;let Y;r[18]!==s?(Y=e=>{s?.(e),O(\"first\"),B(!0)},r[18]=s,r[19]=Y):Y=r[19];const X=Y;let K;r[20]!==$?(K=()=>{B(!1),$?.()},r[20]=$,r[21]=K):K=r[21];const J=K;let Q;r[22]===Symbol.for(\"react.memo_cache_sentinel\")?(Q=()=>W(!0),r[22]=Q):Q=r[22];const ee=Q;let te,ne,re,oe,ie,ae,se,le,ce;r[23]!==E||r[24]!==P?(te=()=>E(P),ne=[E,P],r[23]=E,r[24]=P,r[25]=te,r[26]=ne):(te=r[25],ne=r[26]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(te,ne),r[27]!==z?(re=()=>{z||B(!1)},oe=[z],r[27]=z,r[28]=re,r[29]=oe):(re=r[28],oe=r[29]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(re,oe),r[30]!==j?(ie=()=>{j||W(!1)},ae=[j],r[30]=j,r[31]=ie,r[32]=ae):(ie=r[31],ae=r[32]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(ie,ae),r[33]!==D?(se=()=>{if(!D)return;const e=requestAnimationFrame((()=>O(null)));return()=>cancelAnimationFrame(e)},le=[D],r[33]=D,r[34]=se,r[35]=le):(se=r[34],le=r[35]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(se,le),r[36]!==i||r[37]!==J||r[38]!==G||r[39]!==a||r[40]!==H||r[41]!==T||r[42]!==N||r[43]!==D?(ce=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(LM,{...a,onClickOutside:H,onEscape:T,onItemClick:J,onKeyDown:G,onMouseEnter:ee,registerElement:N,shouldFocus:D,children:i}),r[36]=i,r[37]=J,r[38]=G,r[39]=a,r[40]=H,r[41]=T,r[42]=N,r[43]=D,r[44]=ce):ce=r[44];const de=ce;let ue;r[45]===Symbol.for(\"react.memo_cache_sentinel\")?(ue=e=>{const t=e.currentTarget;if(document.activeElement===t&&\"ArrowRight\"===e.key)return O(\"first\"),B(!0),void W(!0)},r[45]=ue):ue=r[45];const he=ue,fe=\"button\"===b?_:void 0,pe=\"button\"!==b?_:void 0,me=!_&&z?\"\":void 0,ge=vy(k),ve=\"button\"===b?\"button\":void 0;let we,ye,be,xe,Ce,ke,Le;return r[46]!==o||r[47]!==x?(we=o&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(cC,{size:x,children:[(0,react__WEBPACK_IMPORTED_MODULE_1__.isValidElement)(o)&&o,Ht.isValidElementType(o)&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(o,{})]}),r[46]=o,r[47]=x,r[48]=we):we=r[48],r[49]!==x||r[50]!==y?(ye=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(aC,{flex:1,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(cC,{size:x,textOverflow:\"ellipsis\",weight:\"medium\",children:y})}),r[49]=x,r[50]=y,r[51]=ye):ye=r[51],r[52]===Symbol.for(\"react.memo_cache_sentinel\")?(be=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Yo,{}),r[52]=be):be=r[52],r[53]!==x?(xe=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(cC,{size:x,children:be}),r[53]=x,r[54]=xe):xe=r[54],r[55]!==C||r[56]!==L||r[57]!==we||r[58]!==ye||r[59]!==xe?(Ce=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(fC,{gap:L,padding:C,children:[we,ye,xe]}),r[55]=C,r[56]=L,r[57]=we,r[58]=ye,r[59]=xe,r[60]=Ce):Ce=r[60],r[61]!==b||r[62]!==X||r[63]!==Z||r[64]!==c||r[65]!==R||r[66]!==fe||r[67]!==pe||r[68]!==me||r[69]!==ge||r[70]!==ve||r[71]!==Ce||r[72]!==M?(ke=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(EM,{\"data-as\":b,\"data-ui\":\"MenuGroup\",forwardedAs:b,...c,\"aria-pressed\":fe,\"data-pressed\":pe,\"data-selected\":me,$radius:ge,$tone:M,$scheme:R,onClick:X,onKeyDown:he,onMouseEnter:Z,ref:F,tabIndex:-1,type:ve,children:Ce}),r[61]=b,r[62]=X,r[63]=Z,r[64]=c,r[65]=R,r[66]=fe,r[67]=pe,r[68]=me,r[69]=ge,r[70]=ve,r[71]=Ce,r[72]=M,r[73]=ke):ke=r[73],r[74]!==de||r[75]!==j||r[76]!==l||r[77]!==ke?(Le=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Wk,{...l,content:de,\"data-ui\":\"MenuGroup__popover\",open:j,children:ke}),r[74]=de,r[75]=j,r[76]=l,r[77]=ke,r[78]=Le):Le=r[78],Le}EM.displayName=\"Selectable\",TM.displayName=\"MenuGroup\";const $M=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){const o=St.c(74);let i,a,s,l,c,u,f,p,m,g,y,b,C,k,L,M,S,R,V,E,H,T;o[0]!==n?(({as:M,children:s,disabled:l,fontSize:S,hotkeys:c,icon:i,iconRight:a,onClick:u,padding:R,paddingX:y,paddingY:b,paddingTop:g,paddingRight:m,paddingBottom:f,paddingLeft:p,pressed:C,radius:V,selected:L,space:E,text:T,tone:H,...k}=n),o[0]=n,o[1]=i,o[2]=a,o[3]=s,o[4]=l,o[5]=c,o[6]=u,o[7]=f,o[8]=p,o[9]=m,o[10]=g,o[11]=y,o[12]=b,o[13]=C,o[14]=k,o[15]=L,o[16]=M,o[17]=S,o[18]=R,o[19]=V,o[20]=E,o[21]=H,o[22]=T):(i=o[1],a=o[2],s=o[3],l=o[4],c=o[5],u=o[6],f=o[7],p=o[8],m=o[9],g=o[10],y=o[11],b=o[12],C=o[13],k=o[14],L=o[15],M=o[16],S=o[17],R=o[18],V=o[19],E=o[20],H=o[21],T=o[22]);const $=void 0===M?\"button\":M,A=void 0===S?1:S,N=void 0===R?3:R,I=void 0===V?2:V,P=void 0===E?3:E,F=void 0===H?\"default\":H,{scheme:j}=mb(),B=HM(),{activeElement:D,mount:O,onItemClick:z,onItemMouseEnter:_,onItemMouseLeave:W}=B,q=_??B.onMouseEnter,Z=W??B.onMouseLeave,[U,G]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null),Y=!!D&&D===U,X=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);let K,J,Q,ee;o[23]===Symbol.for(\"react.memo_cache_sentinel\")?(K=()=>X.current,o[23]=K):K=o[23],(0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(r,K),o[24]!==O||o[25]!==U||o[26]!==L?(J=()=>O(U,L),Q=[O,U,L],o[24]=O,o[25]=U,o[26]=L,o[27]=J,o[28]=Q):(J=o[27],Q=o[28]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(J,Q),o[29]!==l||o[30]!==u||o[31]!==z?(ee=e=>{l||(u&&u(e),z&&z())},o[29]=l,o[30]=u,o[31]=z,o[32]=ee):ee=o[32];const te=ee;let ne,re;o[33]!==N||o[34]!==f||o[35]!==p||o[36]!==m||o[37]!==g||o[38]!==y||o[39]!==b?(re={padding:N,paddingX:y,paddingY:b,paddingTop:g,paddingRight:m,paddingBottom:f,paddingLeft:p},o[33]=N,o[34]=f,o[35]=p,o[36]=m,o[37]=g,o[38]=y,o[39]=b,o[40]=re):re=o[40],ne=re;const oe=ne,ie=vy(A);let ae;o[41]!==ie?(ae=ie.map(AM),o[41]=ie,o[42]=ae):ae=o[42];const se=ae;let le;o[43]===Symbol.for(\"react.memo_cache_sentinel\")?(le=e=>{X.current=e,G(e)},o[43]=le):le=o[43];const ce=le,de=\"button\"===$&&C,ue=\"button\"!==$&&C?\"\":void 0,he=Y?\"\":void 0,fe=l?\"\":void 0,pe=vy(I),me=vy(0),ge=l?\"default\":F,ve=\"button\"===$?\"button\":void 0;let we,ye,be;return o[44]!==i||o[45]!==a||o[46]!==A||o[47]!==c||o[48]!==se||o[49]!==oe||o[50]!==P||o[51]!==T?(we=(i||T||a)&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(fC,{as:\"span\",gap:P,align:\"center\",...oe,children:[i&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(cC,{size:A,children:[(0,react__WEBPACK_IMPORTED_MODULE_1__.isValidElement)(i)&&i,Ht.isValidElementType(i)&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(i,{})]}),T&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(aC,{flex:1,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(cC,{size:A,textOverflow:\"ellipsis\",weight:\"medium\",children:T})}),c&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(vM,{fontSize:se,keys:c,style:{marginTop:-4,marginBottom:-4}}),a&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(cC,{size:A,children:[(0,react__WEBPACK_IMPORTED_MODULE_1__.isValidElement)(a)&&a,Ht.isValidElementType(a)&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(a,{})]})]}),o[44]=i,o[45]=a,o[46]=A,o[47]=c,o[48]=se,o[49]=oe,o[50]=P,o[51]=T,o[52]=we):we=o[52],o[53]!==s||o[54]!==oe?(ye=s&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(aC,{as:\"span\",...oe,children:s}),o[53]=s,o[54]=oe,o[55]=ye):ye=o[55],o[56]!==$||o[57]!==l||o[58]!==te||o[59]!==q||o[60]!==Z||o[61]!==k||o[62]!==j||o[63]!==de||o[64]!==ue||o[65]!==he||o[66]!==fe||o[67]!==pe||o[68]!==me||o[69]!==ge||o[70]!==ve||o[71]!==we||o[72]!==ye?(be=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(EM,{\"data-ui\":\"MenuItem\",role:\"menuitem\",...k,\"aria-pressed\":de,\"data-pressed\":ue,\"data-selected\":he,\"data-disabled\":fe,forwardedAs:$,$radius:pe,$padding:me,$tone:ge,$scheme:j,disabled:l,onClick:te,onMouseEnter:q,onMouseLeave:Z,ref:ce,tabIndex:-1,type:ve,children:[we,ye]}),o[56]=$,o[57]=l,o[58]=te,o[59]=q,o[60]=Z,o[61]=k,o[62]=j,o[63]=de,o[64]=ue,o[65]=he,o[66]=fe,o[67]=pe,o[68]=me,o[69]=ge,o[70]=ve,o[71]=we,o[72]=ye,o[73]=be):be=o[73],be}));function AM(e){return e-1}$M.displayName=\"ForwardRef(MenuItem)\";const NM=ao`\n  background-image: linear-gradient(\n    to right,\n    var(--card-skeleton-color-from),\n    var(--card-skeleton-color-to),\n    var(--card-skeleton-color-from),\n    var(--card-skeleton-color-from),\n    var(--card-skeleton-color-from)\n  );\n  background-position: 100%;\n  background-size: 200% 100%;\n  background-attachment: fixed;\n  animation-name: ${uo`\n  0% {\n    background-position: 100%;\n  }\n  100% {\n    background-position: -100%;\n  }\n`};\n  animation-timing-function: ease-in-out;\n  animation-iteration-count: infinite;\n  animation-duration: 2000ms;\n`,IM=ao`\n  opacity: ${({$visible:e})=>e?1:0};\n  transition: opacity 200ms ease-in;\n\n  @media screen and (prefers-reduced-motion: no-preference) {\n    ${({$animated:e})=>e?NM:ao`\n            background-color: var(--card-skeleton-color-from);\n          `}\n  }\n\n  @media screen and (prefers-reduced-motion: reduce) {\n    background-color: var(--card-skeleton-color-from);\n  }\n`,PM=/* @__PURE__ */co(aC).withConfig({displayName:\"StyledSkeleton\",componentId:\"sc-ebtpni-0\"})(Vx,IM),FM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const r=St.c(14);let o,i,a,s;r[0]!==t?(({animated:s,delay:o,radius:i,...a}=t),r[0]=t,r[1]=o,r[2]=i,r[3]=a,r[4]=s):(o=r[1],i=r[2],a=r[3],s=r[4]);const l=void 0!==s&&s,[c,u]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!o);let h,f;r[5]!==o?(h=()=>{if(!o)return u(!0);const e=setTimeout((()=>{u(!0)}),o);return()=>{clearTimeout(e)}},f=[o],r[5]=o,r[6]=h,r[7]=f):(h=r[6],f=r[7]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(h,f);const p=vy(i);let m;return r[8]!==l||r[9]!==n||r[10]!==a||r[11]!==p||r[12]!==c?(m=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PM,{...a,$animated:l,$radius:p,$visible:c,ref:n}),r[8]=l,r[9]=n,r[10]=a,r[11]=p,r[12]=c,r[13]=m):m=r[13],m}));FM.displayName=\"ForwardRef(Skeleton)\";const jM=/* @__PURE__ */co(FM).withConfig({displayName:\"StyledSkeleton\",componentId:\"sc-2p7a1v-0\"})((e=>{const{$size:t,$style:n}=e,{font:r,media:o}=j(e.theme),i=r[n];return ly(o,t,(e=>{const t=i.sizes[e];return{height:t.lineHeight-t.ascenderHeight-t.descenderHeight}}))}));(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const r=St.c(7);let o,i;r[0]!==t?(({size:i,...o}=t),r[0]=t,r[1]=o,r[2]=i):(o=r[1],i=r[2]);const a=vy(void 0===i?2:i);let s;return r[3]!==a||r[4]!==n||r[5]!==o?(s=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(jM,{...o,$size:a,ref:n,$style:\"text\"}),r[3]=a,r[4]=n,r[5]=o,r[6]=s):s=r[6],s})).displayName=\"ForwardRef(TextSkeleton)\",(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const r=St.c(7);let o,i;r[0]!==t?(({size:i,...o}=t),r[0]=t,r[1]=o,r[2]=i):(o=r[1],i=r[2]);const a=vy(void 0===i?2:i);let s;return r[3]!==a||r[4]!==n||r[5]!==o?(s=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(jM,{...o,$size:a,ref:n,$style:\"label\"}),r[3]=a,r[4]=n,r[5]=o,r[6]=s):s=r[6],s})).displayName=\"ForwardRef(LabelSkeleton)\",(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const r=St.c(7);let o,i;r[0]!==t?(({size:i,...o}=t),r[0]=t,r[1]=o,r[2]=i):(o=r[1],i=r[2]);const a=vy(void 0===i?2:i);let s;return r[3]!==a||r[4]!==n||r[5]!==o?(s=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(jM,{...o,$size:a,ref:n,$style:\"heading\"}),r[3]=a,r[4]=n,r[5]=o,r[6]=s):s=r[6],s})).displayName=\"ForwardRef(HeadingSkeleton)\",(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const r=St.c(7);let o,i;r[0]!==t?(({size:i,...o}=t),r[0]=t,r[1]=o,r[2]=i):(o=r[1],i=r[2]);const a=vy(void 0===i?2:i);let s;return r[3]!==a||r[4]!==n||r[5]!==o?(s=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(jM,{...o,$size:a,ref:n,$style:\"code\"}),r[3]=a,r[4]=n,r[5]=o,r[6]=s):s=r[6],s})).displayName=\"ForwardRef(CodeSkeleton)\";const BM=co(kC).withConfig({displayName:\"CustomButton\",componentId:\"sc-1kns779-0\"})`max-width:100%;`,DM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const r=St.c(30);let o,i,a,s,l,c,u,f,p,m;r[0]!==t?(({icon:i,id:a,focused:o,fontSize:p,label:s,onClick:l,onFocus:c,padding:m,selected:f,...u}=t),r[0]=t,r[1]=o,r[2]=i,r[3]=a,r[4]=s,r[5]=l,r[6]=c,r[7]=u,r[8]=f,r[9]=p,r[10]=m):(o=r[1],i=r[2],a=r[3],s=r[4],l=r[5],c=r[6],u=r[7],f=r[8],p=r[9],m=r[10]);const g=void 0===p?1:p,v=void 0===m?2:m,w=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),y=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(!1);let b,C;r[11]===Symbol.for(\"react.memo_cache_sentinel\")?(b=()=>w.current,r[11]=b):b=r[11],(0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(n,b),r[12]===Symbol.for(\"react.memo_cache_sentinel\")?(C=()=>{y.current=!1},r[12]=C):C=r[12];const k=C;let L;r[13]!==c?(L=e=>{y.current=!0,c&&c(e)},r[13]=c,r[14]=L):L=r[14];const M=L;let S,R;r[15]!==o?(S=()=>{o&&!y.current&&(w.current&&w.current.focus(),y.current=!0)},R=[o],r[15]=o,r[16]=S,r[17]=R):(S=r[16],R=r[17]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(S,R);const V=f?\"true\":\"false\",E=f?0:-1;let H;return r[18]!==g||r[19]!==M||r[20]!==i||r[21]!==a||r[22]!==s||r[23]!==l||r[24]!==v||r[25]!==u||r[26]!==f||r[27]!==V||r[28]!==E?(H=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(BM,{\"data-ui\":\"Tab\",...u,\"aria-selected\":V,fontSize:g,icon:i,id:a,mode:\"bleed\",onClick:l,onBlur:k,onFocus:M,padding:v,ref:w,role:\"tab\",selected:f,tabIndex:E,text:s,type:\"button\"}),r[18]=g,r[19]=M,r[20]=i,r[21]=a,r[22]=s,r[23]=l,r[24]=v,r[25]=u,r[26]=f,r[27]=V,r[28]=E,r[29]=H):H=r[29],H}));DM.displayName=\"ForwardRef(Tab)\";const OM=co(GC).withConfig({displayName:\"CustomInline\",componentId:\"sc-5cm04m-0\"})`& > div{display:inline-block;vertical-align:middle;max-width:100%;box-sizing:border-box;}`,zM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const r=St.c(15);let o,i;r[0]!==t?(({children:o,...i}=t),r[0]=t,r[1]=o,r[2]=i):(o=r[1],i=r[2]);const[a,s]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(-1);let l;if(r[3]!==o||r[4]!==a){const e=react__WEBPACK_IMPORTED_MODULE_1__.Children.toArray(o).filter(react__WEBPACK_IMPORTED_MODULE_1__.isValidElement);let t;r[6]!==a?(t=(e,t)=>(0,react__WEBPACK_IMPORTED_MODULE_1__.cloneElement)(e,{focused:a===t,key:t,onFocus:()=>s(t)}),r[6]=a,r[7]=t):t=r[7],l=e.map(t),r[3]=o,r[4]=a,r[5]=l}else l=r[5];const c=l,d=c.length;let u;r[8]!==d?(u=e=>{\"ArrowLeft\"===e.key&&s((e=>(e+d-1)%d)),\"ArrowRight\"===e.key&&s((e=>(e+1)%d))},r[8]=d,r[9]=u):u=r[9];const h=u;let f;return r[10]!==h||r[11]!==n||r[12]!==i||r[13]!==c?(f=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(OM,{\"data-ui\":\"TabList\",...i,onKeyDown:h,ref:n,role:\"tablist\",children:c}),r[10]=h,r[11]=n,r[12]=i,r[13]=c,r[14]=f):f=r[14],f}));function _M(e){if(\"treeitem\"===e.getAttribute(\"role\")&&e.focus(),\"none\"===e.getAttribute(\"role\")){const t=e.firstChild;t&&t instanceof HTMLElement&&t.focus()}}zM.displayName=\"ForwardRef(TabList)\",(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const r=St.c(9);let o,i;r[0]!==t?(({flex:o,...i}=t),r[0]=t,r[1]=o,r[2]=i):(o=r[1],i=r[2]);const a=void 0===t.tabIndex?0:t.tabIndex;let s;return r[3]!==o||r[4]!==t.children||r[5]!==n||r[6]!==i||r[7]!==a?(s=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(aC,{\"data-ui\":\"TabPanel\",...i,flex:o,ref:n,role:\"tabpanel\",tabIndex:a,children:t.children}),r[3]=o,r[4]=t.children,r[5]=n,r[6]=i,r[7]=a,r[8]=s):s=r[8],s})).displayName=\"ForwardRef(TabPanel)\",uo`\n  0% {\n    width: 0;\n  }\n  100% {\n    width: 100%;\n  }\n`,hb(\"@sanity/ui/context/toast\",null);const WM=hb(\"@sanity/ui/context/tree\",null);function qM(e){const{$level:t}=e,{space:n}=j(e.theme);return ao`\n    padding-left: ${sy(n[2]*t)};\n\n    &[data-as='a'] {\n      text-decoration: none;\n    }\n  `}function ZM(){const e=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(WM);if(!e)throw new Error(\"Tree: missing context value\");return e}(0,react__WEBPACK_IMPORTED_MODULE_1__.memo)((0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const r=St.c(37);let o,i,a,s;r[0]!==t?(({children:o,space:s,onFocus:i,...a}=t),r[0]=t,r[1]=o,r[2]=i,r[3]=a,r[4]=s):(o=r[1],i=r[2],a=r[3],s=r[4]);const l=void 0===s?1:s,c=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),[u,f]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null),p=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(u);let m,g;r[5]===Symbol.for(\"react.memo_cache_sentinel\")?(g=[],r[5]=g):g=r[5],m=g;const v=m;let y;r[6]===Symbol.for(\"react.memo_cache_sentinel\")?(y=[],r[6]=y):y=r[6];const[b,C]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(y);let k;r[7]===Symbol.for(\"react.memo_cache_sentinel\")?(k={},r[7]=k):k=r[7];const[L,M]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(k),S=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(L);let R,V,E,H,T,$;r[8]===Symbol.for(\"react.memo_cache_sentinel\")?(R=()=>c.current,r[8]=R):R=r[8],(0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(n,R),r[9]!==u?(V=()=>{p.current=u},E=[u],r[9]=u,r[10]=V,r[11]=E):(V=r[10],E=r[11]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(V,E),r[12]!==L?(H=()=>{S.current=L},T=[L],r[12]=L,r[13]=H,r[14]=T):(H=r[13],T=r[14]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(H,T),r[15]===Symbol.for(\"react.memo_cache_sentinel\")?($=(e,t,n,r)=>(M((r=>({...r,[t]:{element:e,expanded:n}}))),r&&f(e),()=>{M((e=>{const n={...e};return delete n[t],n}))}),r[15]=$):$=r[15];const A=$;let N;r[16]===Symbol.for(\"react.memo_cache_sentinel\")?(N=(e,t)=>{M((n=>{const r=n[e];return r?{...n,[e]:{...r,expanded:t}}:n}))},r[16]=N):N=r[16];const I=N;let P;const F=u||b[0]||null;let j;r[17]!==l||r[18]!==L||r[19]!==F?(j={version:0,focusedElement:F,level:0,path:v,registerItem:A,setExpanded:I,setFocusedElement:f,space:l,state:L},r[17]=l,r[18]=L,r[19]=F,r[20]=j):j=r[20],P=j;const B=P;let D;r[21]!==b?(D=e=>{if(p.current){if(\"ArrowDown\"===e.key){e.preventDefault();const t=function(e,t,n){const r=t.indexOf(n),o=t.slice(r),i=t.length;for(let t=1;t<i;t+=1){if(!o[t])continue;const n=o[t].getAttribute(\"data-tree-key\");if(!n)continue;const r=n.split(\"/\");r.pop();const i=[];let a=!0;for(let t=0;t<r.length;t+=1){i.push(r[t]);const n=i.join(\"/\");if(!e[n]?.expanded){a=!1;break}}if(a)return o[t]}return null}(S.current,b,p.current);return void(t&&(_M(t),f(t)))}if(\"ArrowUp\"===e.key){e.preventDefault();const t=function(e,t,n){const r=t.indexOf(n),o=t.slice(0,r);for(let t=o.length-1;t>=0;t-=1){const n=o[t].getAttribute(\"data-tree-key\");if(!n)continue;const r=n.split(\"/\");r.pop();const i=[];let a=!0;for(let t=0;t<r.length;t+=1){i.push(r[t]);const n=i.join(\"/\");if(!e[n]?.expanded){a=!1;break}}if(a)return o[t]}return null}(S.current,b,p.current);return void(t&&(_M(t),f(t)))}if(\"ArrowLeft\"===e.key){e.preventDefault();const t=p.current.getAttribute(\"data-tree-key\");if(!t)return;const n=S.current[t];if(!n)return;if(n.expanded)M((e=>{const n=e[t];return n?{...e,[t]:{...n,expanded:!1}}:e}));else{const e=t.split(\"/\");e.pop();const n=e.join(\"/\"),r=n&&S.current[n];r&&(r.element.focus(),f(r.element))}return}if(\"ArrowRight\"===e.key){e.preventDefault();const t=p.current.getAttribute(\"data-tree-key\");if(!t)return;return void(S.current[t]?.expanded||M((e=>{const n=e[t];return n?{...e,[t]:{...n,expanded:!0}}:e})))}}},r[21]=b,r[22]=D):D=r[22];const O=D;let z;r[23]!==i?(z=e=>{f(e.target),i?.(e)},r[23]=i,r[24]=z):z=r[24];const _=z;let W,q,Z,U;return r[25]===Symbol.for(\"react.memo_cache_sentinel\")?(W=()=>{if(!c.current)return;const e=Array.from(c.current.querySelectorAll('[data-ui=\"TreeItem\"]'));C(e)},r[25]=W):W=r[25],r[26]!==o?(q=[o],r[26]=o,r[27]=q):q=r[27],(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(W,q),r[28]!==o||r[29]!==_||r[30]!==O||r[31]!==a||r[32]!==l?(Z=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(lL,{as:\"ul\",\"data-ui\":\"Tree\",...a,onFocus:_,onKeyDown:O,ref:c,role:\"tree\",space:l,children:o}),r[28]=o,r[29]=_,r[30]=O,r[31]=a,r[32]=l,r[33]=Z):Z=r[33],r[34]!==B||r[35]!==Z?(U=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(WM.Provider,{value:B,children:Z}),r[34]=B,r[35]=Z,r[36]=U):U=r[36],U}))).displayName=\"Memo(ForwardRef(Tree))\";const UM=(0,react__WEBPACK_IMPORTED_MODULE_1__.memo)((function(t){const n=St.c(9);let r,o,i;n[0]!==t?(({children:r,expanded:i,...o}=t),n[0]=t,n[1]=r,n[2]=o,n[3]=i):(r=n[1],o=n[2],i=n[3]);const a=void 0!==i&&i,s=ZM(),l=!a;let c;return n[4]!==r||n[5]!==o||n[6]!==l||n[7]!==s.space?(c=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(lL,{as:\"ul\",\"data-ui\":\"TreeGroup\",...o,hidden:l,marginTop:s.space,role:\"group\",space:s.space,children:r}),n[4]=r,n[5]=o,n[6]=l,n[7]=s.space,n[8]=c):c=n[8],c})),GM=(0,react__WEBPACK_IMPORTED_MODULE_1__.memo)(co.li.withConfig({displayName:\"StyledTreeItem\",componentId:\"sc-iiskig-0\"})((function(){return ao`\n    &[role='none'] > [role='treeitem'] {\n      outline: none;\n      cursor: default;\n      border-radius: 3px;\n\n      background-color: var(--card-bg-color);\n      color: var(--treeitem-fg-color);\n\n      &:focus {\n        position: relative;\n      }\n    }\n\n    &[role='treeitem'] {\n      outline: none;\n\n      & > div {\n        cursor: default;\n        border-radius: 3px;\n\n        background-color: var(--card-bg-color);\n        color: var(--treeitem-fg-color);\n      }\n\n      &:focus > div {\n        position: relative;\n      }\n    }\n  `}),(function(e){const{color:t}=j(e.theme),n=t.selectable.default;return ao`\n    &[role='none'] {\n      & > [role='treeitem'] {\n        ${vC(t,n.enabled)}\n      }\n\n      &[data-selected] > [role='treeitem'] {\n        ${vC(t,n.pressed)}\n      }\n\n      @media (hover: hover) {\n        &:not([data-selected]) > [role='treeitem']:not(:focus):hover {\n          ${vC(t,n.hovered)}\n        }\n\n        & > [role='treeitem']:focus {\n          ${vC(t,n.selected)}\n        }\n      }\n    }\n\n    &[role='treeitem'] {\n      & > [data-ui='TreeItem__box'] {\n        ${vC(t,n.enabled)}\n      }\n\n      &[data-selected] > [data-ui='TreeItem__box'] {\n        ${vC(t,n.pressed)}\n      }\n\n      @media (hover: hover) {\n        &:not([data-selected]):not(:focus) > [data-ui='TreeItem__box']:hover {\n          ${vC(t,n.hovered)}\n        }\n\n        &:focus > [data-ui='TreeItem__box'] {\n          ${vC(t,n.selected)}\n        }\n      }\n    }\n  `}))),YM=/* @__PURE__ */co(aC).attrs({forwardedAs:\"a\"}).withConfig({displayName:\"TreeItemBox\",componentId:\"sc-iiskig-1\"})(qM),XM=co(cC).withConfig({displayName:\"ToggleArrowText\",componentId:\"sc-iiskig-2\"})`& > svg{transition:transform 100ms;}`;function KM(t){if(!t)/* @__PURE__ */return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(gi,{});if(\"string\"===t.type)/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Hs,{});if(\"number\"===t.type)/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Fa,{});const{value:n}=t;if(\"icon\"in t&&t.icon)/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\",{dangerouslySetInnerHTML:{__html:t.icon}});const{type:r}=n;if(\"string\"===r)/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Hs,{});if(\"boolean\"===r)/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(qo,{});if(\"number\"===r)/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Fa,{});if(\"array\"===r||\"union\"===r)return(Array.isArray(n.of)?n.of:[n.of]).some((e=>\"name\"in e&&\"block\"===e.name))?/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)($o,{}):/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Ds,{});if(\"object\"===r){if(\"image\"===t.name)/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(da,{});if(\"block\"===t.name)/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Hs,{})}/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(gi,{})}(0,react__WEBPACK_IMPORTED_MODULE_1__.memo)((function(n){const{children:r,expanded:o=!1,fontSize:i=1,href:a,icon:l,id:c,linkAs:u,muted:p,onClick:g,padding:v=2,selected:w=!1,space:y=2,text:b,weight:x,...C}=n,k=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),L=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),M=ZM(),{path:S,registerItem:R,setExpanded:V,setFocusedElement:E}=M,H=(0,react__WEBPACK_IMPORTED_MODULE_1__.useId)(),T=c||H,$=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>S.concat([T||\"\"])),[T,S]),A=$.join(\"/\"),N=M.state[A],I=M.focusedElement===k.current,P=void 0===N?.expanded?o:N?.expanded||!1,F=M.focusedElement&&M.focusedElement===k.current?0:-1,j=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>({...M,level:M.level+1,path:$})),[$,M]),B=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{g&&g(e);const t=e.target;t instanceof HTMLElement&&(\"TreeItem\"===t.getAttribute(\"data-ui\")||t.closest('[data-ui=\"TreeItem__box\"]'))&&(e.stopPropagation(),V(A,!P),E(k.current))}),[P,A,g,V,E]),D=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{I&&\"Enter\"===e.key&&(L.current||k.current)?.click()}),[I]);(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{if(k.current)return R(k.current,$.join(\"/\"),P,w)}),[P,$,R,w]);const O=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(fC,{padding:v,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(aC,{marginRight:y,style:{visibility:l||r?\"visible\":\"hidden\",pointerEvents:\"none\"},children:[l&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(cC,{muted:p,size:i,weight:x,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(l,{})}),!l&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(XM,{muted:p,size:i,weight:x,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_s,{style:{transform:P?\"rotate(90deg)\":void 0}})})]}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(aC,{flex:1,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(cC,{muted:p,size:i,textOverflow:\"ellipsis\",weight:x,children:b})})]});/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(GM,a?{\"data-selected\":w?\"\":void 0,\"data-tree-id\":T,\"data-tree-key\":A,\"data-ui\":\"TreeItem\",...C,onClick:B,ref:k,role:\"none\",children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(YM,{$level:M.level,\"aria-expanded\":P,as:u,\"data-ui\":\"TreeItem__box\",href:a,ref:L,role:\"treeitem\",tabIndex:F,children:O}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(WM.Provider,{value:j,children:r&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(UM,{hidden:!P,children:r})})]}:{\"data-selected\":w?\"\":void 0,\"data-ui\":\"TreeItem\",\"data-tree-id\":T,\"data-tree-key\":A,...C,\"aria-expanded\":P,onClick:B,onKeyDown:D,ref:k,role:\"treeitem\",tabIndex:F,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(YM,{$level:M.level,as:\"div\",\"data-ui\":\"TreeItem__box\",children:O}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(WM.Provider,{value:j,children:r&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(UM,{expanded:P,children:r})})]})})).displayName=\"Memo(TreeItem)\";const JM=co.div`\n  height: 100%;\n  inset: 0;\n  overflow-y: scroll;\n  overscroll-behavior: contain;\n  pointer-events: all;\n  position: fixed;\n  width: 100%;\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  &:before {\n    content: '';\n    display: block;\n    height: calc(100% + 1px);\n    position: absolute;\n    top: 0;\n    width: 100%;\n    z-index: -1;\n  }\n`,QM=co.div`\n  background: transparent;\n  height: 100%;\n  inset: 0;\n  position: absolute;\n  width: 100%;\n`,eS=n=>{const{children:r,onDismiss:o,setBoundaryElement:i}=n;/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)($k,{children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(JM,{\"data-sanity-overlay-element\":!0,ref:i,onClick:e=>{e.stopPropagation()},children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(QM,{onClickCapture:o}),r]})})};var tS,nS,rS,oS,iS,aS,sS,lS,cS,dS,uS,hS,fS,pS,mS,gS,vS,wS,yS,bS,xS,CS,kS,LS,MS,SS,RS,VS,ES,HS,TS,$S,AS,NS,IS,PS,FS,jS,BS,DS,OS,zS,_S,WS,qS,ZS,US,GS,YS,XS,KS,JS,QS,eR,tR,nR,rR,oR,iR,aR;function sR(){if(hS)return uS;hS=1;var e=function(){if(dS)return cS;dS=1;var e=function(){if(lS)return sS;lS=1;var e=\"object\"==typeof bt&&bt&&bt.Object===Object&&bt;return sS=e}(),t=\"object\"==typeof self&&self&&self.Object===Object&&self,n=e||t||Function(\"return this\")();return cS=n}().Symbol;return uS=e}function lR(){if(HS)return ES;HS=1;var e=function(){if(VS)return RS;VS=1;var e=sR(),t=pS?fS:(pS=1,fS=function(e,t){for(var n=-1,r=null==e?0:e.length,o=Array(r);++n<r;)o[n]=t(e[n],n,e);return o}),n=function(){if(gS)return mS;gS=1;var e=Array.isArray;return mS=e}(),r=function(){if(SS)return MS;SS=1;var e=function(){if(CS)return xS;CS=1;var e=sR(),t=function(){if(wS)return vS;wS=1;var e=sR(),t=Object.prototype,n=t.hasOwnProperty,r=t.toString,o=e?e.toStringTag:void 0;return vS=function(e){var t=n.call(e,o),i=e[o];try{e[o]=void 0;var a=!0}catch{}var s=r.call(e);return a&&(t?e[o]=i:delete e[o]),s}}(),n=function(){if(bS)return yS;bS=1;var e=Object.prototype.toString;return yS=function(t){return e.call(t)}}(),r=e?e.toStringTag:void 0;return xS=function(e){return null==e?void 0===e?\"[object Undefined]\":\"[object Null]\":r&&r in Object(e)?t(e):n(e)}}(),t=LS?kS:(LS=1,kS=function(e){return null!=e&&\"object\"==typeof e});return MS=function(n){return\"symbol\"==typeof n||t(n)&&\"[object Symbol]\"==e(n)}}(),o=e?e.prototype:void 0,i=o?o.toString:void 0;return RS=function e(o){if(\"string\"==typeof o)return o;if(n(o))return t(o,e)+\"\";if(r(o))return i?i.call(o):\"\";var a=o+\"\";return\"0\"==a&&1/o==-1/0?\"-0\":a}}();return ES=function(t){return null==t?\"\":e(t)}}function cR(){if(GS)return US;GS=1;var e=RegExp(\"[\\\\u200d\\\\ud800-\\\\udfff\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe2f\\\\u20d0-\\\\u20ff\\\\ufe0e\\\\ufe0f]\");return US=function(t){return e.test(t)}}var dR=/* @__PURE__ */xt(function(){if(aR)return iR;aR=1;var e=function(){if(zS)return OS;zS=1;var e=nS?tS:(nS=1,tS=function(e,t,n,r){var o=-1,i=null==e?0:e.length;for(r&&i&&(n=e[++o]);++o<i;)n=t(n,e[o],o,e);return n}),t=function(){if($S)return TS;$S=1;var e=function(){if(aS)return iS;aS=1;var e=(oS?rS:(oS=1,rS=function(e){return function(t){return e?.[t]}}))({À:\"A\",Á:\"A\",Â:\"A\",Ã:\"A\",Ä:\"A\",Å:\"A\",à:\"a\",á:\"a\",â:\"a\",ã:\"a\",ä:\"a\",å:\"a\",Ç:\"C\",ç:\"c\",Ð:\"D\",ð:\"d\",È:\"E\",É:\"E\",Ê:\"E\",Ë:\"E\",è:\"e\",é:\"e\",ê:\"e\",ë:\"e\",Ì:\"I\",Í:\"I\",Î:\"I\",Ï:\"I\",ì:\"i\",í:\"i\",î:\"i\",ï:\"i\",Ñ:\"N\",ñ:\"n\",Ò:\"O\",Ó:\"O\",Ô:\"O\",Õ:\"O\",Ö:\"O\",Ø:\"O\",ò:\"o\",ó:\"o\",ô:\"o\",õ:\"o\",ö:\"o\",ø:\"o\",Ù:\"U\",Ú:\"U\",Û:\"U\",Ü:\"U\",ù:\"u\",ú:\"u\",û:\"u\",ü:\"u\",Ý:\"Y\",ý:\"y\",ÿ:\"y\",Æ:\"Ae\",æ:\"ae\",Þ:\"Th\",þ:\"th\",ß:\"ss\",Ā:\"A\",Ă:\"A\",Ą:\"A\",ā:\"a\",ă:\"a\",ą:\"a\",Ć:\"C\",Ĉ:\"C\",Ċ:\"C\",Č:\"C\",ć:\"c\",ĉ:\"c\",ċ:\"c\",č:\"c\",Ď:\"D\",Đ:\"D\",ď:\"d\",đ:\"d\",Ē:\"E\",Ĕ:\"E\",Ė:\"E\",Ę:\"E\",Ě:\"E\",ē:\"e\",ĕ:\"e\",ė:\"e\",ę:\"e\",ě:\"e\",Ĝ:\"G\",Ğ:\"G\",Ġ:\"G\",Ģ:\"G\",ĝ:\"g\",ğ:\"g\",ġ:\"g\",ģ:\"g\",Ĥ:\"H\",Ħ:\"H\",ĥ:\"h\",ħ:\"h\",Ĩ:\"I\",Ī:\"I\",Ĭ:\"I\",Į:\"I\",İ:\"I\",ĩ:\"i\",ī:\"i\",ĭ:\"i\",į:\"i\",ı:\"i\",Ĵ:\"J\",ĵ:\"j\",Ķ:\"K\",ķ:\"k\",ĸ:\"k\",Ĺ:\"L\",Ļ:\"L\",Ľ:\"L\",Ŀ:\"L\",Ł:\"L\",ĺ:\"l\",ļ:\"l\",ľ:\"l\",ŀ:\"l\",ł:\"l\",Ń:\"N\",Ņ:\"N\",Ň:\"N\",Ŋ:\"N\",ń:\"n\",ņ:\"n\",ň:\"n\",ŋ:\"n\",Ō:\"O\",Ŏ:\"O\",Ő:\"O\",ō:\"o\",ŏ:\"o\",ő:\"o\",Ŕ:\"R\",Ŗ:\"R\",Ř:\"R\",ŕ:\"r\",ŗ:\"r\",ř:\"r\",Ś:\"S\",Ŝ:\"S\",Ş:\"S\",Š:\"S\",ś:\"s\",ŝ:\"s\",ş:\"s\",š:\"s\",Ţ:\"T\",Ť:\"T\",Ŧ:\"T\",ţ:\"t\",ť:\"t\",ŧ:\"t\",Ũ:\"U\",Ū:\"U\",Ŭ:\"U\",Ů:\"U\",Ű:\"U\",Ų:\"U\",ũ:\"u\",ū:\"u\",ŭ:\"u\",ů:\"u\",ű:\"u\",ų:\"u\",Ŵ:\"W\",ŵ:\"w\",Ŷ:\"Y\",ŷ:\"y\",Ÿ:\"Y\",Ź:\"Z\",Ż:\"Z\",Ž:\"Z\",ź:\"z\",ż:\"z\",ž:\"z\",Ĳ:\"IJ\",ĳ:\"ij\",Œ:\"Oe\",œ:\"oe\",ŉ:\"'n\",ſ:\"s\"});return iS=e}(),t=lR(),n=/[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g,r=RegExp(\"[\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe2f\\\\u20d0-\\\\u20ff]\",\"g\");return TS=function(o){return(o=t(o))&&o.replace(n,e).replace(r,\"\")}}(),n=function(){if(DS)return BS;DS=1;var e=function(){if(NS)return AS;NS=1;var e=/[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;return AS=function(t){return t.match(e)||[]}}(),t=function(){if(PS)return IS;PS=1;var e=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;return IS=function(t){return e.test(t)}}(),n=lR(),r=function(){if(jS)return FS;jS=1;var e=\"\\\\ud800-\\\\udfff\",t=\"\\\\u2700-\\\\u27bf\",n=\"a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff\",r=\"A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde\",o=\"\\\\xac\\\\xb1\\\\xd7\\\\xf7\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf\\\\u2000-\\\\u206f \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\",i=\"[\"+o+\"]\",a=\"\\\\d+\",s=\"[\"+t+\"]\",l=\"[\"+n+\"]\",c=\"[^\"+e+o+a+t+n+r+\"]\",d=\"(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}\",u=\"[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]\",h=\"[\"+r+\"]\",f=\"(?:\"+l+\"|\"+c+\")\",p=\"(?:\"+h+\"|\"+c+\")\",m=\"(?:['’](?:d|ll|m|re|s|t|ve))?\",g=\"(?:['’](?:D|LL|M|RE|S|T|VE))?\",v=\"(?:[\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe2f\\\\u20d0-\\\\u20ff]|\\\\ud83c[\\\\udffb-\\\\udfff])?\",w=\"[\\\\ufe0e\\\\ufe0f]?\",y=w+v+\"(?:\\\\u200d(?:\"+[\"[^\"+e+\"]\",d,u].join(\"|\")+\")\"+w+v+\")*\",b=\"(?:\"+[s,d,u].join(\"|\")+\")\"+y,x=RegExp([h+\"?\"+l+\"+\"+m+\"(?=\"+[i,h,\"$\"].join(\"|\")+\")\",p+\"+\"+g+\"(?=\"+[i,h+f,\"$\"].join(\"|\")+\")\",h+\"?\"+f+\"+\"+m,h+\"+\"+g,\"\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])\",\"\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])\",a,b].join(\"|\"),\"g\");return FS=function(e){return e.match(x)||[]}}();return BS=function(o,i,a){return o=n(o),void 0===(i=a?void 0:i)?t(o)?r(o):e(o):o.match(i)||[]}}(),r=RegExp(\"['’]\",\"g\");return OS=function(o){return function(i){return e(n(t(i).replace(r,\"\")),o,\"\")}}}(),t=function(){if(oR)return rR;oR=1;var e=function(){if(nR)return tR;nR=1;var e=function(){if(ZS)return qS;ZS=1;var e=WS?_S:(WS=1,_S=function(e,t,n){var r=-1,o=e.length;t<0&&(t=-t>o?0:o+t),(n=n>o?o:n)<0&&(n+=o),o=t>n?0:n-t>>>0,t>>>=0;for(var i=Array(o);++r<o;)i[r]=e[r+t];return i});return qS=function(t,n,r){var o=t.length;return r=void 0===r?o:r,!n&&r>=o?t:e(t,n,r)}}(),t=cR(),n=function(){if(eR)return QS;eR=1;var e=XS?YS:(XS=1,YS=function(e){return e.split(\"\")}),t=cR(),n=function(){if(JS)return KS;JS=1;var e=\"\\\\ud800-\\\\udfff\",t=\"[\"+e+\"]\",n=\"[\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe2f\\\\u20d0-\\\\u20ff]\",r=\"\\\\ud83c[\\\\udffb-\\\\udfff]\",o=\"[^\"+e+\"]\",i=\"(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}\",a=\"[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]\",s=\"(?:\"+n+\"|\"+r+\")?\",l=\"[\\\\ufe0e\\\\ufe0f]?\",c=l+s+\"(?:\\\\u200d(?:\"+[o,i,a].join(\"|\")+\")\"+l+s+\")*\",d=\"(?:\"+[o+n+\"?\",n,i,a,t].join(\"|\")+\")\",u=RegExp(r+\"(?=\"+r+\")|\"+d+c,\"g\");return KS=function(e){return e.match(u)||[]}}();return QS=function(r){return t(r)?n(r):e(r)}}(),r=lR();return tR=function(o){return function(i){i=r(i);var a=t(i)?n(i):void 0,s=a?a[0]:i.charAt(0),l=a?e(a,1).join(\"\"):i.slice(1);return s[o]()+l}}}()(\"toUpperCase\");return rR=e}(),n=e((function(e,n,r){return e+(r?\" \":\"\")+t(n)}));return iR=n}());function uR(e){const t=hR(e)&&1===(e.to??[]).length?e.to[0].icon:void 0;return e.icon??e.type?.icon??t}function hR(e){return!!(t=e)&&(\"object\"==typeof t||\"function\"==typeof t)&&(\"reference\"===e.name||hR(e.type));var t}function fR(e,t){return{query:\"change query\"===t.type?t.query:e.query,groups:\"select group\"===t.type?e.groups.map((e=>({...e,selected:t.name===e.name}))):e.groups,views:\"toggle view\"===t.type?e.views.map((e=>({...e,selected:t.name===e.name}))):e.views}}const pR=\"all-items\",mR={gridTemplateColumns:\"repeat(auto-fill, minmax(118px, 1fr))\"};function gR(n){const r=void 0===n.showIcons||n.showIcons,o=void 0===n.filter||\"auto\"===n.filter?n.schemaTypes.length>5:n.filter,[i,a]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useReducer)(fR,{query:\"\",groups:n.groups?[{name:pR,title:n.labels[\"insert-menu.filter.all-items\"],selected:!0},...n.groups.map((e=>({...e,selected:!1})))]:[],views:(n.views??[{name:\"list\"}]).map(((e,t)=>({...e,selected:0===t})))}),s=(u=n.schemaTypes,h=i.query,f=i.groups,u.filter((e=>function(e,t){const n=t.find((e=>e.selected));return!n||n.name===pR||n.of?.includes(e.name)}(e,f)&&function(e,t){const n=t.trim().toLowerCase();return e.title?e.title?.toLowerCase().includes(n):e.name.includes(n)}(e,h)))),l=i.views.find((e=>e.selected)),c=o||i.views.length>1,d=i.groups&&i.groups.length>0;var u,h,f;/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(LM,{padding:0,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(fC,{direction:\"column\",height:\"fill\",children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(aC,{...c||d?{style:{borderBottom:\"1px solid var(--card-border-color)\"},paddingBottom:1}:{},children:[c?/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(fC,{flex:\"none\",align:\"center\",paddingTop:1,paddingX:1,gap:1,children:[o?/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(aC,{flex:1,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NL,{autoFocus:!0,border:!1,fontSize:1,icon:ps,onChange:e=>{a({type:\"change query\",query:e.target.value})},placeholder:n.labels[\"insert-menu.search.placeholder\"],value:i.query})}):null,i.views.length>1?/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(aC,{flex:\"none\",children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(yR,{views:i.views,onToggle:e=>{a({type:\"toggle view\",name:e})},labels:n.labels})}):null]}):null,d?/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(aC,{paddingTop:1,paddingX:1,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(zM,{space:1,children:i.groups.map((t=>/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(DM,{id:`${t.name}-tab`,\"aria-controls\":`${t.name}-panel`,label:t.title??dR(t.name),selected:t.selected,onClick:()=>{a({type:\"select group\",name:t.name})}},t.name)))})}):null]}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(aC,{padding:1,children:0===s.length?/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(aC,{padding:2,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(cC,{muted:!0,size:1,children:n.labels[\"insert-menu.search.no-results\"]})}):l?\"grid\"===l.name?/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(zC,{autoRows:\"auto\",flex:1,gap:1,style:mR,children:s.map((t=>/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(bR,{icon:r?uR(t):void 0,onClick:()=>{n.onSelect(t)},previewImageUrl:l.previewImageUrl?.(t.name),schemaType:t},t.name)))}):/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(lL,{flex:1,space:1,children:s.map((t=>/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)($M,{icon:r?uR(t):void 0,onClick:()=>{n.onSelect(t)},text:t.title??dR(t.name)},t.name)))}):null})]})})}const vR={grid:Bs,list:Qs},wR={grid:\"insert-menu.toggle-grid-view.tooltip\",list:\"insert-menu.toggle-list-view.tooltip\"};function yR(t){const n=t.views.findIndex((e=>e.selected)),r=t.views[n+1]??t.views[0];/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_L,{content:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(cC,{size:1,children:t.labels[wR[r.name]]}),placement:\"top\",portal:!0,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(kC,{mode:\"bleed\",icon:vR[r.name],onClick:()=>{t.onToggle(r.name)}})})}function bR(n){const[r,o]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1);/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)($M,{padding:0,radius:2,onClick:n.onClick,style:{overflow:\"hidden\"},children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(fC,{direction:\"column\",gap:1,padding:1,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(aC,{flex:\"none\",style:{backgroundColor:\"var(--card-muted-bg-color)\",paddingBottom:\"66.6%\",position:\"relative\"},children:[Ht.isValidElementType(n.icon)?/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(fC,{align:\"center\",justify:\"center\",style:{position:\"absolute\",top:0,left:0,width:\"100%\",height:\"100%\"},children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(cC,{size:1,children:(0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(n.icon)})}):null,!n.previewImageUrl||r?null:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"img\",{src:n.previewImageUrl,style:{objectFit:\"contain\",width:\"100%\",height:\"100%\",position:\"absolute\",inset:0},onError:()=>{o(!0)}}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\",{style:{position:\"absolute\",top:0,left:0,width:\"100%\",height:\"100%\",boxShadow:\"inset 0 0 0 0.5px var(--card-fg-color)\",opacity:.1}})]}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(aC,{flex:1,padding:2,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(cC,{size:1,weight:\"medium\",children:n.schemaType.title??n.schemaType.name})})]})})}const xR={\"insert-menu.filter.all-items\":\"All\",\"insert-menu.search.no-results\":\"No results\",\"insert-menu.search.placeholder\":\"Filter types…\",\"insert-menu.toggle-grid-view.tooltip\":\"Toggle grid view\",\"insert-menu.toggle-list-view.tooltip\":\"Toggle list view\"},CR=t=>{const{node:n,onSelect:r}=t,o=n.options?.insertMenu||{},i=o.views?.map((e=>\"grid\"===e.name?{...e,previewImageUrl:t=>e.previewImageUrls?.[t]}:e));/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(gR,{...o,labels:xR,schemaTypes:n.of.map((e=>({...e,icon:KM(e)}))),onSelect:r,views:i})},kR=t=>{const{node:n,onDismiss:r,onSelect:o,referenceElement:i}=t,a=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(CR,{node:n,onSelect:o}),s=(n.options?.insertMenu||{}).views?.some((e=>\"grid\"===e.name))?0:void 0;/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(eS,{onDismiss:r,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Wk,{animate:!0,constrainSize:!0,content:a,fallbackPlacements:[\"bottom\"],open:!0,placement:\"top\",preventOverflow:!0,referenceElement:i,width:s})})},LR=({children:t,style:n,...r})=>/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\",{style:{...n,pointerEvents:\"all\"},\"data-sanity-overlay-element\":!0,...r,children:t});//# sourceMappingURL=PointerEvents.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/visual-editing/dist/_chunks-es/PointerEvents.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/visual-editing/dist/_chunks-es/SharedStateContext.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@sanity/visual-editing/dist/_chunks-es/SharedStateContext.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   S: () => (/* binding */ Z),\n/* harmony export */   c: () => (/* binding */ Q),\n/* harmony export */   s: () => (/* binding */ J),\n/* harmony export */   u: () => (/* binding */ d)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var use_effect_event__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! use-effect-event */ \"(ssr)/./node_modules/use-effect-event/dist/index.js\");\n/* harmony import */ var _optimistic_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../optimistic/index.js */ \"(ssr)/./node_modules/@sanity/visual-editing/dist/optimistic/index.js\");\n/* harmony import */ var _mutations_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mutations.js */ \"(ssr)/./node_modules/@sanity/visual-editing/dist/_chunks-es/mutations.js\");\n/* harmony import */ var _sanity_visual_editing_csm__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sanity/visual-editing-csm */ \"(ssr)/./node_modules/@sanity/visual-editing-csm/dist/index.js\");\n/* harmony import */ var _vercel_stega__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vercel/stega */ \"(ssr)/./node_modules/@vercel/stega/dist/index.mjs\");\nfunction d(o,c){const[l,u]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!0),[d,m]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(o),[y,p]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[f,g]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(o),h=(0,_mutations_js__WEBPACK_IMPORTED_MODULE_2__.b)(),v=(0,use_effect_event__WEBPACK_IMPORTED_MODULE_3__.useEffectEvent)(((e,t)=>(Array.isArray(c)?c:[c]).reduce(((t,n)=>n(t,{document:e.document,id:(0,_mutations_js__WEBPACK_IMPORTED_MODULE_2__.c)(e.id),originalId:e.id,type:e.type})),t))),w=(0,use_effect_event__WEBPACK_IMPORTED_MODULE_3__.useEffectEvent)((()=>g(o)));return (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{if((0,_optimistic_index_js__WEBPACK_IMPORTED_MODULE_4__.isEmptyActor)(h))return;let e;const t=h.on(\"rebased.local\",(t=>{const n={document:t.document,id:t.id,originalId:(0,_mutations_js__WEBPACK_IMPORTED_MODULE_2__.c)(t.id),type:\"mutate\"};m((e=>v(n,e))),p(n),w(),u(!1),clearTimeout(e)})),o=h.on(\"pristine\",(()=>{e=setTimeout((()=>{(0,react__WEBPACK_IMPORTED_MODULE_0__.startTransition)((()=>u(!0)))}),15e3)}));return()=>{t.unsubscribe(),o.unsubscribe()}}),[h,v,w]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{if(!l){if(!y)throw new Error(\"No last event found when syncing passthrough\");f!==o&&(0,react__WEBPACK_IMPORTED_MODULE_0__.startTransition)((()=>{m(v(y,o)),g(o)}))}}),[y,f,o,l,v]),l?o:d}const m=[];for(let e=0;e<256;++e)m.push((e+256).toString(16).slice(1));let y;const p=new Uint8Array(16);var f={randomUUID:typeof crypto<\"u\"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};function g(e){const t=e.getBoundingClientRect();return{x:t.x+scrollX,y:t.y+scrollY,w:t.width,h:t.height}}function h(e,t,n){return\"x\"===n?{x:e.x+t,y:e.y,w:e.w-2*t,h:e.h}:{x:e.x,y:e.y+t,w:e.w,h:e.h-2*t}}function v(e,t){const{x1:n,y1:o,x2:r,y2:i}=e,{x1:a,y1:s,x2:c,y2:l}=t;if(n===r&&o===i||a===c&&s===l)return!1;const u=(l-s)*(r-n)-(c-a)*(i-o);if(0===u)return!1;const d=((c-a)*(o-s)-(l-s)*(n-a))/u,m=((r-n)*(o-s)-(i-o)*(n-a))/u;return!(d<0||d>1||m<0||m>1)&&{x:n+d*(r-n),y:o+d*(i-o)}}function w(e,t){return e.x===t.x&&e.y===t.y&&e.w===t.w&&e.h===t.h}function x(e,t){const n=[{x1:t.x,y1:t.y,x2:t.x+t.w,y2:t.y},{x1:t.x+t.w,y1:t.y,x2:t.x+t.w,y2:t.y+t.h},{x1:t.x+t.w,y1:t.y+t.h,x2:t.x,y2:t.y+t.h},{x1:t.x,y1:t.y+t.h,x2:t.x,y2:t.y}],o=[];for(let t=0;t<n.length;t++){const r=v(e,n[t]);if(r){let e=!1;for(let t=0;t<o.length;t++)o[t].x===r.x&&o[t].y===r.y&&(e=!0);e||o.push(r)}}return 0!==o.length&&o.sort(((t,n)=>E(t,{x:e.x1,y:e.y1})-E(n,{x:e.x1,y:e.y1})))}function E(e,t){const n=e.x-t.x,o=e.y-t.y;return Math.sqrt(n*n+o*o)}function b(e,t,n){const o={x:e.x1,y:e.y1};if(t.some((e=>function(e,t){const n=e.x>=t.x&&e.x<=t.x+t.w,o=e.y>=t.y&&e.y<=t.y+t.h;return n&&o}(o,h(e,Math.min(e.w,e.h)/10,\"horizontal\"===n?\"x\":\"y\")))))return null;let r,i;for(const a of t){const t=x(e,h(a,Math.min(a.w,a.h)/10,\"horizontal\"===n?\"x\":\"y\"));if(t){const e=t[0];r?E(o,e)<E(o,r)&&(r=e,i=a):(r=e,i=a)}}return i||null}function M(e,t,n){const{x:o,y:r,w:i,h:a}=e,{x:s,y:c}=n;return{x:s+(o-s)*t,y:c+(r-c)*t,w:i*t,h:a*t}}function L(e){const t=Math.max(0,Math.min(...e.map((e=>e.y)))),n=Math.min(document.body.scrollHeight,Math.max(...e.map((e=>e.y+e.h))));return{min:t,max:n,height:n-t}}function T(e,t){return t.find((t=>w(g(t.elements.element),e)))?.sanity}function S(e,t,n){return Object.values(t).every((e=>null===e))?null:\"horizontal\"===n?{left:t.left?{rect:t.left,sanity:T(t.left,e)}:null,right:t.right?{rect:t.right,sanity:T(t.right,e)}:null}:{top:t.top?{rect:t.top,sanity:T(t.top,e)}:null,bottom:t.bottom?{rect:t.bottom,sanity:T(t.bottom,e)}:null}}function k(e){const t=document.body.getBoundingClientRect();return{x:Math.max(t.x,Math.min(e.clientX,t.x+t.width)),y:e.clientY+window.scrollY}}function I(e,t,n){const o=g(t),r=[...t.querySelectorAll(\":where(h1, h2, h3, h4, p, a, img, span, button):not(:has(*))\")];e.x<=o.x&&(e.x=o.x),e.x>=o.x+o.w&&(e.x=o.x+o.w),e.y>=o.y+o.h&&(e.y=o.y+o.h),e.y<=o.y&&(e.y=o.y);const i=r.map((e=>{const t=M(g(e),n,{x:o.x,y:o.y});return{x:t.x-o.x,y:t.y-o.y,w:t.w,h:t.h,tagName:e.tagName}}));return{offsetX:(o.x-e.x)*n,offsetY:(o.y-e.y)*n,w:o.w*n,h:o.h*n,maxWidth:o.w*n*.75,childRects:i}}function U(e){const t=function(e){const t=Math.max(0,Math.min(...e.map((e=>e.x)))),n=Math.min(document.body.offsetWidth,Math.max(...e.map((e=>e.x+e.w))));return{min:t,max:n,width:n-t}}(e),n=L(e),o=t.min>8&&t.min+t.width<=window.innerWidth-8,r=n.min>8&&n.min+n.height<=document.body.scrollHeight-8,i=o&&r;return{x:i?t.min-8:t.min,y:i?n.min-8:n.min,w:i?t.width+16:t.width,h:i?n.height+16:n.height}}async function A(e,t,n,o,r,i){return new Promise((a=>{const s=window.getComputedStyle(t).transform;if(1===new DOMMatrix(s).a)return;const c=n-window.innerHeight,l=scrollY;(e-=window.innerHeight/2)<0&&(e=0),t.addEventListener(\"transitionend\",(()=>{t.style.transition=\"none\",t.style.transform=\"none\",scrollTo({top:e,behavior:\"instant\"}),setTimeout((()=>{o({type:\"overlay/dragEndMinimapTransition\"}),o({type:\"overlay/dragToggleMinimap\",display:!1})}),2*r),a()}),{once:!0}),o({type:\"overlay/dragStartMinimapTransition\"}),t.style.transform=`translateY(${Math.max(l-e,-c+l)}px) scale(1)`,i&&(document.body.style.overflow=i.body.overflow,document.body.style.height=i.body.height,document.documentElement.style.overflow=i.documentElement.overflow,document.documentElement.style.height=i.documentElement.height)}))}let C=!1,R={x:0,y:0},D={x:0,y:0},N=typeof document>\"u\"?0:document.documentElement.scrollHeight,O=null;const P=e=>e instanceof HTMLElement||e instanceof SVGElement;function Y(e){const{display:t}=window.getComputedStyle(e);if(\"inline\"!==t)return e;const n=e.parentElement;return n?Y(n):null}const G=e=>e&&P(e)?e.dataset?.sanityOverlayElement?e:G(e.parentElement):null;function H(e,t=!1){return n=e,_vercel_stega__WEBPACK_IMPORTED_MODULE_1__.VERCEL_STEGA_REGEX.lastIndex=0,_vercel_stega__WEBPACK_IMPORTED_MODULE_1__.VERCEL_STEGA_REGEX.test(n)?function(e,t=!1){try{const n=(0,_vercel_stega__WEBPACK_IMPORTED_MODULE_1__.vercelStegaDecode)(e);return n&&\"sanity.io\"===n.origin?(t&&(n.href=n.href?.replace(\".alt\",\"\")),n):null}catch(t){return console.error(\"Failed to decode stega for string: \",e,\"with the original error: \",t),null}}(e,t):null;var n}const _=e=>e.nodeType===Node.ELEMENT_NODE,z=e=>\"IMG\"===e.tagName,j=e=>\"TIME\"===e.tagName,q=e=>\"SVG\"===e.tagName.toUpperCase();function W(e){return\"path\"in e}function V(e,t){let n=e.split(\".\"),o=t.split(\".\");const r=Math.min(n.length,o.length);return n=n.slice(0,r).reverse(),o=o.slice(0,r).reverse(),n.reduce(((e,t,n)=>t===o[n]?[...e,t]:[]),[]).reverse().join(\".\")}function X(e){if(!e.length||!e.map((e=>W(e))).every(((e,t,n)=>e===n[0])))return;if(!W(e[0]))return e[0];const t=e.filter(W);let n=e[0];const o=[\"projectId\",\"dataset\",\"id\",\"baseUrl\",\"workspace\",\"tool\"];for(let e=1;e<t.length;e++){const r=t[e];if(o.some((e=>r[e]!==n?.[e]))){n=void 0;break}n.path=V(n.path,r.path)}return n}function F(e){const t=[];function n(e,n){const o=(0,_sanity_visual_editing_csm__WEBPACK_IMPORTED_MODULE_5__.decodeSanityNodeData)(n);if(!o)return;const r=Y(e);r&&t.push({elements:{element:e,measureElement:r},sanity:o})}if(e)for(const o of e.childNodes){const{nodeType:e,parentElement:r,textContent:i}=o;if(_(o)&&void 0!==o.dataset?.sanityEditTarget){const e=F(o).map((({sanity:e})=>e));if(!e.map((e=>W(e))).every(((e,t,n)=>e===n[0])))continue;const n=X(e);n&&t.push({elements:{element:o,measureElement:o},sanity:n})}else if(e===Node.TEXT_NODE&&r&&i){const e=H(i);if(!e)continue;n(r,e)}else if(_(o)){if(\"SCRIPT\"===o.tagName||\"SANITY-VISUAL-EDITING\"===o.tagName)continue;if(o.dataset?.sanity)n(o,o.dataset.sanity);else if(o.dataset?.sanityEditInfo)n(o,o.dataset.sanityEditInfo);else{if(z(o)){const e=H(o.alt,!0);if(!e)continue;n(o,e);continue}if(j(o)){const e=H(o.dateTime,!0);if(!e)continue;n(o,e)}else if(q(o)){if(!o.ariaLabel)continue;const e=H(o.ariaLabel,!0);if(!e)continue;n(o,e)}}t.push(...F(o))}}return t}function $(e){const t=e.lastIndexOf(\".\");return e.substring(t,e.length).includes(\"[\")}function B(e){if(!$(e))return null;const t=e.split(\".\");return t[t.length-1]=t[t.length-1].replace(/\\[.*?\\]/g,\"[]\"),t.join(\".\")}function J(e,t){return!(!$(e.path)||!$(t.path))&&B(e.path)===B(t.path)}function K(e,t,n,o){if(!e.getAttribute(\"data-sanity\")||e.getAttribute(\"data-sanity-drag-disable\")||!t||!W(t)||!$(t.path))return null;const r=e.getAttribute(\"data-sanity-drag-group\"),i=[...n].reduce(((e,n)=>{const i=o.get(n),a=n.getAttribute(\"data-sanity-drag-disable\"),s=n.getAttribute(\"data-sanity-drag-group\"),c=null!==n.getAttribute(\"data-sanity\"),l=null===r||r===s;return i&&!a&&W(i.sanity)&&J(t,i.sanity)&&l&&c&&e.push(i),e}),[]);return i.length<=1?null:i}function Q({handler:e,overlayElement:t,inFrame:n,inPopUp:o,optimisticActorReady:r}){let i=!1;const a=/* @__PURE__ */new Map,s=/* @__PURE__ */new WeakMap,c=/* @__PURE__ */new Set,l=/* @__PURE__ */new WeakMap,u=/* @__PURE__ */new WeakMap;let d,h,v,x=!1,T=[];const Y=()=>T[T.length-1];function H(e,t){e.removeEventListener(\"click\",t.click,{capture:!0}),e.removeEventListener(\"contextmenu\",t.contextmenu,{capture:!0}),e.removeEventListener(\"mousemove\",t.mousemove,{capture:!0}),e.removeEventListener(\"mousedown\",t.mousedown,{capture:!0}),e.removeEventListener(\"mouseenter\",t.mouseenter),e.removeEventListener(\"mouseleave\",t.mouseleave)}function _({id:t,elements:n,handlers:o}){const{element:r,measureElement:i}=n;(function(e,t){e.addEventListener(\"click\",t.click,{capture:!0}),e.addEventListener(\"contextmenu\",t.contextmenu,{capture:!0}),e.addEventListener(\"mousemove\",t.mousemove,{once:!0,capture:!0}),e.addEventListener(\"mousedown\",t.mousedown,{capture:!0})})(r,o),d.observe(i),e({type:\"element/activate\",id:t})}function z({id:t,elements:n,handlers:o}){const{element:r,measureElement:i}=n;H(r,o),d.unobserve(i),T=T.filter((e=>e!==r)),e({type:\"element/deactivate\",id:t})}function j(t){if((n||o)&&r)for(const n of T){if(t===n){const n=s.get(t)?.sanity;if(!n||!W(n))return;if(K(t,n,c,s)){const n=t.style.cursor;n&&u.set(t,n),e({type:\"overlay/setCursor\",element:t,cursor:\"move\"});continue}}q(n)}}function q(t){const n=u.get(t);e({type:\"overlay/setCursor\",element:t,cursor:n})}function V({elements:u,sanity:d}){const{element:v,measureElement:H}=u,z={click(t){const o=t.target;if(v===Y()&&v.contains(o)){n&&(t.preventDefault(),t.stopPropagation());const o=s.get(v)?.sanity;o&&!x&&e({type:\"element/click\",id:V,sanity:o})}},contextmenu(t){if(!(\"path\"in d)||!n&&!o||!r||!d.path.split(\".\").pop()?.includes(\"[_key==\"))return;const i=t.target;v===Y()&&v.contains(i)&&((n||o)&&(t.preventDefault(),t.stopPropagation()),e({type:\"element/contextmenu\",id:V,position:{x:t.clientX,y:t.clientY},sanity:d}))},mousedown(t){if(t.preventDefault(),t.currentTarget!==T.at(-1)||v.getAttribute(\"data-sanity-drag-disable\")||!n&&!o||!r)return;const i=s.get(v)?.sanity;if(!i||!W(i)||!$(i.path))return;const a=K(v,d,c,s);a&&function(e){const{mouseEvent:t,element:n,overlayGroup:o,handler:r,target:i,onSequenceStart:a,onSequenceEnd:s}=e;if(0!==t.button)return;window.focus();let c=o.map((e=>g(e.elements.element)));const l=n.getAttribute(\"data-sanity-drag-flow\")||((f=c).some((e=>f.filter((t=>!w(e,t))).some((t=>e.y===t.y))))?\"horizontal\":\"vertical\"),u=n.getAttribute(\"data-sanity-drag-group\"),d=!!n.getAttribute(\"data-sanity-drag-minimap-disable\"),m=!!n.getAttribute(\"data-sanity-drag-prevent-default\"),y=n.getAttribute(\"data-unstable_sanity-drag-document-height\"),p=n.getAttribute(\"data-unstable_sanity-drag-group-height\");var f;let h=null;const v=k(t),x=document.body,{minYScaled:T,scaleFactor:P}=function(e,t){let n=t||L(e).height;n+=200;const o=n>window.innerHeight?window.innerHeight/n:1,r=e.map((e=>M(e,o,{x:window.innerWidth/2,y:0}))),{min:i}=L(r);return{scaleFactor:o,minYScaled:i-100*o}}(c,p?~~p:null);let Y=!1,G=!1,H=!0;C||(O={body:{overflow:window.getComputedStyle(document.body).overflow,height:window.getComputedStyle(document.body).height},documentElement:{overflow:window.getComputedStyle(document.documentElement).overflow,height:window.getComputedStyle(document.documentElement).height}},N=y?~~y:document.documentElement.scrollHeight);const _=setInterval((()=>{c=o.map((e=>g(e.elements.element)))}),150),z=()=>{if(P>=1)return;const e=I(D,n,P);r({type:\"overlay/dragUpdateSkeleton\",skeleton:e}),r({type:\"overlay/dragToggleMinimapPrompt\",display:!1}),r({type:\"overlay/dragToggleMinimap\",display:!0}),C=!0,async function(e,t,n,o){return new Promise((r=>{e.addEventListener(\"transitionend\",(()=>{setTimeout((()=>{o({type:\"overlay/dragEndMinimapTransition\"})}),300),r()}),{once:!0}),o({type:\"overlay/dragStartMinimapTransition\"}),o({type:\"overlay/dragToggleMinimap\",display:!0}),document.body.style.overflow=\"hidden\",document.body.style.height=\"100%\",document.documentElement.style.overflow=\"initial\",document.documentElement.style.height=\"100%\",setTimeout((()=>{e.style.transformOrigin=\"50% 0px\",e.style.transition=\"transform 150ms ease\",e.style.transform=`translate3d(0px, ${-n+scrollY}px, 0px) scale(${t})`}),25)}))}(x,P,T,r).then((()=>{setTimeout((()=>{r({type:\"overlay/dragUpdateGroupRect\",groupRect:U(c)})}),300)}))},j=e=>{Math.abs(e.deltaY)>=10&&P<1&&!C&&!G&&!d&&H&&(r({type:\"overlay/dragToggleMinimapPrompt\",display:!0}),G=!0),e.shiftKey&&!C&&!d&&(window.dispatchEvent(new CustomEvent(\"unstable_sanity/dragApplyMinimap\")),setTimeout((()=>{z()}),50))},q=e=>{if(e.preventDefault(),D=k(e),R=function(e){const t=document.body,n=window.getComputedStyle(t).transform;if(\"none\"===n)return{x:e.x,y:e.y};const o=new DOMMatrix(n).inverse(),r=new DOMPoint(e.x,e.y).matrixTransform(o);return{x:r.x,y:r.y}}(D),Math.abs(E(D,v))<4)return;if(!Y){const e=U(c),t=I(D,n,1);r({type:\"overlay/dragStart\",flow:l}),r({type:\"overlay/dragUpdateSkeleton\",skeleton:t}),r({type:\"overlay/dragUpdateGroupRect\",groupRect:e}),Y=!0,a()}r({type:\"overlay/dragUpdateCursorPosition\",x:D.x,y:D.y}),e.shiftKey&&!C&&!d&&(window.dispatchEvent(new CustomEvent(\"unstable_sanity/dragApplyMinimap\")),setTimeout((()=>{z()}),50));const t=function(e,t,n){if(\"horizontal\"===n){const o={x1:e.x,y1:e.y,x2:e.x-1e8,y2:e.y},r={x1:e.x,y1:e.y,x2:e.x+1e8,y2:e.y};return{left:b(o,t,n),right:b(r,t,n)}}{const o={x1:e.x,y1:e.y,x2:e.x,y2:e.y-1e8},r={x1:e.x,y1:e.y,x2:e.x,y2:e.y+1e8};return{top:b(o,t,n),bottom:b(r,t,n)}}}(D,c,l);JSON.stringify(h)!==JSON.stringify(t)&&(h=t,r({type:\"overlay/dragUpdateInsertPosition\",insertPosition:S(o,h,l)}))},W=()=>{H=!1,r({type:\"overlay/dragEnd\",target:i,insertPosition:h?S(o,h,l):null,dragGroup:u,flow:l,preventInsertDefault:m}),G&&r({type:\"overlay/dragToggleMinimapPrompt\",display:!1}),C||(clearInterval(_),s(),B(),$()),F()},V=e=>{if(\"Shift\"===e.key&&C){C=!1;const e=I(D,n,1/P);r({type:\"overlay/dragUpdateSkeleton\",skeleton:e}),window.dispatchEvent(new CustomEvent(\"unstable_sanity/dragResetMinimap\")),setTimeout((()=>{A(R.y,x,N,r,150,O)}),50),r({type:\"overlay/dragUpdateGroupRect\",groupRect:null}),H||(clearInterval(_),F(),B(),$(),s())}},X=()=>{r({type:\"overlay/dragUpdateGroupRect\",groupRect:null}),window.dispatchEvent(new CustomEvent(\"unstable_sanity/dragResetMinimap\")),setTimeout((()=>{A(R.y,x,N,r,150,O).then((()=>{C=!1}))}),50),clearInterval(_),F(),B(),$(),s()},F=()=>{window.removeEventListener(\"mousemove\",q),window.removeEventListener(\"wheel\",j),window.removeEventListener(\"mouseup\",W)},$=()=>{window.removeEventListener(\"keyup\",V)},B=()=>{window.removeEventListener(\"blur\",X)};window.addEventListener(\"blur\",X),window.addEventListener(\"keyup\",V),window.addEventListener(\"wheel\",j),window.addEventListener(\"mousemove\",q),window.addEventListener(\"mouseup\",W)}({element:v,handler:e,mouseEvent:t,overlayGroup:a,target:i,onSequenceStart:()=>{x=!0},onSequenceEnd:()=>{setTimeout((()=>{x=!1}),250)}})},mousemove(e){z.mouseenter(e);const t=e.currentTarget;t&&(t.addEventListener(\"mouseenter\",z.mouseenter),t.addEventListener(\"mouseleave\",z.mouseleave))},mouseenter(){document.querySelector(\"vercel-live-feedback\")&&v.closest(\"[data-vercel-edit-info]\")||v.closest(\"[data-vercel-edit-target]\")||(T.push(v),e({type:\"element/mouseenter\",id:V,rect:g(v)}),j(v))},mouseleave(n){function o(){T.pop();const t=Y();if(e({type:\"element/mouseleave\",id:V}),t){j(t);const n=s.get(t);n&&e({type:\"element/mouseenter\",id:n.id,rect:g(t)})}q(v)}const{relatedTarget:r}=n,i=G(r),a=t.contains(i);if(P(i)&&a)return function e(t){const n=r=>{const{relatedTarget:i}=r;G(i)?i&&P(i)&&(t.removeEventListener(\"mouseleave\",n),e(i)):(t.removeEventListener(\"mouseleave\",n),o())};t.addEventListener(\"mouseleave\",n)}(i);o()}},V=function(e){if(f.randomUUID&&!e)return f.randomUUID();const t=(e=e||{}).random??e.rng?.()??function(){if(!y){if(typeof crypto>\"u\"||!crypto.getRandomValues)throw new Error(\"crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported\");y=crypto.getRandomValues.bind(crypto)}return y(p)}();if(t.length<16)throw new Error(\"Random bytes length must be >= 16\");return t[6]=15&t[6]|64,t[8]=63&t[8]|128,function(e,t=0){return(m[e[t+0]]+m[e[t+1]]+m[e[t+2]]+m[e[t+3]]+\"-\"+m[e[t+4]]+m[e[t+5]]+\"-\"+m[e[t+6]]+m[e[t+7]]+\"-\"+m[e[t+8]]+m[e[t+9]]+\"-\"+m[e[t+10]]+m[e[t+11]]+m[e[t+12]]+m[e[t+13]]+m[e[t+14]]+m[e[t+15]]).toLowerCase()}(t)}(),X={id:V,elements:u,sanity:d,handlers:z};c.add(v),l.set(H,v),a.set(V,v),s.set(v,X),h?.observe(v),e({type:\"element/register\",id:V,element:v,rect:g(v),sanity:d,dragDisabled:!!v.getAttribute(\"data-sanity-drag-disable\")}),i&&_(X)}function X({elements:t,sanity:n}){const{element:o}=t,r=s.get(o);r&&(s.set(o,{...r,sanity:n}),e({type:\"element/update\",id:r.id,rect:g(o),sanity:n}))}function B(e){const t=F(e);for(const e of t){const{element:t}=e.elements;s.has(t)?X(e):V(e)}}function J(t){const n=s.get(t);if(n){const{id:o,handlers:r}=n;H(t,r),d.unobserve(t),s.delete(t),c.delete(t),a.delete(o),e({type:\"element/unregister\",id:o})}}function Q(t){const n=s.get(t);n&&e({type:\"element/updateRect\",id:n.id,rect:g(t)})}function Z(e){if(i)for(const t of e){const{target:e}=t,n=P(e)&&s.get(e);n&&(t.isIntersecting?_(n):z(n))}}function ee(t){const n=G(t.target);n?\"capture\"===n.dataset.sanityOverlayElement&&(t.preventDefault(),t.stopPropagation()):(T=[],e({type:\"overlay/blur\"}))}function te(){for(const e of c)Q(e)}function ne(t){\"Escape\"===t.key&&(T=[],e({type:\"overlay/blur\"}))}function oe(e){const{target:t}=e;if(t!==window.document&&P(t))for(const e of c)t.contains(e)&&Q(e)}function re(){i||(h=new IntersectionObserver(Z,{threshold:.3}),c.forEach((e=>h.observe(e))),e({type:\"overlay/activate\"}),i=!0)}function ie(){i&&(h?.disconnect(),c.forEach((e=>{const t=s.get(e);t&&z(t)})),e({type:\"overlay/deactivate\"}),i=!1)}return window.document.fonts.ready.then((()=>{for(const e of c)Q(e)})),window.addEventListener(\"click\",ee),window.addEventListener(\"contextmenu\",ee),window.addEventListener(\"keydown\",ne),window.addEventListener(\"resize\",te),window.addEventListener(\"scroll\",oe,{capture:!0,passive:!0}),d=new ResizeObserver((function(e){for(const t of e){const e=t.target;if(P(e)){const t=l.get(e);if(!t)return;Q(t)}}})),v=new MutationObserver((function(e){let n=!1;for(const o of e){const{target:e,type:r}=o,i=\"characterData\"===r?e.parentElement:e;i===t||t.contains(i)||(n=!0,P(i)&&B({childNodes:[i]}))}if(n)for(const e of c)e.isConnected||J(e)})),v.observe(document.body,{attributes:!0,characterData:!0,childList:!0,subtree:!0}),B(document.body),re(),{activate:re,deactivate:ie,destroy:function(){window.removeEventListener(\"click\",ee),window.removeEventListener(\"contextmenu\",ee),window.removeEventListener(\"keydown\",ne),window.removeEventListener(\"resize\",te),window.removeEventListener(\"scroll\",oe),v.disconnect(),d.disconnect(),c.forEach((e=>{J(e)})),a.clear(),c.clear(),T=[],ie()}}}const Z=(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);//# sourceMappingURL=SharedStateContext.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/visual-editing/dist/_chunks-es/SharedStateContext.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/visual-editing/dist/_chunks-es/mutations.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@sanity/visual-editing/dist/_chunks-es/mutations.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   a: () => (/* binding */ C),\n/* harmony export */   b: () => (/* binding */ D),\n/* harmony export */   c: () => (/* binding */ A),\n/* harmony export */   d: () => (/* binding */ _),\n/* harmony export */   e: () => (/* binding */ F),\n/* harmony export */   f: () => (/* binding */ B),\n/* harmony export */   g: () => (/* binding */ q),\n/* harmony export */   h: () => (/* binding */ z),\n/* harmony export */   i: () => (/* binding */ v),\n/* harmony export */   j: () => (/* binding */ E),\n/* harmony export */   u: () => (/* binding */ K)\n/* harmony export */ });\n/* harmony import */ var _sanity_mutate__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sanity/mutate */ \"(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/index.js\");\n/* harmony import */ var _sanity_presentation_comlink__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sanity/presentation-comlink */ \"(ssr)/./node_modules/@sanity/presentation-comlink/dist/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _optimistic_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../optimistic/index.js */ \"(ssr)/./node_modules/@sanity/visual-editing/dist/optimistic/index.js\");\n/* harmony import */ var _sanity_visual_editing_csm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sanity/visual-editing-csm */ \"(ssr)/./node_modules/@sanity/visual-editing-csm/dist/index.js\");\n/* harmony import */ var get_random_values_esm__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! get-random-values-esm */ \"(ssr)/./node_modules/get-random-values-esm/index.mjs\");\nconst l=/_key\\s*==\\s*['\"](.*)['\"]/,g=/^\\d*:\\d*$/;function b(t){return\"number\"==typeof t||\"string\"==typeof t&&/^\\[\\d+\\]$/.test(t)}function w(t){return\"string\"==typeof t?l.test(t.trim()):\"object\"==typeof t&&\"_key\"in t}const k=/[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g,x=/_key\\s*==\\s*['\"](.*)['\"]/;function _(t,n,e){const r=\"string\"==typeof n?function(t){if(\"string\"!=typeof t)throw new Error(\"Path is not a string\");const n=t.match(k);if(!n)throw new Error(\"Invalid path string\");return n.map(I)}(n):n;if(!Array.isArray(r))throw new Error(\"Path must be an array or a string\");let o=t;for(let t=0;t<r.length;t++){const n=r[t];if(b(n)){if(!Array.isArray(o))return e;o=o[n]}if(w(n)){if(!Array.isArray(o))return e;o=o.find((t=>t._key===n._key))}if(\"string\"==typeof n&&(o=\"object\"==typeof o&&null!==o?o[n]:void 0),typeof o>\"u\")return e}return o}function I(t){return b(t)?function(t){return Number(t.replace(/[^\\d]/g,\"\"))}(t):w(t)?function(t){return{_key:t.match(x)[1]}}(t):function(t){if(\"string\"==typeof t&&g.test(t))return!0;if(!Array.isArray(t)||2!==t.length)return!1;const[n,e]=t;return!(\"number\"!=typeof n&&\"\"!==n||\"number\"!=typeof e&&\"\"!==e)}(t)?function(t){const[n,e]=t.split(\":\").map((t=>\"\"===t?t:Number(t)));return[n,e]}(t):t}function S(t){return t.startsWith(_sanity_visual_editing_csm__WEBPACK_IMPORTED_MODULE_1__.DRAFTS_PREFIX)}function E(t){return S(t)?t:_sanity_visual_editing_csm__WEBPACK_IMPORTED_MODULE_1__.DRAFTS_PREFIX+t}function A(t){return S(t)?t.slice(_sanity_visual_editing_csm__WEBPACK_IMPORTED_MODULE_1__.DRAFTS_PREFIX.length):t}function D(){const t=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((t=>(_optimistic_index_js__WEBPACK_IMPORTED_MODULE_2__.listeners.add(t),()=>_optimistic_index_js__WEBPACK_IMPORTED_MODULE_2__.listeners.delete(t))),[]);return (0,react__WEBPACK_IMPORTED_MODULE_0__.useSyncExternalStore)(t,(()=>_optimistic_index_js__WEBPACK_IMPORTED_MODULE_2__.actor),(()=>_optimistic_index_js__WEBPACK_IMPORTED_MODULE_2__.emptyActor))}function v(){const t=D();return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>!(0,_optimistic_index_js__WEBPACK_IMPORTED_MODULE_2__.isEmptyActor)(t)),[t])}function O(t,n){let e;return(...r)=>{clearTimeout(e),e=setTimeout((()=>{t.apply(t,r)}),n)}}function j(t,n){const e=(0,_sanity_presentation_comlink__WEBPACK_IMPORTED_MODULE_3__.isMaybePreviewIframe)(),r=(0,_sanity_presentation_comlink__WEBPACK_IMPORTED_MODULE_3__.isMaybePreviewWindow)();if((0,_optimistic_index_js__WEBPACK_IMPORTED_MODULE_2__.isEmptyActor)(n)||!e&&!r)throw new Error(\"The `useDocuments` hook cannot be used in this context\");const o=E(t),u=A(t),a=n.getSnapshot().context?.documents,f=a?.[o],c=a?.[u],p=f||c;if(!p)throw new Error(`Document \"${t}\" not found`);const d=f.getSnapshot().context?.local||c.getSnapshot().context?.local,h=new Promise((t=>{if(d)t(d);else{const n=p.on(\"ready\",(e=>{const{snapshot:r}=e;t(r||null),n.unsubscribe()}))}}));return{draftDoc:f,draftId:o,getSnapshot:()=>h,publishedDoc:c,publishedId:u,get snapshot(){if(!d)throw new Error(`Snapshot for document \"${t}\" not found`);return d}}}function $(t,n){return()=>{const{draftDoc:e}=j(t,n);e.send({type:\"submit\"})}}function N(t,n){return e=>{const{snapshot:r}=j(t,n);return e?_(r,e):r}}function P(t,n){const{getSnapshot:e}=j(t,n);return e}function T(e,r){return async(o,s)=>{const i=j(e,r),{draftDoc:u,draftId:a,getSnapshot:f,publishedId:c}=i,{commit:p=!0}=s||{},d=await(\"function\"==typeof o?o({draftId:a,publishedId:c,get snapshot(){return i.snapshot},getSnapshot:f}):o),y=await f();if(!y)throw new Error(`Snapshot for document \"${e}\" not found`);u.send({type:\"mutate\",mutations:[(0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_4__.createIfNotExists)({...y,_id:a}),(0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_4__.patch)(a,d)]}),p&&(\"object\"==typeof p&&\"debounce\"in p?O((()=>u.send({type:\"submit\"})),p.debounce)():u.send({type:\"submit\"}))}}function K(){const t=D();return{getDocument:(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((n=>({id:n,commit:$(n,t),get:N(n,t),getSnapshot:P(n,t),patch:T(n,t)})),[t]),mutateDocument:(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(((n,e,r)=>{const{draftDoc:o}=j(n,t),{commit:s=!0}=r||{};o.send({type:\"mutate\",mutations:e}),s&&(\"object\"==typeof s&&\"debounce\"in s?O((()=>o.send({type:\"submit\"})),s.debounce)():o.send({type:\"submit\"}))}),[t])}}const U=/* @__PURE__ */(()=>{let t;return()=>{if(t)return t;t=[];for(let n=0;n<256;++n)t[n]=(n+256).toString(16).slice(1);return t}})();function W(t){const n=U();return function(t=16){const n=new Uint8Array(t);return (0,get_random_values_esm__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(n),n}(t).reduce(((t,e)=>t+n[e]),\"\").slice(0,t)}function q(t){const n=\"string\"==typeof t?t:t.path,e=n.lastIndexOf(\".\"),r=n.substring(e+1,n.length);if(!r.indexOf(\"[\"))throw new Error(\"Invalid path: not an array\");const o=n.lastIndexOf(\"[\"),s=n.substring(0,o);let i,u;if(r.includes(\"_key\")){const t=r.indexOf('\"')+1,n=r.indexOf('\"',t);i=r.substring(t,n),u=!0}else{const t=r.indexOf(\"[\")+1,n=r.indexOf(\"]\",t);i=r.substring(t,n),u=!1}if(!s||!i)throw new Error(\"Invalid path\");return{path:s,key:i,hasExplicitKey:u}}function z(t,n,o=\"after\"){const{path:s,key:i}=q(t),u={..._(n,t.path),_key:W()};return[(0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_4__.at)(s,(0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_4__.insert)(u,o,{_key:i}))]}function B(t,n){const{path:r,key:s}=q(t),i=_(n,r).findIndex((t=>t._key===s));return[(0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_4__.at)(r,(0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_4__.truncate)(i,i+1))]}function C(t,n,o){const{path:s,key:i}=q(t),u=W();return[(0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_4__.at)(s,(0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_4__.insert)([{_type:n,_key:u}],o,{_key:i}))]}async function F(t,n,s){if(!t.type)throw new Error(\"Node type is missing\");const{path:i,key:u}=q(t),a=await n.getSnapshot(),f=_(a,i),c=_(a,t.path),p=f.findIndex((t=>t._key===u));let d=-1,y=\"before\";if(\"first\"===s){if(0===p)return[];d=0,y=\"before\"}else if(\"last\"===s){if(p===f.length-1)return[];d=-1,y=\"after\"}else if(\"next\"===s){if(p===f.length-1)return[];d=p,y=\"after\"}else if(\"previous\"===s){if(0===p)return[];d=p-1,y=\"before\"}return[(0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_4__.at)(i,(0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_4__.truncate)(p,p+1)),(0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_4__.at)(i,(0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_4__.insert)(c,y,d))]}//# sourceMappingURL=mutations.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/visual-editing/dist/_chunks-es/mutations.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/visual-editing/dist/optimistic/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@sanity/visual-editing/dist/optimistic/index.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   actor: () => (/* binding */ l),\n/* harmony export */   createDatasetMutator: () => (/* binding */ v),\n/* harmony export */   createDocumentMutator: () => (/* binding */ d),\n/* harmony export */   emptyActor: () => (/* binding */ h),\n/* harmony export */   isEmptyActor: () => (/* binding */ y),\n/* harmony export */   listeners: () => (/* binding */ f),\n/* harmony export */   setActor: () => (/* binding */ b)\n/* harmony export */ });\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! xstate */ \"(ssr)/./node_modules/xstate/actors/dist/xstate-actors.development.esm.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! xstate */ \"(ssr)/./node_modules/xstate/dist/log-0acd9069.development.esm.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! xstate */ \"(ssr)/./node_modules/xstate/dist/xstate.development.esm.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! xstate */ \"(ssr)/./node_modules/xstate/dist/raise-1db27a82.development.esm.js\");\n/* harmony import */ var _sanity_mutate_unstable_machine__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sanity/mutate/_unstable_machine */ \"(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_unstable_machine.js\");\n/* harmony import */ var _sanity_mutate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sanity/mutate */ \"(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/index.js\");\nconst d=n=>{const o=(0,xstate__WEBPACK_IMPORTED_MODULE_0__.fromPromise)((async({input:t,signal:e})=>{const{id:o}=t,{snapshot:s}=await n.fetch(\"visual-editing/fetch-snapshot\",{documentId:o},{signal:e});return s})),s=(0,xstate__WEBPACK_IMPORTED_MODULE_0__.fromPromise)((async({input:t})=>{const{transactions:e}=t;for(const t of e){const e=_sanity_mutate__WEBPACK_IMPORTED_MODULE_1__.SanityEncoder.encodeTransaction(t);return n.post(\"visual-editing/mutate\",e)}}));return _sanity_mutate_unstable_machine__WEBPACK_IMPORTED_MODULE_2__.documentMutatorMachine.provide({actions:{\"send sync event to parent\":(0,xstate__WEBPACK_IMPORTED_MODULE_3__.b)((({enqueue:t})=>{t.sendParent((({context:t})=>({type:\"sync\",id:t.id,document:t.remote}))),t.emit((({context:t})=>({type:\"ready\",snapshot:t.local})))}))},actors:{\"fetch remote snapshot\":o,\"submit mutations as transactions\":s}})},p=(0,xstate__WEBPACK_IMPORTED_MODULE_4__.setup)({types:{},actions:{\"emit sync event\":(0,xstate__WEBPACK_IMPORTED_MODULE_3__.e)((({event:t})=>((0,xstate__WEBPACK_IMPORTED_MODULE_4__.assertEvent)(t,\"sync\"),t))),\"emit mutation event\":(0,xstate__WEBPACK_IMPORTED_MODULE_3__.e)((({event:t})=>((0,xstate__WEBPACK_IMPORTED_MODULE_4__.assertEvent)(t,\"mutation\"),t))),\"emit rebased event\":(0,xstate__WEBPACK_IMPORTED_MODULE_3__.e)((({event:t})=>((0,xstate__WEBPACK_IMPORTED_MODULE_4__.assertEvent)(t,[\"rebased.local\",\"rebased.remote\"]),t))),\"emit pristine event\":(0,xstate__WEBPACK_IMPORTED_MODULE_3__.e)((({event:t})=>((0,xstate__WEBPACK_IMPORTED_MODULE_4__.assertEvent)(t,[\"pristine\"]),t))),\"add document actor\":(0,xstate__WEBPACK_IMPORTED_MODULE_3__.a)({documents:({context:t,event:e,spawn:n})=>{(0,xstate__WEBPACK_IMPORTED_MODULE_4__.assertEvent)(e,\"observe\");const o=e.documentId;return t.documents[o]?t.documents:{...t.documents,[o]:n(\"documentMutatorMachine\",{input:{id:o,client:t.client,sharedListener:t.sharedListener||(0,_sanity_mutate_unstable_machine__WEBPACK_IMPORTED_MODULE_2__.createSharedListener)(t.client)},id:o})}}}),\"stop remote snapshot\":(0,xstate__WEBPACK_IMPORTED_MODULE_5__.R)((({context:t,event:e})=>((0,xstate__WEBPACK_IMPORTED_MODULE_4__.assertEvent)(e,\"unobserve\"),t.documents[e.documentId]))),\"remove remote snapshot from context\":(0,xstate__WEBPACK_IMPORTED_MODULE_3__.a)({documents:({context:t,event:e})=>{if((0,xstate__WEBPACK_IMPORTED_MODULE_4__.assertEvent)(e,\"unobserve\"),!t.documents[e.documentId])return t.documents;const{[e.documentId]:n,...o}=t.documents;return o}})},actors:{documentMutatorMachine:_sanity_mutate_unstable_machine__WEBPACK_IMPORTED_MODULE_2__.documentMutatorMachine}}).createMachine({id:\"dataset-mutator\",context:({input:t})=>({documents:{},client:t.client,sharedListener:t.sharedListener}),on:{sync:{actions:[\"emit sync event\"]},mutation:{actions:[\"emit mutation event\"]},\"rebased.*\":{actions:[\"emit rebased event\"]},pristine:{actions:[\"emit pristine event\"]},observe:{actions:[\"add document actor\"]},unobserve:{actions:[\"stop remote snapshot\",\"remove remote snapshot from context\"]}},initial:\"pristine\",states:{pristine:{}}}),v=t=>p.provide({actors:{documentMutatorMachine:d(t)}}),h=(0,xstate__WEBPACK_IMPORTED_MODULE_0__.createEmptyActor)();let l=h;const f=/* @__PURE__ */new Set;function y(t){return t===h}function b(t){l=t;for(const t of f)t()}//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS92aXN1YWwtZWRpdGluZy9kaXN0L29wdGltaXN0aWMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFtUyxZQUFZLFFBQVEsbURBQUMsU0FBUyxpQkFBaUIsSUFBSSxNQUFNLEtBQUssSUFBSSxXQUFXLGdEQUFnRCxhQUFhLEVBQUUsU0FBUyxFQUFFLFNBQVMsS0FBSyxtREFBQyxTQUFTLFFBQVEsSUFBSSxNQUFNLGVBQWUsR0FBRyxrQkFBa0IsUUFBUSx5REFBQyxzQkFBc0IsMENBQTBDLEdBQUcsT0FBTyxtRkFBQyxVQUFVLFNBQVMsNEJBQTRCLHlDQUFDLElBQUksVUFBVSxJQUFJLGdCQUFnQixVQUFVLEtBQUssc0NBQXNDLGNBQWMsVUFBVSxLQUFLLDhCQUE4QixJQUFJLEdBQUcsU0FBUyxnRUFBZ0UsRUFBRSxHQUFHLDZDQUFDLEVBQUUsUUFBUSxVQUFVLGtCQUFrQix5Q0FBQyxJQUFJLFFBQVEsSUFBSSxtREFBQyxzQ0FBc0MseUNBQUMsSUFBSSxRQUFRLElBQUksbURBQUMseUNBQXlDLHlDQUFDLElBQUksUUFBUSxJQUFJLG1EQUFDLGtFQUFrRSx5Q0FBQyxJQUFJLFFBQVEsSUFBSSxtREFBQywyQ0FBMkMseUNBQUMsRUFBRSxZQUFZLDBCQUEwQixJQUFJLG1EQUFDLGNBQWMscUJBQXFCLG1DQUFtQywrQ0FBK0MsT0FBTyxzREFBc0QscUZBQUMsV0FBVyxNQUFNLElBQUkseUJBQXlCLHlDQUFDLElBQUksa0JBQWtCLElBQUksbURBQUMsbUZBQW1GLHlDQUFDLEVBQUUsWUFBWSxrQkFBa0IsSUFBSSxHQUFHLG1EQUFDLDhEQUE4RCxNQUFNLHNCQUFzQixhQUFhLFVBQVUsRUFBRSxTQUFTLHVCQUF1QixtRkFBQyxFQUFFLGlCQUFpQiwrQkFBK0IsUUFBUSxLQUFLLFlBQVksaURBQWlELE1BQU0sTUFBTSw0QkFBNEIsV0FBVyxnQ0FBZ0MsY0FBYywrQkFBK0IsV0FBVyxnQ0FBZ0MsVUFBVSwrQkFBK0IsWUFBWSx3RUFBd0UsNEJBQTRCLGFBQWEsa0JBQWtCLFFBQVEsNkJBQTZCLElBQUksd0RBQUMsR0FBRyxRQUFRLCtCQUErQixjQUFjLGFBQWEsY0FBYyxJQUFJLHFCQUE0SiIsInNvdXJjZXMiOlsiL21lZGlhL2F3YWlzL05ldyBWb2x1bWUvR292ZXJOT3IgSG91c2UgL2hhY2thdGhvbi0zL3NlY29uZFRpbWVzL2hhY2thdGhvbi1iYW5kYWdlL25vZGVfbW9kdWxlcy9Ac2FuaXR5L3Zpc3VhbC1lZGl0aW5nL2Rpc3Qvb3B0aW1pc3RpYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnR7ZnJvbVByb21pc2UgYXMgdCxlbnF1ZXVlQWN0aW9ucyBhcyBlLHNldHVwIGFzIG4sZW1pdCBhcyBvLGFzc2VydEV2ZW50IGFzIHMsYXNzaWduIGFzIGksc3RvcENoaWxkIGFzIGMsY3JlYXRlRW1wdHlBY3RvciBhcyBhfWZyb21cInhzdGF0ZVwiO2ltcG9ydHtkb2N1bWVudE11dGF0b3JNYWNoaW5lIGFzIHIsY3JlYXRlU2hhcmVkTGlzdGVuZXIgYXMgbX1mcm9tXCJAc2FuaXR5L211dGF0ZS9fdW5zdGFibGVfbWFjaGluZVwiO2ltcG9ydHtTYW5pdHlFbmNvZGVyIGFzIHV9ZnJvbVwiQHNhbml0eS9tdXRhdGVcIjtjb25zdCBkPW49Pntjb25zdCBvPXQoKGFzeW5jKHtpbnB1dDp0LHNpZ25hbDplfSk9Pntjb25zdHtpZDpvfT10LHtzbmFwc2hvdDpzfT1hd2FpdCBuLmZldGNoKFwidmlzdWFsLWVkaXRpbmcvZmV0Y2gtc25hcHNob3RcIix7ZG9jdW1lbnRJZDpvfSx7c2lnbmFsOmV9KTtyZXR1cm4gc30pKSxzPXQoKGFzeW5jKHtpbnB1dDp0fSk9Pntjb25zdHt0cmFuc2FjdGlvbnM6ZX09dDtmb3IoY29uc3QgdCBvZiBlKXtjb25zdCBlPXUuZW5jb2RlVHJhbnNhY3Rpb24odCk7cmV0dXJuIG4ucG9zdChcInZpc3VhbC1lZGl0aW5nL211dGF0ZVwiLGUpfX0pKTtyZXR1cm4gci5wcm92aWRlKHthY3Rpb25zOntcInNlbmQgc3luYyBldmVudCB0byBwYXJlbnRcIjplKCgoe2VucXVldWU6dH0pPT57dC5zZW5kUGFyZW50KCgoe2NvbnRleHQ6dH0pPT4oe3R5cGU6XCJzeW5jXCIsaWQ6dC5pZCxkb2N1bWVudDp0LnJlbW90ZX0pKSksdC5lbWl0KCgoe2NvbnRleHQ6dH0pPT4oe3R5cGU6XCJyZWFkeVwiLHNuYXBzaG90OnQubG9jYWx9KSkpfSkpfSxhY3RvcnM6e1wiZmV0Y2ggcmVtb3RlIHNuYXBzaG90XCI6byxcInN1Ym1pdCBtdXRhdGlvbnMgYXMgdHJhbnNhY3Rpb25zXCI6c319KX0scD1uKHt0eXBlczp7fSxhY3Rpb25zOntcImVtaXQgc3luYyBldmVudFwiOm8oKCh7ZXZlbnQ6dH0pPT4ocyh0LFwic3luY1wiKSx0KSkpLFwiZW1pdCBtdXRhdGlvbiBldmVudFwiOm8oKCh7ZXZlbnQ6dH0pPT4ocyh0LFwibXV0YXRpb25cIiksdCkpKSxcImVtaXQgcmViYXNlZCBldmVudFwiOm8oKCh7ZXZlbnQ6dH0pPT4ocyh0LFtcInJlYmFzZWQubG9jYWxcIixcInJlYmFzZWQucmVtb3RlXCJdKSx0KSkpLFwiZW1pdCBwcmlzdGluZSBldmVudFwiOm8oKCh7ZXZlbnQ6dH0pPT4ocyh0LFtcInByaXN0aW5lXCJdKSx0KSkpLFwiYWRkIGRvY3VtZW50IGFjdG9yXCI6aSh7ZG9jdW1lbnRzOih7Y29udGV4dDp0LGV2ZW50OmUsc3Bhd246bn0pPT57cyhlLFwib2JzZXJ2ZVwiKTtjb25zdCBvPWUuZG9jdW1lbnRJZDtyZXR1cm4gdC5kb2N1bWVudHNbb10/dC5kb2N1bWVudHM6ey4uLnQuZG9jdW1lbnRzLFtvXTpuKFwiZG9jdW1lbnRNdXRhdG9yTWFjaGluZVwiLHtpbnB1dDp7aWQ6byxjbGllbnQ6dC5jbGllbnQsc2hhcmVkTGlzdGVuZXI6dC5zaGFyZWRMaXN0ZW5lcnx8bSh0LmNsaWVudCl9LGlkOm99KX19fSksXCJzdG9wIHJlbW90ZSBzbmFwc2hvdFwiOmMoKCh7Y29udGV4dDp0LGV2ZW50OmV9KT0+KHMoZSxcInVub2JzZXJ2ZVwiKSx0LmRvY3VtZW50c1tlLmRvY3VtZW50SWRdKSkpLFwicmVtb3ZlIHJlbW90ZSBzbmFwc2hvdCBmcm9tIGNvbnRleHRcIjppKHtkb2N1bWVudHM6KHtjb250ZXh0OnQsZXZlbnQ6ZX0pPT57aWYocyhlLFwidW5vYnNlcnZlXCIpLCF0LmRvY3VtZW50c1tlLmRvY3VtZW50SWRdKXJldHVybiB0LmRvY3VtZW50cztjb25zdHtbZS5kb2N1bWVudElkXTpuLC4uLm99PXQuZG9jdW1lbnRzO3JldHVybiBvfX0pfSxhY3RvcnM6e2RvY3VtZW50TXV0YXRvck1hY2hpbmU6cn19KS5jcmVhdGVNYWNoaW5lKHtpZDpcImRhdGFzZXQtbXV0YXRvclwiLGNvbnRleHQ6KHtpbnB1dDp0fSk9Pih7ZG9jdW1lbnRzOnt9LGNsaWVudDp0LmNsaWVudCxzaGFyZWRMaXN0ZW5lcjp0LnNoYXJlZExpc3RlbmVyfSksb246e3N5bmM6e2FjdGlvbnM6W1wiZW1pdCBzeW5jIGV2ZW50XCJdfSxtdXRhdGlvbjp7YWN0aW9uczpbXCJlbWl0IG11dGF0aW9uIGV2ZW50XCJdfSxcInJlYmFzZWQuKlwiOnthY3Rpb25zOltcImVtaXQgcmViYXNlZCBldmVudFwiXX0scHJpc3RpbmU6e2FjdGlvbnM6W1wiZW1pdCBwcmlzdGluZSBldmVudFwiXX0sb2JzZXJ2ZTp7YWN0aW9uczpbXCJhZGQgZG9jdW1lbnQgYWN0b3JcIl19LHVub2JzZXJ2ZTp7YWN0aW9uczpbXCJzdG9wIHJlbW90ZSBzbmFwc2hvdFwiLFwicmVtb3ZlIHJlbW90ZSBzbmFwc2hvdCBmcm9tIGNvbnRleHRcIl19fSxpbml0aWFsOlwicHJpc3RpbmVcIixzdGF0ZXM6e3ByaXN0aW5lOnt9fX0pLHY9dD0+cC5wcm92aWRlKHthY3RvcnM6e2RvY3VtZW50TXV0YXRvck1hY2hpbmU6ZCh0KX19KSxoPWEoKTtsZXQgbD1oO2NvbnN0IGY9LyogQF9fUFVSRV9fICovbmV3IFNldDtmdW5jdGlvbiB5KHQpe3JldHVybiB0PT09aH1mdW5jdGlvbiBiKHQpe2w9dDtmb3IoY29uc3QgdCBvZiBmKXQoKX1leHBvcnR7bCBhcyBhY3Rvcix2IGFzIGNyZWF0ZURhdGFzZXRNdXRhdG9yLGQgYXMgY3JlYXRlRG9jdW1lbnRNdXRhdG9yLGggYXMgZW1wdHlBY3Rvcix5IGFzIGlzRW1wdHlBY3RvcixmIGFzIGxpc3RlbmVycyxiIGFzIHNldEFjdG9yfTsvLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/visual-editing/dist/optimistic/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/visual-editing/dist/react/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@sanity/visual-editing/dist/react/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VisualEditing: () => (/* binding */ zt),\n/* harmony export */   createDataAttribute: () => (/* reexport safe */ _sanity_visual_editing_csm__WEBPACK_IMPORTED_MODULE_6__.createDataAttribute),\n/* harmony export */   createDatasetMutator: () => (/* reexport safe */ _optimistic_index_js__WEBPACK_IMPORTED_MODULE_15__.createDatasetMutator),\n/* harmony export */   createDocumentMutator: () => (/* reexport safe */ _optimistic_index_js__WEBPACK_IMPORTED_MODULE_15__.createDocumentMutator),\n/* harmony export */   emptyActor: () => (/* reexport safe */ _optimistic_index_js__WEBPACK_IMPORTED_MODULE_15__.emptyActor),\n/* harmony export */   useDocuments: () => (/* reexport safe */ _chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_3__.u),\n/* harmony export */   useOptimistic: () => (/* reexport safe */ _chunks_es_SharedStateContext_js__WEBPACK_IMPORTED_MODULE_8__.u),\n/* harmony export */   useOptimisticActor: () => (/* reexport safe */ _chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_3__.b)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var _sanity_presentation_comlink__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @sanity/presentation-comlink */ \"(ssr)/./node_modules/@sanity/presentation-comlink/dist/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-dom */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-dom.js\");\n/* harmony import */ var _chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../_chunks-es/PointerEvents.js */ \"(ssr)/./node_modules/@sanity/visual-editing/dist/_chunks-es/PointerEvents.js\");\n/* harmony import */ var _chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../_chunks-es/mutations.js */ \"(ssr)/./node_modules/@sanity/visual-editing/dist/_chunks-es/mutations.js\");\n/* harmony import */ var _chunks_es_SharedStateContext_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../_chunks-es/SharedStateContext.js */ \"(ssr)/./node_modules/@sanity/visual-editing/dist/_chunks-es/SharedStateContext.js\");\n/* harmony import */ var _sanity_mutate__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @sanity/mutate */ \"(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/index.js\");\n/* harmony import */ var _sanity_client_csm__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sanity/client/csm */ \"(ssr)/./node_modules/@sanity/client/dist/_chunks-es/resolveEditInfo.js\");\n/* harmony import */ var _sanity_visual_editing_csm__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sanity/visual-editing-csm */ \"(ssr)/./node_modules/@sanity/visual-editing-csm/dist/index.js\");\n/* harmony import */ var scroll_into_view_if_needed__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! scroll-into-view-if-needed */ \"(ssr)/./node_modules/scroll-into-view-if-needed/dist/index.js\");\n/* harmony import */ var _sanity_comlink__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @sanity/comlink */ \"(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/comlink/dist/index.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! xstate */ \"(ssr)/./node_modules/xstate/dist/raise-1db27a82.development.esm.js\");\n/* harmony import */ var _optimistic_index_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../optimistic/index.js */ \"(ssr)/./node_modules/@sanity/visual-editing/dist/optimistic/index.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/ReplaySubject.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/Subject.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/merge.js\");\nconst Ae=e=>{const{comlink:t,history:n}=e;return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>t?.on(\"presentation/navigate\",(e=>{n?.update(e)}))),[t,n]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{if(n)return n.subscribe((e=>{e.title=e.title||document.title,t?.post(\"visual-editing/navigate\",e)}))}),[t,n]),null},je=e=>{const{comlink:t}=e;return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{const e=()=>{t.post(\"visual-editing/meta\",{title:document.title})},n=new MutationObserver((([t])=>{\"TITLE\"===t.target.nodeName&&e()}));return n.observe(document.head,{subtree:!0,characterData:!0,childList:!0}),e(),()=>n.disconnect()}),[t]),null},Le=(0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(null);function Ue(){const e=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(Le);if(!e)throw new Error(\"Schema context is missing\");return e}function Fe(e,t){if(!e.type)throw new Error(\"Node type is missing\");return()=>t.patch((async({getSnapshot:t})=>(0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_3__.f)(e,await t())))}function Oe(e,t,n,r){if(!e.type)throw new Error(\"Node type is missing\");return()=>t.patch((()=>(0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_3__.a)(e,n,r)))}function We(e,t){if(!e.type)throw new Error(\"Node type is missing\");return()=>t.patch((async({getSnapshot:t})=>(0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_3__.h)(e,await t())))}function Ne(e){const{node:t,doc:n}=e;return n?[{type:\"action\",label:\"Duplicate\",icon:_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.C,action:We(t,n)}]:[]}function Ge(e){const{node:t,doc:n}=e;return n?[{type:\"action\",label:\"Remove\",icon:_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.R,action:Fe(t,n)}]:[]}async function qe(e,t=!0){const{node:n,doc:r}=e;if(!r)return[];const i=[],o=[],[a,s,c,d]=await Promise.all([(0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_3__.e)(n,r,\"previous\"),(0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_3__.e)(n,r,\"next\"),(0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_3__.e)(n,r,\"first\"),(0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_3__.e)(n,r,\"last\")]);return c.length&&o.push({type:\"action\",label:\"To top\",icon:_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.e,action:()=>r.patch(c)}),a.length&&o.push({type:\"action\",label:\"Up\",icon:_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.f,action:()=>r.patch(a)}),s.length&&o.push({type:\"action\",label:\"Down\",icon:_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.h,action:()=>r.patch(s)}),d.length&&o.push({type:\"action\",label:\"To bottom\",icon:_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.U,action:()=>r.patch(d)}),o.length&&(i.push({type:\"group\",label:\"Move\",icon:_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.S,items:o}),t&&i.push({type:\"divider\"})),i}const Ke=t=>{const{label:n,parent:r,width:i,onSelect:o,boundaryElement:a}=t;/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.M,{fontSize:1,icon:_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.b,padding:2,popover:{arrow:!1,constrainSize:!0,floatingBoundary:a,padding:0,placement:\"right-start\",fallbackPlacements:[\"left-start\",\"right\",\"left\",\"right-end\",\"left-end\",\"bottom\",\"top\"],preventOverflow:!0,width:i,__unstable_margins:[4,4,4,4]},space:2,text:n,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.c,{node:r,onSelect:o})})},Ve=[-4,4,-4,4];function Be(t){const{node:n,onDismiss:r,boundaryElement:i}=t,o=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((()=>{\"action\"===n.type&&(n.action?.(),r?.())}),[n,r]);if(\"divider\"===n.type)/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.o,{});if(\"action\"===n.type)/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.p,{fontSize:1,hotkeys:n.hotkeys,icon:n.icon,padding:2,space:2,text:n.label,disabled:!n.action,onClick:o});if(\"group\"===n.type)/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.M,{fontSize:1,icon:n.icon,padding:2,popover:{arrow:!1,constrainSize:!0,placement:\"right-start\",fallbackPlacements:[\"left-start\",\"right\",\"left\",\"right-end\",\"left-end\",\"bottom\",\"top\"],preventOverflow:!0,__unstable_margins:Ve},space:2,text:n.label,children:n.items.map(((t,n)=>/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Be,{node:t,onDismiss:r,boundaryElement:i},n)))});if(\"custom\"===n.type){const{component:t}=n;/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(t,{boundaryElement:i})}return null}const Ye=r=>{const{node:i,onDismiss:o,position:{x:s,y:c}}=r,[d,u]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null),{getField:h}=Ue(),{getDocument:m}=(0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_3__.u)(),{field:f,parent:g}=h(i),v=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>f?.title||f?.name||\"Unknown type\"),[f]),[x,k]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(void 0);(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{(async()=>{const t=m(i.id);if(!t)return;const n=await function(t){const{node:n,field:r,parent:i,doc:o}=t;return\"arrayItem\"===r?.type?async function(e){const{node:t,field:n,doc:r}=e,i=[];return i.push(...Ne(e)),i.push(...Ge(e)),i.push(...await qe(e)),i.push({type:\"action\",label:\"Insert before\",icon:_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.a,action:Oe(t,r,n.name,\"before\")}),i.push({type:\"action\",label:\"Insert after\",icon:_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.b,action:Oe(t,r,n.name,\"after\")}),i}({node:n,field:r,doc:o}):\"union\"===i?.type?async function(t){const{doc:n,node:r,parent:i}=t,o=[];if(o.push(...Ne(t)),o.push(...Ge(t)),o.push(...await qe(t)),i.options?.insertMenu){const t=(i.options.insertMenu||{}).views?.some((e=>\"grid\"===e.name))?0:void 0;o.push({type:\"custom\",component:({boundaryElement:o})=>/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Ke,{label:\"Insert before\",onSelect:e=>{Oe(r,n,e.name,\"before\")()},parent:i,width:t,boundaryElement:o})}),o.push({type:\"custom\",component:({boundaryElement:o})=>/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Ke,{label:\"Insert after\",onSelect:e=>{Oe(r,n,e.name,\"after\")()},parent:i,width:t,boundaryElement:o})})}else o.push({type:\"group\",label:\"Insert before\",icon:_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.a,items:i.of.filter((e=>\"unionOption\"===e.type)).map((e=>({type:\"action\",icon:(0,_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.g)(e),label:\"block\"===e.name?\"Paragraph\":e.title||e.name,action:Oe(r,n,e.name,\"before\")})))}),o.push({type:\"group\",label:\"Insert after\",icon:_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.b,items:i.of.filter((e=>\"unionOption\"===e.type)).map((e=>({type:\"action\",label:\"block\"===e.name?\"Paragraph\":e.title||e.name,icon:(0,_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.g)(e),action:Oe(r,n,e.name,\"after\")})))});return o}({node:n,parent:i,doc:o}):Promise.resolve([])}({node:i,field:f,parent:g,doc:t});k(n)})()}),[f,i,g,m]);const E=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>({getBoundingClientRect:()=>({bottom:c,left:s,right:s,top:c,width:0,height:0})})),[s,c]),S=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>(0,_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.g)(f)),[f]);/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.i,{setBoundaryElement:u,onDismiss:o,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.j,{__unstable_margins:Ve,arrow:!1,open:!0,placement:\"right-start\",referenceElement:E,content:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.k,{style:{minWidth:120,maxWidth:160},children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.F,{gap:2,padding:2,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.l,{flex:\"none\",children:x?/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.T,{size:1,children:S}):/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.m,{size:1})}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.n,{flex:1,space:2,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.T,{size:1,weight:\"semibold\",children:x?v:\"Loading...\"})})]}),x&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.o,{}),x.map(((t,n)=>/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Be,{node:t,onDismiss:o,boundaryElement:d},n)))]})]}),children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\",{style:{position:\"absolute\",left:s,top:c}},`${s}-${c}`)})})};function He(e,t){try{const n=new URL(e,typeof location>\"u\"?void 0:location.origin);if(n.hash){const e=new URL(He(n.hash.slice(1),t));return`${n.origin}${n.pathname}${n.search}#${e.pathname}${e.search}`}return n.searchParams.set(\"preview\",t),n.toString()}catch{return e}}const Xe=(0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(null),Ze=(0,_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.d)((0,_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.q))`\n  background-color: var(--overlay-bg);\n  border-radius: 3px;\n  pointer-events: none;\n  position: absolute;\n  will-change: transform;\n  box-shadow: var(--overlay-box-shadow);\n  transition: none;\n\n  --overlay-bg: transparent;\n  --overlay-box-shadow: inset 0 0 0 1px transparent;\n\n  [data-overlays] & {\n    --overlay-bg: color-mix(in srgb, transparent 95%, var(--card-focus-ring-color));\n    --overlay-box-shadow: inset 0 0 0 2px\n      color-mix(in srgb, transparent 50%, var(--card-focus-ring-color));\n  }\n\n  [data-fading-out] & {\n    transition:\n      box-shadow 1550ms,\n      background-color 1550ms;\n\n    --overlay-bg: rgba(0, 0, 255, 0);\n    --overlay-box-shadow: inset 0 0 0 1px transparent;\n  }\n\n  &[data-focused] {\n    --overlay-box-shadow: inset 0 0 0 1px var(--card-focus-ring-color);\n  }\n\n  &[data-hovered]:not([data-focused]) {\n    transition: none;\n    --overlay-box-shadow: inset 0 0 0 2px var(--card-focus-ring-color);\n  }\n\n  /* [data-unmounted] & {\n    --overlay-box-shadow: inset 0 0 0 1px var(--card-focus-ring-color);\n  } */\n\n  :link {\n    text-decoration: none;\n  }\n`,Je=(0,_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.d)((0,_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.F))`\n  bottom: 100%;\n  cursor: pointer;\n  pointer-events: none;\n  position: absolute;\n  right: 0;\n\n  [data-hovered] & {\n    pointer-events: all;\n  }\n\n  [data-flipped] & {\n    bottom: auto;\n    top: 100%;\n  }\n`,Qe=(0,_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.d)((0,_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.F))`\n  bottom: 100%;\n  cursor: pointer;\n  pointer-events: none;\n  position: absolute;\n  left: 0;\n\n  [data-hovered] & {\n    pointer-events: all;\n  }\n\n  [data-flipped] & {\n    bottom: auto;\n    top: 100%;\n  }\n`,et=(0,_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.d)((0,_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.q))`\n  cursor: pointer;\n  background-color: var(--card-focus-ring-color);\n  right: 0;\n  border-radius: 3px;\n\n  & [data-ui='Text'] {\n    color: #fff;\n    white-space: nowrap;\n  }\n`,tt=(0,_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.d)((0,_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.F))`\n  display: flex;\n  align-items: center;\n  background-color: var(--card-focus-ring-color);\n  right: 0;\n  border-radius: 3px;\n  & [data-ui='Text'],\n  & [data-sanity-icon] {\n    color: #fff;\n    white-space: nowrap;\n  }\n`,nt=r=>{const{element:i,focused:o,componentResolver:a,node:s,showActions:c,draggable:l}=r,{getField:u,getType:h}=Ue(),m=h(s),{field:g,parent:v}=u(s),y=\"path\"in s?function(e){const{id:t,type:n,path:r,baseUrl:i,tool:o,workspace:a}=e;return (0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_5__.createEditUrl)({baseUrl:i,workspace:a,tool:o,type:n,id:t,path:(0,_sanity_visual_editing_csm__WEBPACK_IMPORTED_MODULE_6__.pathToUrlString)(_sanity_client_csm__WEBPACK_IMPORTED_MODULE_5__.studioPath.fromString(r))})}(s):s.href,w=function(){const e=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(Xe);if(!e)throw new Error(\"Preview Snapshots context is missing\");return e}(),b=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>{if(\"path\"in s)return w.find((e=>e._id===s.id))?.title}),[s,w]),x=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>{if(!(\"path\"in s)||!g||!m)return;const e=g.value.type;return{document:m,element:i,field:g,focused:!!o,node:s,parent:v,type:e}}),[m,i,g,o,s,v]),k=function(e,t){return (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>{if(!e)return;const n=t?.(e);return n?(0,react__WEBPACK_IMPORTED_MODULE_1__.isValidElement)(n)?n:(Array.isArray(n)?n:[n]).map((e=>\"object\"==typeof e&&\"component\"in e?e:{component:e,props:{}})):void 0}),[t,e])}(x,a),E=m?.icon?/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\",{dangerouslySetInnerHTML:{__html:m.icon}}):/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.r,{});/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[c?/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Je,{gap:1,paddingY:1,\"data-sanity-overlay-element\":!0,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(it,{href:y})}):null,b&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Qe,{gap:1,paddingY:1,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tt,{gap:2,padding:2,children:[l&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.l,{marginRight:1,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.T,{className:\"drag-handle\",size:0,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.D,{})})}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.T,{size:0,children:E}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.T,{size:1,weight:\"medium\",children:b})]})}),Array.isArray(k)?k.map((({component:t,props:n},r)=>/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(t,{PointerEvents:_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.P,...x,...n},r))):k]})},rt=(0,react__WEBPACK_IMPORTED_MODULE_1__.memo)((function(t){const{draggable:n,focused:r,hovered:i,rect:o,wasMaybeCollapsed:s,enableScrollIntoView:c}=t,d=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),u=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(!1),m=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>({width:`${o.w}px`,height:`${o.h}px`,transform:`translate(${o.x}px, ${o.y}px)`})),[o]);(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{if(!u.current&&!s&&!0===r&&d.current&&c){const e=d.current;(0,scroll_into_view_if_needed__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(d.current,{behavior:t=>{0!==t.length&&e.scrollIntoView({behavior:\"smooth\",block:\"center\",inline:\"nearest\"})},scrollMode:\"if-needed\",block:\"center\",inline:\"nearest\"})}u.current=!0===r}),[r,s,c]);const[f,g]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1);return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{if(!d.current||!i)return;const e=new IntersectionObserver((([e])=>{g(e.boundingClientRect.top<0)}),{threshold:1});return e.observe(d.current),()=>e.disconnect()}),[i,f]),/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Ze,{\"data-focused\":r?\"\":void 0,\"data-hovered\":i?\"\":void 0,\"data-flipped\":f?\"\":void 0,\"data-draggable\":n?\"\":void 0,ref:d,style:m,children:i&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(nt,{...t})})})),it=(0,react__WEBPACK_IMPORTED_MODULE_1__.memo)((function(t){const n=(0,react__WEBPACK_IMPORTED_MODULE_1__.useSyncExternalStore)((0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{const t=()=>e();return window.addEventListener(\"popstate\",t),()=>window.removeEventListener(\"popstate\",t)}),[]),(()=>window.location.href)),r=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>He(t.href,n)),[t.href,n]);/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.l,{as:\"a\",href:r,target:\"_blank\",rel:\"noopener noreferrer\",children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(et,{padding:2,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.T,{size:1,weight:\"medium\",children:\"Open in Studio\"})})})})),ot=({dragGroupRect:t})=>/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\",{style:{position:\"absolute\",top:`${t.y}px`,left:`${t.x}px`,width:t.w-1+\"px\",height:t.h-1+\"px\",border:\"1px dashed #f0709b\",pointerEvents:\"none\"}});function at(e,t,n){return e*(1-n)+t*n}const st=({dragInsertPosition:t})=>{if(null===t)return;let n=0,r=0,i=0,o=0;const a=.0125;if(\"horizontal\"==(t?.left||t?.right?\"horizontal\":\"vertical\")){const{left:e,right:s}=t;if(i=6,s&&e){const t=e.rect.x+e.rect.w,i=s.rect.x,c=Math.min(s.rect.h,e.rect.h)*a;n=at(t,i,.5)-3,r=e.rect.y+c,o=Math.min(s.rect.h,e.rect.h)-2*c}else if(s&&!e){const e=s.rect.h*a;n=s.rect.x-3,r=s.rect.y+e,o=s.rect.h-2*e}else if(e&&!s){const t=e.rect.h*a;n=e.rect.x+e.rect.w-3,r=e.rect.y+t,o=e.rect.h-2*t}}else{const{bottom:e,top:s}=t;if(e&&s){const t=Math.min(s.rect.x,e.rect.x),c=s.rect.y+s.rect.h,d=e.rect.y,l=Math.min(e.rect.w,s.rect.w)*a;o=6,n=t+l,r=at(c,d,.5)-3,i=Math.max(e.rect.w,s.rect.w)-2*l}else if(e&&!s){const t=e.rect.w*a;n=e.rect.x+t,r=e.rect.y-3,i=e.rect.w-2*t,o=6}else if(s&&!e){const e=s.rect.w*a;n=s.rect.x+e,r=s.rect.y+s.rect.h-3,i=s.rect.w-2*e,o=6}}/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\",{style:{position:\"absolute\",width:`${i}px`,height:`${o}px`,transform:`translate(${n}px, ${r}px)`,background:\"#556bfc\",border:\"2px solid white\",borderRadius:\"999px\",zIndex:\"999999\"}})},ct=_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.d.div`\n  --drag-preview-opacity: 0.98;\n  --drag-preview-skeleton-stroke: #ffffff;\n\n  @media (prefers-color-scheme: dark) {\n    --drag-preview-skeleton-stroke: #383d51;\n  }\n\n  position: fixed;\n  display: grid;\n  transform: ${({$scaleFactor:e,$width:t,$height:n})=>`translate(calc(var(--drag-preview-x) - ${t/2}px), calc(var(--drag-preview-y) - ${n/2}px)) scale(${e})`};\n  width: ${({$width:e})=>`${e}px`};\n  height: ${({$height:e})=>`${e}px`};\n  z-index: 9999999;\n  opacity: var(--drag-preview-opacity);\n  cursor: move;\n\n  .drag-preview-content-wrapper {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    container-type: inline-size;\n  }\n\n  [data-ui='card'] {\n    position: relative;\n    width: 100%;\n    height: 100%;\n  }\n\n  .drag-preview-skeleton {\n    position: absolute;\n    inset: 0;\n\n    rect {\n      stroke: var(--drag-preview-skeleton-stroke);\n    }\n  }\n\n  .drag-preview-handle {\n    position: absolute;\n    top: 4cqmin;\n    left: 4cqmin;\n    width: 6cqmin;\n    fill: var(--drag-preview-handle-fill);\n  }\n`,dt=({skeleton:t})=>{const n=Math.min(t.maxWidth,window.innerWidth/2),r=t.w>n?n/t.w:1,i=t.offsetX*r,o=t.offsetY*r,a=(0,_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.u)(),s=(0,_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.s)(),c=s.radius[(p=t.w,u=s.radius.length-2,~~function(e,t,n){return e<1?1:e>n?n:e}((p-0)*(u-1)/1920+1,0,u))],d=t.childRects.filter((e=>\"IMG\"===e.tagName)),l=t.childRects.filter((e=>\"IMG\"!==e.tagName));var p,u;/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ct,{$width:t.w,$height:t.h,$offsetX:i,$offsetY:o,$scaleFactor:r,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.q,{radius:c,shadow:4,overflow:\"hidden\",tone:\"transparent\",scheme:a?\"dark\":\"light\",children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\",{className:\"drag-preview-content-wrapper\",children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{className:\"drag-preview-skeleton\",viewBox:`0 0 ${t.w} ${t.h}`,children:[...d,...l].map(((t,n)=>/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"rect\",{x:t.x,y:t.y,width:t.w,height:t.h,fill:s.color.skeleton.from},n)))})})})})},lt=(0,_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.d)((0,_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.q))`\n  position: fixed;\n  bottom: 2rem;\n  left: 2rem;\n`,pt=()=>/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(lt,{padding:2,shadow:2,radius:2,style:{zIndex:\"999999\"},children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.F,{align:\"center\",gap:2,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.H,{keys:[\"Shift\"]}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.T,{size:1,children:\"Zoom Out\"}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.E,{})]})}),ut=(e,t)=>{const{type:n}=t;switch(n){case\"element/register\":return e.find((e=>e.id===t.id))?e:[...e,{id:t.id,activated:!1,element:t.element,focused:!1,hovered:!1,rect:t.rect,sanity:t.sanity,dragDisabled:t.dragDisabled}];case\"element/activate\":return e.map((e=>e.id===t.id?{...e,activated:!0}:e));case\"element/update\":return e.map((e=>e.id===t.id?{...e,sanity:t.sanity,rect:t.rect}:e));case\"element/unregister\":return e.filter((e=>e.id!==t.id));case\"element/deactivate\":return e.map((e=>e.id===t.id?{...e,activated:!1,hovered:!1}:e));case\"element/mouseenter\":return e.map((e=>e.id===t.id?{...e,rect:t.rect,hovered:!0}:{...e,hovered:!1}));case\"element/mouseleave\":return e.map((e=>e.id===t.id?{...e,hovered:!1}:e));case\"element/updateRect\":return e.map((e=>e.id===t.id?{...e,rect:t.rect}:e));case\"element/click\":return e.map((e=>({...e,focused:e.id===t.id&&\"clicked\"})));case\"overlay/blur\":case\"presentation/blur\":return e.map((e=>({...e,focused:!1})));case\"presentation/focus\":{const n=e.find((e=>\"clicked\"===e.focused));return e.map((e=>{const r=\"path\"in e.sanity&&e.sanity.id===t.data.id&&e.sanity.path===t.data.path;return n&&e===n&&r?e:{...e,focused:r&&n?\"duplicate\":r}}))}default:return e}};function ht(e,t){const{type:n}=t;let{contextMenu:r,focusPath:i,perspective:o,isDragging:a,dragInsertPosition:s,dragShowMinimap:c,dragShowMinimapPrompt:d,dragSkeleton:l,dragMinimapTransition:p,dragGroupRect:u}=e,h=!1;if(\"presentation/focus\"===n){const n=e.focusPath;i=t.data.path,n!==i&&(h=n.slice(i.length).startsWith(\"[\"))}return\"presentation/perspective\"===n&&(o=t.data.perspective),\"element/contextmenu\"===n&&(r=\"sanity\"in t?{node:t.sanity,position:t.position}:null),(\"element/click\"===n||\"element/mouseleave\"===n||\"overlay/blur\"===n||\"presentation/blur\"===n||\"presentation/focus\"===n)&&(r=null),\"overlay/dragUpdateInsertPosition\"===n&&(s=t.insertPosition),\"overlay/dragStart\"===n&&(a=!0),\"overlay/dragUpdateSkeleton\"===t.type&&(l=t.skeleton),\"overlay/dragEnd\"===n&&(a=!1),\"overlay/dragToggleMinimapPrompt\"===t.type&&(d=t.display),\"overlay/dragStartMinimapTransition\"===n&&(p=!0),\"overlay/dragEndMinimapTransition\"===n&&(p=!1),\"overlay/dragUpdateGroupRect\"===n&&(u=t.groupRect),\"overlay/dragToggleMinimap\"===n&&(c=t.display),{...e,contextMenu:r,elements:ut(e.elements,t),dragInsertPosition:s,dragSkeleton:l,dragGroupRect:u,isDragging:a,focusPath:i,perspective:o,wasMaybeCollapsed:h,dragShowMinimap:c,dragShowMinimapPrompt:d,dragMinimapTransition:p}}const mt=function(t){const{comlink:n,children:r}=t,[i,o]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]),c=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((async e=>{if(n)try{const t=await n.fetch(\"visual-editing/preview-snapshots\",void 0,{signal:e,suppressWarnings:!0});o(t.snapshots)}catch{}}),[n]);(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{if(!n)return;const e=new AbortController,t=n.onStatus((()=>{c(e.signal)}),\"connected\");return()=>{e.abort(),t()}}),[n,c]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>n?.on(\"presentation/preview-snapshots\",(e=>{o(e.snapshots)}))),[n]);const d=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>i),[i]);/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Xe.Provider,{value:d,children:r})};function ft(e){return\"path\"in e}function gt(e){return\"document\"===e.type}function vt(e){return\"type\"===e.type}const yt=function(t){const{comlink:n,children:r,elements:i}=t,[o,c]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(/* @__PURE__ */new Map),[d,u]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null),m=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((async e=>{if(n)try{const t=await n.fetch(\"visual-editing/schema\",void 0,{signal:e,suppressWarnings:!0});u(t.schema)}catch{}}),[n]);(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{if(!n)return;const e=new AbortController,t=n.onStatus((()=>{m(e.signal)}),\"connected\");return()=>{e.abort(),t()}}),[n,m]);const f=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)([]);(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{const e=new AbortController,t=function(e){return e.reduce(((e,t)=>{const{sanity:n}=t;if(!(\"id\"in n)||!n.path.includes(\"[_key==\"))return e;const r=function(e){return e.split(\".\").toReversed().reduce(((e,t)=>e.length?[t,...e]:t.includes(\"[_key==\")?[t]:[]),[]).join(\".\")}(n.path);return e.find((e=>e.id===n.id&&e.path===r))||e.push({id:n.id,path:r}),e}),[])}(i);return t.some((e=>!f.current.find((({id:t,path:n})=>t===e.id&&n===e.path))))&&(async(e,t)=>{if(e.length&&n)try{const r=await n.fetch(\"visual-editing/schema-union-types\",{paths:e},{signal:t,suppressWarnings:!0});c(r.types),f.current=e}catch{}})(t,e.signal),()=>e.abort()}),[n,i]);const g=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(((e,t)=>{const n=t||\"document\";if(!d||\"string\"!=typeof e&&(!ft(e)||!Array.isArray(d)))return;const r=\"string\"==typeof e?e:e.type,i=\"document\"===n?gt:vt;return d.filter(i).find((e=>e.name===r))}),[d]),v=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{if(!ft(e))return{field:void 0,parent:void 0};const t=g(e);if(!t)return{field:void 0,parent:void 0};const n=e.path.split(\".\").flatMap((e=>e.includes(\"[\")?e.split(/(\\[.+\\])/,2):[e]));try{return function t(n,r,i,a=[]){if(!n)return{field:void 0,parent:void 0};const[s,...c]=r;if(\"fields\"in n){const e=n.fields[s];if(!e&&\"rest\"in n)return t(n.rest,r,n,a);if(!c.length)return{field:e,parent:i};if(!e)throw new Error(`[@sanity/visual-editing] No field could be resolved at path: \"${[...a,...r].join(\".\")}\"`);return t(e.value,c,n,[...a,s])}if(\"array\"===n.type)return t(n.of,r,n,a);if(\"arrayItem\"===n.type)return c.length?t(n.value,c,n,[...a,s]):{field:n,parent:i};if(\"union\"===n.type){const r=s.startsWith(\"[_key==\")?o?.get(e.id)?.get([a.join(\".\"),s].filter(Boolean).join(\"\")):s;return t(n.of.find((e=>\"unionOption\"===e.type?e.name===r:e)),c,n,[...a,s])}if(\"unionOption\"===n.type)return s?t(n.value,r,n,a):{field:n,parent:i};if(\"inline\"===n.type)return t(g(n.name,\"type\").value,r,n,a);throw new Error(`[@sanity/visual-editing] No field could be resolved at path: \"${[...a,...r].join(\".\")}\"`)}(t,n,void 0)}catch(e){return e instanceof Error&&console.warn(e.message),{field:void 0,parent:void 0}}}),[g,o]),y=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>({getField:v,getType:g,resolvedTypes:o,schema:d||[]})),[v,g,o,d]);/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Le.Provider,{value:y,children:r})},wt=(()=>{let e={};const t=/* @__PURE__ */new Set;return{getState:()=>e,setState:n=>{e=n(e),t.forEach((e=>e()))},subscribe:e=>(t.add(e),()=>t.delete(e))}})(),bt=t=>{const{comlink:n,children:r}=t;(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>n?.on(\"presentation/shared-state\",(e=>{\"value\"in e?wt.setState((t=>({...t,[e.key]:e.value}))):wt.setState((t=>Object.fromEntries(Object.entries(t).filter((([t])=>t!==e.key)))))}))),[n]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{(async function(){const e=await(n?.fetch(\"visual-editing/shared-state\",void 0,{suppressWarnings:!0}));e&&wt.setState((()=>e.state))})().catch((e=>{console.debug(e),console.warn(\"[@sanity/visual-editing]: Failed to fetch shared state. Check your version of `@sanity/presentation` is up-to-date\")}))}),[n]);const i=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>({comlink:n,store:wt})),[n]);/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_chunks_es_SharedStateContext_js__WEBPACK_IMPORTED_MODULE_8__.S.Provider,{value:i,children:r})},xt={\"Visual Editing Drag Sequence Completed\":(kt={name:\"Visual Editing Drag Sequence Completed\",description:\"An array is successfully reordered using drag and drop.\",version:1},{type:\"log\",name:kt.name,version:kt.version,description:kt.description,schema:void 0})};var kt;const Et=_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.d.div`\n  background-color: transparent;\n  direction: ltr;\n  inset: 0;\n  pointer-events: none;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  z-index: ${({$zIndex:e})=>e??\"9999999\"};\n`;function St(e){let t,n;return t=requestAnimationFrame((()=>{n=requestAnimationFrame(e)})),()=>{void 0!==t&&cancelAnimationFrame(t),void 0!==n&&cancelAnimationFrame(n)}}const Pt=e=>{const{documentIds:t}=e,[n,r]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{r((e=>{const n=Array.from(new Set(t));return e.length===n.length&&0===e.reduce(((e,t)=>e.filter((e=>e!==t))),n)?.length?e:n}))}),[t]);const i=(0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_3__.b)();return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{for(const e of n)i.send({type:\"observe\",documentId:(0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_3__.j)(e)}),i.send({type:\"observe\",documentId:(0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_3__.c)(e)});return()=>{for(const e of n)i.send({type:\"unobserve\",documentId:(0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_3__.j)(e)}),i.send({type:\"unobserve\",documentId:(0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_3__.c)(e)})}}),[i,n]),null},Mt=e=>{const{comlink:t,dispatch:n,inFrame:r,inPopUp:i,onDrag:o,overlayEnabled:c,rootElement:d}=e,{dispatchDragEndEvent:l}=function(){const{getDocument:e}=(0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_3__.u)();return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{const t=t=>{const{insertPosition:n,target:r,preventInsertDefault:i}=t.detail;if(i)return;const o=function(e){if(e){const{top:t,right:n,bottom:r,left:i}=e;if(i||t)return{node:(i??t).sanity,position:\"after\"};if(n||r)return{node:(n??r).sanity,position:\"before\"}}}(n);if(o){const t=e(r.id),{node:n,position:i}=o,{key:a,hasExplicitKey:s}=(0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_3__.g)(r),{path:c,key:d}=(0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_3__.g)(n);c&&d&&d!==a&&t.patch((async({getSnapshot:e})=>{const t=await e(),n=(0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_3__.d)(t,r.path);return s?[(0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_9__.at)(c,(0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_9__.remove)({_key:a})),(0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_9__.at)(c,(0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_9__.insert)(n,i,{_key:d}))]:[(0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_9__.at)(c,(0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_9__.remove)(~~a)),(0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_9__.at)(c,(0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_9__.insert)(n,i,d>a?~~d-1:~~d))]}))}};return window.addEventListener(\"sanity/dragEnd\",t),()=>{window.removeEventListener(\"sanity/dragEnd\",t)}}),[e]),{dispatchDragEndEvent:(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{const t=new CustomEvent(\"sanity/dragEnd\",{detail:e,cancelable:!0});window.dispatchEvent(t)}),[])}}(),p=function(e,t,n,r){const i=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(void 0),o=(0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_3__.i)();return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{if(e)return i.current=(0,_chunks_es_SharedStateContext_js__WEBPACK_IMPORTED_MODULE_8__.c)({handler:t,overlayElement:e,inFrame:n,inPopUp:r,optimisticActorReady:o}),()=>{i.current?.destroy(),i.current=void 0}}),[e,t,n,r,o]),i}(d,(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{if(\"element/click\"===e.type){const{sanity:n}=e;t?.post(\"visual-editing/focus\",n)}else if(\"overlay/activate\"===e.type)t?.post(\"visual-editing/toggle\",{enabled:!0});else if(\"overlay/deactivate\"===e.type)t?.post(\"visual-editing/toggle\",{enabled:!1});else if(\"overlay/dragEnd\"===e.type){const{insertPosition:n,target:r,dragGroup:i,flow:o,preventInsertDefault:a}=e;l({insertPosition:n,target:r,dragGroup:i,flow:o,preventInsertDefault:a}),n&&function(e,t,n){if(!n)return;const r=xt[\"Visual Editing Drag Sequence Completed\"];n.post(\"visual-editing/telemetry-log\",{event:r,data:null})}(0,0,t)}else{if(\"overlay/dragUpdateCursorPosition\"===e.type)return void o(e.x,e.y);if(\"overlay/setCursor\"===e.type){const{element:t,cursor:n}=e;n?t.style.cursor=n:t.style.removeProperty(\"cursor\")}}n(e)}),[t,n,l,o]),r,i);return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{c?p.current?.activate():p.current?.deactivate()}),[p,c]),null},$t=r=>{const{comlink:i,componentResolver:o,inFrame:c,inPopUp:d,zIndex:u}=r,[m,f]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(),v=(0,_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.u)(),[{contextMenu:y,dragInsertPosition:w,dragShowMinimap:b,dragShowMinimapPrompt:x,dragSkeleton:k,elements:E,isDragging:S,perspective:P,wasMaybeCollapsed:M,dragMinimapTransition:$,dragGroupRect:I},D]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useReducer)(ht,{contextMenu:null,dragInsertPosition:null,dragShowMinimap:!1,dragShowMinimapPrompt:!1,dragSkeleton:null,elements:[],focusPath:\"\",isDragging:!1,perspective:\"published\",wasMaybeCollapsed:!1,dragMinimapTransition:!1,dragGroupRect:null}),[_,z]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null),[C,T]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!0);(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{const e=[i?.on(\"presentation/focus\",(e=>{D({type:\"presentation/focus\",data:e})})),i?.on(\"presentation/blur\",(e=>{D({type:\"presentation/blur\",data:e})})),i?.on(\"presentation/toggle-overlay\",(()=>{T((e=>!e))})),i?.onStatus((e=>{f(e)}))].filter(Boolean);return()=>e.forEach((e=>e()))}),[i]),function(e,t){(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{const n=new AbortController;e?.fetch(\"visual-editing/fetch-perspective\",void 0,{signal:n.signal,suppressWarnings:!0}).then((e=>{t({type:\"presentation/perspective\",data:e})})).catch((()=>{}));const r=e?.on(\"presentation/perspective\",(e=>{t({type:\"presentation/perspective\",data:e})}));return()=>{r?.(),n.abort()}}),[e,t])}(i,D),function(e,t,n){const r=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(void 0),i=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(((t,n)=>{e?.post(\"visual-editing/documents\",{documents:t,perspective:n})}),[e]);(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{const e=t.map((e=>{const{sanity:t}=e;return\"id\"in t?{...t,id:\"isDraft\"in t?`${_sanity_visual_editing_csm__WEBPACK_IMPORTED_MODULE_6__.DRAFTS_PREFIX}${t.id}`:t.id}:null})).filter((e=>!!e)),o=new Set(e.map((e=>e.id)));if(!r.current||!function(e,t){if(e===t)return!0;if(e.size!==t.size)return!1;for(const n of e)if(!t.has(n))return!1;return!0}(o,r.current.nodeIds)||n!==r.current.perspective){const t=Array.from(o).map((t=>{const n=e.find((e=>e.id===t)),{type:r,projectId:i,dataset:o}=n;return i&&o?{_id:t,_type:r,_projectId:i,_dataset:o}:{_id:t,_type:r}}));r.current={nodeIds:o,perspective:n},i(t,n)}}),[t,n,i])}(i,E,P);const R=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(((e,t)=>{_&&(_.style.setProperty(\"--drag-preview-x\",`${e}px`),_.style.setProperty(\"--drag-preview-y\",t-window.scrollY+\"px\"))}),[_]);(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{const e=e=>{const t=e.target;if(((0,_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.x)(t)||(0,_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.y)(t)&&t.closest(\"a\"))&&e.altKey){e.preventDefault(),e.stopPropagation();const t=new MouseEvent(e.type,{...e,altKey:!1,bubbles:!0,cancelable:!0});e.target?.dispatchEvent(t)}},t=e=>{Dt(e)&&T((e=>!e))},n=e=>{var t;Dt(e)&&T((e=>!e)),t=e,[\"mod\",\"\\\\\"].every((e=>It[e]?t[It[e]]:t.key===e.toUpperCase()))&&T((e=>!e))};return window.addEventListener(\"click\",e),window.addEventListener(\"keydown\",n),window.addEventListener(\"keyup\",t),()=>{window.removeEventListener(\"click\",e),window.removeEventListener(\"keydown\",n),window.removeEventListener(\"keyup\",t)}}),[T]);const[A,j]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1),[L,U]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1),F=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(void 0);(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{if(C)return St((()=>{j(!0),St((()=>{U(!0),F.current=setTimeout((()=>{U(!1),j(!1)}),1500)}))}));F.current&&(clearTimeout(F.current),j(!1),U(!1))}),[C]);const O=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>E.flatMap((e=>\"id\"in e.sanity?[e.sanity.id]:[]))),[E]),W=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((()=>{D({type:\"overlay/blur\"})}),[]),N=(0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_3__.i)(),G=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>N?o:void 0),[o,N]),q=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>(c||d)&&\"connected\"!==m||S?[]:E.filter((e=>e.activated||e.focused)).map((({id:t,element:n,focused:r,hovered:i,rect:o,sanity:a,dragDisabled:s})=>{const d=!s&&!!n.getAttribute(\"data-sanity\")&&N&&E.some((e=>\"id\"in e.sanity&&\"id\"in a&&(0,_chunks_es_SharedStateContext_js__WEBPACK_IMPORTED_MODULE_8__.s)(e.sanity,a)&&e.sanity.path!==a.path));/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(rt,{componentResolver:G,element:n,enableScrollIntoView:!S&&!$&&!b,focused:r,hovered:i,node:a,rect:o,showActions:!c,draggable:d,isDragging:S||$,wasMaybeCollapsed:r&&M},t)}))),[G,$,b,E,c,d,S,N,m,M]);/* @__PURE__ */\nreturn (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.t,{scheme:v?\"dark\":\"light\",theme:_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.v,tone:\"transparent\",children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.L,{children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_4__.w,{element:_,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(yt,{comlink:i,elements:E,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(mt,{comlink:i,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(bt,{comlink:i,children:/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Et,{\"data-fading-out\":L?\"\":void 0,\"data-overlays\":A?\"\":void 0,ref:z,$zIndex:u,children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Pt,{documentIds:O,perspective:P}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Mt,{comlink:i,dispatch:D,inFrame:c,inPopUp:d,onDrag:R,overlayEnabled:C,rootElement:_}),y&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Ye,{...y,onDismiss:W}),q,S&&!$&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[w&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(st,{dragInsertPosition:w}),x&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(pt,{}),I&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ot,{dragGroupRect:I})]}),S&&k&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(dt,{skeleton:k})]})})})})})})})},It={alt:\"altKey\",ctrl:\"ctrlKey\",mod:typeof window<\"u\"&&/Mac|iPod|iPhone|iPad/.test(window.navigator.platform)?\"metaKey\":\"ctrlKey\",shift:\"shiftKey\"};function Dt(e){return\"Alt\"===e.key}const _t=e=>{const{comlink:t,refresh:n}=e,r=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(0),i=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(0);return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>t.on(\"presentation/refresh\",(e=>{if(\"manual\"===e.source){clearTimeout(r.current);const i=n(e);if(!1===i)return;t.post(\"visual-editing/refreshing\",e);let o=!1;r.current=window.setTimeout((()=>{t.post(\"visual-editing/refreshed\",e),o=!0}),3e3),i?.finally?.((()=>{o||(clearTimeout(r.current),t.post(\"visual-editing/refreshed\",e))}))}else if(\"mutation\"===e.source){clearTimeout(i.current);const r=n(e);if(!1===r)return;t.post(\"visual-editing/refreshing\",e),i.current=window.setTimeout((()=>{const r=n(e);!1!==r&&(t.post(\"visual-editing/refreshing\",e),r?.finally?.((()=>{t.post(\"visual-editing/refreshed\",e)}))||t.post(\"visual-editing/refreshed\",e))}),1e3),r?.finally?.((()=>{t.post(\"visual-editing/refreshed\",e)}))||t.post(\"visual-editing/refreshed\",e)}}))),[t,n]),null},zt=s=>{const{components:c,history:d,portal:p=!0,refresh:u,zIndex:h}=s,[m,f]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null),[g,y]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{f((0,_sanity_presentation_comlink__WEBPACK_IMPORTED_MODULE_10__.isMaybePreviewIframe)()),y((0,_sanity_presentation_comlink__WEBPACK_IMPORTED_MODULE_10__.isMaybePreviewWindow)())}),[]);const[w,b]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{if(!1===p)return;const e=document.createElement(\"sanity-visual-editing\");return document.documentElement.appendChild(e),b(e),()=>{b(null),document.documentElement.contains(e)&&document.documentElement.removeChild(e)}}),[p]);const x=function(e=!0){const[t,n]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)();return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{if(!e)return;const t=(0,_sanity_comlink__WEBPACK_IMPORTED_MODULE_11__.createNode)({name:\"visual-editing\",connectTo:\"presentation\"},(0,_sanity_comlink__WEBPACK_IMPORTED_MODULE_11__.createNodeMachine)().provide({actors:(0,_sanity_presentation_comlink__WEBPACK_IMPORTED_MODULE_10__.createCompatibilityActors)()}));n(t);const i=t.start();return()=>{i(),n(void 0)}}),[e]),t}(!0===m||!0===g);!function(e){(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{if(!e)return;const t=function(e){const t=new rxjs__WEBPACK_IMPORTED_MODULE_12__.ReplaySubject(1),n=new rxjs__WEBPACK_IMPORTED_MODULE_13__.Subject;return e.fetch(\"visual-editing/snapshot-welcome\",void 0,{suppressWarnings:!0}).then((e=>{t.next(e.event)})).catch((()=>{})),e.on(\"presentation/snapshot-event\",(e=>{\"reconnect\"===e.event.type&&t.next(e.event),\"mutation\"===e.event.type&&n.next(e.event)})),(0,rxjs__WEBPACK_IMPORTED_MODULE_14__.merge)(t,n)}(e),n=(0,_optimistic_index_js__WEBPACK_IMPORTED_MODULE_15__.createDatasetMutator)(e),r=(0,xstate__WEBPACK_IMPORTED_MODULE_16__.A)(n,{input:{client:{withConfig:()=>{}},sharedListener:t}});r.start();const i=new AbortController,o=e.onStatus((()=>{e.fetch(\"visual-editing/features\",void 0,{signal:i.signal,suppressWarnings:!0}).then((e=>{e.features.optimistic&&(0,_optimistic_index_js__WEBPACK_IMPORTED_MODULE_15__.setActor)(r)})).catch((()=>{console.warn(\"[@sanity/visual-editing] Package version mismatch detected: Please update your Sanity studio to prevent potential compatibility issues.\")}))}),\"connected\");return()=>{r.stop(),i.abort(),o()}}),[e])}(x);const k=/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[null!==m&&null!==g&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)($t,{comlink:x,componentResolver:c,inFrame:m,inPopUp:g,zIndex:h}),x&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Ae,{comlink:x,history:d}),\n/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(je,{comlink:x}),u&&/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_t,{comlink:x,refresh:u})]})]});return!1!==p&&w?(0,react_dom__WEBPACK_IMPORTED_MODULE_2__.createPortal)(k,w):k};zt.displayName=\"VisualEditing\";//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/visual-editing/dist/react/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/comlink/dist/index.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@sanity/visual-editing/node_modules/@sanity/comlink/dist/index.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DOMAIN: () => (/* binding */ DOMAIN),\n/* harmony export */   FETCH_TIMEOUT_DEFAULT: () => (/* binding */ FETCH_TIMEOUT_DEFAULT),\n/* harmony export */   HANDSHAKE_INTERVAL: () => (/* binding */ HANDSHAKE_INTERVAL),\n/* harmony export */   HANDSHAKE_MSG_TYPES: () => (/* binding */ HANDSHAKE_MSG_TYPES),\n/* harmony export */   HEARTBEAT_INTERVAL: () => (/* binding */ HEARTBEAT_INTERVAL),\n/* harmony export */   INTERNAL_MSG_TYPES: () => (/* binding */ INTERNAL_MSG_TYPES),\n/* harmony export */   MSG_DISCONNECT: () => (/* binding */ MSG_DISCONNECT),\n/* harmony export */   MSG_HANDSHAKE_ACK: () => (/* binding */ MSG_HANDSHAKE_ACK),\n/* harmony export */   MSG_HANDSHAKE_SYN: () => (/* binding */ MSG_HANDSHAKE_SYN),\n/* harmony export */   MSG_HANDSHAKE_SYN_ACK: () => (/* binding */ MSG_HANDSHAKE_SYN_ACK),\n/* harmony export */   MSG_HEARTBEAT: () => (/* binding */ MSG_HEARTBEAT),\n/* harmony export */   MSG_RESPONSE: () => (/* binding */ MSG_RESPONSE),\n/* harmony export */   RESPONSE_TIMEOUT_DEFAULT: () => (/* binding */ RESPONSE_TIMEOUT_DEFAULT),\n/* harmony export */   createConnection: () => (/* binding */ createConnection),\n/* harmony export */   createConnectionMachine: () => (/* binding */ createConnectionMachine),\n/* harmony export */   createController: () => (/* binding */ createController),\n/* harmony export */   createListenLogic: () => (/* binding */ createListenLogic),\n/* harmony export */   createNode: () => (/* binding */ createNode),\n/* harmony export */   createNodeMachine: () => (/* binding */ createNodeMachine),\n/* harmony export */   createRequestMachine: () => (/* binding */ createRequestMachine)\n/* harmony export */ });\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! uuid */ \"(ssr)/./node_modules/uuid/dist/esm/v4.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! xstate */ \"(ssr)/./node_modules/xstate/actors/dist/xstate-actors.development.esm.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! xstate */ \"(ssr)/./node_modules/xstate/dist/xstate.development.esm.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! xstate */ \"(ssr)/./node_modules/xstate/dist/log-0acd9069.development.esm.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! xstate */ \"(ssr)/./node_modules/xstate/dist/raise-1db27a82.development.esm.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/defer.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/fromEvent.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/map.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/util/pipe.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/filter.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/bufferCount.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/concatMap.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/take.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/empty.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/takeUntil.js\");\n\n\n\nconst listenInputFromContext = (config) => ({\n  context\n}) => {\n  const { count, include, exclude, responseType = \"message.received\" } = config;\n  return {\n    count,\n    domain: context.domain,\n    from: context.connectTo,\n    include: include ? Array.isArray(include) ? include : [include] : [],\n    exclude: exclude ? Array.isArray(exclude) ? exclude : [exclude] : [],\n    responseType,\n    target: context.target,\n    to: context.name\n  };\n}, listenFilter = (input) => (event) => {\n  const { data } = event;\n  return (input.include.length ? input.include.includes(data.type) : !0) && (input.exclude.length ? !input.exclude.includes(data.type) : !0) && data.domain === input.domain && data.from === input.from && data.to === input.to && (!input.target || event.source === input.target);\n}, eventToMessage = (type) => (event) => ({\n  type,\n  message: event\n}), messageEvents$ = (0,rxjs__WEBPACK_IMPORTED_MODULE_0__.defer)(\n  () => (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.fromEvent)(window, \"message\")\n), createListenLogic = (compatMap) => (0,xstate__WEBPACK_IMPORTED_MODULE_2__.fromEventObservable)(({ input }) => messageEvents$.pipe(\n  compatMap ? (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.map)(compatMap) : (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.pipe)(),\n  (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.filter)(listenFilter(input)),\n  (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.map)(eventToMessage(input.responseType)),\n  input.count ? (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.pipe)(\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.bufferCount)(input.count),\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_7__.concatMap)((arr) => arr),\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_8__.take)(input.count)\n  ) : (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.pipe)()\n)), DOMAIN = \"sanity/comlink\", RESPONSE_TIMEOUT_DEFAULT = 3e3, FETCH_TIMEOUT_DEFAULT = 1e4, HEARTBEAT_INTERVAL = 1e3, HANDSHAKE_INTERVAL = 500, MSG_RESPONSE = \"comlink/response\", MSG_HEARTBEAT = \"comlink/heartbeat\", MSG_DISCONNECT = \"comlink/disconnect\", MSG_HANDSHAKE_SYN = \"comlink/handshake/syn\", MSG_HANDSHAKE_SYN_ACK = \"comlink/handshake/syn-ack\", MSG_HANDSHAKE_ACK = \"comlink/handshake/ack\", HANDSHAKE_MSG_TYPES = [\n  MSG_HANDSHAKE_SYN,\n  MSG_HANDSHAKE_SYN_ACK,\n  MSG_HANDSHAKE_ACK\n], INTERNAL_MSG_TYPES = [\n  MSG_RESPONSE,\n  MSG_DISCONNECT,\n  MSG_HEARTBEAT,\n  ...HANDSHAKE_MSG_TYPES\n], throwOnEvent = (message) => (source) => source.pipe(\n  (0,rxjs__WEBPACK_IMPORTED_MODULE_8__.take)(1),\n  (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.map)(() => {\n    throw new Error(message);\n  })\n), createRequestMachine = () => (0,xstate__WEBPACK_IMPORTED_MODULE_9__.setup)({\n  types: {},\n  actors: {\n    listen: (0,xstate__WEBPACK_IMPORTED_MODULE_2__.fromEventObservable)(\n      ({\n        input\n      }) => {\n        const abortSignal$ = input.signal ? (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.fromEvent)(input.signal, \"abort\").pipe(\n          throwOnEvent(`Request ${input.requestId} aborted`)\n        ) : rxjs__WEBPACK_IMPORTED_MODULE_10__.EMPTY, messageFilter = (event) => event.data?.type === MSG_RESPONSE && event.data?.responseTo === input.requestId && !!event.source && input.sources.has(event.source);\n        return (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.fromEvent)(window, \"message\").pipe(\n          (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.filter)(messageFilter),\n          (0,rxjs__WEBPACK_IMPORTED_MODULE_8__.take)(input.sources.size),\n          (0,rxjs__WEBPACK_IMPORTED_MODULE_11__.takeUntil)(abortSignal$)\n        );\n      }\n    )\n  },\n  actions: {\n    \"send message\": ({ context }, params) => {\n      const { sources, targetOrigin } = context, { message } = params;\n      sources.forEach((source) => {\n        source.postMessage(message, { targetOrigin });\n      });\n    },\n    \"on success\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.c)(\n      ({ context }) => context.parentRef,\n      ({ context, self }) => (context.response && context.resolvable?.resolve(context.response), {\n        type: \"request.success\",\n        requestId: self.id,\n        response: context.response,\n        responseTo: context.responseTo\n      })\n    ),\n    \"on fail\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.c)(\n      ({ context }) => context.parentRef,\n      ({ context, self }) => (context.suppressWarnings || console.warn(\n        `[@sanity/comlink] Received no response to message '${context.type}' on client '${context.from}' (ID: '${context.id}').`\n      ), context.resolvable?.reject(new Error(\"No response received\")), { type: \"request.failed\", requestId: self.id })\n    ),\n    \"on abort\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.c)(\n      ({ context }) => context.parentRef,\n      ({ context, self }) => (context.resolvable?.reject(new Error(\"Request aborted\")), { type: \"request.aborted\", requestId: self.id })\n    )\n  },\n  guards: {\n    expectsResponse: ({ context }) => context.expectResponse\n  },\n  delays: {\n    initialTimeout: 0,\n    responseTimeout: ({ context }) => context.responseTimeout ?? RESPONSE_TIMEOUT_DEFAULT\n  }\n}).createMachine({\n  /** @xstate-layout N4IgpgJg5mDOIC5QAoC2BDAxgCwJYDswBKAOlwgBswBiAD1gBd0GwT0AzFgJ2QNwdzoKAFVyowAewCuDItTRY8hUuSoBtAAwBdRKAAOE2P1wT8ukLUQBGAEwBWEgBYAnK+eOAzB7sB2DzY8rABoQAE9rDQc3V0cNTw8fAA4NHwBfVJCFHAJiElgwfAgCKGpNHSQQAyMBU3NLBDsrDxI7DTaAjQA2OOcNDxDwhHsNJx9Ou0TOq2cJxP9HdMyMbOU8gqL8ErUrcv1DY1qK+sbm1vaPLp6+gcRnGydo9wDGycWQLKVc9AB3dGNN6jiWCwdAwMrmKoHMxHRCJRKOEiJHwuZKBZwXKzBMKIGyYkhtAkXOweTqOHw2RJvD45Ug-P4CAH0JgsNicMA8LhwAz4fKicTSWTyZafWm-f5QcEVSE1aGgepwhFIlF9aYYrGDC4+JzEppjGzOUkeGbpDIgfASCBwczU5QQ-YyuqIAC0nRuCBd+IJXu9KSpwppZEoYDt1RMsosiEcNjdVjiJEeGisiSTHkcVgWpptuXyhWKIahjqGzi1BqRJINnVcdkcbuTLS9VYC8ISfsUAbp4vzDphCHJIyjBvJNlxNmRNexQ3sJGH43GPj8jWJrZWuXYfyoEC7YcLsbrgRsjkcvkmdgNbopVhIPhVfnsh8ClMz-tWsCkmEwcHgUvt257u8v+6Hse4xnhOdZnImVidPqCRNB4JqpEAA */\n  context: ({ input }) => ({\n    channelId: input.channelId,\n    data: input.data,\n    domain: input.domain,\n    expectResponse: input.expectResponse ?? !1,\n    from: input.from,\n    id: `msg-${(0,uuid__WEBPACK_IMPORTED_MODULE_13__[\"default\"])()}`,\n    parentRef: input.parentRef,\n    resolvable: input.resolvable,\n    response: null,\n    responseTimeout: input.responseTimeout,\n    responseTo: input.responseTo,\n    signal: input.signal,\n    sources: input.sources instanceof Set ? input.sources : /* @__PURE__ */ new Set([input.sources]),\n    suppressWarnings: input.suppressWarnings,\n    targetOrigin: input.targetOrigin,\n    to: input.to,\n    type: input.type\n  }),\n  initial: \"idle\",\n  on: {\n    abort: \".aborted\"\n  },\n  states: {\n    idle: {\n      after: {\n        initialTimeout: [\n          {\n            target: \"sending\"\n          }\n        ]\n      }\n    },\n    sending: {\n      entry: {\n        type: \"send message\",\n        params: ({ context }) => {\n          const { channelId, data, domain, from, id, responseTo, to, type } = context;\n          return { message: {\n            channelId,\n            data,\n            domain,\n            from,\n            id,\n            to,\n            type,\n            responseTo\n          } };\n        }\n      },\n      always: [\n        {\n          guard: \"expectsResponse\",\n          target: \"awaiting\"\n        },\n        \"success\"\n      ]\n    },\n    awaiting: {\n      invoke: {\n        id: \"listen for response\",\n        src: \"listen\",\n        input: ({ context }) => ({\n          requestId: context.id,\n          sources: context.sources,\n          signal: context.signal\n        }),\n        onError: \"aborted\"\n      },\n      after: {\n        responseTimeout: \"failed\"\n      },\n      on: {\n        message: {\n          actions: (0,xstate__WEBPACK_IMPORTED_MODULE_12__.a)({\n            response: ({ event }) => event.data.data,\n            responseTo: ({ event }) => event.data.responseTo\n          }),\n          target: \"success\"\n        }\n      }\n    },\n    failed: {\n      type: \"final\",\n      entry: \"on fail\"\n    },\n    success: {\n      type: \"final\",\n      entry: \"on success\"\n    },\n    aborted: {\n      type: \"final\",\n      entry: \"on abort\"\n    }\n  },\n  output: ({ context, self }) => ({\n    requestId: self.id,\n    response: context.response,\n    responseTo: context.responseTo\n  })\n}), sendBackAtInterval = (0,xstate__WEBPACK_IMPORTED_MODULE_2__.fromCallback)(({ sendBack, input }) => {\n  const send = () => {\n    sendBack(input.event);\n  };\n  input.immediate && send();\n  const interval = setInterval(send, input.interval);\n  return () => {\n    clearInterval(interval);\n  };\n}), createConnectionMachine = () => (0,xstate__WEBPACK_IMPORTED_MODULE_9__.setup)({\n  types: {},\n  actors: {\n    requestMachine: createRequestMachine(),\n    listen: createListenLogic(),\n    sendBackAtInterval\n  },\n  actions: {\n    \"buffer message\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.b)(({ enqueue }) => {\n      enqueue.assign({\n        buffer: ({ event, context }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"post\"), [...context.buffer, event.data])\n      }), enqueue.emit(({ event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"post\"), {\n        type: \"buffer.added\",\n        message: event.data\n      }));\n    }),\n    \"create request\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.a)({\n      requests: ({ context, event, self, spawn }) => {\n        (0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"request\");\n        const requests = (Array.isArray(event.data) ? event.data : [event.data]).map((request) => {\n          const id = `req-${(0,uuid__WEBPACK_IMPORTED_MODULE_13__[\"default\"])()}`;\n          return spawn(\"requestMachine\", {\n            id,\n            input: {\n              channelId: context.channelId,\n              data: request.data,\n              domain: context.domain,\n              expectResponse: request.expectResponse,\n              from: context.name,\n              parentRef: self,\n              responseTo: request.responseTo,\n              sources: context.target,\n              targetOrigin: context.targetOrigin,\n              to: context.connectTo,\n              type: request.type\n            }\n          });\n        });\n        return [...context.requests, ...requests];\n      }\n    }),\n    \"emit received message\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.b)(({ enqueue }) => {\n      enqueue.emit(({ event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"message.received\"), {\n        type: \"message\",\n        message: event.message.data\n      }));\n    }),\n    \"emit status\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.e)((_, params) => ({\n      type: \"status\",\n      status: params.status\n    })),\n    \"post message\": (0,xstate__WEBPACK_IMPORTED_MODULE_14__.O)(({ event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"post\"), {\n      type: \"request\",\n      data: {\n        data: event.data.data,\n        expectResponse: !0,\n        type: event.data.type\n      }\n    })),\n    \"remove request\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.b)(({ context, enqueue, event }) => {\n      (0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, [\"request.success\", \"request.failed\", \"request.aborted\"]), (0,xstate__WEBPACK_IMPORTED_MODULE_14__.R)(event.requestId), enqueue.assign({ requests: context.requests.filter(({ id }) => id !== event.requestId) });\n    }),\n    respond: (0,xstate__WEBPACK_IMPORTED_MODULE_14__.O)(({ event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"response\"), {\n      type: \"request\",\n      data: {\n        data: event.data,\n        type: MSG_RESPONSE,\n        responseTo: event.respondTo\n      }\n    })),\n    \"send handshake ack\": (0,xstate__WEBPACK_IMPORTED_MODULE_14__.O)({\n      type: \"request\",\n      data: { type: MSG_HANDSHAKE_ACK }\n    }),\n    \"send disconnect\": (0,xstate__WEBPACK_IMPORTED_MODULE_14__.O)(() => ({\n      type: \"request\",\n      data: { type: MSG_DISCONNECT }\n    })),\n    \"send handshake syn\": (0,xstate__WEBPACK_IMPORTED_MODULE_14__.O)({\n      type: \"request\",\n      data: { type: MSG_HANDSHAKE_SYN }\n    }),\n    \"send pending messages\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.b)(({ enqueue }) => {\n      enqueue.raise(({ context }) => ({\n        type: \"request\",\n        data: context.buffer.map(({ data, type }) => ({ data, type }))\n      })), enqueue.emit(({ context }) => ({\n        type: \"buffer.flushed\",\n        messages: context.buffer\n      })), enqueue.assign({\n        buffer: []\n      });\n    }),\n    \"set target\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.a)({\n      target: ({ event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"target.set\"), event.target)\n    })\n  },\n  guards: {\n    \"has target\": ({ context }) => !!context.target,\n    \"should send heartbeats\": ({ context }) => context.heartbeat\n  }\n}).createMachine({\n  /** @xstate-layout N4IgpgJg5mDOIC5QGMAWBDAdpsAbAxAC7oBOMhAdLGIQNoAMAuoqAA4D2sAloV+5ixAAPRAHZRAJgoAWABz0ArHICMy2QGZZCgJwAaEAE9EE+tIrb6ANgkLl46fTuj1AXxf60WHARJgAjgCucJSwAcjIcLAMzEggHNy8-IIiCKLS2hQS6qb2yurisrL6RgjK9LIyCuqq0g7WstZuHhjYePi+gcEUAGboXLiQ0YLxPHwCsSmiCgoykpayDtqS6trqxYjKEk0gnq24FFwQA-jI-DjIdEzDnKNJExuOZpZ12eq29OrSCuupypYUojUaTKCnm5Wk2123gORzA+HilxibBuiXGoBSGnUAIU4gU9FWamUtR+lmUM1EllBEkslMUEnpkJa0JaEFgGAA1lxMFB8LADJghrERqjkhtshk3mTtNo5OpqpYfqCKhTptoqpY1WUtu4dky8BQWWz0Jzue1-EFYIjrgkxqLSupqRRPpoPqJtLI0hIioZENJJE7NnJ8ZYHVk1YyvPrDRyuTyEYLkTa7uixVlMh81KGFhS1j6EPkZlpVjTphr8mkI3sDVhWTHTQBbSLoGAUXwRLgAN0GVyFKNt91KimUFEKXvKC2s9R+6X+jipnzJeSqEJ1UKjNaNJp5EC4sFOrQuCbifeTwg2cgoym0RPxDtqkj0eaB9Ao8zSolMEivZVcq71+33c5CEgeFOCtXskzRM8EDxKRpmkSw3QJbQsmpH5tHmV8JHSbJpDsakV2aSMALOMALhAjoLXAxNbiglI-SxWw1Vw0QNDw0Qfg9KQ7EJSxHHxApK2hQCyOAiAzVgDhMGoI9hX7FMEHSF8cWkelpHURCbBsb481xAEgT9BQJCmWQsiE-URPI8TG1gWBmzAVsyLATtuyRY9ILtWoKmlL82Kqd0tAVJ91LMHFZDKIkVlkNVZHMkiDzE-Adz3UjDx7GiRQHCKnheD53k+HSSkDDIwpBVTqQwuKKEssSDTAUhCAAI3qyg0DIrd8Fkk86MQUMnVM+RynoegTDJH48hGp0vR-FDRqqKqasgOqGua9AQjATAd1NSiul6fpXOtWi7Wy19cslD4vnG7IX3oVjVDUVYEJQqrksW8SdstLqPKy0wKgG1RhtMWogqKhoMjkWp6XxUyFBe3c3tAz70vco6fq+V8PTkGUFzdQqNnELEM2yClrwwzQ4ZShKQJqr7UYU98AS0W9pT4z5pHG0yXwMkNNTyGk3B1TB2AgOBBDXXBDsyhSFG9EovQqN5i1JeRcKqw4Bkl+ToMx8x0j+EaqQ9XMSkBURMgMkEwQWKro2NWNNdPFJAzN0lJGM4slDxhBEJfXyplBd03wW1KxIdnrBxBh4JAyW75C8rJpmDqmIGWkgmpasPjqUcaHooMLHA0uU1UkJOgKW1B6rT1bWor5At0zgcTAkK7hrz1irB0D8cW0UvRPLyv07WqgNq2qAG+l9SnXUz0UOXD5xuMs3Y4+DVJBX7UiKrV6Q8gcfoJO54rFefLLqfJYX1WKYNLxL4NO1NwgA */\n  id: \"connection\",\n  context: ({ input }) => ({\n    id: input.id || `${input.name}-${(0,uuid__WEBPACK_IMPORTED_MODULE_13__[\"default\"])()}`,\n    buffer: [],\n    channelId: `chn-${(0,uuid__WEBPACK_IMPORTED_MODULE_13__[\"default\"])()}`,\n    connectTo: input.connectTo,\n    domain: input.domain ?? DOMAIN,\n    heartbeat: input.heartbeat ?? !1,\n    name: input.name,\n    requests: [],\n    target: input.target,\n    targetOrigin: input.targetOrigin\n  }),\n  on: {\n    \"target.set\": {\n      actions: \"set target\"\n    },\n    \"request.success\": {\n      actions: \"remove request\"\n    },\n    \"request.failed\": {\n      actions: \"remove request\"\n    }\n  },\n  initial: \"idle\",\n  states: {\n    idle: {\n      entry: [{ type: \"emit status\", params: { status: \"idle\" } }],\n      on: {\n        connect: {\n          target: \"handshaking\",\n          guard: \"has target\"\n        },\n        post: {\n          actions: \"buffer message\"\n        }\n      }\n    },\n    handshaking: {\n      id: \"handshaking\",\n      entry: [{ type: \"emit status\", params: { status: \"handshaking\" } }],\n      invoke: [\n        {\n          id: \"send syn\",\n          src: \"sendBackAtInterval\",\n          input: () => ({\n            event: { type: \"syn\" },\n            interval: HANDSHAKE_INTERVAL,\n            immediate: !0\n          })\n        },\n        {\n          id: \"listen for handshake\",\n          src: \"listen\",\n          input: (input) => listenInputFromContext({\n            include: MSG_HANDSHAKE_SYN_ACK,\n            count: 1\n          })(input)\n          /* Below would maybe be more readable than transitioning to\n          'connected' on 'message', and 'ack' on exit but having onDone when\n          using passing invocations currently breaks XState Editor */\n          // onDone: {\n          //   target: 'connected',\n          //   actions: 'ack',\n          // },\n        }\n      ],\n      on: {\n        syn: {\n          actions: \"send handshake syn\"\n        },\n        request: {\n          actions: \"create request\"\n        },\n        post: {\n          actions: \"buffer message\"\n        },\n        \"message.received\": {\n          target: \"connected\"\n        },\n        disconnect: {\n          target: \"disconnected\"\n        }\n      },\n      exit: \"send handshake ack\"\n    },\n    connected: {\n      entry: [\"send pending messages\", { type: \"emit status\", params: { status: \"connected\" } }],\n      invoke: {\n        id: \"listen for messages\",\n        src: \"listen\",\n        input: listenInputFromContext({\n          exclude: [MSG_RESPONSE, MSG_HEARTBEAT]\n        })\n      },\n      on: {\n        post: {\n          actions: \"post message\"\n        },\n        request: {\n          actions: \"create request\"\n        },\n        response: {\n          actions: \"respond\"\n        },\n        \"message.received\": {\n          actions: \"emit received message\"\n        },\n        disconnect: {\n          target: \"disconnected\"\n        }\n      },\n      initial: \"heartbeat\",\n      states: {\n        heartbeat: {\n          initial: \"checking\",\n          states: {\n            checking: {\n              always: {\n                guard: \"should send heartbeats\",\n                target: \"sending\"\n              }\n            },\n            sending: {\n              on: {\n                \"request.failed\": {\n                  target: \"#handshaking\"\n                }\n              },\n              invoke: {\n                id: \"send heartbeat\",\n                src: \"sendBackAtInterval\",\n                input: () => ({\n                  event: { type: \"post\", data: { type: MSG_HEARTBEAT, data: void 0 } },\n                  interval: 2e3,\n                  immediate: !1\n                })\n              }\n            }\n          }\n        }\n      }\n    },\n    disconnected: {\n      id: \"disconnected\",\n      entry: [\"send disconnect\", { type: \"emit status\", params: { status: \"disconnected\" } }],\n      on: {\n        request: {\n          actions: \"create request\"\n        },\n        post: {\n          actions: \"buffer message\"\n        },\n        connect: {\n          target: \"handshaking\",\n          guard: \"has target\"\n        }\n      }\n    }\n  }\n}), createConnection = (input, machine = createConnectionMachine()) => {\n  const id = input.id || `${input.name}-${(0,uuid__WEBPACK_IMPORTED_MODULE_13__[\"default\"])()}`, actor = (0,xstate__WEBPACK_IMPORTED_MODULE_14__.A)(machine, {\n    input: { ...input, id }\n  }), eventHandlers = /* @__PURE__ */ new Map(), unhandledMessages = /* @__PURE__ */ new Map(), on = (type, handler, options) => {\n    const handlers = eventHandlers.get(type) || /* @__PURE__ */ new Set();\n    eventHandlers.has(type) || eventHandlers.set(type, handlers), handlers.add(handler);\n    const unhandledMessagesForType = unhandledMessages.get(type);\n    if (unhandledMessagesForType) {\n      const replayCount = options?.replay ?? 1;\n      Array.from(unhandledMessagesForType).slice(-replayCount).forEach(async ({ data, id: id2 }) => {\n        const response = await handler(data);\n        response && actor.send({\n          type: \"response\",\n          respondTo: id2,\n          data: response\n        });\n      }), unhandledMessages.delete(type);\n    }\n    return () => {\n      handlers.delete(handler);\n    };\n  }, connect = () => {\n    actor.send({ type: \"connect\" });\n  }, disconnect = () => {\n    actor.send({ type: \"disconnect\" });\n  }, onStatus = (handler, filter2) => {\n    const { unsubscribe } = actor.on(\"status\", (event) => {\n      filter2 && event.status !== filter2 || handler(event.status);\n    });\n    return unsubscribe;\n  }, setTarget = (target) => {\n    actor.send({ type: \"target.set\", target });\n  }, post = (type, data) => {\n    const _data = { type, data };\n    actor.send({ type: \"post\", data: _data });\n  };\n  actor.on(\"message\", async ({ message }) => {\n    const handlers = eventHandlers.get(message.type);\n    if (handlers) {\n      handlers.forEach(async (handler) => {\n        const response = await handler(message.data);\n        response && actor.send({ type: \"response\", respondTo: message.id, data: response });\n      });\n      return;\n    }\n    const unhandledMessagesForType = unhandledMessages.get(message.type);\n    unhandledMessagesForType ? unhandledMessagesForType.add(message) : unhandledMessages.set(message.type, /* @__PURE__ */ new Set([message]));\n  });\n  const stop = () => {\n    actor.stop();\n  }, start = () => (actor.start(), stop);\n  return {\n    actor,\n    connect,\n    disconnect,\n    id,\n    name: input.name,\n    machine,\n    on,\n    onStatus,\n    post,\n    setTarget,\n    start,\n    stop,\n    get target() {\n      return actor.getSnapshot().context.target;\n    }\n  };\n}, cleanupConnection = (connection) => {\n  connection.disconnect(), setTimeout(() => {\n    connection.stop();\n  }, 0);\n}, noop = () => {\n}, createController = (input) => {\n  const { targetOrigin } = input, targets = /* @__PURE__ */ new Set(), channels = /* @__PURE__ */ new Set();\n  return {\n    addTarget: (target) => {\n      if (targets.has(target))\n        return noop;\n      if (!targets.size || !channels.size)\n        return targets.add(target), channels.forEach((channel) => {\n          channel.connections.forEach((connection) => {\n            connection.setTarget(target), connection.connect();\n          });\n        }), () => {\n          targets.delete(target), channels.forEach((channel) => {\n            channel.connections.forEach((connection) => {\n              connection.target === target && connection.disconnect();\n            });\n          });\n        };\n      targets.add(target);\n      const targetConnections = /* @__PURE__ */ new Set();\n      return channels.forEach((channel) => {\n        const connection = createConnection(\n          {\n            ...channel.input,\n            target,\n            targetOrigin\n          },\n          channel.machine\n        );\n        targetConnections.add(connection), channel.connections.add(connection), channel.subscribers.forEach(({ type, handler, unsubscribers }) => {\n          unsubscribers.push(connection.on(type, handler));\n        }), channel.internalEventSubscribers.forEach(({ type, handler, unsubscribers }) => {\n          unsubscribers.push(connection.actor.on(type, handler).unsubscribe);\n        }), channel.statusSubscribers.forEach(({ handler, unsubscribers }) => {\n          unsubscribers.push(\n            connection.onStatus((status) => handler({ connection: connection.id, status }))\n          );\n        }), connection.start(), connection.connect();\n      }), () => {\n        targets.delete(target), targetConnections.forEach((connection) => {\n          cleanupConnection(connection), channels.forEach((channel) => {\n            channel.connections.delete(connection);\n          });\n        });\n      };\n    },\n    createChannel: (input2, machine = createConnectionMachine()) => {\n      const channel = {\n        connections: /* @__PURE__ */ new Set(),\n        input: input2,\n        internalEventSubscribers: /* @__PURE__ */ new Set(),\n        machine,\n        statusSubscribers: /* @__PURE__ */ new Set(),\n        subscribers: /* @__PURE__ */ new Set()\n      };\n      channels.add(channel);\n      const { connections, internalEventSubscribers, statusSubscribers, subscribers } = channel;\n      if (targets.size)\n        targets.forEach((target) => {\n          const connection = createConnection(\n            {\n              ...input2,\n              target,\n              targetOrigin\n            },\n            machine\n          );\n          connections.add(connection);\n        });\n      else {\n        const connection = createConnection({ ...input2, targetOrigin }, machine);\n        connections.add(connection);\n      }\n      const post = (...params) => {\n        const [type, data] = params;\n        connections.forEach((connection) => {\n          connection.post(type, data);\n        });\n      }, on = (type, handler) => {\n        const unsubscribers = [];\n        connections.forEach((connection) => {\n          unsubscribers.push(connection.on(type, handler));\n        });\n        const subscriber = { type, handler, unsubscribers };\n        return subscribers.add(subscriber), () => {\n          unsubscribers.forEach((unsub) => unsub()), subscribers.delete(subscriber);\n        };\n      }, onInternalEvent = (type, handler) => {\n        const unsubscribers = [];\n        connections.forEach((connection) => {\n          unsubscribers.push(connection.actor.on(type, handler).unsubscribe);\n        });\n        const subscriber = { type, handler, unsubscribers };\n        return internalEventSubscribers.add(subscriber), () => {\n          unsubscribers.forEach((unsub) => unsub()), internalEventSubscribers.delete(subscriber);\n        };\n      }, onStatus = (handler) => {\n        const unsubscribers = [];\n        connections.forEach((connection) => {\n          unsubscribers.push(\n            connection.onStatus((status) => handler({ connection: connection.id, status }))\n          );\n        });\n        const subscriber = { handler, unsubscribers };\n        return statusSubscribers.add(subscriber), () => {\n          unsubscribers.forEach((unsub) => unsub()), statusSubscribers.delete(subscriber);\n        };\n      }, stop = () => {\n        const connections2 = channel.connections;\n        connections2.forEach(cleanupConnection), connections2.clear(), channels.delete(channel);\n      };\n      return {\n        on,\n        onInternalEvent,\n        onStatus,\n        post,\n        start: () => (connections.forEach((connection) => {\n          connection.start(), connection.connect();\n        }), stop),\n        stop\n      };\n    },\n    destroy: () => {\n      channels.forEach(({ connections }) => {\n        connections.forEach(cleanupConnection), connections.clear();\n      }), channels.clear(), targets.clear();\n    }\n  };\n}, createNodeMachine = () => (0,xstate__WEBPACK_IMPORTED_MODULE_9__.setup)({\n  types: {},\n  actors: {\n    requestMachine: createRequestMachine(),\n    listen: createListenLogic()\n  },\n  actions: {\n    \"buffer handshake\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.a)({\n      handshakeBuffer: ({ event, context }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"message.received\"), [...context.handshakeBuffer, event])\n    }),\n    \"buffer message\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.b)(({ enqueue }) => {\n      enqueue.assign({\n        buffer: ({ event, context }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"post\"), [\n          ...context.buffer,\n          {\n            data: event.data,\n            resolvable: event.resolvable,\n            options: event.options\n          }\n        ])\n      }), enqueue.emit(({ event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"post\"), {\n        type: \"buffer.added\",\n        message: event.data\n      }));\n    }),\n    \"create request\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.a)({\n      requests: ({ context, event, self, spawn }) => {\n        (0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"request\");\n        const requests = (Array.isArray(event.data) ? event.data : [event.data]).map((request) => {\n          const id = `req-${(0,uuid__WEBPACK_IMPORTED_MODULE_13__[\"default\"])()}`;\n          return spawn(\"requestMachine\", {\n            id,\n            input: {\n              channelId: context.channelId,\n              data: request.data,\n              domain: context.domain,\n              expectResponse: request.expectResponse,\n              from: context.name,\n              parentRef: self,\n              resolvable: request.resolvable,\n              responseTimeout: request.options?.responseTimeout,\n              responseTo: request.responseTo,\n              signal: request.options?.signal,\n              sources: context.target,\n              suppressWarnings: request.options?.suppressWarnings,\n              targetOrigin: context.targetOrigin,\n              to: context.connectTo,\n              type: request.type\n            }\n          });\n        });\n        return [...context.requests, ...requests];\n      }\n    }),\n    \"emit heartbeat\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.e)(() => ({\n      type: \"heartbeat\"\n    })),\n    \"emit received message\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.b)(({ enqueue }) => {\n      enqueue.emit(({ event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"message.received\"), {\n        type: \"message\",\n        message: event.message.data\n      }));\n    }),\n    \"emit status\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.e)((_, params) => ({\n      type: \"status\",\n      status: params.status\n    })),\n    \"post message\": (0,xstate__WEBPACK_IMPORTED_MODULE_14__.O)(({ event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"post\"), {\n      type: \"request\",\n      data: {\n        data: event.data.data,\n        expectResponse: !!event.resolvable,\n        type: event.data.type,\n        resolvable: event.resolvable,\n        options: event.options\n      }\n    })),\n    \"process pending handshakes\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.b)(({ context, enqueue }) => {\n      context.handshakeBuffer.forEach((event) => enqueue.raise(event)), enqueue.assign({\n        handshakeBuffer: []\n      });\n    }),\n    \"remove request\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.b)(({ context, enqueue, event }) => {\n      (0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, [\"request.success\", \"request.failed\", \"request.aborted\"]), (0,xstate__WEBPACK_IMPORTED_MODULE_14__.R)(event.requestId), enqueue.assign({ requests: context.requests.filter(({ id }) => id !== event.requestId) });\n    }),\n    \"send response\": (0,xstate__WEBPACK_IMPORTED_MODULE_14__.O)(({ event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, [\"message.received\", \"heartbeat.received\"]), {\n      type: \"request\",\n      data: {\n        type: MSG_RESPONSE,\n        responseTo: event.message.data.id,\n        data: void 0\n      }\n    })),\n    \"send handshake syn ack\": (0,xstate__WEBPACK_IMPORTED_MODULE_14__.O)({\n      type: \"request\",\n      data: { type: MSG_HANDSHAKE_SYN_ACK }\n    }),\n    \"send pending messages\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.b)(({ enqueue }) => {\n      enqueue.raise(({ context }) => ({\n        type: \"request\",\n        data: context.buffer.map(({ data, resolvable, options }) => ({\n          data: data.data,\n          type: data.type,\n          expectResponse: !!resolvable,\n          resolvable,\n          options\n        }))\n      })), enqueue.emit(({ context }) => ({\n        type: \"buffer.flushed\",\n        messages: context.buffer.map(({ data }) => data)\n      })), enqueue.assign({\n        buffer: []\n      });\n    }),\n    \"set connection config\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.a)({\n      channelId: ({ event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"handshake.syn\"), event.message.data.channelId),\n      target: ({ event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"handshake.syn\"), event.message.source || void 0),\n      targetOrigin: ({ event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"handshake.syn\"), event.message.origin)\n    })\n  },\n  guards: {\n    hasSource: ({ context }) => context.target !== null\n  }\n}).createMachine({\n  /** @xstate-layout N4IgpgJg5mDOIC5QDsD2EwGIBOYCOArnAC4B0sBAxpXLANoAMAuoqAA6qwCWxXqyrEAA9EAVgYAWUgEYJDUQA4JAZmUSJC0coDsAGhABPRNIYLSErdOkBOAGzbx227YUBfV-rQYc+IrDIAZgCGXAA2kIwsSCAc3Lz8giIIoiakqgBMDKbp2tYS0srp+kYI0ununuhgpFwQ4ZgQ-NVcyABuqADW1V7NdWAILe2UQfHIkZGCsTx8AtFJ6aKipAzWOtrpC7Z5BUWGiNoK6aS26RLW2tLaqkqqFSA9NX2YALa0QTCkuDRcrRHMk5xpgk5ogJLZSNZIVDoVCFLZiohbIVSLkXLZRHZDgxbHcHrV6rFiBNolNRolEVJbCsdGUzsoyhiEcllOC1DowelVmVrOUPPcqqQABZBZAQWDCjotKANJo1NqdboC4Wi8VBSXIKADeXDUbjf4kwFkkEILbg8RZMHKOzWKzKJkHJa086Xa4qZS4pUisUSqU+QgkYnsQ0zcnJaRLDbpZwKNQSBYspm2MEyC5KTnaDSSd18h7K71q32EwMxYPA0BJFLKY5yZxIrKSURM0RnFHSBTrQqQ9babQejBCr2q9XSiBcWCUfjIMCUIn6oNxEPGtTWFFR0RUy7iGzt+3Ip0XURXVZKPvVCfIKczyB+vyzqLzoGzcuIG0MGTyCztjRtjaJjbHVMNAUTdu1PUhz0vYhryLOcSwXMthBfK0ZGsLQGBZekCi0Jso1IdI23WG04zOE4wIg6coIgBox3Imdi1JRdnxNOxSHNSQkWtW0mTjMxMQ7fDzgcbNKn7WjKJeN4Pi+MAfj+e84MfUMFHbZZwxOHZNDyO09gQOQjmAhZJCM9IMjIycKOvQUwCCbBiAAI2sshpNkiB6NLJ9EIQBQbWOdJlMhYCUjbJkchXGsFmsJQMVsWl3BzKp4GiHoAXgjykgAWmkZZ6xy3LZF2EobCy6xsQWJQ42kE4FjA-EwBSxTjSRUhDgqkzgO2BxdykU4AvXFQ-KjMC8yHKV6qNJi6WOdcypcZsXGxe0JG0XySKjM5lKsMyLwsiAxsYzylDfONznUEqrmi+1ThkHqXDONbULi1wgA */\n  id: \"node\",\n  context: ({ input }) => ({\n    buffer: [],\n    channelId: null,\n    connectTo: input.connectTo,\n    domain: input.domain ?? DOMAIN,\n    handshakeBuffer: [],\n    name: input.name,\n    requests: [],\n    target: void 0,\n    targetOrigin: null\n  }),\n  // Always listen for handshake syn messages. The channel could have\n  // disconnected without being able to notify the node, and so need to\n  // re-establish the connection.\n  invoke: {\n    id: \"listen for handshake syn\",\n    src: \"listen\",\n    input: listenInputFromContext({\n      include: MSG_HANDSHAKE_SYN,\n      responseType: \"handshake.syn\"\n    })\n  },\n  on: {\n    \"request.success\": {\n      actions: \"remove request\"\n    },\n    \"request.failed\": {\n      actions: \"remove request\"\n    },\n    \"request.aborted\": {\n      actions: \"remove request\"\n    },\n    \"handshake.syn\": {\n      actions: \"set connection config\",\n      target: \".handshaking\"\n    }\n  },\n  initial: \"idle\",\n  states: {\n    idle: {\n      entry: [{ type: \"emit status\", params: { status: \"idle\" } }],\n      on: {\n        post: {\n          actions: \"buffer message\"\n        }\n      }\n    },\n    handshaking: {\n      guard: \"hasSource\",\n      entry: [\"send handshake syn ack\", { type: \"emit status\", params: { status: \"handshaking\" } }],\n      invoke: [\n        {\n          id: \"listen for handshake ack\",\n          src: \"listen\",\n          input: listenInputFromContext({\n            include: MSG_HANDSHAKE_ACK,\n            count: 1,\n            // Override the default `message.received` responseType to prevent\n            // buffering the ack message. We transition to the connected state\n            // using onDone instead of listening to this event using `on`\n            responseType: \"handshake.complete\"\n          }),\n          onDone: \"connected\"\n        },\n        {\n          id: \"listen for disconnect\",\n          src: \"listen\",\n          input: listenInputFromContext({\n            include: MSG_DISCONNECT,\n            count: 1,\n            responseType: \"disconnect\"\n          })\n        },\n        {\n          id: \"listen for messages\",\n          src: \"listen\",\n          input: listenInputFromContext({\n            exclude: [\n              MSG_DISCONNECT,\n              MSG_HANDSHAKE_SYN,\n              MSG_HANDSHAKE_ACK,\n              MSG_HEARTBEAT,\n              MSG_RESPONSE\n            ]\n          })\n        }\n      ],\n      on: {\n        request: {\n          actions: \"create request\"\n        },\n        post: {\n          actions: \"buffer message\"\n        },\n        \"message.received\": {\n          actions: \"buffer handshake\"\n        },\n        disconnect: {\n          target: \"idle\"\n        }\n      }\n    },\n    connected: {\n      entry: [\n        \"process pending handshakes\",\n        \"send pending messages\",\n        { type: \"emit status\", params: { status: \"connected\" } }\n      ],\n      invoke: [\n        {\n          id: \"listen for messages\",\n          src: \"listen\",\n          input: listenInputFromContext({\n            exclude: [\n              MSG_DISCONNECT,\n              MSG_HANDSHAKE_SYN,\n              MSG_HANDSHAKE_ACK,\n              MSG_HEARTBEAT,\n              MSG_RESPONSE\n            ]\n          })\n        },\n        {\n          id: \"listen for heartbeat\",\n          src: \"listen\",\n          input: listenInputFromContext({\n            include: MSG_HEARTBEAT,\n            responseType: \"heartbeat.received\"\n          })\n        },\n        {\n          id: \"listen for disconnect\",\n          src: \"listen\",\n          input: listenInputFromContext({\n            include: MSG_DISCONNECT,\n            count: 1,\n            responseType: \"disconnect\"\n          })\n        }\n      ],\n      on: {\n        request: {\n          actions: \"create request\"\n        },\n        post: {\n          actions: \"post message\"\n        },\n        disconnect: {\n          target: \"idle\"\n        },\n        \"message.received\": {\n          actions: [\"send response\", \"emit received message\"]\n        },\n        \"heartbeat.received\": {\n          actions: [\"send response\", \"emit heartbeat\"]\n        }\n      }\n    }\n  }\n}), createNode = (input, machine = createNodeMachine()) => {\n  const actor = (0,xstate__WEBPACK_IMPORTED_MODULE_14__.A)(machine, {\n    input\n  }), eventHandlers = /* @__PURE__ */ new Map(), unhandledMessages = /* @__PURE__ */ new Map(), on = (type, handler, options) => {\n    const handlers = eventHandlers.get(type) || /* @__PURE__ */ new Set();\n    eventHandlers.has(type) || eventHandlers.set(type, handlers), handlers.add(handler);\n    const unhandledMessagesForType = unhandledMessages.get(type);\n    if (unhandledMessagesForType) {\n      const replayCount = options?.replay ?? 1;\n      Array.from(unhandledMessagesForType).slice(-replayCount).forEach(({ data }) => handler(data)), unhandledMessages.delete(type);\n    }\n    return () => {\n      handlers.delete(handler);\n    };\n  };\n  let cachedStatus;\n  const onStatus = (handler, filter2) => {\n    const { unsubscribe } = actor.on(\n      \"status\",\n      (event) => {\n        cachedStatus = event.status, !(filter2 && event.status !== filter2) && handler(event.status);\n      }\n    );\n    return cachedStatus && handler(cachedStatus), unsubscribe;\n  }, post = (type, data) => {\n    const _data = { type, data };\n    actor.send({ type: \"post\", data: _data });\n  }, fetch = (type, data, options) => {\n    const { responseTimeout = FETCH_TIMEOUT_DEFAULT, signal, suppressWarnings } = options || {}, resolvable = Promise.withResolvers(), _data = { type, data };\n    return actor.send({\n      type: \"post\",\n      data: _data,\n      resolvable,\n      options: { responseTimeout, signal, suppressWarnings }\n    }), resolvable.promise;\n  };\n  actor.on(\"message\", ({ message }) => {\n    const handlers = eventHandlers.get(message.type);\n    if (handlers) {\n      handlers.forEach((handler) => handler(message.data));\n      return;\n    }\n    const unhandledMessagesForType = unhandledMessages.get(message.type);\n    unhandledMessagesForType ? unhandledMessagesForType.add(message) : unhandledMessages.set(message.type, /* @__PURE__ */ new Set([message]));\n  });\n  const stop = () => {\n    actor.stop();\n  };\n  return {\n    actor,\n    fetch,\n    machine,\n    on,\n    onStatus,\n    post,\n    start: () => (actor.start(), stop),\n    stop\n  };\n};\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/comlink/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/arrify.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/arrify.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   arrify: () => (/* binding */ arrify)\n/* harmony export */ });\nfunction arrify(val) {\n  return Array.isArray(val) ? val : [val];\n}\n\n//# sourceMappingURL=arrify.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS92aXN1YWwtZWRpdGluZy9ub2RlX21vZHVsZXMvQHNhbml0eS9tdXRhdGUvZGlzdC9fY2h1bmtzLWVzL2FycmlmeS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBR0U7QUFDRiIsInNvdXJjZXMiOlsiL21lZGlhL2F3YWlzL05ldyBWb2x1bWUvR292ZXJOT3IgSG91c2UgL2hhY2thdGhvbi0zL3NlY29uZFRpbWVzL2hhY2thdGhvbi1iYW5kYWdlL25vZGVfbW9kdWxlcy9Ac2FuaXR5L3Zpc3VhbC1lZGl0aW5nL25vZGVfbW9kdWxlcy9Ac2FuaXR5L211dGF0ZS9kaXN0L19jaHVua3MtZXMvYXJyaWZ5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGFycmlmeSh2YWwpIHtcbiAgcmV0dXJuIEFycmF5LmlzQXJyYXkodmFsKSA/IHZhbCA6IFt2YWxdO1xufVxuZXhwb3J0IHtcbiAgYXJyaWZ5XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXJyaWZ5LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/arrify.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/decode.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/decode.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   decodeAll: () => (/* binding */ decodeAll)\n/* harmony export */ });\n/* harmony import */ var _parse_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parse.js */ \"(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/parse.js\");\n\nfunction isCreateIfNotExistsMutation(sanityMutation) {\n  return \"createIfNotExists\" in sanityMutation;\n}\nfunction isCreateOrReplaceMutation(sanityMutation) {\n  return \"createOrReplace\" in sanityMutation;\n}\nfunction isCreateMutation(sanityMutation) {\n  return \"create\" in sanityMutation;\n}\nfunction isDeleteMutation(sanityMutation) {\n  return \"delete\" in sanityMutation;\n}\nfunction isPatchMutation(sanityMutation) {\n  return \"patch\" in sanityMutation;\n}\nfunction isSetPatch(sanityPatch) {\n  return \"set\" in sanityPatch;\n}\nfunction isSetIfMissingPatch(sanityPatch) {\n  return \"setIfMissing\" in sanityPatch;\n}\nfunction isUnsetPatch(sanityPatch) {\n  return \"unset\" in sanityPatch;\n}\nfunction isIncPatch(sanityPatch) {\n  return \"inc\" in sanityPatch;\n}\nfunction isDecPatch(sanityPatch) {\n  return \"inc\" in sanityPatch;\n}\nfunction isInsertPatch(sanityPatch) {\n  return \"insert\" in sanityPatch;\n}\nfunction decodeAll(sanityMutations) {\n  return sanityMutations.map(decodeMutation);\n}\nfunction decode(encodedMutation) {\n  return decodeMutation(encodedMutation);\n}\nfunction decodeMutation(encodedMutation) {\n  if (isCreateIfNotExistsMutation(encodedMutation))\n    return {\n      type: \"createIfNotExists\",\n      document: encodedMutation.createIfNotExists\n    };\n  if (isCreateOrReplaceMutation(encodedMutation))\n    return {\n      type: \"createOrReplace\",\n      document: encodedMutation.createOrReplace\n    };\n  if (isCreateMutation(encodedMutation))\n    return { type: \"create\", document: encodedMutation.create };\n  if (isDeleteMutation(encodedMutation))\n    return { id: encodedMutation.delete.id, type: \"delete\" };\n  if (isPatchMutation(encodedMutation))\n    return {\n      type: \"patch\",\n      id: encodedMutation.patch.id,\n      patches: decodeNodePatches(encodedMutation.patch)\n    };\n  throw new Error(`Unknown mutation: ${JSON.stringify(encodedMutation)}`);\n}\nconst POSITION_KEYS = [\"before\", \"replace\", \"after\"];\nfunction getInsertPosition(insert) {\n  const positions = POSITION_KEYS.filter((k) => k in insert);\n  if (positions.length > 1)\n    throw new Error(\n      `Insert patch is ambiguous. Should only contain one of: ${POSITION_KEYS.join(\n        \", \"\n      )}, instead found ${positions.join(\", \")}`\n    );\n  return positions[0];\n}\nfunction decodeNodePatches(patch) {\n  return [\n    ...getSetPatches(patch),\n    ...getSetIfMissingPatches(patch),\n    ...getUnsetPatches(patch),\n    ...getIncPatches(patch),\n    ...getDecPatches(patch),\n    ...getInsertPatches(patch)\n  ];\n}\nfunction getSetPatches(patch) {\n  return isSetPatch(patch) ? Object.keys(patch.set).map((path) => ({\n    path: (0,_parse_js__WEBPACK_IMPORTED_MODULE_0__.parse)(path),\n    op: { type: \"set\", value: patch.set[path] }\n  })) : [];\n}\nfunction getSetIfMissingPatches(patch) {\n  return isSetIfMissingPatch(patch) ? Object.keys(patch.setIfMissing).map((path) => ({\n    path: (0,_parse_js__WEBPACK_IMPORTED_MODULE_0__.parse)(path),\n    op: { type: \"setIfMissing\", value: patch.setIfMissing[path] }\n  })) : [];\n}\nfunction getUnsetPatches(patch) {\n  return isUnsetPatch(patch) ? patch.unset.map((path) => ({\n    path: (0,_parse_js__WEBPACK_IMPORTED_MODULE_0__.parse)(path),\n    op: { type: \"unset\" }\n  })) : [];\n}\nfunction getIncPatches(patch) {\n  return isIncPatch(patch) ? Object.keys(patch.inc).map((path) => ({\n    path: (0,_parse_js__WEBPACK_IMPORTED_MODULE_0__.parse)(path),\n    op: { type: \"inc\", amount: patch.inc[path] }\n  })) : [];\n}\nfunction getDecPatches(patch) {\n  return isDecPatch(patch) ? Object.keys(patch.dec).map((path) => ({\n    path: (0,_parse_js__WEBPACK_IMPORTED_MODULE_0__.parse)(path),\n    op: { type: \"dec\", amount: patch.dec[path] }\n  })) : [];\n}\nfunction getInsertPatches(patch) {\n  if (!isInsertPatch(patch))\n    return [];\n  const position = getInsertPosition(patch.insert);\n  if (!position)\n    throw new Error(\"Insert patch missing position\");\n  const path = (0,_parse_js__WEBPACK_IMPORTED_MODULE_0__.parse)(patch.insert[position]), referenceItem = path.pop(), op = position === \"replace\" ? {\n    type: \"insert\",\n    position,\n    referenceItem,\n    items: patch.insert.items\n  } : {\n    type: \"insert\",\n    position,\n    referenceItem,\n    items: patch.insert.items\n  };\n  return [{ path, op }];\n}\n\n//# sourceMappingURL=decode.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS92aXN1YWwtZWRpdGluZy9ub2RlX21vZHVsZXMvQHNhbml0eS9tdXRhdGUvZGlzdC9fY2h1bmtzLWVzL2RlY29kZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBbUM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxnQ0FBZ0M7QUFDdkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0VBQWdFO0FBQ2hFO0FBQ0EsUUFBUSxrQkFBa0IscUJBQXFCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsZ0RBQUs7QUFDZixVQUFVO0FBQ1YsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLFVBQVUsZ0RBQUs7QUFDZixVQUFVO0FBQ1YsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLFVBQVUsZ0RBQUs7QUFDZixVQUFVO0FBQ1YsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLFVBQVUsZ0RBQUs7QUFDZixVQUFVO0FBQ1YsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLFVBQVUsZ0RBQUs7QUFDZixVQUFVO0FBQ1YsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxnREFBSztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxVQUFVO0FBQ3RCO0FBSUU7QUFDRiIsInNvdXJjZXMiOlsiL21lZGlhL2F3YWlzL05ldyBWb2x1bWUvR292ZXJOT3IgSG91c2UgL2hhY2thdGhvbi0zL3NlY29uZFRpbWVzL2hhY2thdGhvbi1iYW5kYWdlL25vZGVfbW9kdWxlcy9Ac2FuaXR5L3Zpc3VhbC1lZGl0aW5nL25vZGVfbW9kdWxlcy9Ac2FuaXR5L211dGF0ZS9kaXN0L19jaHVua3MtZXMvZGVjb2RlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBhcnNlIH0gZnJvbSBcIi4vcGFyc2UuanNcIjtcbmZ1bmN0aW9uIGlzQ3JlYXRlSWZOb3RFeGlzdHNNdXRhdGlvbihzYW5pdHlNdXRhdGlvbikge1xuICByZXR1cm4gXCJjcmVhdGVJZk5vdEV4aXN0c1wiIGluIHNhbml0eU11dGF0aW9uO1xufVxuZnVuY3Rpb24gaXNDcmVhdGVPclJlcGxhY2VNdXRhdGlvbihzYW5pdHlNdXRhdGlvbikge1xuICByZXR1cm4gXCJjcmVhdGVPclJlcGxhY2VcIiBpbiBzYW5pdHlNdXRhdGlvbjtcbn1cbmZ1bmN0aW9uIGlzQ3JlYXRlTXV0YXRpb24oc2FuaXR5TXV0YXRpb24pIHtcbiAgcmV0dXJuIFwiY3JlYXRlXCIgaW4gc2FuaXR5TXV0YXRpb247XG59XG5mdW5jdGlvbiBpc0RlbGV0ZU11dGF0aW9uKHNhbml0eU11dGF0aW9uKSB7XG4gIHJldHVybiBcImRlbGV0ZVwiIGluIHNhbml0eU11dGF0aW9uO1xufVxuZnVuY3Rpb24gaXNQYXRjaE11dGF0aW9uKHNhbml0eU11dGF0aW9uKSB7XG4gIHJldHVybiBcInBhdGNoXCIgaW4gc2FuaXR5TXV0YXRpb247XG59XG5mdW5jdGlvbiBpc1NldFBhdGNoKHNhbml0eVBhdGNoKSB7XG4gIHJldHVybiBcInNldFwiIGluIHNhbml0eVBhdGNoO1xufVxuZnVuY3Rpb24gaXNTZXRJZk1pc3NpbmdQYXRjaChzYW5pdHlQYXRjaCkge1xuICByZXR1cm4gXCJzZXRJZk1pc3NpbmdcIiBpbiBzYW5pdHlQYXRjaDtcbn1cbmZ1bmN0aW9uIGlzVW5zZXRQYXRjaChzYW5pdHlQYXRjaCkge1xuICByZXR1cm4gXCJ1bnNldFwiIGluIHNhbml0eVBhdGNoO1xufVxuZnVuY3Rpb24gaXNJbmNQYXRjaChzYW5pdHlQYXRjaCkge1xuICByZXR1cm4gXCJpbmNcIiBpbiBzYW5pdHlQYXRjaDtcbn1cbmZ1bmN0aW9uIGlzRGVjUGF0Y2goc2FuaXR5UGF0Y2gpIHtcbiAgcmV0dXJuIFwiaW5jXCIgaW4gc2FuaXR5UGF0Y2g7XG59XG5mdW5jdGlvbiBpc0luc2VydFBhdGNoKHNhbml0eVBhdGNoKSB7XG4gIHJldHVybiBcImluc2VydFwiIGluIHNhbml0eVBhdGNoO1xufVxuZnVuY3Rpb24gZGVjb2RlQWxsKHNhbml0eU11dGF0aW9ucykge1xuICByZXR1cm4gc2FuaXR5TXV0YXRpb25zLm1hcChkZWNvZGVNdXRhdGlvbik7XG59XG5mdW5jdGlvbiBkZWNvZGUoZW5jb2RlZE11dGF0aW9uKSB7XG4gIHJldHVybiBkZWNvZGVNdXRhdGlvbihlbmNvZGVkTXV0YXRpb24pO1xufVxuZnVuY3Rpb24gZGVjb2RlTXV0YXRpb24oZW5jb2RlZE11dGF0aW9uKSB7XG4gIGlmIChpc0NyZWF0ZUlmTm90RXhpc3RzTXV0YXRpb24oZW5jb2RlZE11dGF0aW9uKSlcbiAgICByZXR1cm4ge1xuICAgICAgdHlwZTogXCJjcmVhdGVJZk5vdEV4aXN0c1wiLFxuICAgICAgZG9jdW1lbnQ6IGVuY29kZWRNdXRhdGlvbi5jcmVhdGVJZk5vdEV4aXN0c1xuICAgIH07XG4gIGlmIChpc0NyZWF0ZU9yUmVwbGFjZU11dGF0aW9uKGVuY29kZWRNdXRhdGlvbikpXG4gICAgcmV0dXJuIHtcbiAgICAgIHR5cGU6IFwiY3JlYXRlT3JSZXBsYWNlXCIsXG4gICAgICBkb2N1bWVudDogZW5jb2RlZE11dGF0aW9uLmNyZWF0ZU9yUmVwbGFjZVxuICAgIH07XG4gIGlmIChpc0NyZWF0ZU11dGF0aW9uKGVuY29kZWRNdXRhdGlvbikpXG4gICAgcmV0dXJuIHsgdHlwZTogXCJjcmVhdGVcIiwgZG9jdW1lbnQ6IGVuY29kZWRNdXRhdGlvbi5jcmVhdGUgfTtcbiAgaWYgKGlzRGVsZXRlTXV0YXRpb24oZW5jb2RlZE11dGF0aW9uKSlcbiAgICByZXR1cm4geyBpZDogZW5jb2RlZE11dGF0aW9uLmRlbGV0ZS5pZCwgdHlwZTogXCJkZWxldGVcIiB9O1xuICBpZiAoaXNQYXRjaE11dGF0aW9uKGVuY29kZWRNdXRhdGlvbikpXG4gICAgcmV0dXJuIHtcbiAgICAgIHR5cGU6IFwicGF0Y2hcIixcbiAgICAgIGlkOiBlbmNvZGVkTXV0YXRpb24ucGF0Y2guaWQsXG4gICAgICBwYXRjaGVzOiBkZWNvZGVOb2RlUGF0Y2hlcyhlbmNvZGVkTXV0YXRpb24ucGF0Y2gpXG4gICAgfTtcbiAgdGhyb3cgbmV3IEVycm9yKGBVbmtub3duIG11dGF0aW9uOiAke0pTT04uc3RyaW5naWZ5KGVuY29kZWRNdXRhdGlvbil9YCk7XG59XG5jb25zdCBQT1NJVElPTl9LRVlTID0gW1wiYmVmb3JlXCIsIFwicmVwbGFjZVwiLCBcImFmdGVyXCJdO1xuZnVuY3Rpb24gZ2V0SW5zZXJ0UG9zaXRpb24oaW5zZXJ0KSB7XG4gIGNvbnN0IHBvc2l0aW9ucyA9IFBPU0lUSU9OX0tFWVMuZmlsdGVyKChrKSA9PiBrIGluIGluc2VydCk7XG4gIGlmIChwb3NpdGlvbnMubGVuZ3RoID4gMSlcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBgSW5zZXJ0IHBhdGNoIGlzIGFtYmlndW91cy4gU2hvdWxkIG9ubHkgY29udGFpbiBvbmUgb2Y6ICR7UE9TSVRJT05fS0VZUy5qb2luKFxuICAgICAgICBcIiwgXCJcbiAgICAgICl9LCBpbnN0ZWFkIGZvdW5kICR7cG9zaXRpb25zLmpvaW4oXCIsIFwiKX1gXG4gICAgKTtcbiAgcmV0dXJuIHBvc2l0aW9uc1swXTtcbn1cbmZ1bmN0aW9uIGRlY29kZU5vZGVQYXRjaGVzKHBhdGNoKSB7XG4gIHJldHVybiBbXG4gICAgLi4uZ2V0U2V0UGF0Y2hlcyhwYXRjaCksXG4gICAgLi4uZ2V0U2V0SWZNaXNzaW5nUGF0Y2hlcyhwYXRjaCksXG4gICAgLi4uZ2V0VW5zZXRQYXRjaGVzKHBhdGNoKSxcbiAgICAuLi5nZXRJbmNQYXRjaGVzKHBhdGNoKSxcbiAgICAuLi5nZXREZWNQYXRjaGVzKHBhdGNoKSxcbiAgICAuLi5nZXRJbnNlcnRQYXRjaGVzKHBhdGNoKVxuICBdO1xufVxuZnVuY3Rpb24gZ2V0U2V0UGF0Y2hlcyhwYXRjaCkge1xuICByZXR1cm4gaXNTZXRQYXRjaChwYXRjaCkgPyBPYmplY3Qua2V5cyhwYXRjaC5zZXQpLm1hcCgocGF0aCkgPT4gKHtcbiAgICBwYXRoOiBwYXJzZShwYXRoKSxcbiAgICBvcDogeyB0eXBlOiBcInNldFwiLCB2YWx1ZTogcGF0Y2guc2V0W3BhdGhdIH1cbiAgfSkpIDogW107XG59XG5mdW5jdGlvbiBnZXRTZXRJZk1pc3NpbmdQYXRjaGVzKHBhdGNoKSB7XG4gIHJldHVybiBpc1NldElmTWlzc2luZ1BhdGNoKHBhdGNoKSA/IE9iamVjdC5rZXlzKHBhdGNoLnNldElmTWlzc2luZykubWFwKChwYXRoKSA9PiAoe1xuICAgIHBhdGg6IHBhcnNlKHBhdGgpLFxuICAgIG9wOiB7IHR5cGU6IFwic2V0SWZNaXNzaW5nXCIsIHZhbHVlOiBwYXRjaC5zZXRJZk1pc3NpbmdbcGF0aF0gfVxuICB9KSkgOiBbXTtcbn1cbmZ1bmN0aW9uIGdldFVuc2V0UGF0Y2hlcyhwYXRjaCkge1xuICByZXR1cm4gaXNVbnNldFBhdGNoKHBhdGNoKSA/IHBhdGNoLnVuc2V0Lm1hcCgocGF0aCkgPT4gKHtcbiAgICBwYXRoOiBwYXJzZShwYXRoKSxcbiAgICBvcDogeyB0eXBlOiBcInVuc2V0XCIgfVxuICB9KSkgOiBbXTtcbn1cbmZ1bmN0aW9uIGdldEluY1BhdGNoZXMocGF0Y2gpIHtcbiAgcmV0dXJuIGlzSW5jUGF0Y2gocGF0Y2gpID8gT2JqZWN0LmtleXMocGF0Y2guaW5jKS5tYXAoKHBhdGgpID0+ICh7XG4gICAgcGF0aDogcGFyc2UocGF0aCksXG4gICAgb3A6IHsgdHlwZTogXCJpbmNcIiwgYW1vdW50OiBwYXRjaC5pbmNbcGF0aF0gfVxuICB9KSkgOiBbXTtcbn1cbmZ1bmN0aW9uIGdldERlY1BhdGNoZXMocGF0Y2gpIHtcbiAgcmV0dXJuIGlzRGVjUGF0Y2gocGF0Y2gpID8gT2JqZWN0LmtleXMocGF0Y2guZGVjKS5tYXAoKHBhdGgpID0+ICh7XG4gICAgcGF0aDogcGFyc2UocGF0aCksXG4gICAgb3A6IHsgdHlwZTogXCJkZWNcIiwgYW1vdW50OiBwYXRjaC5kZWNbcGF0aF0gfVxuICB9KSkgOiBbXTtcbn1cbmZ1bmN0aW9uIGdldEluc2VydFBhdGNoZXMocGF0Y2gpIHtcbiAgaWYgKCFpc0luc2VydFBhdGNoKHBhdGNoKSlcbiAgICByZXR1cm4gW107XG4gIGNvbnN0IHBvc2l0aW9uID0gZ2V0SW5zZXJ0UG9zaXRpb24ocGF0Y2guaW5zZXJ0KTtcbiAgaWYgKCFwb3NpdGlvbilcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnNlcnQgcGF0Y2ggbWlzc2luZyBwb3NpdGlvblwiKTtcbiAgY29uc3QgcGF0aCA9IHBhcnNlKHBhdGNoLmluc2VydFtwb3NpdGlvbl0pLCByZWZlcmVuY2VJdGVtID0gcGF0aC5wb3AoKSwgb3AgPSBwb3NpdGlvbiA9PT0gXCJyZXBsYWNlXCIgPyB7XG4gICAgdHlwZTogXCJpbnNlcnRcIixcbiAgICBwb3NpdGlvbixcbiAgICByZWZlcmVuY2VJdGVtLFxuICAgIGl0ZW1zOiBwYXRjaC5pbnNlcnQuaXRlbXNcbiAgfSA6IHtcbiAgICB0eXBlOiBcImluc2VydFwiLFxuICAgIHBvc2l0aW9uLFxuICAgIHJlZmVyZW5jZUl0ZW0sXG4gICAgaXRlbXM6IHBhdGNoLmluc2VydC5pdGVtc1xuICB9O1xuICByZXR1cm4gW3sgcGF0aCwgb3AgfV07XG59XG5leHBvcnQge1xuICBkZWNvZGUsXG4gIGRlY29kZUFsbFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlY29kZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/decode.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/encode.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/encode.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   encodeAll: () => (/* binding */ encodeAll),\n/* harmony export */   encodeMutation: () => (/* binding */ encodeMutation),\n/* harmony export */   encodeTransaction: () => (/* binding */ encodeTransaction)\n/* harmony export */ });\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./stringify.js */ \"(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/stringify.js\");\n\nfunction encode(mutation) {\n  return encodeMutation(mutation);\n}\nfunction encodeAll(mutations) {\n  return mutations.flatMap(encode);\n}\nfunction encodeTransaction(transaction) {\n  return {\n    transactionId: transaction.id,\n    mutations: encodeAll(transaction.mutations)\n  };\n}\nfunction encodeMutation(mutation) {\n  if (mutation.type === \"create\" || mutation.type === \"createIfNotExists\" || mutation.type === \"createOrReplace\")\n    return { [mutation.type]: mutation.document };\n  if (mutation.type === \"delete\")\n    return {\n      delete: { id: mutation.id }\n    };\n  const ifRevisionID = mutation.options?.ifRevision;\n  return mutation.patches.map((patch) => ({\n    patch: {\n      id: mutation.id,\n      ...ifRevisionID && { ifRevisionID },\n      ...patchToSanity(patch)\n    }\n  }));\n}\nfunction patchToSanity(patch) {\n  const { path, op } = patch;\n  if (op.type === \"unset\")\n    return { unset: [(0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.stringify)(path)] };\n  if (op.type === \"insert\")\n    return {\n      insert: {\n        [op.position]: (0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.stringify)([...path, op.referenceItem]),\n        items: op.items\n      }\n    };\n  if (op.type === \"diffMatchPatch\")\n    return { diffMatchPatch: { [(0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.stringify)(path)]: op.value } };\n  if (op.type === \"inc\")\n    return { inc: { [(0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.stringify)(path)]: op.amount } };\n  if (op.type === \"dec\")\n    return { dec: { [(0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.stringify)(path)]: op.amount } };\n  if (op.type === \"set\" || op.type === \"setIfMissing\")\n    return { [op.type]: { [(0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.stringify)(path)]: op.value } };\n  if (op.type === \"truncate\") {\n    const range = [\n      op.startIndex,\n      typeof op.endIndex == \"number\" ? op.endIndex : \"\"\n    ].join(\":\");\n    return { unset: [`${(0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.stringify)(path)}[${range}]`] };\n  }\n  if (op.type === \"upsert\")\n    return {\n      unset: op.items.map(\n        (item) => (0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.stringify)([...path, { _key: item._key }])\n      ),\n      insert: {\n        [op.position]: (0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.stringify)([...path, op.referenceItem]),\n        items: op.items\n      }\n    };\n  if (op.type === \"assign\")\n    return {\n      set: Object.fromEntries(\n        Object.keys(op.value).map((key) => [\n          (0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.stringify)(path.concat(key)),\n          op.value[key]\n        ])\n      )\n    };\n  if (op.type === \"unassign\")\n    return {\n      unset: op.keys.map((key) => (0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.stringify)(path.concat(key)))\n    };\n  if (op.type === \"replace\")\n    return {\n      insert: {\n        replace: (0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.stringify)(path.concat(op.referenceItem)),\n        items: op.items\n      }\n    };\n  if (op.type === \"remove\")\n    return {\n      unset: [(0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.stringify)(path.concat(op.referenceItem))]\n    };\n  throw new Error(`Unknown operation type ${op.type}`);\n}\n\n//# sourceMappingURL=encode.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS92aXN1YWwtZWRpdGluZy9ub2RlX21vZHVsZXMvQHNhbml0eS9tdXRhdGUvZGlzdC9fY2h1bmtzLWVzL2VuY29kZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUEyQztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixjQUFjO0FBQ3pDO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLFVBQVUsV0FBVztBQUNyQjtBQUNBLGFBQWEsUUFBUSx3REFBUztBQUM5QjtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsd0RBQVM7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLGtCQUFrQixDQUFDLHdEQUFTO0FBQ3pDO0FBQ0EsYUFBYSxPQUFPLENBQUMsd0RBQVM7QUFDOUI7QUFDQSxhQUFhLE9BQU8sQ0FBQyx3REFBUztBQUM5QjtBQUNBLGFBQWEsYUFBYSxDQUFDLHdEQUFTO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFdBQVcsd0RBQVMsT0FBTyxHQUFHLE1BQU07QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0Isd0RBQVMsYUFBYSxpQkFBaUI7QUFDekQ7QUFDQTtBQUNBLHVCQUF1Qix3REFBUztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsd0RBQVM7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLHdEQUFTO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLHdEQUFTO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLHdEQUFTO0FBQ3ZCO0FBQ0EsNENBQTRDLFFBQVE7QUFDcEQ7QUFNRTtBQUNGIiwic291cmNlcyI6WyIvbWVkaWEvYXdhaXMvTmV3IFZvbHVtZS9Hb3Zlck5PciBIb3VzZSAvaGFja2F0aG9uLTMvc2Vjb25kVGltZXMvaGFja2F0aG9uLWJhbmRhZ2Uvbm9kZV9tb2R1bGVzL0BzYW5pdHkvdmlzdWFsLWVkaXRpbmcvbm9kZV9tb2R1bGVzL0BzYW5pdHkvbXV0YXRlL2Rpc3QvX2NodW5rcy1lcy9lbmNvZGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc3RyaW5naWZ5IH0gZnJvbSBcIi4vc3RyaW5naWZ5LmpzXCI7XG5mdW5jdGlvbiBlbmNvZGUobXV0YXRpb24pIHtcbiAgcmV0dXJuIGVuY29kZU11dGF0aW9uKG11dGF0aW9uKTtcbn1cbmZ1bmN0aW9uIGVuY29kZUFsbChtdXRhdGlvbnMpIHtcbiAgcmV0dXJuIG11dGF0aW9ucy5mbGF0TWFwKGVuY29kZSk7XG59XG5mdW5jdGlvbiBlbmNvZGVUcmFuc2FjdGlvbih0cmFuc2FjdGlvbikge1xuICByZXR1cm4ge1xuICAgIHRyYW5zYWN0aW9uSWQ6IHRyYW5zYWN0aW9uLmlkLFxuICAgIG11dGF0aW9uczogZW5jb2RlQWxsKHRyYW5zYWN0aW9uLm11dGF0aW9ucylcbiAgfTtcbn1cbmZ1bmN0aW9uIGVuY29kZU11dGF0aW9uKG11dGF0aW9uKSB7XG4gIGlmIChtdXRhdGlvbi50eXBlID09PSBcImNyZWF0ZVwiIHx8IG11dGF0aW9uLnR5cGUgPT09IFwiY3JlYXRlSWZOb3RFeGlzdHNcIiB8fCBtdXRhdGlvbi50eXBlID09PSBcImNyZWF0ZU9yUmVwbGFjZVwiKVxuICAgIHJldHVybiB7IFttdXRhdGlvbi50eXBlXTogbXV0YXRpb24uZG9jdW1lbnQgfTtcbiAgaWYgKG11dGF0aW9uLnR5cGUgPT09IFwiZGVsZXRlXCIpXG4gICAgcmV0dXJuIHtcbiAgICAgIGRlbGV0ZTogeyBpZDogbXV0YXRpb24uaWQgfVxuICAgIH07XG4gIGNvbnN0IGlmUmV2aXNpb25JRCA9IG11dGF0aW9uLm9wdGlvbnM/LmlmUmV2aXNpb247XG4gIHJldHVybiBtdXRhdGlvbi5wYXRjaGVzLm1hcCgocGF0Y2gpID0+ICh7XG4gICAgcGF0Y2g6IHtcbiAgICAgIGlkOiBtdXRhdGlvbi5pZCxcbiAgICAgIC4uLmlmUmV2aXNpb25JRCAmJiB7IGlmUmV2aXNpb25JRCB9LFxuICAgICAgLi4ucGF0Y2hUb1Nhbml0eShwYXRjaClcbiAgICB9XG4gIH0pKTtcbn1cbmZ1bmN0aW9uIHBhdGNoVG9TYW5pdHkocGF0Y2gpIHtcbiAgY29uc3QgeyBwYXRoLCBvcCB9ID0gcGF0Y2g7XG4gIGlmIChvcC50eXBlID09PSBcInVuc2V0XCIpXG4gICAgcmV0dXJuIHsgdW5zZXQ6IFtzdHJpbmdpZnkocGF0aCldIH07XG4gIGlmIChvcC50eXBlID09PSBcImluc2VydFwiKVxuICAgIHJldHVybiB7XG4gICAgICBpbnNlcnQ6IHtcbiAgICAgICAgW29wLnBvc2l0aW9uXTogc3RyaW5naWZ5KFsuLi5wYXRoLCBvcC5yZWZlcmVuY2VJdGVtXSksXG4gICAgICAgIGl0ZW1zOiBvcC5pdGVtc1xuICAgICAgfVxuICAgIH07XG4gIGlmIChvcC50eXBlID09PSBcImRpZmZNYXRjaFBhdGNoXCIpXG4gICAgcmV0dXJuIHsgZGlmZk1hdGNoUGF0Y2g6IHsgW3N0cmluZ2lmeShwYXRoKV06IG9wLnZhbHVlIH0gfTtcbiAgaWYgKG9wLnR5cGUgPT09IFwiaW5jXCIpXG4gICAgcmV0dXJuIHsgaW5jOiB7IFtzdHJpbmdpZnkocGF0aCldOiBvcC5hbW91bnQgfSB9O1xuICBpZiAob3AudHlwZSA9PT0gXCJkZWNcIilcbiAgICByZXR1cm4geyBkZWM6IHsgW3N0cmluZ2lmeShwYXRoKV06IG9wLmFtb3VudCB9IH07XG4gIGlmIChvcC50eXBlID09PSBcInNldFwiIHx8IG9wLnR5cGUgPT09IFwic2V0SWZNaXNzaW5nXCIpXG4gICAgcmV0dXJuIHsgW29wLnR5cGVdOiB7IFtzdHJpbmdpZnkocGF0aCldOiBvcC52YWx1ZSB9IH07XG4gIGlmIChvcC50eXBlID09PSBcInRydW5jYXRlXCIpIHtcbiAgICBjb25zdCByYW5nZSA9IFtcbiAgICAgIG9wLnN0YXJ0SW5kZXgsXG4gICAgICB0eXBlb2Ygb3AuZW5kSW5kZXggPT0gXCJudW1iZXJcIiA/IG9wLmVuZEluZGV4IDogXCJcIlxuICAgIF0uam9pbihcIjpcIik7XG4gICAgcmV0dXJuIHsgdW5zZXQ6IFtgJHtzdHJpbmdpZnkocGF0aCl9WyR7cmFuZ2V9XWBdIH07XG4gIH1cbiAgaWYgKG9wLnR5cGUgPT09IFwidXBzZXJ0XCIpXG4gICAgcmV0dXJuIHtcbiAgICAgIHVuc2V0OiBvcC5pdGVtcy5tYXAoXG4gICAgICAgIChpdGVtKSA9PiBzdHJpbmdpZnkoWy4uLnBhdGgsIHsgX2tleTogaXRlbS5fa2V5IH1dKVxuICAgICAgKSxcbiAgICAgIGluc2VydDoge1xuICAgICAgICBbb3AucG9zaXRpb25dOiBzdHJpbmdpZnkoWy4uLnBhdGgsIG9wLnJlZmVyZW5jZUl0ZW1dKSxcbiAgICAgICAgaXRlbXM6IG9wLml0ZW1zXG4gICAgICB9XG4gICAgfTtcbiAgaWYgKG9wLnR5cGUgPT09IFwiYXNzaWduXCIpXG4gICAgcmV0dXJuIHtcbiAgICAgIHNldDogT2JqZWN0LmZyb21FbnRyaWVzKFxuICAgICAgICBPYmplY3Qua2V5cyhvcC52YWx1ZSkubWFwKChrZXkpID0+IFtcbiAgICAgICAgICBzdHJpbmdpZnkocGF0aC5jb25jYXQoa2V5KSksXG4gICAgICAgICAgb3AudmFsdWVba2V5XVxuICAgICAgICBdKVxuICAgICAgKVxuICAgIH07XG4gIGlmIChvcC50eXBlID09PSBcInVuYXNzaWduXCIpXG4gICAgcmV0dXJuIHtcbiAgICAgIHVuc2V0OiBvcC5rZXlzLm1hcCgoa2V5KSA9PiBzdHJpbmdpZnkocGF0aC5jb25jYXQoa2V5KSkpXG4gICAgfTtcbiAgaWYgKG9wLnR5cGUgPT09IFwicmVwbGFjZVwiKVxuICAgIHJldHVybiB7XG4gICAgICBpbnNlcnQ6IHtcbiAgICAgICAgcmVwbGFjZTogc3RyaW5naWZ5KHBhdGguY29uY2F0KG9wLnJlZmVyZW5jZUl0ZW0pKSxcbiAgICAgICAgaXRlbXM6IG9wLml0ZW1zXG4gICAgICB9XG4gICAgfTtcbiAgaWYgKG9wLnR5cGUgPT09IFwicmVtb3ZlXCIpXG4gICAgcmV0dXJuIHtcbiAgICAgIHVuc2V0OiBbc3RyaW5naWZ5KHBhdGguY29uY2F0KG9wLnJlZmVyZW5jZUl0ZW0pKV1cbiAgICB9O1xuICB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gb3BlcmF0aW9uIHR5cGUgJHtvcC50eXBlfWApO1xufVxuZXhwb3J0IHtcbiAgZW5jb2RlLFxuICBlbmNvZGVBbGwsXG4gIGVuY29kZU11dGF0aW9uLFxuICBlbmNvZGVUcmFuc2FjdGlvblxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVuY29kZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/encode.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/getAtPath.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/getAtPath.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAtPath: () => (/* binding */ getAtPath)\n/* harmony export */ });\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./stringify.js */ \"(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/stringify.js\");\n\nfunction getAtPath(path, value) {\n  if (path.length === 0)\n    return value;\n  let current = value;\n  for (const head of path) {\n    if ((0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.isArrayElement)(head)) {\n      if (!Array.isArray(current))\n        return;\n      if ((0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.isKeyedElement)(head)) {\n        current = current.find((item) => item._key === head._key);\n        continue;\n      }\n      current = current[head];\n      continue;\n    }\n    current = current[head];\n  }\n  return current;\n}\n\n//# sourceMappingURL=getAtPath.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS92aXN1YWwtZWRpdGluZy9ub2RlX21vZHVsZXMvQHNhbml0eS9tdXRhdGUvZGlzdC9fY2h1bmtzLWVzL2dldEF0UGF0aC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFnRTtBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSw2REFBYztBQUN0QjtBQUNBO0FBQ0EsVUFBVSw2REFBYztBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIi9tZWRpYS9hd2Fpcy9OZXcgVm9sdW1lL0dvdmVyTk9yIEhvdXNlIC9oYWNrYXRob24tMy9zZWNvbmRUaW1lcy9oYWNrYXRob24tYmFuZGFnZS9ub2RlX21vZHVsZXMvQHNhbml0eS92aXN1YWwtZWRpdGluZy9ub2RlX21vZHVsZXMvQHNhbml0eS9tdXRhdGUvZGlzdC9fY2h1bmtzLWVzL2dldEF0UGF0aC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc0FycmF5RWxlbWVudCwgaXNLZXllZEVsZW1lbnQgfSBmcm9tIFwiLi9zdHJpbmdpZnkuanNcIjtcbmZ1bmN0aW9uIGdldEF0UGF0aChwYXRoLCB2YWx1ZSkge1xuICBpZiAocGF0aC5sZW5ndGggPT09IDApXG4gICAgcmV0dXJuIHZhbHVlO1xuICBsZXQgY3VycmVudCA9IHZhbHVlO1xuICBmb3IgKGNvbnN0IGhlYWQgb2YgcGF0aCkge1xuICAgIGlmIChpc0FycmF5RWxlbWVudChoZWFkKSkge1xuICAgICAgaWYgKCFBcnJheS5pc0FycmF5KGN1cnJlbnQpKVxuICAgICAgICByZXR1cm47XG4gICAgICBpZiAoaXNLZXllZEVsZW1lbnQoaGVhZCkpIHtcbiAgICAgICAgY3VycmVudCA9IGN1cnJlbnQuZmluZCgoaXRlbSkgPT4gaXRlbS5fa2V5ID09PSBoZWFkLl9rZXkpO1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGN1cnJlbnQgPSBjdXJyZW50W2hlYWRdO1xuICAgICAgY29udGludWU7XG4gICAgfVxuICAgIGN1cnJlbnQgPSBjdXJyZW50W2hlYWRdO1xuICB9XG4gIHJldHVybiBjdXJyZW50O1xufVxuZXhwb3J0IHtcbiAgZ2V0QXRQYXRoXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0QXRQYXRoLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/getAtPath.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/isObject.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/isObject.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isObject: () => (/* binding */ isObject)\n/* harmony export */ });\nfunction isObject(val) {\n  return val !== null && typeof val == \"object\" && !Array.isArray(val);\n}\n\n//# sourceMappingURL=isObject.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS92aXN1YWwtZWRpdGluZy9ub2RlX21vZHVsZXMvQHNhbml0eS9tdXRhdGUvZGlzdC9fY2h1bmtzLWVzL2lzT2JqZWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFHRTtBQUNGIiwic291cmNlcyI6WyIvbWVkaWEvYXdhaXMvTmV3IFZvbHVtZS9Hb3Zlck5PciBIb3VzZSAvaGFja2F0aG9uLTMvc2Vjb25kVGltZXMvaGFja2F0aG9uLWJhbmRhZ2Uvbm9kZV9tb2R1bGVzL0BzYW5pdHkvdmlzdWFsLWVkaXRpbmcvbm9kZV9tb2R1bGVzL0BzYW5pdHkvbXV0YXRlL2Rpc3QvX2NodW5rcy1lcy9pc09iamVjdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBpc09iamVjdCh2YWwpIHtcbiAgcmV0dXJuIHZhbCAhPT0gbnVsbCAmJiB0eXBlb2YgdmFsID09IFwib2JqZWN0XCIgJiYgIUFycmF5LmlzQXJyYXkodmFsKTtcbn1cbmV4cG9ydCB7XG4gIGlzT2JqZWN0XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aXNPYmplY3QuanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/isObject.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/parse.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/parse.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parse: () => (/* binding */ parse)\n/* harmony export */ });\nfunction parse(path) {\n  return path.split(/[[.\\]]/g).filter(Boolean).map((seg) => seg.includes(\"==\") ? parseSegment(seg) : coerce(seg));\n}\nconst IS_NUMERIC = /^-?\\d+$/;\nfunction unquote(str) {\n  return str.replace(/^['\"]/, \"\").replace(/['\"]$/, \"\");\n}\nfunction parseSegment(segment) {\n  const [key, value] = segment.split(\"==\");\n  if (key !== \"_key\")\n    throw new Error(\n      `Currently only \"_key\" is supported as path segment. Found ${key}`\n    );\n  if (typeof value > \"u\")\n    throw new Error('Invalid path segment, expected `key==\"value\"`');\n  return { _key: unquote(value) };\n}\nfunction coerce(segment) {\n  return IS_NUMERIC.test(segment) ? Number(segment) : segment;\n}\n\n//# sourceMappingURL=parse.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS92aXN1YWwtZWRpdGluZy9ub2RlX21vZHVsZXMvQHNhbml0eS9tdXRhdGUvZGlzdC9fY2h1bmtzLWVzL3BhcnNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUVBQW1FLElBQUk7QUFDdkU7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBR0U7QUFDRiIsInNvdXJjZXMiOlsiL21lZGlhL2F3YWlzL05ldyBWb2x1bWUvR292ZXJOT3IgSG91c2UgL2hhY2thdGhvbi0zL3NlY29uZFRpbWVzL2hhY2thdGhvbi1iYW5kYWdlL25vZGVfbW9kdWxlcy9Ac2FuaXR5L3Zpc3VhbC1lZGl0aW5nL25vZGVfbW9kdWxlcy9Ac2FuaXR5L211dGF0ZS9kaXN0L19jaHVua3MtZXMvcGFyc2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gcGFyc2UocGF0aCkge1xuICByZXR1cm4gcGF0aC5zcGxpdCgvW1suXFxdXS9nKS5maWx0ZXIoQm9vbGVhbikubWFwKChzZWcpID0+IHNlZy5pbmNsdWRlcyhcIj09XCIpID8gcGFyc2VTZWdtZW50KHNlZykgOiBjb2VyY2Uoc2VnKSk7XG59XG5jb25zdCBJU19OVU1FUklDID0gL14tP1xcZCskLztcbmZ1bmN0aW9uIHVucXVvdGUoc3RyKSB7XG4gIHJldHVybiBzdHIucmVwbGFjZSgvXlsnXCJdLywgXCJcIikucmVwbGFjZSgvWydcIl0kLywgXCJcIik7XG59XG5mdW5jdGlvbiBwYXJzZVNlZ21lbnQoc2VnbWVudCkge1xuICBjb25zdCBba2V5LCB2YWx1ZV0gPSBzZWdtZW50LnNwbGl0KFwiPT1cIik7XG4gIGlmIChrZXkgIT09IFwiX2tleVwiKVxuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIGBDdXJyZW50bHkgb25seSBcIl9rZXlcIiBpcyBzdXBwb3J0ZWQgYXMgcGF0aCBzZWdtZW50LiBGb3VuZCAke2tleX1gXG4gICAgKTtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA+IFwidVwiKVxuICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBwYXRoIHNlZ21lbnQsIGV4cGVjdGVkIGBrZXk9PVwidmFsdWVcImAnKTtcbiAgcmV0dXJuIHsgX2tleTogdW5xdW90ZSh2YWx1ZSkgfTtcbn1cbmZ1bmN0aW9uIGNvZXJjZShzZWdtZW50KSB7XG4gIHJldHVybiBJU19OVU1FUklDLnRlc3Qoc2VnbWVudCkgPyBOdW1iZXIoc2VnbWVudCkgOiBzZWdtZW50O1xufVxuZXhwb3J0IHtcbiAgcGFyc2Vcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYXJzZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/parse.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/stringify.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/stringify.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isArrayElement: () => (/* binding */ isArrayElement),\n/* harmony export */   isElementEqual: () => (/* binding */ isElementEqual),\n/* harmony export */   isEqual: () => (/* binding */ isEqual),\n/* harmony export */   isIndexElement: () => (/* binding */ isIndexElement),\n/* harmony export */   isKeyElement: () => (/* binding */ isKeyElement),\n/* harmony export */   isKeyedElement: () => (/* binding */ isKeyedElement),\n/* harmony export */   isPropertyElement: () => (/* binding */ isPropertyElement),\n/* harmony export */   startsWith: () => (/* binding */ startsWith),\n/* harmony export */   stringify: () => (/* binding */ stringify)\n/* harmony export */ });\nfunction safeGetElementAt(array, index) {\n  if (index < 0 || index >= array.length)\n    throw new Error(\"Index out of bounds\");\n  return array[index];\n}\nfunction startsWith(parentPath, path) {\n  return parentPath.length <= path.length && parentPath.every(\n    (segment, i) => isElementEqual(segment, safeGetElementAt(path, i))\n  );\n}\nfunction isEqual(path, otherPath) {\n  return path.length === otherPath.length && path.every(\n    (segment, i) => isElementEqual(segment, safeGetElementAt(path, i))\n  );\n}\nfunction isElementEqual(segmentA, segmentB) {\n  return isKeyElement(segmentA) && isKeyElement(segmentB) ? segmentA._key === segmentB._key : isIndexElement(segmentA) ? Number(segmentA) === Number(segmentB) : segmentA === segmentB;\n}\nfunction isKeyElement(segment) {\n  return typeof segment?._key == \"string\";\n}\nfunction isIndexElement(segment) {\n  return typeof segment == \"number\";\n}\nfunction isKeyedElement(element) {\n  return typeof element == \"object\" && \"_key\" in element && typeof element._key == \"string\";\n}\nfunction isArrayElement(element) {\n  return typeof element == \"number\" || isKeyedElement(element);\n}\nfunction isPropertyElement(element) {\n  return typeof element == \"string\";\n}\nconst IS_DOTTABLE = /^[a-z_$]+/;\nfunction stringifySegment(segment, hasLeading) {\n  return Array.isArray(segment) ? `[${segment[0]}:${segment[1] || \"\"}]` : typeof segment == \"number\" ? `[${segment}]` : isKeyedElement(segment) ? `[_key==${JSON.stringify(segment._key)}]` : typeof segment == \"string\" && IS_DOTTABLE.test(segment) ? hasLeading ? segment : `.${segment}` : `['${segment}']`;\n}\nfunction stringify(pathArray) {\n  return pathArray.map((segment, i) => stringifySegment(segment, i === 0)).join(\"\");\n}\n\n//# sourceMappingURL=stringify.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS92aXN1YWwtZWRpdGluZy9ub2RlX21vZHVsZXMvQHNhbml0eS9tdXRhdGUvZGlzdC9fY2h1bmtzLWVzL3N0cmluZ2lmeS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLFdBQVcsR0FBRyxpQkFBaUIsc0NBQXNDLFFBQVEseUNBQXlDLDZCQUE2QiwwRkFBMEYsUUFBUSxTQUFTLFFBQVE7QUFDNVM7QUFDQTtBQUNBO0FBQ0E7QUFXRTtBQUNGIiwic291cmNlcyI6WyIvbWVkaWEvYXdhaXMvTmV3IFZvbHVtZS9Hb3Zlck5PciBIb3VzZSAvaGFja2F0aG9uLTMvc2Vjb25kVGltZXMvaGFja2F0aG9uLWJhbmRhZ2Uvbm9kZV9tb2R1bGVzL0BzYW5pdHkvdmlzdWFsLWVkaXRpbmcvbm9kZV9tb2R1bGVzL0BzYW5pdHkvbXV0YXRlL2Rpc3QvX2NodW5rcy1lcy9zdHJpbmdpZnkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gc2FmZUdldEVsZW1lbnRBdChhcnJheSwgaW5kZXgpIHtcbiAgaWYgKGluZGV4IDwgMCB8fCBpbmRleCA+PSBhcnJheS5sZW5ndGgpXG4gICAgdGhyb3cgbmV3IEVycm9yKFwiSW5kZXggb3V0IG9mIGJvdW5kc1wiKTtcbiAgcmV0dXJuIGFycmF5W2luZGV4XTtcbn1cbmZ1bmN0aW9uIHN0YXJ0c1dpdGgocGFyZW50UGF0aCwgcGF0aCkge1xuICByZXR1cm4gcGFyZW50UGF0aC5sZW5ndGggPD0gcGF0aC5sZW5ndGggJiYgcGFyZW50UGF0aC5ldmVyeShcbiAgICAoc2VnbWVudCwgaSkgPT4gaXNFbGVtZW50RXF1YWwoc2VnbWVudCwgc2FmZUdldEVsZW1lbnRBdChwYXRoLCBpKSlcbiAgKTtcbn1cbmZ1bmN0aW9uIGlzRXF1YWwocGF0aCwgb3RoZXJQYXRoKSB7XG4gIHJldHVybiBwYXRoLmxlbmd0aCA9PT0gb3RoZXJQYXRoLmxlbmd0aCAmJiBwYXRoLmV2ZXJ5KFxuICAgIChzZWdtZW50LCBpKSA9PiBpc0VsZW1lbnRFcXVhbChzZWdtZW50LCBzYWZlR2V0RWxlbWVudEF0KHBhdGgsIGkpKVxuICApO1xufVxuZnVuY3Rpb24gaXNFbGVtZW50RXF1YWwoc2VnbWVudEEsIHNlZ21lbnRCKSB7XG4gIHJldHVybiBpc0tleUVsZW1lbnQoc2VnbWVudEEpICYmIGlzS2V5RWxlbWVudChzZWdtZW50QikgPyBzZWdtZW50QS5fa2V5ID09PSBzZWdtZW50Qi5fa2V5IDogaXNJbmRleEVsZW1lbnQoc2VnbWVudEEpID8gTnVtYmVyKHNlZ21lbnRBKSA9PT0gTnVtYmVyKHNlZ21lbnRCKSA6IHNlZ21lbnRBID09PSBzZWdtZW50Qjtcbn1cbmZ1bmN0aW9uIGlzS2V5RWxlbWVudChzZWdtZW50KSB7XG4gIHJldHVybiB0eXBlb2Ygc2VnbWVudD8uX2tleSA9PSBcInN0cmluZ1wiO1xufVxuZnVuY3Rpb24gaXNJbmRleEVsZW1lbnQoc2VnbWVudCkge1xuICByZXR1cm4gdHlwZW9mIHNlZ21lbnQgPT0gXCJudW1iZXJcIjtcbn1cbmZ1bmN0aW9uIGlzS2V5ZWRFbGVtZW50KGVsZW1lbnQpIHtcbiAgcmV0dXJuIHR5cGVvZiBlbGVtZW50ID09IFwib2JqZWN0XCIgJiYgXCJfa2V5XCIgaW4gZWxlbWVudCAmJiB0eXBlb2YgZWxlbWVudC5fa2V5ID09IFwic3RyaW5nXCI7XG59XG5mdW5jdGlvbiBpc0FycmF5RWxlbWVudChlbGVtZW50KSB7XG4gIHJldHVybiB0eXBlb2YgZWxlbWVudCA9PSBcIm51bWJlclwiIHx8IGlzS2V5ZWRFbGVtZW50KGVsZW1lbnQpO1xufVxuZnVuY3Rpb24gaXNQcm9wZXJ0eUVsZW1lbnQoZWxlbWVudCkge1xuICByZXR1cm4gdHlwZW9mIGVsZW1lbnQgPT0gXCJzdHJpbmdcIjtcbn1cbmNvbnN0IElTX0RPVFRBQkxFID0gL15bYS16XyRdKy87XG5mdW5jdGlvbiBzdHJpbmdpZnlTZWdtZW50KHNlZ21lbnQsIGhhc0xlYWRpbmcpIHtcbiAgcmV0dXJuIEFycmF5LmlzQXJyYXkoc2VnbWVudCkgPyBgWyR7c2VnbWVudFswXX06JHtzZWdtZW50WzFdIHx8IFwiXCJ9XWAgOiB0eXBlb2Ygc2VnbWVudCA9PSBcIm51bWJlclwiID8gYFske3NlZ21lbnR9XWAgOiBpc0tleWVkRWxlbWVudChzZWdtZW50KSA/IGBbX2tleT09JHtKU09OLnN0cmluZ2lmeShzZWdtZW50Ll9rZXkpfV1gIDogdHlwZW9mIHNlZ21lbnQgPT0gXCJzdHJpbmdcIiAmJiBJU19ET1RUQUJMRS50ZXN0KHNlZ21lbnQpID8gaGFzTGVhZGluZyA/IHNlZ21lbnQgOiBgLiR7c2VnbWVudH1gIDogYFsnJHtzZWdtZW50fSddYDtcbn1cbmZ1bmN0aW9uIHN0cmluZ2lmeShwYXRoQXJyYXkpIHtcbiAgcmV0dXJuIHBhdGhBcnJheS5tYXAoKHNlZ21lbnQsIGkpID0+IHN0cmluZ2lmeVNlZ21lbnQoc2VnbWVudCwgaSA9PT0gMCkpLmpvaW4oXCJcIik7XG59XG5leHBvcnQge1xuICBpc0FycmF5RWxlbWVudCxcbiAgaXNFbGVtZW50RXF1YWwsXG4gIGlzRXF1YWwsXG4gIGlzSW5kZXhFbGVtZW50LFxuICBpc0tleUVsZW1lbnQsXG4gIGlzS2V5ZWRFbGVtZW50LFxuICBpc1Byb3BlcnR5RWxlbWVudCxcbiAgc3RhcnRzV2l0aCxcbiAgc3RyaW5naWZ5XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3RyaW5naWZ5LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/stringify.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/toTransactions.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/toTransactions.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applyMutations: () => (/* binding */ applyMutations),\n/* harmony export */   commit: () => (/* binding */ commit),\n/* harmony export */   getMutationDocumentId: () => (/* binding */ getMutationDocumentId),\n/* harmony export */   rebase: () => (/* binding */ rebase),\n/* harmony export */   squashDMPStrings: () => (/* binding */ squashDMPStrings),\n/* harmony export */   squashMutationGroups: () => (/* binding */ squashMutationGroups),\n/* harmony export */   toTransactions: () => (/* binding */ toTransactions)\n/* harmony export */ });\n/* harmony import */ var lodash_es__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lodash-es */ \"(ssr)/./node_modules/lodash-es/groupBy.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/utils.js\");\n/* harmony import */ var _getAtPath_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getAtPath.js */ \"(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/getAtPath.js\");\n/* harmony import */ var _sanity_diff_match_patch__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sanity/diff-match-patch */ \"(ssr)/./node_modules/@sanity/diff-match-patch/dist/index.js\");\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stringify.js */ \"(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/stringify.js\");\n\n\n\n\n\nfunction getMutationDocumentId(mutation) {\n  if (mutation.type === \"patch\")\n    return mutation.id;\n  if (mutation.type === \"create\")\n    return mutation.document._id;\n  if (mutation.type === \"delete\")\n    return mutation.id;\n  if (mutation.type === \"createIfNotExists\" || mutation.type === \"createOrReplace\")\n    return mutation.document._id;\n  throw new Error(\"Invalid mutation type\");\n}\nfunction applyAll(current, mutation) {\n  return mutation.reduce((doc, m) => {\n    const res = applyDocumentMutation(doc, m);\n    if (res.status === \"error\")\n      throw new Error(res.message);\n    return res.status === \"noop\" ? doc : res.after;\n  }, current);\n}\nfunction applyDocumentMutation(document, mutation) {\n  if (mutation.type === \"create\")\n    return create(document, mutation);\n  if (mutation.type === \"createIfNotExists\")\n    return createIfNotExists(document, mutation);\n  if (mutation.type === \"delete\")\n    return del(document, mutation);\n  if (mutation.type === \"createOrReplace\")\n    return createOrReplace(document, mutation);\n  if (mutation.type === \"patch\")\n    return patch(document, mutation);\n  throw new Error(`Invalid mutation type: ${mutation.type}`);\n}\nfunction create(document, mutation) {\n  if (document)\n    return { status: \"error\", message: \"Document already exist\" };\n  const result = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.assignId)(mutation.document, _utils_js__WEBPACK_IMPORTED_MODULE_0__.nanoid);\n  return { status: \"created\", id: result._id, after: result };\n}\nfunction createIfNotExists(document, mutation) {\n  return (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.hasId)(mutation.document) ? document ? { status: \"noop\" } : { status: \"created\", id: mutation.document._id, after: mutation.document } : {\n    status: \"error\",\n    message: \"Cannot createIfNotExists on document without _id\"\n  };\n}\nfunction createOrReplace(document, mutation) {\n  return (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.hasId)(mutation.document) ? document ? {\n    status: \"updated\",\n    id: mutation.document._id,\n    before: document,\n    after: mutation.document\n  } : { status: \"created\", id: mutation.document._id, after: mutation.document } : {\n    status: \"error\",\n    message: \"Cannot createIfNotExists on document without _id\"\n  };\n}\nfunction del(document, mutation) {\n  return document ? mutation.id !== document._id ? { status: \"error\", message: \"Delete mutation targeted wrong document\" } : {\n    status: \"deleted\",\n    id: mutation.id,\n    before: document,\n    after: void 0\n  } : { status: \"noop\" };\n}\nfunction patch(document, mutation) {\n  if (!document)\n    return {\n      status: \"error\",\n      message: \"Cannot apply patch on nonexistent document\"\n    };\n  const next = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.applyPatchMutation)(mutation, document);\n  return document === next ? { status: \"noop\" } : { status: \"updated\", id: mutation.id, before: document, after: next };\n}\nfunction applyMutations(mutations, dataset) {\n  const updatedDocs = /* @__PURE__ */ Object.create(null);\n  for (const mutation of mutations) {\n    const documentId = getMutationDocumentId(mutation);\n    if (!documentId)\n      throw new Error(\"Unable to get document id from mutation\");\n    const before = updatedDocs[documentId]?.after || dataset.get(documentId), res = applyDocumentMutation(before, mutation);\n    if (res.status === \"error\")\n      throw new Error(res.message);\n    res.status !== \"noop\" && (res.status === \"updated\" || res.status === \"created\" || res.status === \"deleted\") && (documentId in updatedDocs || (updatedDocs[documentId] = { before, after: void 0, muts: [] }), updatedDocs[documentId].after = res.after);\n  }\n  return Object.entries(updatedDocs).map(\n    // eslint-disable-next-line no-shadow\n    ([id, { before, after, muts }]) => ({\n      id,\n      status: after ? before ? \"updated\" : \"created\" : \"deleted\",\n      mutations: muts,\n      before,\n      after\n    })\n  );\n}\nfunction commit(results, dataset) {\n  results.forEach((result) => {\n    (result.status === \"created\" || result.status === \"updated\") && dataset.set(result.id, result.after), result.status === \"deleted\" && dataset.delete(result.id);\n  });\n}\nfunction takeUntilRight(arr, predicate, opts) {\n  const result = [];\n  for (const item of arr.slice().reverse()) {\n    if (predicate(item))\n      return result;\n    result.push(item);\n  }\n  return result.reverse();\n}\nfunction isEqualPath(p1, p2) {\n  return (0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__.stringify)(p1) === (0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__.stringify)(p2);\n}\nfunction supersedes(later, earlier) {\n  return (earlier.type === \"set\" || earlier.type === \"unset\") && (later.type === \"set\" || later.type === \"unset\");\n}\nfunction squashNodePatches(patches) {\n  return compactSetIfMissingPatches(\n    compactSetPatches(compactUnsetPatches(patches))\n  );\n}\nfunction compactUnsetPatches(patches) {\n  return patches.reduce(\n    (earlierPatches, laterPatch) => {\n      if (laterPatch.op.type !== \"unset\")\n        return earlierPatches.push(laterPatch), earlierPatches;\n      const unaffected = earlierPatches.filter(\n        (earlierPatch) => !(0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__.startsWith)(laterPatch.path, earlierPatch.path)\n      );\n      return unaffected.push(laterPatch), unaffected;\n    },\n    []\n  );\n}\nfunction compactSetPatches(patches) {\n  return patches.reduceRight(\n    (laterPatches, earlierPatch) => (laterPatches.find(\n      (later) => supersedes(later.op, earlierPatch.op) && isEqualPath(later.path, earlierPatch.path)\n    ) || laterPatches.unshift(earlierPatch), laterPatches),\n    []\n  );\n}\nfunction compactSetIfMissingPatches(patches) {\n  return patches.reduce(\n    (previousPatches, laterPatch) => laterPatch.op.type !== \"setIfMissing\" ? (previousPatches.push(laterPatch), previousPatches) : (takeUntilRight(\n      previousPatches,\n      (patch2) => patch2.op.type === \"unset\"\n    ).find(\n      (precedingPatch) => precedingPatch.op.type === \"setIfMissing\" && isEqualPath(precedingPatch.path, laterPatch.path)\n    ) || previousPatches.push(laterPatch), previousPatches),\n    []\n  );\n}\nfunction compactDMPSetPatches(base, patches) {\n  let edge = base;\n  return patches.reduce(\n    (earlierPatches, laterPatch) => {\n      const before = edge;\n      if (edge = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.applyNodePatch)(laterPatch, edge), laterPatch.op.type === \"set\" && typeof laterPatch.op.value == \"string\") {\n        const current = (0,_getAtPath_js__WEBPACK_IMPORTED_MODULE_2__.getAtPath)(laterPatch.path, before);\n        if (typeof current == \"string\") {\n          const replaced = {\n            ...laterPatch,\n            op: {\n              type: \"diffMatchPatch\",\n              value: (0,_sanity_diff_match_patch__WEBPACK_IMPORTED_MODULE_3__.stringifyPatches)(\n                (0,_sanity_diff_match_patch__WEBPACK_IMPORTED_MODULE_3__.makePatches)(current, laterPatch.op.value)\n              )\n            }\n          };\n          return earlierPatches.flatMap((ep) => isEqualPath(ep.path, laterPatch.path) && ep.op.type === \"diffMatchPatch\" ? [] : ep).concat(replaced);\n        }\n      }\n      return earlierPatches.push(laterPatch), earlierPatches;\n    },\n    []\n  );\n}\nfunction squashDMPStrings(remote, mutationGroups) {\n  return mutationGroups.map((mutationGroup) => ({\n    ...mutationGroup,\n    mutations: dmpIfyMutations(remote, mutationGroup.mutations)\n  }));\n}\nfunction dmpIfyMutations(store, mutations) {\n  return mutations.map((mutation, i) => mutation.type === \"patch\" ? dmpifyPatchMutation(store.get(mutation.id), mutation) : mutation);\n}\nfunction dmpifyPatchMutation(base, mutation) {\n  return base ? {\n    ...mutation,\n    patches: compactDMPSetPatches(base, mutation.patches)\n  } : mutation;\n}\nfunction mergeMutationGroups(mutationGroups) {\n  return chunkWhile(mutationGroups, (group) => !group.transaction).flatMap(\n    (chunk) => ({\n      ...chunk[0],\n      mutations: chunk.flatMap((c) => c.mutations)\n    })\n  );\n}\nfunction chunkWhile(arr, predicate) {\n  const res = [];\n  let currentChunk = [];\n  return arr.forEach((item) => {\n    predicate(item) ? currentChunk.push(item) : (currentChunk.length > 0 && res.push(currentChunk), currentChunk = [], res.push([item]));\n  }), currentChunk.length > 0 && res.push(currentChunk), res;\n}\nfunction squashMutationGroups(staged) {\n  return mergeMutationGroups(staged).map((transaction) => ({\n    ...transaction,\n    mutations: squashMutations(transaction.mutations)\n  })).map((transaction) => ({\n    ...transaction,\n    mutations: transaction.mutations.map((mutation) => mutation.type !== \"patch\" ? mutation : {\n      ...mutation,\n      patches: squashNodePatches(mutation.patches)\n    })\n  }));\n}\nfunction squashMutations(mutations) {\n  const byDocument = (0,lodash_es__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(mutations, getMutationDocumentId);\n  return Object.values(byDocument).flatMap((documentMutations) => squashCreateIfNotExists(squashDelete(documentMutations)).flat().reduce((acc, docMutation) => {\n    const prev = acc[acc.length - 1];\n    return (!prev || prev.type === \"patch\") && docMutation.type === \"patch\" ? acc.slice(0, -1).concat({\n      ...docMutation,\n      patches: (prev?.patches || []).concat(docMutation.patches)\n    }) : acc.concat(docMutation);\n  }, []));\n}\nfunction squashCreateIfNotExists(mutations) {\n  return mutations.length === 0 ? mutations : mutations.reduce((previousMuts, laterMut) => laterMut.type !== \"createIfNotExists\" ? (previousMuts.push(laterMut), previousMuts) : (takeUntilRight(previousMuts, (m) => m.type === \"delete\").find(\n    (precedingPatch) => precedingPatch.type === \"createIfNotExists\"\n  ) || previousMuts.push(laterMut), previousMuts), []);\n}\nfunction squashDelete(mutations) {\n  return mutations.length === 0 ? mutations : mutations.reduce((previousMuts, laterMut) => laterMut.type === \"delete\" ? [laterMut] : (previousMuts.push(laterMut), previousMuts), []);\n}\nfunction rebase(documentId, oldBase, newBase, stagedMutations) {\n  let edge = oldBase;\n  const dmpified = stagedMutations.map((transaction) => {\n    const mutations = transaction.mutations.flatMap((mut) => {\n      if (getMutationDocumentId(mut) !== documentId)\n        return [];\n      const before = edge;\n      return edge = applyAll(edge, [mut]), !before || mut.type !== \"patch\" ? mut : {\n        type: \"dmpified\",\n        mutation: {\n          ...mut,\n          // Todo: make compactDMPSetPatches return pairs of patches that was dmpified with their\n          //  original as dmpPatches and original is not 1:1 (e..g some of the original may not be dmpified)\n          dmpPatches: compactDMPSetPatches(before, mut.patches),\n          original: mut.patches\n        }\n      };\n    });\n    return { ...transaction, mutations };\n  });\n  let newBaseWithDMPForOldBaseApplied = newBase;\n  return dmpified.map((transaction) => {\n    const applied = [];\n    return transaction.mutations.forEach((mut) => {\n      if (mut.type === \"dmpified\")\n        try {\n          newBaseWithDMPForOldBaseApplied = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.applyPatches)(\n            mut.mutation.dmpPatches,\n            newBaseWithDMPForOldBaseApplied\n          ), applied.push(mut);\n        } catch {\n          console.warn(\"Failed to apply dmp patch, falling back to original\");\n          try {\n            newBaseWithDMPForOldBaseApplied = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.applyPatches)(\n              mut.mutation.original,\n              newBaseWithDMPForOldBaseApplied\n            ), applied.push(mut);\n          } catch (second) {\n            throw new Error(\n              `Failed to apply patch for document \"${documentId}\": ${second.message}`\n            );\n          }\n        }\n      else\n        newBaseWithDMPForOldBaseApplied = applyAll(\n          newBaseWithDMPForOldBaseApplied,\n          [mut]\n        );\n    });\n  }), [stagedMutations.map((transaction) => ({\n    ...transaction,\n    mutations: transaction.mutations.map((mut) => mut.type !== \"patch\" || getMutationDocumentId(mut) !== documentId ? mut : {\n      ...mut,\n      patches: mut.patches.map((patch2) => patch2.op.type !== \"set\" ? patch2 : {\n        ...patch2,\n        op: {\n          ...patch2.op,\n          value: (0,_getAtPath_js__WEBPACK_IMPORTED_MODULE_2__.getAtPath)(patch2.path, newBaseWithDMPForOldBaseApplied)\n        }\n      })\n    })\n  })), newBaseWithDMPForOldBaseApplied];\n}\nfunction toTransactions(groups) {\n  return groups.map((group) => group.transaction && group.id !== void 0 ? { id: group.id, mutations: group.mutations } : { mutations: group.mutations });\n}\n\n//# sourceMappingURL=toTransactions.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/toTransactions.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/utils.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/utils.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applyNodePatch: () => (/* binding */ applyNodePatch),\n/* harmony export */   applyOp: () => (/* binding */ applyOp),\n/* harmony export */   applyPatchMutation: () => (/* binding */ applyPatchMutation),\n/* harmony export */   applyPatches: () => (/* binding */ applyPatches),\n/* harmony export */   assignId: () => (/* binding */ assignId),\n/* harmony export */   hasId: () => (/* binding */ hasId),\n/* harmony export */   nanoid: () => (/* binding */ nanoid),\n/* harmony export */   splice: () => (/* binding */ splice)\n/* harmony export */ });\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stringify.js */ \"(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/stringify.js\");\n/* harmony import */ var _isObject_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./isObject.js */ \"(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/isObject.js\");\n/* harmony import */ var _sanity_diff_match_patch__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sanity/diff-match-patch */ \"(ssr)/./node_modules/@sanity/diff-match-patch/dist/index.js\");\n/* harmony import */ var node_crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:crypto */ \"node:crypto\");\n\n\n\n\nfunction keyOf(value) {\n  return value !== null && typeof value == \"object\" && typeof value._key == \"string\" && value._key || null;\n}\nfunction findTargetIndex(array, pathSegment) {\n  if (typeof pathSegment == \"number\")\n    return normalizeIndex(array.length, pathSegment);\n  if ((0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__.isKeyedElement)(pathSegment)) {\n    const idx = array.findIndex((value) => keyOf(value) === pathSegment._key);\n    return idx === -1 ? null : idx;\n  }\n  throw new Error(\n    `Expected path segment to be addressing a single array item either by numeric index or by '_key'. Instead saw ${JSON.stringify(\n      pathSegment\n    )}`\n  );\n}\nfunction getTargetIdx(position, index) {\n  return position === \"before\" ? index : index + 1;\n}\nfunction normalizeIndex(length, index) {\n  if (length === 0 && (index === -1 || index === 0))\n    return 0;\n  const normalized = index < 0 ? length + index : index;\n  return normalized >= length || normalized < 0 ? null : normalized;\n}\nfunction splice(arr, start, deleteCount, items) {\n  const copy = arr.slice();\n  return copy.splice(start, deleteCount, ...items || []), copy;\n}\nfunction insert(op, currentValue) {\n  if (!Array.isArray(currentValue))\n    throw new TypeError('Cannot apply \"insert()\" on non-array value');\n  const index = findTargetIndex(currentValue, op.referenceItem);\n  if (index === null)\n    throw new Error(`Found no matching array element to insert ${op.position}`);\n  return currentValue.length === 0 ? op.items : splice(currentValue, getTargetIdx(op.position, index), 0, op.items);\n}\nfunction upsert(op, currentValue) {\n  if (!Array.isArray(currentValue))\n    throw new TypeError('Cannot apply \"upsert()\" on non-array value');\n  if (op.items.length === 0)\n    return currentValue;\n  const replaceItemsMap = [], insertItems = [];\n  if (op.items.forEach((itemToBeUpserted, i) => {\n    const existingIndex = currentValue.findIndex(\n      (existingItem) => existingItem?._key === itemToBeUpserted._key\n    );\n    existingIndex >= 0 ? replaceItemsMap[existingIndex] = i : insertItems.push(itemToBeUpserted);\n  }), replaceItemsMap.length === 0 && insertItems.length == 0)\n    return currentValue;\n  const next = [...currentValue];\n  for (const i of replaceItemsMap)\n    next[i] = op.items[replaceItemsMap[i]];\n  return insert(\n    {\n      type: \"insert\",\n      items: insertItems,\n      referenceItem: op.referenceItem,\n      position: op.position\n    },\n    next\n  );\n}\nfunction replace(op, currentValue) {\n  if (!Array.isArray(currentValue))\n    throw new TypeError('Cannot apply \"replace()\" on non-array value');\n  const index = findTargetIndex(currentValue, op.referenceItem);\n  if (index === null)\n    throw new Error(\"Found no matching array element to replace\");\n  return splice(currentValue, index, op.items.length, op.items);\n}\nfunction remove(op, currentValue) {\n  if (!Array.isArray(currentValue))\n    throw new TypeError('Cannot apply \"remove()\" on non-array value');\n  const index = findTargetIndex(currentValue, op.referenceItem);\n  if (index === null)\n    throw new Error(\"Found no matching array element to replace\");\n  return splice(currentValue, index, 1, []);\n}\nfunction truncate(op, currentValue) {\n  if (!Array.isArray(currentValue))\n    throw new TypeError('Cannot apply \"truncate()\" on non-array value');\n  return typeof op.endIndex == \"number\" ? currentValue.slice(0, op.startIndex).concat(currentValue.slice(op.endIndex)) : currentValue.slice(0, op.startIndex);\n}\nfunction set(op, currentValue) {\n  return op.value;\n}\nfunction setIfMissing(op, currentValue) {\n  return currentValue ?? op.value;\n}\nfunction unset(op) {\n}\nfunction inc(op, currentValue) {\n  if (typeof currentValue != \"number\")\n    throw new TypeError('Cannot apply \"inc()\" on non-numeric value');\n  return currentValue + op.amount;\n}\nfunction dec(op, currentValue) {\n  if (typeof currentValue != \"number\")\n    throw new TypeError('Cannot apply \"dec()\" on non-numeric value');\n  return currentValue - op.amount;\n}\nconst hasOwn = Object.prototype.hasOwnProperty.call.bind(\n  Object.prototype.hasOwnProperty\n);\nfunction isEmpty(v) {\n  for (const key in v)\n    if (hasOwn(v, key))\n      return !1;\n  return !0;\n}\nfunction omit(val, props) {\n  const copy = { ...val };\n  for (const prop of props)\n    delete copy[prop];\n  return copy;\n}\nfunction unassign(op, currentValue) {\n  if (!(0,_isObject_js__WEBPACK_IMPORTED_MODULE_2__.isObject)(currentValue))\n    throw new TypeError('Cannot apply \"unassign()\" on non-object value');\n  return op.keys.length === 0 ? currentValue : omit(currentValue, op.keys);\n}\nfunction assign(op, currentValue) {\n  if (!(0,_isObject_js__WEBPACK_IMPORTED_MODULE_2__.isObject)(currentValue))\n    throw new TypeError('Cannot apply \"assign()\" on non-object value');\n  return isEmpty(op.value) ? currentValue : { ...currentValue, ...op.value };\n}\nfunction diffMatchPatch(op, currentValue) {\n  if (typeof currentValue != \"string\")\n    throw new TypeError('Cannot apply \"diffMatchPatch()\" on non-string value');\n  return (0,_sanity_diff_match_patch__WEBPACK_IMPORTED_MODULE_3__.applyPatches)((0,_sanity_diff_match_patch__WEBPACK_IMPORTED_MODULE_3__.parsePatch)(op.value), currentValue)[0];\n}\nvar operations = /* @__PURE__ */ Object.freeze({\n  __proto__: null,\n  assign,\n  dec,\n  diffMatchPatch,\n  inc,\n  insert,\n  remove,\n  replace,\n  set,\n  setIfMissing,\n  truncate,\n  unassign,\n  unset,\n  upsert\n});\nfunction applyOp(op, currentValue) {\n  if (!(op.type in operations))\n    throw new Error(`Invalid operation type: \"${op.type}\"`);\n  return operations[op.type](op, currentValue);\n}\nfunction applyPatches(patches, document) {\n  return patches.reduce(\n    (prev, patch) => applyNodePatch(patch, prev),\n    document\n  );\n}\nfunction applyNodePatch(patch, document) {\n  return applyAtPath(patch.path, patch.op, document);\n}\nfunction applyAtPath(path, op, value) {\n  if (!isNonEmptyArray(path))\n    return applyOp(op, value);\n  const [head, ...tail] = path;\n  if ((0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__.isArrayElement)(head) && Array.isArray(value))\n    return applyInArray(head, tail, op, value);\n  if ((0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__.isPropertyElement)(head) && (0,_isObject_js__WEBPACK_IMPORTED_MODULE_2__.isObject)(value))\n    return applyInObject(head, tail, op, value);\n  throw new Error(\n    `Cannot apply operation of type \"${op.type}\" to path ${(0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__.stringify)(\n      path\n    )} on ${typeof value} value`\n  );\n}\nfunction applyInObject(head, tail, op, object) {\n  const current = object[head];\n  if (current === void 0 && tail.length > 0)\n    return object;\n  const patchedValue = applyAtPath(tail, op, current);\n  return patchedValue === current ? object : { ...object, [head]: patchedValue };\n}\nfunction applyInArray(head, tail, op, value) {\n  const index = findTargetIndex(value, head);\n  if (index === null || index === -1)\n    return value;\n  const current = value[index], patchedItem = applyAtPath(tail, op, current);\n  return patchedItem === current ? value : splice(value, index, 1, [patchedItem]);\n}\nfunction isNonEmptyArray(a) {\n  return a.length > 0;\n}\nfunction applyPatchMutation(mutation, document) {\n  if (mutation.options?.ifRevision && document._rev !== mutation.options.ifRevision)\n    throw new Error(\"Revision mismatch\");\n  if (mutation.id !== document._id)\n    throw new Error(\n      `Document id mismatch. Refusing to apply mutation for document with id=\"${mutation.id}\" on the given document with id=\"${document._id}\"`\n    );\n  return applyPatches(mutation.patches, document);\n}\nconst urlAlphabet = \"useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict\", POOL_SIZE_MULTIPLIER = 128;\nlet pool, poolOffset;\nfunction fillPool(bytes) {\n  !pool || pool.length < bytes ? (pool = Buffer.allocUnsafe(bytes * POOL_SIZE_MULTIPLIER), node_crypto__WEBPACK_IMPORTED_MODULE_0__.webcrypto.getRandomValues(pool), poolOffset = 0) : poolOffset + bytes > pool.length && (node_crypto__WEBPACK_IMPORTED_MODULE_0__.webcrypto.getRandomValues(pool), poolOffset = 0), poolOffset += bytes;\n}\nfunction nanoid(size = 21) {\n  fillPool(size -= 0);\n  let id = \"\";\n  for (let i = poolOffset - size; i < poolOffset; i++)\n    id += urlAlphabet[pool[i] & 63];\n  return id;\n}\nfunction hasId(doc) {\n  return \"_id\" in doc;\n}\nfunction assignId(doc, generateId) {\n  return hasId(doc) ? doc : { ...doc, _id: generateId() };\n}\n\n//# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS92aXN1YWwtZWRpdGluZy9ub2RlX21vZHVsZXMvQHNhbml0eS9tdXRhdGUvZGlzdC9fY2h1bmtzLWVzL3V0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUE4RjtBQUNyRDtBQUM2QztBQUM5QztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLDZEQUFjO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0hBQW9IO0FBQ3BIO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRUFBaUUsWUFBWTtBQUM3RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTyxzREFBUTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTyxzREFBUTtBQUNmO0FBQ0EsOENBQThDO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxzRUFBYyxDQUFDLG9FQUFVO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxnREFBZ0QsUUFBUTtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLDZEQUFjO0FBQ3BCO0FBQ0EsTUFBTSxnRUFBaUIsVUFBVSxzREFBUTtBQUN6QztBQUNBO0FBQ0EsdUNBQXVDLFFBQVEsWUFBWSx3REFBUztBQUNwRTtBQUNBLE9BQU8sS0FBSyxjQUFjO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0NBQStDO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0ZBQWdGLFlBQVksbUNBQW1DLGFBQWE7QUFDNUk7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkZBQTJGLGtEQUFTLCtFQUErRSxrREFBUztBQUM1TDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxnQkFBZ0I7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEI7QUFDOUI7QUFVRTtBQUNGIiwic291cmNlcyI6WyIvbWVkaWEvYXdhaXMvTmV3IFZvbHVtZS9Hb3Zlck5PciBIb3VzZSAvaGFja2F0aG9uLTMvc2Vjb25kVGltZXMvaGFja2F0aG9uLWJhbmRhZ2Uvbm9kZV9tb2R1bGVzL0BzYW5pdHkvdmlzdWFsLWVkaXRpbmcvbm9kZV9tb2R1bGVzL0BzYW5pdHkvbXV0YXRlL2Rpc3QvX2NodW5rcy1lcy91dGlscy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc0tleWVkRWxlbWVudCwgaXNBcnJheUVsZW1lbnQsIGlzUHJvcGVydHlFbGVtZW50LCBzdHJpbmdpZnkgfSBmcm9tIFwiLi9zdHJpbmdpZnkuanNcIjtcbmltcG9ydCB7IGlzT2JqZWN0IH0gZnJvbSBcIi4vaXNPYmplY3QuanNcIjtcbmltcG9ydCB7IGFwcGx5UGF0Y2hlcyBhcyBhcHBseVBhdGNoZXMkMSwgcGFyc2VQYXRjaCB9IGZyb20gXCJAc2FuaXR5L2RpZmYtbWF0Y2gtcGF0Y2hcIjtcbmltcG9ydCB7IHdlYmNyeXB0byB9IGZyb20gXCJub2RlOmNyeXB0b1wiO1xuZnVuY3Rpb24ga2V5T2YodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlICE9PSBudWxsICYmIHR5cGVvZiB2YWx1ZSA9PSBcIm9iamVjdFwiICYmIHR5cGVvZiB2YWx1ZS5fa2V5ID09IFwic3RyaW5nXCIgJiYgdmFsdWUuX2tleSB8fCBudWxsO1xufVxuZnVuY3Rpb24gZmluZFRhcmdldEluZGV4KGFycmF5LCBwYXRoU2VnbWVudCkge1xuICBpZiAodHlwZW9mIHBhdGhTZWdtZW50ID09IFwibnVtYmVyXCIpXG4gICAgcmV0dXJuIG5vcm1hbGl6ZUluZGV4KGFycmF5Lmxlbmd0aCwgcGF0aFNlZ21lbnQpO1xuICBpZiAoaXNLZXllZEVsZW1lbnQocGF0aFNlZ21lbnQpKSB7XG4gICAgY29uc3QgaWR4ID0gYXJyYXkuZmluZEluZGV4KCh2YWx1ZSkgPT4ga2V5T2YodmFsdWUpID09PSBwYXRoU2VnbWVudC5fa2V5KTtcbiAgICByZXR1cm4gaWR4ID09PSAtMSA/IG51bGwgOiBpZHg7XG4gIH1cbiAgdGhyb3cgbmV3IEVycm9yKFxuICAgIGBFeHBlY3RlZCBwYXRoIHNlZ21lbnQgdG8gYmUgYWRkcmVzc2luZyBhIHNpbmdsZSBhcnJheSBpdGVtIGVpdGhlciBieSBudW1lcmljIGluZGV4IG9yIGJ5ICdfa2V5Jy4gSW5zdGVhZCBzYXcgJHtKU09OLnN0cmluZ2lmeShcbiAgICAgIHBhdGhTZWdtZW50XG4gICAgKX1gXG4gICk7XG59XG5mdW5jdGlvbiBnZXRUYXJnZXRJZHgocG9zaXRpb24sIGluZGV4KSB7XG4gIHJldHVybiBwb3NpdGlvbiA9PT0gXCJiZWZvcmVcIiA/IGluZGV4IDogaW5kZXggKyAxO1xufVxuZnVuY3Rpb24gbm9ybWFsaXplSW5kZXgobGVuZ3RoLCBpbmRleCkge1xuICBpZiAobGVuZ3RoID09PSAwICYmIChpbmRleCA9PT0gLTEgfHwgaW5kZXggPT09IDApKVxuICAgIHJldHVybiAwO1xuICBjb25zdCBub3JtYWxpemVkID0gaW5kZXggPCAwID8gbGVuZ3RoICsgaW5kZXggOiBpbmRleDtcbiAgcmV0dXJuIG5vcm1hbGl6ZWQgPj0gbGVuZ3RoIHx8IG5vcm1hbGl6ZWQgPCAwID8gbnVsbCA6IG5vcm1hbGl6ZWQ7XG59XG5mdW5jdGlvbiBzcGxpY2UoYXJyLCBzdGFydCwgZGVsZXRlQ291bnQsIGl0ZW1zKSB7XG4gIGNvbnN0IGNvcHkgPSBhcnIuc2xpY2UoKTtcbiAgcmV0dXJuIGNvcHkuc3BsaWNlKHN0YXJ0LCBkZWxldGVDb3VudCwgLi4uaXRlbXMgfHwgW10pLCBjb3B5O1xufVxuZnVuY3Rpb24gaW5zZXJ0KG9wLCBjdXJyZW50VmFsdWUpIHtcbiAgaWYgKCFBcnJheS5pc0FycmF5KGN1cnJlbnRWYWx1ZSkpXG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignQ2Fubm90IGFwcGx5IFwiaW5zZXJ0KClcIiBvbiBub24tYXJyYXkgdmFsdWUnKTtcbiAgY29uc3QgaW5kZXggPSBmaW5kVGFyZ2V0SW5kZXgoY3VycmVudFZhbHVlLCBvcC5yZWZlcmVuY2VJdGVtKTtcbiAgaWYgKGluZGV4ID09PSBudWxsKVxuICAgIHRocm93IG5ldyBFcnJvcihgRm91bmQgbm8gbWF0Y2hpbmcgYXJyYXkgZWxlbWVudCB0byBpbnNlcnQgJHtvcC5wb3NpdGlvbn1gKTtcbiAgcmV0dXJuIGN1cnJlbnRWYWx1ZS5sZW5ndGggPT09IDAgPyBvcC5pdGVtcyA6IHNwbGljZShjdXJyZW50VmFsdWUsIGdldFRhcmdldElkeChvcC5wb3NpdGlvbiwgaW5kZXgpLCAwLCBvcC5pdGVtcyk7XG59XG5mdW5jdGlvbiB1cHNlcnQob3AsIGN1cnJlbnRWYWx1ZSkge1xuICBpZiAoIUFycmF5LmlzQXJyYXkoY3VycmVudFZhbHVlKSlcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdDYW5ub3QgYXBwbHkgXCJ1cHNlcnQoKVwiIG9uIG5vbi1hcnJheSB2YWx1ZScpO1xuICBpZiAob3AuaXRlbXMubGVuZ3RoID09PSAwKVxuICAgIHJldHVybiBjdXJyZW50VmFsdWU7XG4gIGNvbnN0IHJlcGxhY2VJdGVtc01hcCA9IFtdLCBpbnNlcnRJdGVtcyA9IFtdO1xuICBpZiAob3AuaXRlbXMuZm9yRWFjaCgoaXRlbVRvQmVVcHNlcnRlZCwgaSkgPT4ge1xuICAgIGNvbnN0IGV4aXN0aW5nSW5kZXggPSBjdXJyZW50VmFsdWUuZmluZEluZGV4KFxuICAgICAgKGV4aXN0aW5nSXRlbSkgPT4gZXhpc3RpbmdJdGVtPy5fa2V5ID09PSBpdGVtVG9CZVVwc2VydGVkLl9rZXlcbiAgICApO1xuICAgIGV4aXN0aW5nSW5kZXggPj0gMCA/IHJlcGxhY2VJdGVtc01hcFtleGlzdGluZ0luZGV4XSA9IGkgOiBpbnNlcnRJdGVtcy5wdXNoKGl0ZW1Ub0JlVXBzZXJ0ZWQpO1xuICB9KSwgcmVwbGFjZUl0ZW1zTWFwLmxlbmd0aCA9PT0gMCAmJiBpbnNlcnRJdGVtcy5sZW5ndGggPT0gMClcbiAgICByZXR1cm4gY3VycmVudFZhbHVlO1xuICBjb25zdCBuZXh0ID0gWy4uLmN1cnJlbnRWYWx1ZV07XG4gIGZvciAoY29uc3QgaSBvZiByZXBsYWNlSXRlbXNNYXApXG4gICAgbmV4dFtpXSA9IG9wLml0ZW1zW3JlcGxhY2VJdGVtc01hcFtpXV07XG4gIHJldHVybiBpbnNlcnQoXG4gICAge1xuICAgICAgdHlwZTogXCJpbnNlcnRcIixcbiAgICAgIGl0ZW1zOiBpbnNlcnRJdGVtcyxcbiAgICAgIHJlZmVyZW5jZUl0ZW06IG9wLnJlZmVyZW5jZUl0ZW0sXG4gICAgICBwb3NpdGlvbjogb3AucG9zaXRpb25cbiAgICB9LFxuICAgIG5leHRcbiAgKTtcbn1cbmZ1bmN0aW9uIHJlcGxhY2Uob3AsIGN1cnJlbnRWYWx1ZSkge1xuICBpZiAoIUFycmF5LmlzQXJyYXkoY3VycmVudFZhbHVlKSlcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdDYW5ub3QgYXBwbHkgXCJyZXBsYWNlKClcIiBvbiBub24tYXJyYXkgdmFsdWUnKTtcbiAgY29uc3QgaW5kZXggPSBmaW5kVGFyZ2V0SW5kZXgoY3VycmVudFZhbHVlLCBvcC5yZWZlcmVuY2VJdGVtKTtcbiAgaWYgKGluZGV4ID09PSBudWxsKVxuICAgIHRocm93IG5ldyBFcnJvcihcIkZvdW5kIG5vIG1hdGNoaW5nIGFycmF5IGVsZW1lbnQgdG8gcmVwbGFjZVwiKTtcbiAgcmV0dXJuIHNwbGljZShjdXJyZW50VmFsdWUsIGluZGV4LCBvcC5pdGVtcy5sZW5ndGgsIG9wLml0ZW1zKTtcbn1cbmZ1bmN0aW9uIHJlbW92ZShvcCwgY3VycmVudFZhbHVlKSB7XG4gIGlmICghQXJyYXkuaXNBcnJheShjdXJyZW50VmFsdWUpKVxuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0Nhbm5vdCBhcHBseSBcInJlbW92ZSgpXCIgb24gbm9uLWFycmF5IHZhbHVlJyk7XG4gIGNvbnN0IGluZGV4ID0gZmluZFRhcmdldEluZGV4KGN1cnJlbnRWYWx1ZSwgb3AucmVmZXJlbmNlSXRlbSk7XG4gIGlmIChpbmRleCA9PT0gbnVsbClcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJGb3VuZCBubyBtYXRjaGluZyBhcnJheSBlbGVtZW50IHRvIHJlcGxhY2VcIik7XG4gIHJldHVybiBzcGxpY2UoY3VycmVudFZhbHVlLCBpbmRleCwgMSwgW10pO1xufVxuZnVuY3Rpb24gdHJ1bmNhdGUob3AsIGN1cnJlbnRWYWx1ZSkge1xuICBpZiAoIUFycmF5LmlzQXJyYXkoY3VycmVudFZhbHVlKSlcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdDYW5ub3QgYXBwbHkgXCJ0cnVuY2F0ZSgpXCIgb24gbm9uLWFycmF5IHZhbHVlJyk7XG4gIHJldHVybiB0eXBlb2Ygb3AuZW5kSW5kZXggPT0gXCJudW1iZXJcIiA/IGN1cnJlbnRWYWx1ZS5zbGljZSgwLCBvcC5zdGFydEluZGV4KS5jb25jYXQoY3VycmVudFZhbHVlLnNsaWNlKG9wLmVuZEluZGV4KSkgOiBjdXJyZW50VmFsdWUuc2xpY2UoMCwgb3Auc3RhcnRJbmRleCk7XG59XG5mdW5jdGlvbiBzZXQob3AsIGN1cnJlbnRWYWx1ZSkge1xuICByZXR1cm4gb3AudmFsdWU7XG59XG5mdW5jdGlvbiBzZXRJZk1pc3Npbmcob3AsIGN1cnJlbnRWYWx1ZSkge1xuICByZXR1cm4gY3VycmVudFZhbHVlID8/IG9wLnZhbHVlO1xufVxuZnVuY3Rpb24gdW5zZXQob3ApIHtcbn1cbmZ1bmN0aW9uIGluYyhvcCwgY3VycmVudFZhbHVlKSB7XG4gIGlmICh0eXBlb2YgY3VycmVudFZhbHVlICE9IFwibnVtYmVyXCIpXG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignQ2Fubm90IGFwcGx5IFwiaW5jKClcIiBvbiBub24tbnVtZXJpYyB2YWx1ZScpO1xuICByZXR1cm4gY3VycmVudFZhbHVlICsgb3AuYW1vdW50O1xufVxuZnVuY3Rpb24gZGVjKG9wLCBjdXJyZW50VmFsdWUpIHtcbiAgaWYgKHR5cGVvZiBjdXJyZW50VmFsdWUgIT0gXCJudW1iZXJcIilcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdDYW5ub3QgYXBwbHkgXCJkZWMoKVwiIG9uIG5vbi1udW1lcmljIHZhbHVlJyk7XG4gIHJldHVybiBjdXJyZW50VmFsdWUgLSBvcC5hbW91bnQ7XG59XG5jb25zdCBoYXNPd24gPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwuYmluZChcbiAgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eVxuKTtcbmZ1bmN0aW9uIGlzRW1wdHkodikge1xuICBmb3IgKGNvbnN0IGtleSBpbiB2KVxuICAgIGlmIChoYXNPd24odiwga2V5KSlcbiAgICAgIHJldHVybiAhMTtcbiAgcmV0dXJuICEwO1xufVxuZnVuY3Rpb24gb21pdCh2YWwsIHByb3BzKSB7XG4gIGNvbnN0IGNvcHkgPSB7IC4uLnZhbCB9O1xuICBmb3IgKGNvbnN0IHByb3Agb2YgcHJvcHMpXG4gICAgZGVsZXRlIGNvcHlbcHJvcF07XG4gIHJldHVybiBjb3B5O1xufVxuZnVuY3Rpb24gdW5hc3NpZ24ob3AsIGN1cnJlbnRWYWx1ZSkge1xuICBpZiAoIWlzT2JqZWN0KGN1cnJlbnRWYWx1ZSkpXG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignQ2Fubm90IGFwcGx5IFwidW5hc3NpZ24oKVwiIG9uIG5vbi1vYmplY3QgdmFsdWUnKTtcbiAgcmV0dXJuIG9wLmtleXMubGVuZ3RoID09PSAwID8gY3VycmVudFZhbHVlIDogb21pdChjdXJyZW50VmFsdWUsIG9wLmtleXMpO1xufVxuZnVuY3Rpb24gYXNzaWduKG9wLCBjdXJyZW50VmFsdWUpIHtcbiAgaWYgKCFpc09iamVjdChjdXJyZW50VmFsdWUpKVxuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0Nhbm5vdCBhcHBseSBcImFzc2lnbigpXCIgb24gbm9uLW9iamVjdCB2YWx1ZScpO1xuICByZXR1cm4gaXNFbXB0eShvcC52YWx1ZSkgPyBjdXJyZW50VmFsdWUgOiB7IC4uLmN1cnJlbnRWYWx1ZSwgLi4ub3AudmFsdWUgfTtcbn1cbmZ1bmN0aW9uIGRpZmZNYXRjaFBhdGNoKG9wLCBjdXJyZW50VmFsdWUpIHtcbiAgaWYgKHR5cGVvZiBjdXJyZW50VmFsdWUgIT0gXCJzdHJpbmdcIilcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdDYW5ub3QgYXBwbHkgXCJkaWZmTWF0Y2hQYXRjaCgpXCIgb24gbm9uLXN0cmluZyB2YWx1ZScpO1xuICByZXR1cm4gYXBwbHlQYXRjaGVzJDEocGFyc2VQYXRjaChvcC52YWx1ZSksIGN1cnJlbnRWYWx1ZSlbMF07XG59XG52YXIgb3BlcmF0aW9ucyA9IC8qIEBfX1BVUkVfXyAqLyBPYmplY3QuZnJlZXplKHtcbiAgX19wcm90b19fOiBudWxsLFxuICBhc3NpZ24sXG4gIGRlYyxcbiAgZGlmZk1hdGNoUGF0Y2gsXG4gIGluYyxcbiAgaW5zZXJ0LFxuICByZW1vdmUsXG4gIHJlcGxhY2UsXG4gIHNldCxcbiAgc2V0SWZNaXNzaW5nLFxuICB0cnVuY2F0ZSxcbiAgdW5hc3NpZ24sXG4gIHVuc2V0LFxuICB1cHNlcnRcbn0pO1xuZnVuY3Rpb24gYXBwbHlPcChvcCwgY3VycmVudFZhbHVlKSB7XG4gIGlmICghKG9wLnR5cGUgaW4gb3BlcmF0aW9ucykpXG4gICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIG9wZXJhdGlvbiB0eXBlOiBcIiR7b3AudHlwZX1cImApO1xuICByZXR1cm4gb3BlcmF0aW9uc1tvcC50eXBlXShvcCwgY3VycmVudFZhbHVlKTtcbn1cbmZ1bmN0aW9uIGFwcGx5UGF0Y2hlcyhwYXRjaGVzLCBkb2N1bWVudCkge1xuICByZXR1cm4gcGF0Y2hlcy5yZWR1Y2UoXG4gICAgKHByZXYsIHBhdGNoKSA9PiBhcHBseU5vZGVQYXRjaChwYXRjaCwgcHJldiksXG4gICAgZG9jdW1lbnRcbiAgKTtcbn1cbmZ1bmN0aW9uIGFwcGx5Tm9kZVBhdGNoKHBhdGNoLCBkb2N1bWVudCkge1xuICByZXR1cm4gYXBwbHlBdFBhdGgocGF0Y2gucGF0aCwgcGF0Y2gub3AsIGRvY3VtZW50KTtcbn1cbmZ1bmN0aW9uIGFwcGx5QXRQYXRoKHBhdGgsIG9wLCB2YWx1ZSkge1xuICBpZiAoIWlzTm9uRW1wdHlBcnJheShwYXRoKSlcbiAgICByZXR1cm4gYXBwbHlPcChvcCwgdmFsdWUpO1xuICBjb25zdCBbaGVhZCwgLi4udGFpbF0gPSBwYXRoO1xuICBpZiAoaXNBcnJheUVsZW1lbnQoaGVhZCkgJiYgQXJyYXkuaXNBcnJheSh2YWx1ZSkpXG4gICAgcmV0dXJuIGFwcGx5SW5BcnJheShoZWFkLCB0YWlsLCBvcCwgdmFsdWUpO1xuICBpZiAoaXNQcm9wZXJ0eUVsZW1lbnQoaGVhZCkgJiYgaXNPYmplY3QodmFsdWUpKVxuICAgIHJldHVybiBhcHBseUluT2JqZWN0KGhlYWQsIHRhaWwsIG9wLCB2YWx1ZSk7XG4gIHRocm93IG5ldyBFcnJvcihcbiAgICBgQ2Fubm90IGFwcGx5IG9wZXJhdGlvbiBvZiB0eXBlIFwiJHtvcC50eXBlfVwiIHRvIHBhdGggJHtzdHJpbmdpZnkoXG4gICAgICBwYXRoXG4gICAgKX0gb24gJHt0eXBlb2YgdmFsdWV9IHZhbHVlYFxuICApO1xufVxuZnVuY3Rpb24gYXBwbHlJbk9iamVjdChoZWFkLCB0YWlsLCBvcCwgb2JqZWN0KSB7XG4gIGNvbnN0IGN1cnJlbnQgPSBvYmplY3RbaGVhZF07XG4gIGlmIChjdXJyZW50ID09PSB2b2lkIDAgJiYgdGFpbC5sZW5ndGggPiAwKVxuICAgIHJldHVybiBvYmplY3Q7XG4gIGNvbnN0IHBhdGNoZWRWYWx1ZSA9IGFwcGx5QXRQYXRoKHRhaWwsIG9wLCBjdXJyZW50KTtcbiAgcmV0dXJuIHBhdGNoZWRWYWx1ZSA9PT0gY3VycmVudCA/IG9iamVjdCA6IHsgLi4ub2JqZWN0LCBbaGVhZF06IHBhdGNoZWRWYWx1ZSB9O1xufVxuZnVuY3Rpb24gYXBwbHlJbkFycmF5KGhlYWQsIHRhaWwsIG9wLCB2YWx1ZSkge1xuICBjb25zdCBpbmRleCA9IGZpbmRUYXJnZXRJbmRleCh2YWx1ZSwgaGVhZCk7XG4gIGlmIChpbmRleCA9PT0gbnVsbCB8fCBpbmRleCA9PT0gLTEpXG4gICAgcmV0dXJuIHZhbHVlO1xuICBjb25zdCBjdXJyZW50ID0gdmFsdWVbaW5kZXhdLCBwYXRjaGVkSXRlbSA9IGFwcGx5QXRQYXRoKHRhaWwsIG9wLCBjdXJyZW50KTtcbiAgcmV0dXJuIHBhdGNoZWRJdGVtID09PSBjdXJyZW50ID8gdmFsdWUgOiBzcGxpY2UodmFsdWUsIGluZGV4LCAxLCBbcGF0Y2hlZEl0ZW1dKTtcbn1cbmZ1bmN0aW9uIGlzTm9uRW1wdHlBcnJheShhKSB7XG4gIHJldHVybiBhLmxlbmd0aCA+IDA7XG59XG5mdW5jdGlvbiBhcHBseVBhdGNoTXV0YXRpb24obXV0YXRpb24sIGRvY3VtZW50KSB7XG4gIGlmIChtdXRhdGlvbi5vcHRpb25zPy5pZlJldmlzaW9uICYmIGRvY3VtZW50Ll9yZXYgIT09IG11dGF0aW9uLm9wdGlvbnMuaWZSZXZpc2lvbilcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJSZXZpc2lvbiBtaXNtYXRjaFwiKTtcbiAgaWYgKG11dGF0aW9uLmlkICE9PSBkb2N1bWVudC5faWQpXG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgYERvY3VtZW50IGlkIG1pc21hdGNoLiBSZWZ1c2luZyB0byBhcHBseSBtdXRhdGlvbiBmb3IgZG9jdW1lbnQgd2l0aCBpZD1cIiR7bXV0YXRpb24uaWR9XCIgb24gdGhlIGdpdmVuIGRvY3VtZW50IHdpdGggaWQ9XCIke2RvY3VtZW50Ll9pZH1cImBcbiAgICApO1xuICByZXR1cm4gYXBwbHlQYXRjaGVzKG11dGF0aW9uLnBhdGNoZXMsIGRvY3VtZW50KTtcbn1cbmNvbnN0IHVybEFscGhhYmV0ID0gXCJ1c2VhbmRvbS0yNlQxOTgzNDBQWDc1cHhKQUNLVkVSWU1JTkRCVVNIV09MRl9HUVpiZmdoamtscXZ3eXpyaWN0XCIsIFBPT0xfU0laRV9NVUxUSVBMSUVSID0gMTI4O1xubGV0IHBvb2wsIHBvb2xPZmZzZXQ7XG5mdW5jdGlvbiBmaWxsUG9vbChieXRlcykge1xuICAhcG9vbCB8fCBwb29sLmxlbmd0aCA8IGJ5dGVzID8gKHBvb2wgPSBCdWZmZXIuYWxsb2NVbnNhZmUoYnl0ZXMgKiBQT09MX1NJWkVfTVVMVElQTElFUiksIHdlYmNyeXB0by5nZXRSYW5kb21WYWx1ZXMocG9vbCksIHBvb2xPZmZzZXQgPSAwKSA6IHBvb2xPZmZzZXQgKyBieXRlcyA+IHBvb2wubGVuZ3RoICYmICh3ZWJjcnlwdG8uZ2V0UmFuZG9tVmFsdWVzKHBvb2wpLCBwb29sT2Zmc2V0ID0gMCksIHBvb2xPZmZzZXQgKz0gYnl0ZXM7XG59XG5mdW5jdGlvbiBuYW5vaWQoc2l6ZSA9IDIxKSB7XG4gIGZpbGxQb29sKHNpemUgLT0gMCk7XG4gIGxldCBpZCA9IFwiXCI7XG4gIGZvciAobGV0IGkgPSBwb29sT2Zmc2V0IC0gc2l6ZTsgaSA8IHBvb2xPZmZzZXQ7IGkrKylcbiAgICBpZCArPSB1cmxBbHBoYWJldFtwb29sW2ldICYgNjNdO1xuICByZXR1cm4gaWQ7XG59XG5mdW5jdGlvbiBoYXNJZChkb2MpIHtcbiAgcmV0dXJuIFwiX2lkXCIgaW4gZG9jO1xufVxuZnVuY3Rpb24gYXNzaWduSWQoZG9jLCBnZW5lcmF0ZUlkKSB7XG4gIHJldHVybiBoYXNJZChkb2MpID8gZG9jIDogeyAuLi5kb2MsIF9pZDogZ2VuZXJhdGVJZCgpIH07XG59XG5leHBvcnQge1xuICBhcHBseU5vZGVQYXRjaCxcbiAgYXBwbHlPcCxcbiAgYXBwbHlQYXRjaE11dGF0aW9uLFxuICBhcHBseVBhdGNoZXMsXG4gIGFzc2lnbklkLFxuICBoYXNJZCxcbiAgbmFub2lkLFxuICBzcGxpY2Vcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_unstable_machine.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_unstable_machine.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applyMutations: () => (/* reexport safe */ _chunks_es_toTransactions_js__WEBPACK_IMPORTED_MODULE_7__.applyMutations),\n/* harmony export */   commit: () => (/* reexport safe */ _chunks_es_toTransactions_js__WEBPACK_IMPORTED_MODULE_7__.commit),\n/* harmony export */   createSharedListener: () => (/* binding */ createSharedListener),\n/* harmony export */   documentMutatorMachine: () => (/* binding */ documentMutatorMachine),\n/* harmony export */   rebase: () => (/* reexport safe */ _chunks_es_toTransactions_js__WEBPACK_IMPORTED_MODULE_7__.rebase),\n/* harmony export */   squashDMPStrings: () => (/* reexport safe */ _chunks_es_toTransactions_js__WEBPACK_IMPORTED_MODULE_7__.squashDMPStrings),\n/* harmony export */   squashMutationGroups: () => (/* reexport safe */ _chunks_es_toTransactions_js__WEBPACK_IMPORTED_MODULE_7__.squashMutationGroups),\n/* harmony export */   toTransactions: () => (/* reexport safe */ _chunks_es_toTransactions_js__WEBPACK_IMPORTED_MODULE_7__.toTransactions)\n/* harmony export */ });\n/* harmony import */ var _chunks_es_toTransactions_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./_chunks-es/toTransactions.js */ \"(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/toTransactions.js\");\n/* harmony import */ var mendoza__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! mendoza */ \"(ssr)/./node_modules/mendoza/dist/index.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/share.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/filter.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/merge.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/shareReplay.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/defer.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/observeOn.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/scheduler/asap.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! xstate */ \"(ssr)/./node_modules/xstate/dist/xstate.development.esm.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! xstate */ \"(ssr)/./node_modules/xstate/dist/log-0acd9069.development.esm.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! xstate */ \"(ssr)/./node_modules/xstate/dist/raise-1db27a82.development.esm.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! xstate */ \"(ssr)/./node_modules/xstate/actors/dist/xstate-actors.development.esm.js\");\n/* harmony import */ var _chunks_es_encode_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./_chunks-es/encode.js */ \"(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/encode.js\");\n\n\n\n\n\nfunction createSharedListener(client) {\n  const allEvents$ = client.listen(\n    '*[!(_id in path(\"_.**\"))]',\n    {},\n    {\n      events: [\"welcome\", \"mutation\", \"reconnect\"],\n      includeResult: !1,\n      includePreviousRevision: !1,\n      visibility: \"transaction\",\n      effectFormat: \"mendoza\",\n      includeMutations: !1\n    }\n  ).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_0__.share)({ resetOnRefCountZero: !0 })), reconnect = allEvents$.pipe(\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.filter)((event) => event.type === \"reconnect\")\n  ), welcome = allEvents$.pipe(\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.filter)((event) => event.type === \"welcome\")\n  ), mutations = allEvents$.pipe(\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.filter)((event) => event.type === \"mutation\")\n  ), replayWelcome = (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.merge)(welcome, reconnect).pipe(\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.shareReplay)({ bufferSize: 1, refCount: !0 })\n  ).pipe(\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.filter)((latestConnectionEvent) => latestConnectionEvent.type === \"welcome\")\n  );\n  return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.merge)(replayWelcome, mutations, reconnect);\n}\nconst documentMutatorMachine = (0,xstate__WEBPACK_IMPORTED_MODULE_4__.setup)({\n  types: {},\n  actions: {\n    \"assign error to context\": (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({ error: ({ event }) => event }),\n    \"clear error from context\": (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({ error: void 0 }),\n    \"connect to server-sent events\": (0,xstate__WEBPACK_IMPORTED_MODULE_6__.O)({ type: \"connect\" }),\n    \"listen to server-sent events\": (0,xstate__WEBPACK_IMPORTED_MODULE_6__.P)(\"server-sent events\", {\n      id: \"listener\",\n      input: ({ context }) => ({\n        listener: context.sharedListener || createSharedListener(context.client),\n        id: context.id\n      })\n    }),\n    \"stop listening to server-sent events\": (0,xstate__WEBPACK_IMPORTED_MODULE_6__.R)(\"listener\"),\n    \"buffer remote mutation events\": (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n      mutationEvents: ({ event, context }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_4__.assertEvent)(event, \"mutation\"), [...context.mutationEvents, event])\n    }),\n    \"restore stashed changes\": (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n      stagedChanges: ({ event, context }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_4__.assertEvent)(event, \"xstate.done.actor.submitTransactions\"), context.stashedChanges),\n      stashedChanges: []\n    }),\n    \"rebase fetched remote snapshot\": (0,xstate__WEBPACK_IMPORTED_MODULE_5__.b)(({ enqueue }) => {\n      enqueue.assign(({ event, context }) => {\n        (0,xstate__WEBPACK_IMPORTED_MODULE_4__.assertEvent)(event, \"xstate.done.actor.getDocument\");\n        const previousRemote = context.remote;\n        let nextRemote = event.output, seenCurrentRev = !1;\n        for (const patch of context.mutationEvents)\n          !patch.effects?.apply || !patch.previousRev && patch.transition !== \"appear\" || (!seenCurrentRev && patch.previousRev === nextRemote?._rev && (seenCurrentRev = !0), seenCurrentRev && (nextRemote = applyMendozaPatch(\n            nextRemote,\n            patch.effects.apply,\n            patch.resultRev\n          )));\n        context.cache && // If the shared cache don't have the document already we can just set it\n        (!context.cache.has(context.id) || // But when it's in the cache, make sure it's necessary to update it\n        context.cache.get(context.id)._rev !== nextRemote?._rev) && context.cache.set(context.id, nextRemote);\n        const [stagedChanges, local] = (0,_chunks_es_toTransactions_js__WEBPACK_IMPORTED_MODULE_7__.rebase)(\n          context.id,\n          // It's annoying to convert between null and undefined, reach consensus\n          previousRemote === null ? void 0 : previousRemote,\n          nextRemote === null ? void 0 : nextRemote,\n          context.stagedChanges\n        );\n        return {\n          remote: nextRemote,\n          local,\n          stagedChanges,\n          // Since the snapshot handler applies all the patches they are no longer needed, allow GC\n          mutationEvents: []\n        };\n      }), enqueue.sendParent(\n        ({ context }) => ({\n          type: \"rebased.remote\",\n          id: context.id,\n          document: context.remote\n        })\n      );\n    }),\n    \"apply mendoza patch\": (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)(({ event, context }) => {\n      (0,xstate__WEBPACK_IMPORTED_MODULE_4__.assertEvent)(event, \"mutation\");\n      const previousRemote = context.remote;\n      if (event.transactionId === previousRemote?._rev)\n        return {};\n      const nextRemote = applyMendozaPatch(\n        previousRemote,\n        event.effects.apply,\n        event.resultRev\n      );\n      context.cache && // If the shared cache don't have the document already we can just set it\n      (!context.cache.has(context.id) || // But when it's in the cache, make sure it's necessary to update it\n      context.cache.get(context.id)._rev !== nextRemote?._rev) && context.cache.set(context.id, nextRemote);\n      const [stagedChanges, local] = (0,_chunks_es_toTransactions_js__WEBPACK_IMPORTED_MODULE_7__.rebase)(\n        context.id,\n        // It's annoying to convert between null and undefined, reach consensus\n        previousRemote === null ? void 0 : previousRemote,\n        nextRemote === null ? void 0 : nextRemote,\n        context.stagedChanges\n      );\n      return {\n        remote: nextRemote,\n        local,\n        stagedChanges\n      };\n    }),\n    \"increment fetch attempts\": (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n      fetchRemoteSnapshotAttempts: ({ context }) => context.fetchRemoteSnapshotAttempts + 1\n    }),\n    \"reset fetch attempts\": (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n      fetchRemoteSnapshotAttempts: 0\n    }),\n    \"increment submit attempts\": (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n      submitTransactionsAttempts: ({ context }) => context.submitTransactionsAttempts + 1\n    }),\n    \"reset submit attempts\": (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n      submitTransactionsAttempts: 0\n    }),\n    \"stage mutation\": (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n      stagedChanges: ({ event, context }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_4__.assertEvent)(event, \"mutate\"), [\n        ...context.stagedChanges,\n        { transaction: !1, mutations: event.mutations }\n      ])\n    }),\n    \"stash mutation\": (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n      stashedChanges: ({ event, context }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_4__.assertEvent)(event, \"mutate\"), [\n        ...context.stashedChanges,\n        { transaction: !1, mutations: event.mutations }\n      ])\n    }),\n    \"rebase local snapshot\": (0,xstate__WEBPACK_IMPORTED_MODULE_5__.b)(({ enqueue }) => {\n      enqueue.assign({\n        local: ({ event, context }) => {\n          (0,xstate__WEBPACK_IMPORTED_MODULE_4__.assertEvent)(event, \"mutate\");\n          const localDataset = /* @__PURE__ */ new Map();\n          context.local && localDataset.set(context.id, context.local);\n          const results = (0,_chunks_es_toTransactions_js__WEBPACK_IMPORTED_MODULE_7__.applyMutations)(event.mutations, localDataset);\n          return (0,_chunks_es_toTransactions_js__WEBPACK_IMPORTED_MODULE_7__.commit)(results, localDataset), localDataset.get(context.id);\n        }\n      }), enqueue.sendParent(\n        ({ context }) => ({\n          type: \"rebased.local\",\n          id: context.id,\n          document: context.local\n        })\n      );\n    }),\n    \"send pristine event to parent\": (0,xstate__WEBPACK_IMPORTED_MODULE_5__.s)(\n      ({ context }) => ({\n        type: \"pristine\",\n        id: context.id\n      })\n    ),\n    \"send sync event to parent\": (0,xstate__WEBPACK_IMPORTED_MODULE_5__.s)(\n      ({ context }) => ({\n        type: \"sync\",\n        id: context.id,\n        document: context.remote\n      })\n    ),\n    \"send mutation event to parent\": (0,xstate__WEBPACK_IMPORTED_MODULE_5__.s)(({ context, event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_4__.assertEvent)(event, \"mutation\"), {\n      type: \"mutation\",\n      id: context.id,\n      previousRev: event.previousRev,\n      resultRev: event.resultRev,\n      effects: event.effects\n    }))\n  },\n  actors: {\n    \"server-sent events\": (0,xstate__WEBPACK_IMPORTED_MODULE_8__.fromEventObservable)(\n      ({\n        input\n      }) => {\n        const { listener, id } = input;\n        return (0,rxjs__WEBPACK_IMPORTED_MODULE_9__.defer)(() => listener).pipe(\n          (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.filter)(\n            (event) => event.type === \"welcome\" || event.type === \"reconnect\" || event.type === \"mutation\" && event.documentId === id\n          ),\n          // This is necessary to avoid sync emitted events from `shareReplay` from happening before the actor is ready to receive them\n          (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.observeOn)(rxjs__WEBPACK_IMPORTED_MODULE_11__.asapScheduler)\n        );\n      }\n    ),\n    \"fetch remote snapshot\": (0,xstate__WEBPACK_IMPORTED_MODULE_8__.fromPromise)(\n      async ({\n        input,\n        signal\n      }) => {\n        const { client, id } = input;\n        return await client.getDocument(id, {\n          signal\n        }).catch((e) => {\n          if (!(e instanceof Error && e.name === \"AbortError\"))\n            throw e;\n        });\n      }\n    ),\n    \"submit mutations as transactions\": (0,xstate__WEBPACK_IMPORTED_MODULE_8__.fromPromise)(\n      async ({\n        input,\n        signal\n      }) => {\n        const { client, transactions } = input;\n        for (const transaction of transactions) {\n          if (signal.aborted) return;\n          await client.dataRequest(\"mutate\", (0,_chunks_es_encode_js__WEBPACK_IMPORTED_MODULE_12__.encodeTransaction)(transaction), {\n            visibility: \"async\",\n            returnDocuments: !1,\n            signal\n          }).catch((e) => {\n            if (!(e instanceof Error && e.name === \"AbortError\"))\n              throw e;\n          });\n        }\n      }\n    )\n  },\n  delays: {\n    // Exponential backoff delay function\n    fetchRemoteSnapshotTimeout: ({ context }) => Math.pow(2, context.fetchRemoteSnapshotAttempts) * 1e3,\n    submitTransactionsTimeout: ({ context }) => Math.pow(2, context.submitTransactionsAttempts) * 1e3\n  }\n}).createMachine({\n  /** @xstate-layout N4IgpgJg5mDOIC5QQPYGMCuBbMA7ALgLRYb4CG+KATgMQnn5gDaADALqKgAOKsAlvj4pcnEAA9EADhYAWAHQA2GSwUBmAKwBOaQEZJkhQBoQAT0Q6ATAF8rx1JhwFipCtTkQ+sNMNxg0jCBpvXF9-Vg4kEB5+QWFRCQQLFhY5PQB2dRU1SQsdGSVjMwRlHTkWNM00nR1VKryKmzt0bDwielcqOWDQwVwoGgB3MAAbbxxw0WiBIRFIhPUKuQ1NVU0tTU0WFdVCxAt1dTlNhX2WdRltGUk061sQexandspO7r9e-qo-H3eJyKnYrNQPNJJollpVutNttdghVCo5MoTgoMpo8jIkqpGvdmo42i4Xl0fv4+H0aGAqFRqH9uLxpnE5ogFrCLFd5CtNBYFJkdOpuaosXcHnjnAw3G9-AAxMh8YYYL5BYn4GlROmA+KIFEs1R6ORpZYWHIXGR6bHC1qijpyL4Sj6DEZjZjsSZqmYaxK1ORcvlc-ZqSoyNKwnRpGTyK4WDK5BQ6BQ5BRm3EW55uG1K0n9ClUqgqgFuxketJe7nIv2rUNB0x7LmSL2qGMsSySevcmSJhzJgnipWQOgEma510M4HmcqHZYyWqaOMqTQyWGh0osVSGiwC5uGyftx74sWvHuBNMhX7O-5DoHiPae72lvnlwPBydFlRVS7qPIl7cilP74-+SByMMKBkB4ZKoL4cikgAbigADWYByDA+AACJJgQg4xPmI7FHkZQrKGsjqKcCiaMG9YpJOxySBiCiyPoX6dnuRJ-gEgHAaBmaUm4XDDBQABm1BYIhYAoWhyqnrSmHDpeCAKCicjUbU6g6nkFichYsJrLWVxaPsk7KdICZCmJlqEraAFASBvbPAOEmqlJF4JJURbVDcy4Yvk1GVkUsabApMjKZGqjNg2kgMU8Xa-j0FnsQBXBUJ4vRgH2DBOhEkn0o5TLKV6y6WDG6lhkYVYIDoKzyBkeR8pUDZqOFu5WuZEBsVZzUeFQ+AmDQsAYAARlgAgYZl7o6I2tYLJINSSO+3JaMGlQpGkhFhryo2jW2xkdhFTFNS1EAAT1-UCHa4EIdBcEIYdA34AAKlQZC4LAZAksIsBDeqBbrdpym8iuByxlcLK5BYqQLBUZyTcFvL1aZ3YsTFrVyFdx0ZuSXGdDx-GCUjfXXXdD1PS9j3vVhMnrWCFRxtNaRLdcfIsiwuS5fkgZaOUlhpDDP7MdFzWWftzXI-gdrPGlLoOSNyiHFstRySisjcgzahyFoUYBbRsac5tO6w1F7wIwLONHfg0qyvKyVfPgVAmCT0kJGt41pJD02xgcpElUkcZ6rI+q5JcckbU0W0NWZB57QduMCKbcoKmIsCpXIZB8YwVAABRC-jj3PYCsA3XwOAoKQACUNDmttjVh-zEfG9H5u21lpVjSrTtTTNbsstUYJJAFWgA37XORTz+t8+xtcKpb1v1+6KJFopGQqRi6nBlstYcqNK5riusYDztlejzKMfJXHCdJynqd8SJaAABYAEpgFgKCMAAyrgZBcLAV+P3nBfF6XJnc7tfmY8xZnglgWGe-klILzUhYDSJVRpnCONNOcWxWRKBRDYO4uAUD7XgJEMuIdqDi2GgWQgOhgxMyRKyFc8IuQkXUDvK0HgvAHmIR9bCD4SoeSWCoLkoZpxrmXIw0OLEMxsNJgkSc418KhnrHyG4oZYTcPhMifhJx4SCiDjrABSpgHiLtogAUhwW77DRIGXkk55wexKCrJQsg1jBTnPsYRqZviiL6PohuORgyhhBhGKMsZYzxhcXrf8EBPHulUJOPCtRlABWIu7IoORVBIIhMpNYGJyghKHmEvaYjQEkOwhkxQrJtBES0JDOBPlkgKD1JYZSjZORyTXNkwBsVwkFPYTJVYS58JxPKbOYM0gUj7FjGcEMOpciaJxMHXWOTWJV2avFRKpIwARILJRGJBF4mZBIkDE0KtIxLSSDkDYGhWl70Ru1Tq6zsLURBkoLyWRmz8PmlUZmcY1zXDKdMghcy2mIyFh8W5ZN4RFmOFyKaZwiLeT2GVJcy5pBrguCiMK2tvyDwBYbIWejOkSMQBkeQORJq0RNCUDIDNondxuGpPQmRqIXPhiPECuKMpdMkbILZ-SEnLxyjqOJMZsj1jRTYIAA */\n  id: \"document-mutator\",\n  context: ({ input }) => ({\n    client: input.client.withConfig({ allowReconfigure: !1 }),\n    sharedListener: input.sharedListener,\n    id: input.id,\n    remote: void 0,\n    local: void 0,\n    mutationEvents: [],\n    stagedChanges: [],\n    stashedChanges: [],\n    error: void 0,\n    fetchRemoteSnapshotAttempts: 0,\n    submitTransactionsAttempts: 0,\n    cache: input.cache\n  }),\n  // Auto start the connection by default\n  entry: [\"connect to server-sent events\"],\n  on: {\n    mutate: {\n      actions: [\"rebase local snapshot\", \"stage mutation\"]\n    }\n  },\n  initial: \"disconnected\",\n  states: {\n    disconnected: {\n      on: {\n        connect: {\n          target: \"connecting\",\n          actions: [\"listen to server-sent events\"]\n        }\n      }\n    },\n    connecting: {\n      on: {\n        welcome: \"connected\",\n        reconnect: \"reconnecting\",\n        error: \"connectFailure\"\n      },\n      tags: [\"busy\"]\n    },\n    connectFailure: {\n      on: {\n        connect: {\n          target: \"connecting\",\n          actions: [\"listen to server-sent events\"]\n        }\n      },\n      entry: [\n        \"stop listening to server-sent events\",\n        \"assign error to context\"\n      ],\n      exit: [\"clear error from context\"],\n      tags: [\"error\"]\n    },\n    reconnecting: {\n      on: {\n        welcome: {\n          target: \"connected\"\n        },\n        error: {\n          target: \"connectFailure\"\n        }\n      },\n      tags: [\"busy\", \"error\"]\n    },\n    connected: {\n      on: {\n        mutation: {\n          actions: [\"buffer remote mutation events\"]\n        },\n        reconnect: \"reconnecting\"\n      },\n      entry: [\"clear error from context\"],\n      initial: \"loading\",\n      states: {\n        loading: {\n          invoke: {\n            src: \"fetch remote snapshot\",\n            id: \"getDocument\",\n            input: ({ context }) => ({\n              client: context.client,\n              id: context.id\n            }),\n            onError: {\n              target: \"loadFailure\"\n            },\n            onDone: {\n              target: \"loaded\",\n              actions: [\n                \"rebase fetched remote snapshot\",\n                \"reset fetch attempts\"\n              ]\n            }\n          },\n          tags: [\"busy\"]\n        },\n        loaded: {\n          entry: [\"send sync event to parent\"],\n          on: {\n            mutation: {\n              actions: [\"apply mendoza patch\", \"send mutation event to parent\"]\n            }\n          },\n          initial: \"pristine\",\n          states: {\n            pristine: {\n              on: {\n                mutate: {\n                  actions: [\"rebase local snapshot\", \"stage mutation\"],\n                  target: \"dirty\"\n                }\n              },\n              tags: [\"ready\"]\n            },\n            dirty: {\n              on: {\n                submit: \"submitting\"\n              },\n              tags: [\"ready\"]\n            },\n            submitting: {\n              on: {\n                mutate: {\n                  actions: [\"rebase local snapshot\", \"stash mutation\"]\n                }\n              },\n              invoke: {\n                src: \"submit mutations as transactions\",\n                id: \"submitTransactions\",\n                input: ({ context }) => {\n                  const remoteDataset = /* @__PURE__ */ new Map();\n                  return remoteDataset.set(context.id, context.remote), {\n                    client: context.client,\n                    transactions: (0,_chunks_es_toTransactions_js__WEBPACK_IMPORTED_MODULE_7__.toTransactions)(\n                      // Squashing DMP strings is the last thing we do before submitting\n                      (0,_chunks_es_toTransactions_js__WEBPACK_IMPORTED_MODULE_7__.squashDMPStrings)(\n                        remoteDataset,\n                        (0,_chunks_es_toTransactions_js__WEBPACK_IMPORTED_MODULE_7__.squashMutationGroups)(context.stagedChanges)\n                      )\n                    )\n                  };\n                },\n                onError: {\n                  target: \"submitFailure\"\n                },\n                onDone: {\n                  target: \"pristine\",\n                  actions: [\n                    \"restore stashed changes\",\n                    \"reset submit attempts\",\n                    \"send pristine event to parent\"\n                  ]\n                }\n              },\n              /**\n               * 'busy' means we should show a spinner, 'ready' means we can still accept mutations, they'll be applied optimistically right away, and queued for submissions after the current submission settles\n               */\n              tags: [\"busy\", \"ready\"]\n            },\n            submitFailure: {\n              exit: [\"clear error from context\"],\n              after: {\n                submitTransactionsTimeout: {\n                  actions: [\"increment submit attempts\"],\n                  target: \"submitting\"\n                }\n              },\n              on: {\n                retry: \"submitting\"\n              },\n              /**\n               * How can it be both `ready` and `error`? `ready` means it can receive mutations, optimistically apply them, and queue them for submission. `error` means it failed to submit previously applied mutations.\n               * It's completely fine to keep queueing up more mutations and applying them optimistically, while showing UI that notifies that mutations didn't submit, and show a count down until the next automatic retry.\n               */\n              tags: [\"error\", \"ready\"]\n            }\n          }\n        },\n        loadFailure: {\n          exit: [\"clear error from context\"],\n          after: {\n            fetchRemoteSnapshotTimeout: {\n              actions: [\"increment fetch attempts\"],\n              target: \"loading\"\n            }\n          },\n          on: {\n            retry: \"loading\"\n          },\n          tags: [\"error\"]\n        }\n      }\n    }\n  }\n});\nfunction applyMendozaPatch(document, patch, nextRevision) {\n  const next = (0,mendoza__WEBPACK_IMPORTED_MODULE_13__.applyPatch)(omitRev(document), patch);\n  return next ? Object.assign(next, { _rev: nextRevision }) : null;\n}\nfunction omitRev(document) {\n  if (!document)\n    return null;\n  const { _rev, ...doc } = document;\n  return doc;\n}\n\n//# sourceMappingURL=_unstable_machine.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_unstable_machine.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/index.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/index.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CompactEncoder: () => (/* binding */ index$1),\n/* harmony export */   CompactFormatter: () => (/* binding */ compact),\n/* harmony export */   SanityEncoder: () => (/* binding */ index),\n/* harmony export */   append: () => (/* binding */ append),\n/* harmony export */   assign: () => (/* binding */ assign),\n/* harmony export */   at: () => (/* binding */ at),\n/* harmony export */   autoKeys: () => (/* binding */ autoKeys),\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   createIfNotExists: () => (/* binding */ createIfNotExists),\n/* harmony export */   createOrReplace: () => (/* binding */ createOrReplace),\n/* harmony export */   dec: () => (/* binding */ dec),\n/* harmony export */   del: () => (/* binding */ del),\n/* harmony export */   delete_: () => (/* binding */ delete_),\n/* harmony export */   destroy: () => (/* binding */ destroy),\n/* harmony export */   diffMatchPatch: () => (/* binding */ diffMatchPatch),\n/* harmony export */   inc: () => (/* binding */ inc),\n/* harmony export */   insert: () => (/* binding */ insert),\n/* harmony export */   insertAfter: () => (/* binding */ insertAfter),\n/* harmony export */   insertBefore: () => (/* binding */ insertBefore),\n/* harmony export */   patch: () => (/* binding */ patch),\n/* harmony export */   prepend: () => (/* binding */ prepend),\n/* harmony export */   remove: () => (/* binding */ remove),\n/* harmony export */   replace: () => (/* binding */ replace),\n/* harmony export */   set: () => (/* binding */ set),\n/* harmony export */   setIfMissing: () => (/* binding */ setIfMissing),\n/* harmony export */   truncate: () => (/* binding */ truncate),\n/* harmony export */   unassign: () => (/* binding */ unassign),\n/* harmony export */   unset: () => (/* binding */ unset),\n/* harmony export */   upsert: () => (/* binding */ upsert)\n/* harmony export */ });\n/* harmony import */ var _chunks_es_parse_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_chunks-es/parse.js */ \"(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/parse.js\");\n/* harmony import */ var _chunks_es_stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_chunks-es/stringify.js */ \"(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/stringify.js\");\n/* harmony import */ var _chunks_es_decode_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_chunks-es/decode.js */ \"(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/decode.js\");\n/* harmony import */ var _chunks_es_encode_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./_chunks-es/encode.js */ \"(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/encode.js\");\n/* harmony import */ var _chunks_es_isObject_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./_chunks-es/isObject.js */ \"(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/isObject.js\");\n/* harmony import */ var _chunks_es_arrify_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./_chunks-es/arrify.js */ \"(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/arrify.js\");\n\n\n\n\n\n\nfunction decode(mutations) {\n  return mutations.map(decodeMutation);\n}\nfunction decodeMutation(mutation) {\n  const [type] = mutation;\n  if (type === \"delete\") {\n    const [, id] = mutation;\n    return { id, type };\n  } else if (type === \"create\") {\n    const [, document] = mutation;\n    return { type, document };\n  } else if (type === \"createIfNotExists\") {\n    const [, document] = mutation;\n    return { type, document };\n  } else if (type === \"createOrReplace\") {\n    const [, document] = mutation;\n    return { type, document };\n  } else if (type === \"patch\")\n    return decodePatchMutation(mutation);\n  throw new Error(`Unrecognized mutation: ${JSON.stringify(mutation)}`);\n}\nfunction decodePatchMutation(mutation) {\n  const [, type, id, serializedPath, , revisionId] = mutation, path = (0,_chunks_es_parse_js__WEBPACK_IMPORTED_MODULE_0__.parse)(serializedPath);\n  if (type === \"dec\" || type === \"inc\") {\n    const [, , , , [amount]] = mutation;\n    return {\n      type: \"patch\",\n      id,\n      patches: [{ path, op: { type: \"inc\", amount } }],\n      ...createOpts(revisionId)\n    };\n  }\n  if (type === \"unset\")\n    return {\n      type: \"patch\",\n      id,\n      patches: [{ path, op: { type: \"unset\" } }],\n      ...createOpts(revisionId)\n    };\n  if (type === \"insert\") {\n    const [, , , , [position, ref, items]] = mutation;\n    return {\n      type: \"patch\",\n      id,\n      patches: [\n        {\n          path,\n          op: {\n            type: \"insert\",\n            position,\n            items,\n            referenceItem: typeof ref == \"string\" ? { _key: ref } : ref\n          }\n        }\n      ],\n      ...createOpts(revisionId)\n    };\n  }\n  if (type === \"set\") {\n    const [, , , , [value]] = mutation;\n    return {\n      type: \"patch\",\n      id,\n      patches: [{ path, op: { type: \"set\", value } }],\n      ...createOpts(revisionId)\n    };\n  }\n  if (type === \"setIfMissing\") {\n    const [, , , , [value]] = mutation;\n    return {\n      type: \"patch\",\n      id,\n      patches: [{ path, op: { type: \"setIfMissing\", value } }],\n      ...createOpts(revisionId)\n    };\n  }\n  if (type === \"diffMatchPatch\") {\n    const [, , , , [value]] = mutation;\n    return {\n      type: \"patch\",\n      id,\n      patches: [{ path, op: { type: \"diffMatchPatch\", value } }],\n      ...createOpts(revisionId)\n    };\n  }\n  if (type === \"truncate\") {\n    const [, , , , [startIndex, endIndex]] = mutation;\n    return {\n      type: \"patch\",\n      id,\n      patches: [{ path, op: { type: \"truncate\", startIndex, endIndex } }],\n      ...createOpts(revisionId)\n    };\n  }\n  if (type === \"assign\") {\n    const [, , , , [value]] = mutation;\n    return {\n      type: \"patch\",\n      id,\n      patches: [{ path, op: { type: \"assign\", value } }],\n      ...createOpts(revisionId)\n    };\n  }\n  if (type === \"replace\") {\n    const [, , , , [ref, items]] = mutation;\n    return {\n      type: \"patch\",\n      id,\n      patches: [\n        { path, op: { type: \"replace\", items, referenceItem: decodeItemRef(ref) } }\n      ],\n      ...createOpts(revisionId)\n    };\n  }\n  if (type === \"upsert\") {\n    const [, , , , [position, referenceItem, items]] = mutation;\n    return {\n      type: \"patch\",\n      id,\n      patches: [\n        {\n          path,\n          op: {\n            type: \"upsert\",\n            items,\n            referenceItem: decodeItemRef(referenceItem),\n            position\n          }\n        }\n      ],\n      ...createOpts(revisionId)\n    };\n  }\n  throw new Error(`Invalid mutation type: ${type}`);\n}\nfunction decodeItemRef(ref) {\n  return typeof ref == \"string\" ? { _key: ref } : ref;\n}\nfunction createOpts(revisionId) {\n  return revisionId ? { options: { ifRevision: revisionId } } : null;\n}\nfunction encode(mutations) {\n  return mutations.flatMap((m) => encodeMutation$1(m));\n}\nfunction encodeItemRef$1(ref) {\n  return typeof ref == \"number\" ? ref : ref._key;\n}\nfunction encodeMutation$1(mutation) {\n  if (mutation.type === \"create\" || mutation.type === \"createIfNotExists\" || mutation.type === \"createOrReplace\")\n    return [[mutation.type, mutation.document]];\n  if (mutation.type === \"delete\")\n    return [[\"delete\", mutation.id]];\n  if (mutation.type === \"patch\")\n    return mutation.patches.map(\n      (patch2) => maybeAddRevision(\n        mutation.options?.ifRevision,\n        encodePatchMutation(mutation.id, patch2)\n      )\n    );\n  throw new Error(`Invalid mutation type: ${mutation.type}`);\n}\nfunction encodePatchMutation(id, patch2) {\n  const { op } = patch2, path = (0,_chunks_es_stringify_js__WEBPACK_IMPORTED_MODULE_1__.stringify)(patch2.path);\n  if (op.type === \"unset\")\n    return [\"patch\", \"unset\", id, path, []];\n  if (op.type === \"diffMatchPatch\")\n    return [\"patch\", \"diffMatchPatch\", id, path, [op.value]];\n  if (op.type === \"inc\" || op.type === \"dec\")\n    return [\"patch\", op.type, id, path, [op.amount]];\n  if (op.type === \"set\")\n    return [\"patch\", op.type, id, path, [op.value]];\n  if (op.type === \"setIfMissing\")\n    return [\"patch\", op.type, id, path, [op.value]];\n  if (op.type === \"insert\")\n    return [\n      \"patch\",\n      \"insert\",\n      id,\n      path,\n      [op.position, encodeItemRef$1(op.referenceItem), op.items]\n    ];\n  if (op.type === \"upsert\")\n    return [\n      \"patch\",\n      \"upsert\",\n      id,\n      path,\n      [op.position, encodeItemRef$1(op.referenceItem), op.items]\n    ];\n  if (op.type === \"assign\")\n    return [\"patch\", \"assign\", id, path, [op.value]];\n  if (op.type === \"unassign\")\n    return [\"patch\", \"assign\", id, path, [op.keys]];\n  if (op.type === \"replace\")\n    return [\n      \"patch\",\n      \"replace\",\n      id,\n      path,\n      [encodeItemRef$1(op.referenceItem), op.items]\n    ];\n  if (op.type === \"truncate\")\n    return [\"patch\", \"truncate\", id, path, [op.startIndex, op.endIndex]];\n  if (op.type === \"remove\")\n    return [\"patch\", \"remove\", id, path, [encodeItemRef$1(op.referenceItem)]];\n  throw new Error(`Invalid operation type: ${op.type}`);\n}\nfunction maybeAddRevision(revision, mut) {\n  const [mutType, patchType, id, path, args] = mut;\n  return revision ? [mutType, patchType, id, path, args, revision] : mut;\n}\nvar index$1 = /* @__PURE__ */ Object.freeze({\n  __proto__: null,\n  decode,\n  encode\n}), index = /* @__PURE__ */ Object.freeze({\n  __proto__: null,\n  decode: _chunks_es_decode_js__WEBPACK_IMPORTED_MODULE_2__.decode,\n  decodeAll: _chunks_es_decode_js__WEBPACK_IMPORTED_MODULE_2__.decodeAll,\n  encode: _chunks_es_encode_js__WEBPACK_IMPORTED_MODULE_3__.encode,\n  encodeAll: _chunks_es_encode_js__WEBPACK_IMPORTED_MODULE_3__.encodeAll,\n  encodeMutation: _chunks_es_encode_js__WEBPACK_IMPORTED_MODULE_3__.encodeMutation,\n  encodeTransaction: _chunks_es_encode_js__WEBPACK_IMPORTED_MODULE_3__.encodeTransaction\n});\nfunction format(mutations) {\n  return mutations.flatMap((m) => encodeMutation(m)).join(`\n`);\n}\nfunction encodeItemRef(ref) {\n  return typeof ref == \"number\" ? ref : ref._key;\n}\nfunction encodeMutation(mutation) {\n  if (mutation.type === \"create\" || mutation.type === \"createIfNotExists\" || mutation.type === \"createOrReplace\")\n    return [mutation.type, \": \", JSON.stringify(mutation.document)].join(\"\");\n  if (mutation.type === \"delete\")\n    return [\"delete \", mutation.id].join(\": \");\n  if (mutation.type === \"patch\") {\n    const ifRevision = mutation.options?.ifRevision;\n    return [\n      \"patch\",\n      \" \",\n      `id=${mutation.id}`,\n      ifRevision ? ` (if revision==${ifRevision})` : \"\",\n      `:\n`,\n      mutation.patches.map((nodePatch) => `  ${formatPatchMutation(nodePatch)}`).join(`\n`)\n    ].join(\"\");\n  }\n  throw new Error(`Invalid mutation type: ${mutation.type}`);\n}\nfunction formatPatchMutation(patch2) {\n  const { op } = patch2, path = (0,_chunks_es_stringify_js__WEBPACK_IMPORTED_MODULE_1__.stringify)(patch2.path);\n  if (op.type === \"unset\")\n    return [path, \"unset()\"].join(\": \");\n  if (op.type === \"diffMatchPatch\")\n    return [path, `diffMatchPatch(${op.value})`].join(\": \");\n  if (op.type === \"inc\" || op.type === \"dec\")\n    return [path, `${op.type}(${op.amount})`].join(\": \");\n  if (op.type === \"set\" || op.type === \"setIfMissing\")\n    return [path, `${op.type}(${JSON.stringify(op.value)})`].join(\": \");\n  if (op.type === \"assign\")\n    return [path, `${op.type}(${JSON.stringify(op.value)})`].join(\": \");\n  if (op.type === \"unassign\")\n    return [path, `${op.type}(${JSON.stringify(op.keys)})`].join(\": \");\n  if (op.type === \"insert\" || op.type === \"upsert\")\n    return [\n      path,\n      `${op.type}(${op.position}, ${encodeItemRef(\n        op.referenceItem\n      )}, ${JSON.stringify(op.items)})`\n    ].join(\": \");\n  if (op.type === \"replace\")\n    return [\n      path,\n      `replace(${encodeItemRef(op.referenceItem)}, ${JSON.stringify(\n        op.items\n      )})`\n    ].join(\": \");\n  if (op.type === \"truncate\")\n    return [path, `truncate(${op.startIndex}, ${op.endIndex}`].join(\": \");\n  if (op.type === \"remove\")\n    return [path, `remove(${encodeItemRef(op.referenceItem)})`].join(\": \");\n  throw new Error(`Invalid operation type: ${op.type}`);\n}\nvar compact = /* @__PURE__ */ Object.freeze({\n  __proto__: null,\n  format\n});\nconst set = (value) => ({ type: \"set\", value }), assign = (value) => ({\n  type: \"assign\",\n  value\n}), unassign = (keys) => ({\n  type: \"unassign\",\n  keys\n}), setIfMissing = (value) => ({\n  type: \"setIfMissing\",\n  value\n}), unset = () => ({ type: \"unset\" }), inc = (amount = 1) => ({\n  type: \"inc\",\n  amount\n}), dec = (amount = 1) => ({\n  type: \"dec\",\n  amount\n}), diffMatchPatch = (value) => ({\n  type: \"diffMatchPatch\",\n  value\n});\nfunction insert(items, position, indexOrReferenceItem) {\n  return {\n    type: \"insert\",\n    referenceItem: indexOrReferenceItem,\n    position,\n    items: (0,_chunks_es_arrify_js__WEBPACK_IMPORTED_MODULE_4__.arrify)(items)\n  };\n}\nfunction append(items) {\n  return insert(items, \"after\", -1);\n}\nfunction prepend(items) {\n  return insert(items, \"before\", 0);\n}\nfunction insertBefore(items, indexOrReferenceItem) {\n  return insert(items, \"before\", indexOrReferenceItem);\n}\nconst insertAfter = (items, indexOrReferenceItem) => insert(items, \"after\", indexOrReferenceItem);\nfunction truncate(startIndex, endIndex) {\n  return {\n    type: \"truncate\",\n    startIndex,\n    endIndex\n  };\n}\nfunction replace(items, referenceItem) {\n  return {\n    type: \"replace\",\n    referenceItem,\n    items: (0,_chunks_es_arrify_js__WEBPACK_IMPORTED_MODULE_4__.arrify)(items)\n  };\n}\nfunction remove(referenceItem) {\n  return {\n    type: \"remove\",\n    referenceItem\n  };\n}\nfunction upsert(items, position, referenceItem) {\n  return {\n    type: \"upsert\",\n    items: (0,_chunks_es_arrify_js__WEBPACK_IMPORTED_MODULE_4__.arrify)(items),\n    referenceItem,\n    position\n  };\n}\nfunction autoKeys(generateKey) {\n  const ensureKeys = createEnsureKeys(generateKey), insert$1 = (position, referenceItem, items) => insert(ensureKeys(items), position, referenceItem), upsert$1 = (items, position, referenceItem) => upsert(ensureKeys(items), position, referenceItem), replace$1 = (items, position, referenceItem) => replace(ensureKeys(items), referenceItem), insertBefore2 = (ref, items) => insert$1(\"before\", ref, items);\n  return { insert: insert$1, upsert: upsert$1, replace: replace$1, insertBefore: insertBefore2, prepend: (items) => insertBefore2(0, items), insertAfter: (ref, items) => insert$1(\"after\", ref, items), append: (items) => insert$1(\"after\", -1, items) };\n}\nfunction hasKey(item) {\n  return \"_key\" in item;\n}\nfunction createEnsureKeys(generateKey) {\n  return (array) => {\n    let didModify = !1;\n    const withKeys = array.map((item) => needsKey(item) ? (didModify = !0, { ...item, _key: generateKey(item) }) : item);\n    return didModify ? withKeys : array;\n  };\n}\nfunction needsKey(arrayItem) {\n  return (0,_chunks_es_isObject_js__WEBPACK_IMPORTED_MODULE_5__.isObject)(arrayItem) && !hasKey(arrayItem);\n}\nfunction create(document) {\n  return { type: \"create\", document };\n}\nfunction patch(id, patches, options) {\n  return {\n    type: \"patch\",\n    id,\n    patches: (0,_chunks_es_arrify_js__WEBPACK_IMPORTED_MODULE_4__.arrify)(patches),\n    ...options ? { options } : {}\n  };\n}\nfunction at(path, operation) {\n  return {\n    path: typeof path == \"string\" ? (0,_chunks_es_parse_js__WEBPACK_IMPORTED_MODULE_0__.parse)(path) : path,\n    op: operation\n  };\n}\nfunction createIfNotExists(document) {\n  return { type: \"createIfNotExists\", document };\n}\nfunction createOrReplace(document) {\n  return { type: \"createOrReplace\", document };\n}\nfunction delete_(id) {\n  return { type: \"delete\", id };\n}\nconst del = delete_, destroy = delete_;\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/index.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@sanity/client/dist/_chunks-es/stegaClean.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@sanity/client/dist/_chunks-es/stegaClean.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   C: () => (/* binding */ C),\n/* harmony export */   stegaClean: () => (/* binding */ stegaClean),\n/* harmony export */   vercelStegaCleanAll: () => (/* binding */ vercelStegaCleanAll)\n/* harmony export */ });\nvar s = { 0: 8203, 1: 8204, 2: 8205, 3: 8290, 4: 8291, 5: 8288, 6: 65279, 7: 8289, 8: 119155, 9: 119156, a: 119157, b: 119158, c: 119159, d: 119160, e: 119161, f: 119162 }, c = { 0: 8203, 1: 8204, 2: 8205, 3: 65279 }, u = new Array(4).fill(String.fromCodePoint(c[0])).join(\"\");\nfunction E(t) {\n  let e = JSON.stringify(t);\n  return `${u}${Array.from(e).map((r) => {\n    let n = r.charCodeAt(0);\n    if (n > 255) throw new Error(`Only ASCII edit info can be encoded. Error attempting to encode ${e} on character ${r} (${n})`);\n    return Array.from(n.toString(4).padStart(4, \"0\")).map((o) => String.fromCodePoint(c[o])).join(\"\");\n  }).join(\"\")}`;\n}\nfunction I(t) {\n  return !Number.isNaN(Number(t)) || /[a-z]/i.test(t) && !/\\d+(?:[-:\\/]\\d+){2}(?:T\\d+(?:[-:\\/]\\d+){1,2}(\\.\\d+)?Z?)?/.test(t) ? !1 : !!Date.parse(t);\n}\nfunction T(t) {\n  try {\n    new URL(t, t.startsWith(\"/\") ? \"https://acme.com\" : void 0);\n  } catch {\n    return !1;\n  }\n  return !0;\n}\nfunction C(t, e, r = \"auto\") {\n  return r === !0 || r === \"auto\" && (I(t) || T(t)) ? t : `${t}${E(e)}`;\n}\nObject.fromEntries(Object.entries(c).map((t) => t.reverse()));\nObject.fromEntries(Object.entries(s).map((t) => t.reverse()));\nvar S = `${Object.values(s).map((t) => `\\\\u{${t.toString(16)}}`).join(\"\")}`, f = new RegExp(`[${S}]{4,}`, \"gu\");\nfunction _(t) {\n  var e;\n  return { cleaned: t.replace(f, \"\"), encoded: ((e = t.match(f)) == null ? void 0 : e[0]) || \"\" };\n}\nfunction O(t) {\n  return t && JSON.parse(_(JSON.stringify(t)).cleaned);\n}\nfunction stegaClean(result) {\n  return O(result);\n}\nconst vercelStegaCleanAll = stegaClean;\n\n//# sourceMappingURL=stegaClean.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac2FuaXR5L2NsaWVudC9kaXN0L19jaHVua3MtZXMvc3RlZ2FDbGVhbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxVQUFVLGlLQUFpSyxRQUFRLHFDQUFxQztBQUN4TjtBQUNBO0FBQ0EsWUFBWSxFQUFFLEVBQUU7QUFDaEI7QUFDQSxvR0FBb0csR0FBRyxlQUFlLEdBQUcsR0FBRyxFQUFFO0FBQzlIO0FBQ0EsR0FBRyxXQUFXO0FBQ2Q7QUFDQTtBQUNBLDRFQUE0RSxFQUFFLHFCQUFxQixJQUFJO0FBQ3ZHO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2REFBNkQsRUFBRSxFQUFFLEtBQUs7QUFDdEU7QUFDQTtBQUNBO0FBQ0EsV0FBVyxpQ0FBaUMsRUFBRSxnQkFBZ0IsWUFBWSxzQkFBc0IsRUFBRSxFQUFFLEdBQUc7QUFDdkc7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBS0U7QUFDRiIsInNvdXJjZXMiOlsiL21lZGlhL2F3YWlzL05ldyBWb2x1bWUvR292ZXJOT3IgSG91c2UgL2hhY2thdGhvbi0zL3NlY29uZFRpbWVzL2hhY2thdGhvbi1iYW5kYWdlL25vZGVfbW9kdWxlcy9Ac2FuaXR5L2NsaWVudC9kaXN0L19jaHVua3MtZXMvc3RlZ2FDbGVhbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcyA9IHsgMDogODIwMywgMTogODIwNCwgMjogODIwNSwgMzogODI5MCwgNDogODI5MSwgNTogODI4OCwgNjogNjUyNzksIDc6IDgyODksIDg6IDExOTE1NSwgOTogMTE5MTU2LCBhOiAxMTkxNTcsIGI6IDExOTE1OCwgYzogMTE5MTU5LCBkOiAxMTkxNjAsIGU6IDExOTE2MSwgZjogMTE5MTYyIH0sIGMgPSB7IDA6IDgyMDMsIDE6IDgyMDQsIDI6IDgyMDUsIDM6IDY1Mjc5IH0sIHUgPSBuZXcgQXJyYXkoNCkuZmlsbChTdHJpbmcuZnJvbUNvZGVQb2ludChjWzBdKSkuam9pbihcIlwiKTtcbmZ1bmN0aW9uIEUodCkge1xuICBsZXQgZSA9IEpTT04uc3RyaW5naWZ5KHQpO1xuICByZXR1cm4gYCR7dX0ke0FycmF5LmZyb20oZSkubWFwKChyKSA9PiB7XG4gICAgbGV0IG4gPSByLmNoYXJDb2RlQXQoMCk7XG4gICAgaWYgKG4gPiAyNTUpIHRocm93IG5ldyBFcnJvcihgT25seSBBU0NJSSBlZGl0IGluZm8gY2FuIGJlIGVuY29kZWQuIEVycm9yIGF0dGVtcHRpbmcgdG8gZW5jb2RlICR7ZX0gb24gY2hhcmFjdGVyICR7cn0gKCR7bn0pYCk7XG4gICAgcmV0dXJuIEFycmF5LmZyb20obi50b1N0cmluZyg0KS5wYWRTdGFydCg0LCBcIjBcIikpLm1hcCgobykgPT4gU3RyaW5nLmZyb21Db2RlUG9pbnQoY1tvXSkpLmpvaW4oXCJcIik7XG4gIH0pLmpvaW4oXCJcIil9YDtcbn1cbmZ1bmN0aW9uIEkodCkge1xuICByZXR1cm4gIU51bWJlci5pc05hTihOdW1iZXIodCkpIHx8IC9bYS16XS9pLnRlc3QodCkgJiYgIS9cXGQrKD86Wy06XFwvXVxcZCspezJ9KD86VFxcZCsoPzpbLTpcXC9dXFxkKyl7MSwyfShcXC5cXGQrKT9aPyk/Ly50ZXN0KHQpID8gITEgOiAhIURhdGUucGFyc2UodCk7XG59XG5mdW5jdGlvbiBUKHQpIHtcbiAgdHJ5IHtcbiAgICBuZXcgVVJMKHQsIHQuc3RhcnRzV2l0aChcIi9cIikgPyBcImh0dHBzOi8vYWNtZS5jb21cIiA6IHZvaWQgMCk7XG4gIH0gY2F0Y2gge1xuICAgIHJldHVybiAhMTtcbiAgfVxuICByZXR1cm4gITA7XG59XG5mdW5jdGlvbiBDKHQsIGUsIHIgPSBcImF1dG9cIikge1xuICByZXR1cm4gciA9PT0gITAgfHwgciA9PT0gXCJhdXRvXCIgJiYgKEkodCkgfHwgVCh0KSkgPyB0IDogYCR7dH0ke0UoZSl9YDtcbn1cbk9iamVjdC5mcm9tRW50cmllcyhPYmplY3QuZW50cmllcyhjKS5tYXAoKHQpID0+IHQucmV2ZXJzZSgpKSk7XG5PYmplY3QuZnJvbUVudHJpZXMoT2JqZWN0LmVudHJpZXMocykubWFwKCh0KSA9PiB0LnJldmVyc2UoKSkpO1xudmFyIFMgPSBgJHtPYmplY3QudmFsdWVzKHMpLm1hcCgodCkgPT4gYFxcXFx1eyR7dC50b1N0cmluZygxNil9fWApLmpvaW4oXCJcIil9YCwgZiA9IG5ldyBSZWdFeHAoYFske1N9XXs0LH1gLCBcImd1XCIpO1xuZnVuY3Rpb24gXyh0KSB7XG4gIHZhciBlO1xuICByZXR1cm4geyBjbGVhbmVkOiB0LnJlcGxhY2UoZiwgXCJcIiksIGVuY29kZWQ6ICgoZSA9IHQubWF0Y2goZikpID09IG51bGwgPyB2b2lkIDAgOiBlWzBdKSB8fCBcIlwiIH07XG59XG5mdW5jdGlvbiBPKHQpIHtcbiAgcmV0dXJuIHQgJiYgSlNPTi5wYXJzZShfKEpTT04uc3RyaW5naWZ5KHQpKS5jbGVhbmVkKTtcbn1cbmZ1bmN0aW9uIHN0ZWdhQ2xlYW4ocmVzdWx0KSB7XG4gIHJldHVybiBPKHJlc3VsdCk7XG59XG5jb25zdCB2ZXJjZWxTdGVnYUNsZWFuQWxsID0gc3RlZ2FDbGVhbjtcbmV4cG9ydCB7XG4gIEMsXG4gIHN0ZWdhQ2xlYW4sXG4gIHZlcmNlbFN0ZWdhQ2xlYW5BbGxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdGVnYUNsZWFuLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@sanity/client/dist/_chunks-es/stegaClean.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sanity/client/dist/_chunks-es/stegaClean.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@sanity/client/dist/_chunks-es/stegaClean.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   C: () => (/* binding */ C),\n/* harmony export */   stegaClean: () => (/* binding */ stegaClean),\n/* harmony export */   vercelStegaCleanAll: () => (/* binding */ vercelStegaCleanAll)\n/* harmony export */ });\nvar s = { 0: 8203, 1: 8204, 2: 8205, 3: 8290, 4: 8291, 5: 8288, 6: 65279, 7: 8289, 8: 119155, 9: 119156, a: 119157, b: 119158, c: 119159, d: 119160, e: 119161, f: 119162 }, c = { 0: 8203, 1: 8204, 2: 8205, 3: 65279 }, u = new Array(4).fill(String.fromCodePoint(c[0])).join(\"\");\nfunction E(t) {\n  let e = JSON.stringify(t);\n  return `${u}${Array.from(e).map((r) => {\n    let n = r.charCodeAt(0);\n    if (n > 255) throw new Error(`Only ASCII edit info can be encoded. Error attempting to encode ${e} on character ${r} (${n})`);\n    return Array.from(n.toString(4).padStart(4, \"0\")).map((o) => String.fromCodePoint(c[o])).join(\"\");\n  }).join(\"\")}`;\n}\nfunction I(t) {\n  return !Number.isNaN(Number(t)) || /[a-z]/i.test(t) && !/\\d+(?:[-:\\/]\\d+){2}(?:T\\d+(?:[-:\\/]\\d+){1,2}(\\.\\d+)?Z?)?/.test(t) ? !1 : !!Date.parse(t);\n}\nfunction T(t) {\n  try {\n    new URL(t, t.startsWith(\"/\") ? \"https://acme.com\" : void 0);\n  } catch {\n    return !1;\n  }\n  return !0;\n}\nfunction C(t, e, r = \"auto\") {\n  return r === !0 || r === \"auto\" && (I(t) || T(t)) ? t : `${t}${E(e)}`;\n}\nObject.fromEntries(Object.entries(c).map((t) => t.reverse()));\nObject.fromEntries(Object.entries(s).map((t) => t.reverse()));\nvar S = `${Object.values(s).map((t) => `\\\\u{${t.toString(16)}}`).join(\"\")}`, f = new RegExp(`[${S}]{4,}`, \"gu\");\nfunction _(t) {\n  var e;\n  return { cleaned: t.replace(f, \"\"), encoded: ((e = t.match(f)) == null ? void 0 : e[0]) || \"\" };\n}\nfunction O(t) {\n  return t && JSON.parse(_(JSON.stringify(t)).cleaned);\n}\nfunction stegaClean(result) {\n  return O(result);\n}\nconst vercelStegaCleanAll = stegaClean;\n\n//# sourceMappingURL=stegaClean.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9jbGllbnQvZGlzdC9fY2h1bmtzLWVzL3N0ZWdhQ2xlYW4uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsVUFBVSxpS0FBaUssUUFBUSxxQ0FBcUM7QUFDeE47QUFDQTtBQUNBLFlBQVksRUFBRSxFQUFFO0FBQ2hCO0FBQ0Esb0dBQW9HLEdBQUcsZUFBZSxHQUFHLEdBQUcsRUFBRTtBQUM5SDtBQUNBLEdBQUcsV0FBVztBQUNkO0FBQ0E7QUFDQSw0RUFBNEUsRUFBRSxxQkFBcUIsSUFBSTtBQUN2RztBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkRBQTZELEVBQUUsRUFBRSxLQUFLO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBLFdBQVcsaUNBQWlDLEVBQUUsZ0JBQWdCLFlBQVksc0JBQXNCLEVBQUUsRUFBRSxHQUFHO0FBQ3ZHO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUtFO0FBQ0YiLCJzb3VyY2VzIjpbIi9tZWRpYS9hd2Fpcy9OZXcgVm9sdW1lL0dvdmVyTk9yIEhvdXNlIC9oYWNrYXRob24tMy9zZWNvbmRUaW1lcy9oYWNrYXRob24tYmFuZGFnZS9ub2RlX21vZHVsZXMvQHNhbml0eS9jbGllbnQvZGlzdC9fY2h1bmtzLWVzL3N0ZWdhQ2xlYW4uanMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHMgPSB7IDA6IDgyMDMsIDE6IDgyMDQsIDI6IDgyMDUsIDM6IDgyOTAsIDQ6IDgyOTEsIDU6IDgyODgsIDY6IDY1Mjc5LCA3OiA4Mjg5LCA4OiAxMTkxNTUsIDk6IDExOTE1NiwgYTogMTE5MTU3LCBiOiAxMTkxNTgsIGM6IDExOTE1OSwgZDogMTE5MTYwLCBlOiAxMTkxNjEsIGY6IDExOTE2MiB9LCBjID0geyAwOiA4MjAzLCAxOiA4MjA0LCAyOiA4MjA1LCAzOiA2NTI3OSB9LCB1ID0gbmV3IEFycmF5KDQpLmZpbGwoU3RyaW5nLmZyb21Db2RlUG9pbnQoY1swXSkpLmpvaW4oXCJcIik7XG5mdW5jdGlvbiBFKHQpIHtcbiAgbGV0IGUgPSBKU09OLnN0cmluZ2lmeSh0KTtcbiAgcmV0dXJuIGAke3V9JHtBcnJheS5mcm9tKGUpLm1hcCgocikgPT4ge1xuICAgIGxldCBuID0gci5jaGFyQ29kZUF0KDApO1xuICAgIGlmIChuID4gMjU1KSB0aHJvdyBuZXcgRXJyb3IoYE9ubHkgQVNDSUkgZWRpdCBpbmZvIGNhbiBiZSBlbmNvZGVkLiBFcnJvciBhdHRlbXB0aW5nIHRvIGVuY29kZSAke2V9IG9uIGNoYXJhY3RlciAke3J9ICgke259KWApO1xuICAgIHJldHVybiBBcnJheS5mcm9tKG4udG9TdHJpbmcoNCkucGFkU3RhcnQoNCwgXCIwXCIpKS5tYXAoKG8pID0+IFN0cmluZy5mcm9tQ29kZVBvaW50KGNbb10pKS5qb2luKFwiXCIpO1xuICB9KS5qb2luKFwiXCIpfWA7XG59XG5mdW5jdGlvbiBJKHQpIHtcbiAgcmV0dXJuICFOdW1iZXIuaXNOYU4oTnVtYmVyKHQpKSB8fCAvW2Etel0vaS50ZXN0KHQpICYmICEvXFxkKyg/OlstOlxcL11cXGQrKXsyfSg/OlRcXGQrKD86Wy06XFwvXVxcZCspezEsMn0oXFwuXFxkKyk/Wj8pPy8udGVzdCh0KSA/ICExIDogISFEYXRlLnBhcnNlKHQpO1xufVxuZnVuY3Rpb24gVCh0KSB7XG4gIHRyeSB7XG4gICAgbmV3IFVSTCh0LCB0LnN0YXJ0c1dpdGgoXCIvXCIpID8gXCJodHRwczovL2FjbWUuY29tXCIgOiB2b2lkIDApO1xuICB9IGNhdGNoIHtcbiAgICByZXR1cm4gITE7XG4gIH1cbiAgcmV0dXJuICEwO1xufVxuZnVuY3Rpb24gQyh0LCBlLCByID0gXCJhdXRvXCIpIHtcbiAgcmV0dXJuIHIgPT09ICEwIHx8IHIgPT09IFwiYXV0b1wiICYmIChJKHQpIHx8IFQodCkpID8gdCA6IGAke3R9JHtFKGUpfWA7XG59XG5PYmplY3QuZnJvbUVudHJpZXMoT2JqZWN0LmVudHJpZXMoYykubWFwKCh0KSA9PiB0LnJldmVyc2UoKSkpO1xuT2JqZWN0LmZyb21FbnRyaWVzKE9iamVjdC5lbnRyaWVzKHMpLm1hcCgodCkgPT4gdC5yZXZlcnNlKCkpKTtcbnZhciBTID0gYCR7T2JqZWN0LnZhbHVlcyhzKS5tYXAoKHQpID0+IGBcXFxcdXske3QudG9TdHJpbmcoMTYpfX1gKS5qb2luKFwiXCIpfWAsIGYgPSBuZXcgUmVnRXhwKGBbJHtTfV17NCx9YCwgXCJndVwiKTtcbmZ1bmN0aW9uIF8odCkge1xuICB2YXIgZTtcbiAgcmV0dXJuIHsgY2xlYW5lZDogdC5yZXBsYWNlKGYsIFwiXCIpLCBlbmNvZGVkOiAoKGUgPSB0Lm1hdGNoKGYpKSA9PSBudWxsID8gdm9pZCAwIDogZVswXSkgfHwgXCJcIiB9O1xufVxuZnVuY3Rpb24gTyh0KSB7XG4gIHJldHVybiB0ICYmIEpTT04ucGFyc2UoXyhKU09OLnN0cmluZ2lmeSh0KSkuY2xlYW5lZCk7XG59XG5mdW5jdGlvbiBzdGVnYUNsZWFuKHJlc3VsdCkge1xuICByZXR1cm4gTyhyZXN1bHQpO1xufVxuY29uc3QgdmVyY2VsU3RlZ2FDbGVhbkFsbCA9IHN0ZWdhQ2xlYW47XG5leHBvcnQge1xuICBDLFxuICBzdGVnYUNsZWFuLFxuICB2ZXJjZWxTdGVnYUNsZWFuQWxsXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3RlZ2FDbGVhbi5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sanity/client/dist/_chunks-es/stegaClean.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@sanity/client/dist/_chunks-es/stegaEncodeSourceMap.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@sanity/client/dist/_chunks-es/stegaEncodeSourceMap.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodeIntoResult: () => (/* binding */ encodeIntoResult),\n/* harmony export */   stegaEncodeSourceMap: () => (/* binding */ stegaEncodeSourceMap),\n/* harmony export */   stegaEncodeSourceMap$1: () => (/* binding */ stegaEncodeSourceMap$1)\n/* harmony export */ });\n/* harmony import */ var _stegaClean_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./stegaClean.js */ \"(action-browser)/./node_modules/@sanity/client/dist/_chunks-es/stegaClean.js\");\n\nconst reKeySegment = /_key\\s*==\\s*['\"](.*)['\"]/;\nfunction isKeySegment(segment) {\n  return typeof segment == \"string\" ? reKeySegment.test(segment.trim()) : typeof segment == \"object\" && \"_key\" in segment;\n}\nfunction toString(path) {\n  if (!Array.isArray(path))\n    throw new Error(\"Path is not an array\");\n  return path.reduce((target, segment, i) => {\n    const segmentType = typeof segment;\n    if (segmentType === \"number\")\n      return `${target}[${segment}]`;\n    if (segmentType === \"string\")\n      return `${target}${i === 0 ? \"\" : \".\"}${segment}`;\n    if (isKeySegment(segment) && segment._key)\n      return `${target}[_key==\"${segment._key}\"]`;\n    if (Array.isArray(segment)) {\n      const [from, to] = segment;\n      return `${target}[${from}:${to}]`;\n    }\n    throw new Error(`Unsupported path segment \\`${JSON.stringify(segment)}\\``);\n  }, \"\");\n}\nconst ESCAPE = {\n  \"\\f\": \"\\\\f\",\n  \"\\n\": \"\\\\n\",\n  \"\\r\": \"\\\\r\",\n  \"\t\": \"\\\\t\",\n  \"'\": \"\\\\'\",\n  \"\\\\\": \"\\\\\\\\\"\n}, UNESCAPE = {\n  \"\\\\f\": \"\\f\",\n  \"\\\\n\": `\n`,\n  \"\\\\r\": \"\\r\",\n  \"\\\\t\": \"\t\",\n  \"\\\\'\": \"'\",\n  \"\\\\\\\\\": \"\\\\\"\n};\nfunction jsonPath(path) {\n  return `$${path.map((segment) => typeof segment == \"string\" ? `['${segment.replace(/[\\f\\n\\r\\t'\\\\]/g, (match) => ESCAPE[match])}']` : typeof segment == \"number\" ? `[${segment}]` : segment._key !== \"\" ? `[?(@._key=='${segment._key.replace(/['\\\\]/g, (match) => ESCAPE[match])}')]` : `[${segment._index}]`).join(\"\")}`;\n}\nfunction parseJsonPath(path) {\n  const parsed = [], parseRe = /\\['(.*?)'\\]|\\[(\\d+)\\]|\\[\\?\\(@\\._key=='(.*?)'\\)\\]/g;\n  let match;\n  for (; (match = parseRe.exec(path)) !== null; ) {\n    if (match[1] !== void 0) {\n      const key = match[1].replace(/\\\\(\\\\|f|n|r|t|')/g, (m) => UNESCAPE[m]);\n      parsed.push(key);\n      continue;\n    }\n    if (match[2] !== void 0) {\n      parsed.push(parseInt(match[2], 10));\n      continue;\n    }\n    if (match[3] !== void 0) {\n      const _key = match[3].replace(/\\\\(\\\\')/g, (m) => UNESCAPE[m]);\n      parsed.push({\n        _key,\n        _index: -1\n      });\n      continue;\n    }\n  }\n  return parsed;\n}\nfunction jsonPathToStudioPath(path) {\n  return path.map((segment) => {\n    if (typeof segment == \"string\" || typeof segment == \"number\")\n      return segment;\n    if (segment._key !== \"\")\n      return { _key: segment._key };\n    if (segment._index !== -1)\n      return segment._index;\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`);\n  });\n}\nfunction jsonPathToMappingPath(path) {\n  return path.map((segment) => {\n    if (typeof segment == \"string\" || typeof segment == \"number\")\n      return segment;\n    if (segment._index !== -1)\n      return segment._index;\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`);\n  });\n}\nfunction resolveMapping(resultPath, csm) {\n  if (!csm?.mappings)\n    return;\n  const resultMappingPath = jsonPath(jsonPathToMappingPath(resultPath));\n  if (csm.mappings[resultMappingPath] !== void 0)\n    return {\n      mapping: csm.mappings[resultMappingPath],\n      matchedPath: resultMappingPath,\n      pathSuffix: \"\"\n    };\n  const mappings = Object.entries(csm.mappings).filter(([key]) => resultMappingPath.startsWith(key)).sort(([key1], [key2]) => key2.length - key1.length);\n  if (mappings.length == 0)\n    return;\n  const [matchedPath, mapping] = mappings[0], pathSuffix = resultMappingPath.substring(matchedPath.length);\n  return { mapping, matchedPath, pathSuffix };\n}\nfunction isArray(value) {\n  return value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n  return typeof value == \"object\" && value !== null;\n}\nfunction walkMap(value, mappingFn, path = []) {\n  if (isArray(value))\n    return value.map((v, idx) => {\n      if (isRecord(v)) {\n        const _key = v._key;\n        if (typeof _key == \"string\")\n          return walkMap(v, mappingFn, path.concat({ _key, _index: idx }));\n      }\n      return walkMap(v, mappingFn, path.concat(idx));\n    });\n  if (isRecord(value)) {\n    if (value._type === \"block\" || value._type === \"span\") {\n      const result = { ...value };\n      return value._type === \"block\" ? result.children = walkMap(value.children, mappingFn, path.concat(\"children\")) : value._type === \"span\" && (result.text = walkMap(value.text, mappingFn, path.concat(\"text\"))), result;\n    }\n    return Object.fromEntries(\n      Object.entries(value).map(([k, v]) => [k, walkMap(v, mappingFn, path.concat(k))])\n    );\n  }\n  return mappingFn(value, path);\n}\nfunction encodeIntoResult(result, csm, encoder) {\n  return walkMap(result, (value, path) => {\n    if (typeof value != \"string\")\n      return value;\n    const resolveMappingResult = resolveMapping(path, csm);\n    if (!resolveMappingResult)\n      return value;\n    const { mapping, matchedPath } = resolveMappingResult;\n    if (mapping.type !== \"value\" || mapping.source.type !== \"documentValue\")\n      return value;\n    const sourceDocument = csm.documents[mapping.source.document], sourcePath = csm.paths[mapping.source.path], matchPathSegments = parseJsonPath(matchedPath), fullSourceSegments = parseJsonPath(sourcePath).concat(path.slice(matchPathSegments.length));\n    return encoder({\n      sourcePath: fullSourceSegments,\n      sourceDocument,\n      resultPath: path,\n      value\n    });\n  });\n}\nconst DRAFTS_PREFIX = \"drafts.\";\nfunction getPublishedId(id) {\n  return id.startsWith(DRAFTS_PREFIX) ? id.slice(DRAFTS_PREFIX.length) : id;\n}\nfunction createEditUrl(options) {\n  const {\n    baseUrl,\n    workspace: _workspace = \"default\",\n    tool: _tool = \"default\",\n    id: _id,\n    type,\n    path,\n    projectId,\n    dataset\n  } = options;\n  if (!baseUrl)\n    throw new Error(\"baseUrl is required\");\n  if (!path)\n    throw new Error(\"path is required\");\n  if (!_id)\n    throw new Error(\"id is required\");\n  if (baseUrl !== \"/\" && baseUrl.endsWith(\"/\"))\n    throw new Error(\"baseUrl must not end with a slash\");\n  const workspace = _workspace === \"default\" ? void 0 : _workspace, tool = _tool === \"default\" ? void 0 : _tool, id = getPublishedId(_id), stringifiedPath = Array.isArray(path) ? toString(jsonPathToStudioPath(path)) : path, searchParams = new URLSearchParams({\n    baseUrl,\n    id,\n    type,\n    path: stringifiedPath\n  });\n  workspace && searchParams.set(\"workspace\", workspace), tool && searchParams.set(\"tool\", tool), projectId && searchParams.set(\"projectId\", projectId), dataset && searchParams.set(\"dataset\", dataset), _id.startsWith(DRAFTS_PREFIX) && searchParams.set(\"isDraft\", \"\");\n  const segments = [baseUrl === \"/\" ? \"\" : baseUrl];\n  workspace && segments.push(workspace);\n  const routerParams = [\n    \"mode=presentation\",\n    `id=${id}`,\n    `type=${type}`,\n    `path=${encodeURIComponent(stringifiedPath)}`\n  ];\n  return tool && routerParams.push(`tool=${tool}`), segments.push(\"intent\", \"edit\", `${routerParams.join(\";\")}?${searchParams}`), segments.join(\"/\");\n}\nfunction resolveStudioBaseRoute(studioUrl) {\n  let baseUrl = typeof studioUrl == \"string\" ? studioUrl : studioUrl.baseUrl;\n  return baseUrl !== \"/\" && (baseUrl = baseUrl.replace(/\\/$/, \"\")), typeof studioUrl == \"string\" ? { baseUrl } : { ...studioUrl, baseUrl };\n}\nconst filterDefault = ({ sourcePath, resultPath, value }) => {\n  if (isValidDate(value) || isValidURL(value))\n    return !1;\n  const endPath = sourcePath.at(-1);\n  return !(sourcePath.at(-2) === \"slug\" && endPath === \"current\" || typeof endPath == \"string\" && (endPath.startsWith(\"_\") || endPath.endsWith(\"Id\")) || sourcePath.some(\n    (path) => path === \"meta\" || path === \"metadata\" || path === \"openGraph\" || path === \"seo\"\n  ) || hasTypeLike(sourcePath) || hasTypeLike(resultPath) || typeof endPath == \"string\" && denylist.has(endPath));\n}, denylist = /* @__PURE__ */ new Set([\n  \"color\",\n  \"colour\",\n  \"currency\",\n  \"email\",\n  \"format\",\n  \"gid\",\n  \"hex\",\n  \"href\",\n  \"hsl\",\n  \"hsla\",\n  \"icon\",\n  \"id\",\n  \"index\",\n  \"key\",\n  \"language\",\n  \"layout\",\n  \"link\",\n  \"linkAction\",\n  \"locale\",\n  \"lqip\",\n  \"page\",\n  \"path\",\n  \"ref\",\n  \"rgb\",\n  \"rgba\",\n  \"route\",\n  \"secret\",\n  \"slug\",\n  \"status\",\n  \"tag\",\n  \"template\",\n  \"theme\",\n  \"type\",\n  \"textTheme\",\n  \"unit\",\n  \"url\",\n  \"username\",\n  \"variant\",\n  \"website\"\n]);\nfunction isValidDate(dateString) {\n  return /^\\d{4}-\\d{2}-\\d{2}/.test(dateString) ? !!Date.parse(dateString) : !1;\n}\nfunction isValidURL(url) {\n  try {\n    new URL(url, url.startsWith(\"/\") ? \"https://acme.com\" : void 0);\n  } catch {\n    return !1;\n  }\n  return !0;\n}\nfunction hasTypeLike(path) {\n  return path.some((segment) => typeof segment == \"string\" && segment.match(/type/i) !== null);\n}\nconst TRUNCATE_LENGTH = 20;\nfunction stegaEncodeSourceMap(result, resultSourceMap, config) {\n  const { filter, logger, enabled } = config;\n  if (!enabled) {\n    const msg = \"config.enabled must be true, don't call this function otherwise\";\n    throw logger?.error?.(`[@sanity/client]: ${msg}`, { result, resultSourceMap, config }), new TypeError(msg);\n  }\n  if (!resultSourceMap)\n    return logger?.error?.(\"[@sanity/client]: Missing Content Source Map from response body\", {\n      result,\n      resultSourceMap,\n      config\n    }), result;\n  if (!config.studioUrl) {\n    const msg = \"config.studioUrl must be defined\";\n    throw logger?.error?.(`[@sanity/client]: ${msg}`, { result, resultSourceMap, config }), new TypeError(msg);\n  }\n  const report = {\n    encoded: [],\n    skipped: []\n  }, resultWithStega = encodeIntoResult(\n    result,\n    resultSourceMap,\n    ({ sourcePath, sourceDocument, resultPath, value }) => {\n      if ((typeof filter == \"function\" ? filter({ sourcePath, resultPath, filterDefault, sourceDocument, value }) : filterDefault({ sourcePath, resultPath, filterDefault, sourceDocument, value })) === !1)\n        return logger && report.skipped.push({\n          path: prettyPathForLogging(sourcePath),\n          value: `${value.slice(0, TRUNCATE_LENGTH)}${value.length > TRUNCATE_LENGTH ? \"...\" : \"\"}`,\n          length: value.length\n        }), value;\n      logger && report.encoded.push({\n        path: prettyPathForLogging(sourcePath),\n        value: `${value.slice(0, TRUNCATE_LENGTH)}${value.length > TRUNCATE_LENGTH ? \"...\" : \"\"}`,\n        length: value.length\n      });\n      const { baseUrl, workspace, tool } = resolveStudioBaseRoute(\n        typeof config.studioUrl == \"function\" ? config.studioUrl(sourceDocument) : config.studioUrl\n      );\n      if (!baseUrl) return value;\n      const { _id: id, _type: type, _projectId: projectId, _dataset: dataset } = sourceDocument;\n      return (0,_stegaClean_js__WEBPACK_IMPORTED_MODULE_0__.C)(\n        value,\n        {\n          origin: \"sanity.io\",\n          href: createEditUrl({\n            baseUrl,\n            workspace,\n            tool,\n            id,\n            type,\n            path: sourcePath,\n            ...!config.omitCrossDatasetReferenceData && { dataset, projectId }\n          })\n        },\n        // We use custom logic to determine if we should skip encoding\n        !1\n      );\n    }\n  );\n  if (logger) {\n    const isSkipping = report.skipped.length, isEncoding = report.encoded.length;\n    if ((isSkipping || isEncoding) && ((logger?.groupCollapsed || logger.log)?.(\"[@sanity/client]: Encoding source map into result\"), logger.log?.(\n      `[@sanity/client]: Paths encoded: ${report.encoded.length}, skipped: ${report.skipped.length}`\n    )), report.encoded.length > 0 && (logger?.log?.(\"[@sanity/client]: Table of encoded paths\"), (logger?.table || logger.log)?.(report.encoded)), report.skipped.length > 0) {\n      const skipped = /* @__PURE__ */ new Set();\n      for (const { path } of report.skipped)\n        skipped.add(path.replace(reKeySegment, \"0\").replace(/\\[\\d+\\]/g, \"[]\"));\n      logger?.log?.(\"[@sanity/client]: List of skipped paths\", [...skipped.values()]);\n    }\n    (isSkipping || isEncoding) && logger?.groupEnd?.();\n  }\n  return resultWithStega;\n}\nfunction prettyPathForLogging(path) {\n  return toString(jsonPathToStudioPath(path));\n}\nvar stegaEncodeSourceMap$1 = /* @__PURE__ */ Object.freeze({\n  __proto__: null,\n  stegaEncodeSourceMap\n});\n\n//# sourceMappingURL=stegaEncodeSourceMap.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@sanity/client/dist/_chunks-es/stegaEncodeSourceMap.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sanity/client/dist/_chunks-es/stegaEncodeSourceMap.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@sanity/client/dist/_chunks-es/stegaEncodeSourceMap.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodeIntoResult: () => (/* binding */ encodeIntoResult),\n/* harmony export */   stegaEncodeSourceMap: () => (/* binding */ stegaEncodeSourceMap),\n/* harmony export */   stegaEncodeSourceMap$1: () => (/* binding */ stegaEncodeSourceMap$1)\n/* harmony export */ });\n/* harmony import */ var _stegaClean_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./stegaClean.js */ \"(rsc)/./node_modules/@sanity/client/dist/_chunks-es/stegaClean.js\");\n\nconst reKeySegment = /_key\\s*==\\s*['\"](.*)['\"]/;\nfunction isKeySegment(segment) {\n  return typeof segment == \"string\" ? reKeySegment.test(segment.trim()) : typeof segment == \"object\" && \"_key\" in segment;\n}\nfunction toString(path) {\n  if (!Array.isArray(path))\n    throw new Error(\"Path is not an array\");\n  return path.reduce((target, segment, i) => {\n    const segmentType = typeof segment;\n    if (segmentType === \"number\")\n      return `${target}[${segment}]`;\n    if (segmentType === \"string\")\n      return `${target}${i === 0 ? \"\" : \".\"}${segment}`;\n    if (isKeySegment(segment) && segment._key)\n      return `${target}[_key==\"${segment._key}\"]`;\n    if (Array.isArray(segment)) {\n      const [from, to] = segment;\n      return `${target}[${from}:${to}]`;\n    }\n    throw new Error(`Unsupported path segment \\`${JSON.stringify(segment)}\\``);\n  }, \"\");\n}\nconst ESCAPE = {\n  \"\\f\": \"\\\\f\",\n  \"\\n\": \"\\\\n\",\n  \"\\r\": \"\\\\r\",\n  \"\t\": \"\\\\t\",\n  \"'\": \"\\\\'\",\n  \"\\\\\": \"\\\\\\\\\"\n}, UNESCAPE = {\n  \"\\\\f\": \"\\f\",\n  \"\\\\n\": `\n`,\n  \"\\\\r\": \"\\r\",\n  \"\\\\t\": \"\t\",\n  \"\\\\'\": \"'\",\n  \"\\\\\\\\\": \"\\\\\"\n};\nfunction jsonPath(path) {\n  return `$${path.map((segment) => typeof segment == \"string\" ? `['${segment.replace(/[\\f\\n\\r\\t'\\\\]/g, (match) => ESCAPE[match])}']` : typeof segment == \"number\" ? `[${segment}]` : segment._key !== \"\" ? `[?(@._key=='${segment._key.replace(/['\\\\]/g, (match) => ESCAPE[match])}')]` : `[${segment._index}]`).join(\"\")}`;\n}\nfunction parseJsonPath(path) {\n  const parsed = [], parseRe = /\\['(.*?)'\\]|\\[(\\d+)\\]|\\[\\?\\(@\\._key=='(.*?)'\\)\\]/g;\n  let match;\n  for (; (match = parseRe.exec(path)) !== null; ) {\n    if (match[1] !== void 0) {\n      const key = match[1].replace(/\\\\(\\\\|f|n|r|t|')/g, (m) => UNESCAPE[m]);\n      parsed.push(key);\n      continue;\n    }\n    if (match[2] !== void 0) {\n      parsed.push(parseInt(match[2], 10));\n      continue;\n    }\n    if (match[3] !== void 0) {\n      const _key = match[3].replace(/\\\\(\\\\')/g, (m) => UNESCAPE[m]);\n      parsed.push({\n        _key,\n        _index: -1\n      });\n      continue;\n    }\n  }\n  return parsed;\n}\nfunction jsonPathToStudioPath(path) {\n  return path.map((segment) => {\n    if (typeof segment == \"string\" || typeof segment == \"number\")\n      return segment;\n    if (segment._key !== \"\")\n      return { _key: segment._key };\n    if (segment._index !== -1)\n      return segment._index;\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`);\n  });\n}\nfunction jsonPathToMappingPath(path) {\n  return path.map((segment) => {\n    if (typeof segment == \"string\" || typeof segment == \"number\")\n      return segment;\n    if (segment._index !== -1)\n      return segment._index;\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`);\n  });\n}\nfunction resolveMapping(resultPath, csm) {\n  if (!csm?.mappings)\n    return;\n  const resultMappingPath = jsonPath(jsonPathToMappingPath(resultPath));\n  if (csm.mappings[resultMappingPath] !== void 0)\n    return {\n      mapping: csm.mappings[resultMappingPath],\n      matchedPath: resultMappingPath,\n      pathSuffix: \"\"\n    };\n  const mappings = Object.entries(csm.mappings).filter(([key]) => resultMappingPath.startsWith(key)).sort(([key1], [key2]) => key2.length - key1.length);\n  if (mappings.length == 0)\n    return;\n  const [matchedPath, mapping] = mappings[0], pathSuffix = resultMappingPath.substring(matchedPath.length);\n  return { mapping, matchedPath, pathSuffix };\n}\nfunction isArray(value) {\n  return value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n  return typeof value == \"object\" && value !== null;\n}\nfunction walkMap(value, mappingFn, path = []) {\n  if (isArray(value))\n    return value.map((v, idx) => {\n      if (isRecord(v)) {\n        const _key = v._key;\n        if (typeof _key == \"string\")\n          return walkMap(v, mappingFn, path.concat({ _key, _index: idx }));\n      }\n      return walkMap(v, mappingFn, path.concat(idx));\n    });\n  if (isRecord(value)) {\n    if (value._type === \"block\" || value._type === \"span\") {\n      const result = { ...value };\n      return value._type === \"block\" ? result.children = walkMap(value.children, mappingFn, path.concat(\"children\")) : value._type === \"span\" && (result.text = walkMap(value.text, mappingFn, path.concat(\"text\"))), result;\n    }\n    return Object.fromEntries(\n      Object.entries(value).map(([k, v]) => [k, walkMap(v, mappingFn, path.concat(k))])\n    );\n  }\n  return mappingFn(value, path);\n}\nfunction encodeIntoResult(result, csm, encoder) {\n  return walkMap(result, (value, path) => {\n    if (typeof value != \"string\")\n      return value;\n    const resolveMappingResult = resolveMapping(path, csm);\n    if (!resolveMappingResult)\n      return value;\n    const { mapping, matchedPath } = resolveMappingResult;\n    if (mapping.type !== \"value\" || mapping.source.type !== \"documentValue\")\n      return value;\n    const sourceDocument = csm.documents[mapping.source.document], sourcePath = csm.paths[mapping.source.path], matchPathSegments = parseJsonPath(matchedPath), fullSourceSegments = parseJsonPath(sourcePath).concat(path.slice(matchPathSegments.length));\n    return encoder({\n      sourcePath: fullSourceSegments,\n      sourceDocument,\n      resultPath: path,\n      value\n    });\n  });\n}\nconst DRAFTS_PREFIX = \"drafts.\";\nfunction getPublishedId(id) {\n  return id.startsWith(DRAFTS_PREFIX) ? id.slice(DRAFTS_PREFIX.length) : id;\n}\nfunction createEditUrl(options) {\n  const {\n    baseUrl,\n    workspace: _workspace = \"default\",\n    tool: _tool = \"default\",\n    id: _id,\n    type,\n    path,\n    projectId,\n    dataset\n  } = options;\n  if (!baseUrl)\n    throw new Error(\"baseUrl is required\");\n  if (!path)\n    throw new Error(\"path is required\");\n  if (!_id)\n    throw new Error(\"id is required\");\n  if (baseUrl !== \"/\" && baseUrl.endsWith(\"/\"))\n    throw new Error(\"baseUrl must not end with a slash\");\n  const workspace = _workspace === \"default\" ? void 0 : _workspace, tool = _tool === \"default\" ? void 0 : _tool, id = getPublishedId(_id), stringifiedPath = Array.isArray(path) ? toString(jsonPathToStudioPath(path)) : path, searchParams = new URLSearchParams({\n    baseUrl,\n    id,\n    type,\n    path: stringifiedPath\n  });\n  workspace && searchParams.set(\"workspace\", workspace), tool && searchParams.set(\"tool\", tool), projectId && searchParams.set(\"projectId\", projectId), dataset && searchParams.set(\"dataset\", dataset), _id.startsWith(DRAFTS_PREFIX) && searchParams.set(\"isDraft\", \"\");\n  const segments = [baseUrl === \"/\" ? \"\" : baseUrl];\n  workspace && segments.push(workspace);\n  const routerParams = [\n    \"mode=presentation\",\n    `id=${id}`,\n    `type=${type}`,\n    `path=${encodeURIComponent(stringifiedPath)}`\n  ];\n  return tool && routerParams.push(`tool=${tool}`), segments.push(\"intent\", \"edit\", `${routerParams.join(\";\")}?${searchParams}`), segments.join(\"/\");\n}\nfunction resolveStudioBaseRoute(studioUrl) {\n  let baseUrl = typeof studioUrl == \"string\" ? studioUrl : studioUrl.baseUrl;\n  return baseUrl !== \"/\" && (baseUrl = baseUrl.replace(/\\/$/, \"\")), typeof studioUrl == \"string\" ? { baseUrl } : { ...studioUrl, baseUrl };\n}\nconst filterDefault = ({ sourcePath, resultPath, value }) => {\n  if (isValidDate(value) || isValidURL(value))\n    return !1;\n  const endPath = sourcePath.at(-1);\n  return !(sourcePath.at(-2) === \"slug\" && endPath === \"current\" || typeof endPath == \"string\" && (endPath.startsWith(\"_\") || endPath.endsWith(\"Id\")) || sourcePath.some(\n    (path) => path === \"meta\" || path === \"metadata\" || path === \"openGraph\" || path === \"seo\"\n  ) || hasTypeLike(sourcePath) || hasTypeLike(resultPath) || typeof endPath == \"string\" && denylist.has(endPath));\n}, denylist = /* @__PURE__ */ new Set([\n  \"color\",\n  \"colour\",\n  \"currency\",\n  \"email\",\n  \"format\",\n  \"gid\",\n  \"hex\",\n  \"href\",\n  \"hsl\",\n  \"hsla\",\n  \"icon\",\n  \"id\",\n  \"index\",\n  \"key\",\n  \"language\",\n  \"layout\",\n  \"link\",\n  \"linkAction\",\n  \"locale\",\n  \"lqip\",\n  \"page\",\n  \"path\",\n  \"ref\",\n  \"rgb\",\n  \"rgba\",\n  \"route\",\n  \"secret\",\n  \"slug\",\n  \"status\",\n  \"tag\",\n  \"template\",\n  \"theme\",\n  \"type\",\n  \"textTheme\",\n  \"unit\",\n  \"url\",\n  \"username\",\n  \"variant\",\n  \"website\"\n]);\nfunction isValidDate(dateString) {\n  return /^\\d{4}-\\d{2}-\\d{2}/.test(dateString) ? !!Date.parse(dateString) : !1;\n}\nfunction isValidURL(url) {\n  try {\n    new URL(url, url.startsWith(\"/\") ? \"https://acme.com\" : void 0);\n  } catch {\n    return !1;\n  }\n  return !0;\n}\nfunction hasTypeLike(path) {\n  return path.some((segment) => typeof segment == \"string\" && segment.match(/type/i) !== null);\n}\nconst TRUNCATE_LENGTH = 20;\nfunction stegaEncodeSourceMap(result, resultSourceMap, config) {\n  const { filter, logger, enabled } = config;\n  if (!enabled) {\n    const msg = \"config.enabled must be true, don't call this function otherwise\";\n    throw logger?.error?.(`[@sanity/client]: ${msg}`, { result, resultSourceMap, config }), new TypeError(msg);\n  }\n  if (!resultSourceMap)\n    return logger?.error?.(\"[@sanity/client]: Missing Content Source Map from response body\", {\n      result,\n      resultSourceMap,\n      config\n    }), result;\n  if (!config.studioUrl) {\n    const msg = \"config.studioUrl must be defined\";\n    throw logger?.error?.(`[@sanity/client]: ${msg}`, { result, resultSourceMap, config }), new TypeError(msg);\n  }\n  const report = {\n    encoded: [],\n    skipped: []\n  }, resultWithStega = encodeIntoResult(\n    result,\n    resultSourceMap,\n    ({ sourcePath, sourceDocument, resultPath, value }) => {\n      if ((typeof filter == \"function\" ? filter({ sourcePath, resultPath, filterDefault, sourceDocument, value }) : filterDefault({ sourcePath, resultPath, filterDefault, sourceDocument, value })) === !1)\n        return logger && report.skipped.push({\n          path: prettyPathForLogging(sourcePath),\n          value: `${value.slice(0, TRUNCATE_LENGTH)}${value.length > TRUNCATE_LENGTH ? \"...\" : \"\"}`,\n          length: value.length\n        }), value;\n      logger && report.encoded.push({\n        path: prettyPathForLogging(sourcePath),\n        value: `${value.slice(0, TRUNCATE_LENGTH)}${value.length > TRUNCATE_LENGTH ? \"...\" : \"\"}`,\n        length: value.length\n      });\n      const { baseUrl, workspace, tool } = resolveStudioBaseRoute(\n        typeof config.studioUrl == \"function\" ? config.studioUrl(sourceDocument) : config.studioUrl\n      );\n      if (!baseUrl) return value;\n      const { _id: id, _type: type, _projectId: projectId, _dataset: dataset } = sourceDocument;\n      return (0,_stegaClean_js__WEBPACK_IMPORTED_MODULE_0__.C)(\n        value,\n        {\n          origin: \"sanity.io\",\n          href: createEditUrl({\n            baseUrl,\n            workspace,\n            tool,\n            id,\n            type,\n            path: sourcePath,\n            ...!config.omitCrossDatasetReferenceData && { dataset, projectId }\n          })\n        },\n        // We use custom logic to determine if we should skip encoding\n        !1\n      );\n    }\n  );\n  if (logger) {\n    const isSkipping = report.skipped.length, isEncoding = report.encoded.length;\n    if ((isSkipping || isEncoding) && ((logger?.groupCollapsed || logger.log)?.(\"[@sanity/client]: Encoding source map into result\"), logger.log?.(\n      `[@sanity/client]: Paths encoded: ${report.encoded.length}, skipped: ${report.skipped.length}`\n    )), report.encoded.length > 0 && (logger?.log?.(\"[@sanity/client]: Table of encoded paths\"), (logger?.table || logger.log)?.(report.encoded)), report.skipped.length > 0) {\n      const skipped = /* @__PURE__ */ new Set();\n      for (const { path } of report.skipped)\n        skipped.add(path.replace(reKeySegment, \"0\").replace(/\\[\\d+\\]/g, \"[]\"));\n      logger?.log?.(\"[@sanity/client]: List of skipped paths\", [...skipped.values()]);\n    }\n    (isSkipping || isEncoding) && logger?.groupEnd?.();\n  }\n  return resultWithStega;\n}\nfunction prettyPathForLogging(path) {\n  return toString(jsonPathToStudioPath(path));\n}\nvar stegaEncodeSourceMap$1 = /* @__PURE__ */ Object.freeze({\n  __proto__: null,\n  stegaEncodeSourceMap\n});\n\n//# sourceMappingURL=stegaEncodeSourceMap.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sanity/client/dist/_chunks-es/stegaEncodeSourceMap.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@sanity/client/dist/index.browser.js":
/*!***********************************************************!*\
  !*** ./node_modules/@sanity/client/dist/index.browser.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BasePatch: () => (/* binding */ BasePatch),\n/* harmony export */   BaseTransaction: () => (/* binding */ BaseTransaction),\n/* harmony export */   ChannelError: () => (/* binding */ ChannelError),\n/* harmony export */   ClientError: () => (/* binding */ ClientError),\n/* harmony export */   ConnectionFailedError: () => (/* binding */ ConnectionFailedError),\n/* harmony export */   CorsOriginError: () => (/* binding */ CorsOriginError),\n/* harmony export */   DisconnectError: () => (/* binding */ DisconnectError),\n/* harmony export */   MessageError: () => (/* binding */ MessageError),\n/* harmony export */   MessageParseError: () => (/* binding */ MessageParseError),\n/* harmony export */   ObservablePatch: () => (/* binding */ ObservablePatch),\n/* harmony export */   ObservableSanityClient: () => (/* binding */ ObservableSanityClient),\n/* harmony export */   ObservableTransaction: () => (/* binding */ ObservableTransaction),\n/* harmony export */   Patch: () => (/* binding */ Patch),\n/* harmony export */   SanityClient: () => (/* binding */ SanityClient),\n/* harmony export */   ServerError: () => (/* binding */ ServerError),\n/* harmony export */   Transaction: () => (/* binding */ Transaction),\n/* harmony export */   connectEventSource: () => (/* binding */ connectEventSource),\n/* harmony export */   createClient: () => (/* binding */ createClient),\n/* harmony export */   \"default\": () => (/* binding */ deprecatedCreateClient),\n/* harmony export */   requester: () => (/* binding */ requester),\n/* harmony export */   unstable__adapter: () => (/* reexport safe */ get_it__WEBPACK_IMPORTED_MODULE_0__.adapter),\n/* harmony export */   unstable__environment: () => (/* reexport safe */ get_it__WEBPACK_IMPORTED_MODULE_0__.environment),\n/* harmony export */   validateApiPerspective: () => (/* binding */ validateApiPerspective)\n/* harmony export */ });\n/* harmony import */ var get_it__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! get-it */ \"(action-browser)/./node_modules/get-it/dist/index.react-server.js\");\n/* harmony import */ var get_it_middleware__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! get-it/middleware */ \"(action-browser)/./node_modules/get-it/dist/middleware.browser.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ \"(action-browser)/./node_modules/rxjs/dist/esm5/internal/Observable.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ \"(action-browser)/./node_modules/rxjs/dist/esm5/internal/observable/defer.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ \"(action-browser)/./node_modules/rxjs/dist/esm5/internal/util/isObservable.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ \"(action-browser)/./node_modules/rxjs/dist/esm5/internal/observable/of.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ \"(action-browser)/./node_modules/rxjs/dist/esm5/internal/operators/mergeMap.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs */ \"(action-browser)/./node_modules/rxjs/dist/esm5/internal/observable/from.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! rxjs */ \"(action-browser)/./node_modules/rxjs/dist/esm5/internal/lastValueFrom.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! rxjs */ \"(action-browser)/./node_modules/rxjs/dist/esm5/internal/operators/shareReplay.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! rxjs */ \"(action-browser)/./node_modules/rxjs/dist/esm5/internal/operators/catchError.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! rxjs */ \"(action-browser)/./node_modules/rxjs/dist/esm5/internal/observable/concat.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! rxjs */ \"(action-browser)/./node_modules/rxjs/dist/esm5/internal/observable/timer.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! rxjs */ \"(action-browser)/./node_modules/rxjs/dist/esm5/internal/observable/throwError.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! rxjs */ \"(action-browser)/./node_modules/rxjs/dist/esm5/internal/observable/empty.js\");\n/* harmony import */ var _chunks_es_stegaClean_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./_chunks-es/stegaClean.js */ \"(action-browser)/./node_modules/@sanity/client/dist/_chunks-es/stegaClean.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! rxjs/operators */ \"(action-browser)/./node_modules/rxjs/dist/cjs/operators/index.js\");\n\n\n\n\n\n\nclass ClientError extends Error {\n  response;\n  statusCode = 400;\n  responseBody;\n  details;\n  constructor(res) {\n    const props = extractErrorProps(res);\n    super(props.message), Object.assign(this, props);\n  }\n}\nclass ServerError extends Error {\n  response;\n  statusCode = 500;\n  responseBody;\n  details;\n  constructor(res) {\n    const props = extractErrorProps(res);\n    super(props.message), Object.assign(this, props);\n  }\n}\nfunction extractErrorProps(res) {\n  const body = res.body, props = {\n    response: res,\n    statusCode: res.statusCode,\n    responseBody: stringifyBody(body, res),\n    message: \"\",\n    details: void 0\n  };\n  if (body.error && body.message)\n    return props.message = `${body.error} - ${body.message}`, props;\n  if (isMutationError(body) || isActionError(body)) {\n    const allItems = body.error.items || [], items = allItems.slice(0, 5).map((item) => item.error?.description).filter(Boolean);\n    let itemsStr = items.length ? `:\n- ${items.join(`\n- `)}` : \"\";\n    return allItems.length > 5 && (itemsStr += `\n...and ${allItems.length - 5} more`), props.message = `${body.error.description}${itemsStr}`, props.details = body.error, props;\n  }\n  return body.error && body.error.description ? (props.message = body.error.description, props.details = body.error, props) : (props.message = body.error || body.message || httpErrorMessage(res), props);\n}\nfunction isMutationError(body) {\n  return isPlainObject(body) && isPlainObject(body.error) && body.error.type === \"mutationError\" && typeof body.error.description == \"string\";\n}\nfunction isActionError(body) {\n  return isPlainObject(body) && isPlainObject(body.error) && body.error.type === \"actionError\" && typeof body.error.description == \"string\";\n}\nfunction isPlainObject(obj) {\n  return typeof obj == \"object\" && obj !== null && !Array.isArray(obj);\n}\nfunction httpErrorMessage(res) {\n  const statusMessage = res.statusMessage ? ` ${res.statusMessage}` : \"\";\n  return `${res.method}-request to ${res.url} resulted in HTTP ${res.statusCode}${statusMessage}`;\n}\nfunction stringifyBody(body, res) {\n  return (res.headers[\"content-type\"] || \"\").toLowerCase().indexOf(\"application/json\") !== -1 ? JSON.stringify(body, null, 2) : body;\n}\nclass CorsOriginError extends Error {\n  projectId;\n  addOriginUrl;\n  constructor({ projectId: projectId2 }) {\n    super(\"CorsOriginError\"), this.name = \"CorsOriginError\", this.projectId = projectId2;\n    const url = new URL(`https://sanity.io/manage/project/${projectId2}/api`);\n    if (typeof location < \"u\") {\n      const { origin } = location;\n      url.searchParams.set(\"cors\", \"add\"), url.searchParams.set(\"origin\", origin), this.addOriginUrl = url, this.message = `The current origin is not allowed to connect to the Live Content API. Add it here: ${url}`;\n    } else\n      this.message = `The current origin is not allowed to connect to the Live Content API. Change your configuration here: ${url}`;\n  }\n}\nconst httpError = {\n  onResponse: (res) => {\n    if (res.statusCode >= 500)\n      throw new ServerError(res);\n    if (res.statusCode >= 400)\n      throw new ClientError(res);\n    return res;\n  }\n};\nfunction printWarnings() {\n  const seen = {};\n  return {\n    onResponse: (res) => {\n      const warn = res.headers[\"x-sanity-warning\"], warnings = Array.isArray(warn) ? warn : [warn];\n      for (const msg of warnings)\n        !msg || seen[msg] || (seen[msg] = !0, console.warn(msg));\n      return res;\n    }\n  };\n}\nfunction defineHttpRequest(envMiddleware2) {\n  return (0,get_it__WEBPACK_IMPORTED_MODULE_0__.getIt)([\n    (0,get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.retry)({ shouldRetry }),\n    ...envMiddleware2,\n    printWarnings(),\n    (0,get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.jsonRequest)(),\n    (0,get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.jsonResponse)(),\n    (0,get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.progress)(),\n    httpError,\n    (0,get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.observable)({ implementation: rxjs__WEBPACK_IMPORTED_MODULE_2__.Observable })\n  ]);\n}\nfunction shouldRetry(err, attempt, options) {\n  if (options.maxRetries === 0) return !1;\n  const isSafe = options.method === \"GET\" || options.method === \"HEAD\", isQuery = (options.uri || options.url).startsWith(\"/data/query\"), isRetriableResponse = err.response && (err.response.statusCode === 429 || err.response.statusCode === 502 || err.response.statusCode === 503);\n  return (isSafe || isQuery) && isRetriableResponse ? !0 : get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.retry.shouldRetry(err, attempt, options);\n}\nconst BASE_URL = \"https://www.sanity.io/help/\";\nfunction generateHelpUrl(slug) {\n  return BASE_URL + slug;\n}\nconst VALID_ASSET_TYPES = [\"image\", \"file\"], VALID_INSERT_LOCATIONS = [\"before\", \"after\", \"replace\"], dataset = (name) => {\n  if (!/^(~[a-z0-9]{1}[-\\w]{0,63}|[a-z0-9]{1}[-\\w]{0,63})$/.test(name))\n    throw new Error(\n      \"Datasets can only contain lowercase characters, numbers, underscores and dashes, and start with tilde, and be maximum 64 characters\"\n    );\n}, projectId = (id) => {\n  if (!/^[-a-z0-9]+$/i.test(id))\n    throw new Error(\"`projectId` can only contain only a-z, 0-9 and dashes\");\n}, validateAssetType = (type) => {\n  if (VALID_ASSET_TYPES.indexOf(type) === -1)\n    throw new Error(`Invalid asset type: ${type}. Must be one of ${VALID_ASSET_TYPES.join(\", \")}`);\n}, validateObject = (op, val) => {\n  if (val === null || typeof val != \"object\" || Array.isArray(val))\n    throw new Error(`${op}() takes an object of properties`);\n}, validateDocumentId = (op, id) => {\n  if (typeof id != \"string\" || !/^[a-z0-9_][a-z0-9_.-]{0,127}$/i.test(id) || id.includes(\"..\"))\n    throw new Error(`${op}(): \"${id}\" is not a valid document ID`);\n}, requireDocumentId = (op, doc) => {\n  if (!doc._id)\n    throw new Error(`${op}() requires that the document contains an ID (\"_id\" property)`);\n  validateDocumentId(op, doc._id);\n}, validateInsert = (at, selector, items) => {\n  const signature = \"insert(at, selector, items)\";\n  if (VALID_INSERT_LOCATIONS.indexOf(at) === -1) {\n    const valid = VALID_INSERT_LOCATIONS.map((loc) => `\"${loc}\"`).join(\", \");\n    throw new Error(`${signature} takes an \"at\"-argument which is one of: ${valid}`);\n  }\n  if (typeof selector != \"string\")\n    throw new Error(`${signature} takes a \"selector\"-argument which must be a string`);\n  if (!Array.isArray(items))\n    throw new Error(`${signature} takes an \"items\"-argument which must be an array`);\n}, hasDataset = (config) => {\n  if (!config.dataset)\n    throw new Error(\"`dataset` must be provided to perform queries\");\n  return config.dataset || \"\";\n}, requestTag = (tag) => {\n  if (typeof tag != \"string\" || !/^[a-z0-9._-]{1,75}$/i.test(tag))\n    throw new Error(\n      \"Tag can only contain alphanumeric characters, underscores, dashes and dots, and be between one and 75 characters long.\"\n    );\n  return tag;\n};\nfunction once(fn) {\n  let didCall = !1, returnValue;\n  return (...args) => (didCall || (returnValue = fn(...args), didCall = !0), returnValue);\n}\nconst createWarningPrinter = (message) => (\n  // eslint-disable-next-line no-console\n  once((...args) => console.warn(message.join(\" \"), ...args))\n), printCdnAndWithCredentialsWarning = createWarningPrinter([\n  \"Because you set `withCredentials` to true, we will override your `useCdn`\",\n  \"setting to be false since (cookie-based) credentials are never set on the CDN\"\n]), printCdnWarning = createWarningPrinter([\n  \"Since you haven't set a value for `useCdn`, we will deliver content using our\",\n  \"global, edge-cached API-CDN. If you wish to have content delivered faster, set\",\n  \"`useCdn: false` to use the Live API. Note: You may incur higher costs using the live API.\"\n]), printCdnPreviewDraftsWarning = createWarningPrinter([\n  \"The Sanity client is configured with the `perspective` set to `previewDrafts`, which doesn't support the API-CDN.\",\n  \"The Live API will be used instead. Set `useCdn: false` in your configuration to hide this warning.\"\n]), printBrowserTokenWarning = createWarningPrinter([\n  \"You have configured Sanity client to use a token in the browser. This may cause unintentional security issues.\",\n  `See ${generateHelpUrl(\n    \"js-client-browser-token\"\n  )} for more information and how to hide this warning.`\n]), printNoApiVersionSpecifiedWarning = createWarningPrinter([\n  \"Using the Sanity client without specifying an API version is deprecated.\",\n  `See ${generateHelpUrl(\"js-client-api-version\")}`\n]), printNoDefaultExport = createWarningPrinter([\n  \"The default export of @sanity/client has been deprecated. Use the named export `createClient` instead.\"\n]), defaultCdnHost = \"apicdn.sanity.io\", defaultConfig = {\n  apiHost: \"https://api.sanity.io\",\n  apiVersion: \"1\",\n  useProjectHostname: !0,\n  stega: { enabled: !1 }\n}, LOCALHOSTS = [\"localhost\", \"127.0.0.1\", \"0.0.0.0\"], isLocal = (host) => LOCALHOSTS.indexOf(host) !== -1;\nfunction validateApiVersion(apiVersion) {\n  if (apiVersion === \"1\" || apiVersion === \"X\")\n    return;\n  const apiDate = new Date(apiVersion);\n  if (!(/^\\d{4}-\\d{2}-\\d{2}$/.test(apiVersion) && apiDate instanceof Date && apiDate.getTime() > 0))\n    throw new Error(\"Invalid API version string, expected `1` or date in format `YYYY-MM-DD`\");\n}\nfunction validateApiPerspective(perspective) {\n  if (Array.isArray(perspective)) {\n    for (const perspectiveValue of perspective)\n      if (perspectiveValue !== \"published\" && perspectiveValue !== \"drafts\" && !(typeof perspectiveValue == \"string\" && perspectiveValue.startsWith(\"r\") && perspectiveValue !== \"raw\"))\n        throw new TypeError(\n          \"Invalid API perspective value, expected `published`, `drafts` or a valid release identifier string\"\n        );\n    return;\n  }\n  switch (perspective) {\n    case \"previewDrafts\":\n    case \"drafts\":\n    case \"published\":\n    case \"raw\":\n      return;\n    default:\n      throw new TypeError(\n        \"Invalid API perspective string, expected `published`, `previewDrafts` or `raw`\"\n      );\n  }\n}\nconst initConfig = (config, prevConfig) => {\n  const specifiedConfig = {\n    ...prevConfig,\n    ...config,\n    stega: {\n      ...typeof prevConfig.stega == \"boolean\" ? { enabled: prevConfig.stega } : prevConfig.stega || defaultConfig.stega,\n      ...typeof config.stega == \"boolean\" ? { enabled: config.stega } : config.stega || {}\n    }\n  };\n  specifiedConfig.apiVersion || printNoApiVersionSpecifiedWarning();\n  const newConfig = {\n    ...defaultConfig,\n    ...specifiedConfig\n  }, projectBased = newConfig.useProjectHostname;\n  if (typeof Promise > \"u\") {\n    const helpUrl = generateHelpUrl(\"js-client-promise-polyfill\");\n    throw new Error(`No native Promise-implementation found, polyfill needed - see ${helpUrl}`);\n  }\n  if (projectBased && !newConfig.projectId)\n    throw new Error(\"Configuration must contain `projectId`\");\n  if (typeof newConfig.perspective < \"u\" && validateApiPerspective(newConfig.perspective), \"encodeSourceMap\" in newConfig)\n    throw new Error(\n      \"It looks like you're using options meant for '@sanity/preview-kit/client'. 'encodeSourceMap' is not supported in '@sanity/client'. Did you mean 'stega.enabled'?\"\n    );\n  if (\"encodeSourceMapAtPath\" in newConfig)\n    throw new Error(\n      \"It looks like you're using options meant for '@sanity/preview-kit/client'. 'encodeSourceMapAtPath' is not supported in '@sanity/client'. Did you mean 'stega.filter'?\"\n    );\n  if (typeof newConfig.stega.enabled != \"boolean\")\n    throw new Error(`stega.enabled must be a boolean, received ${newConfig.stega.enabled}`);\n  if (newConfig.stega.enabled && newConfig.stega.studioUrl === void 0)\n    throw new Error(\"stega.studioUrl must be defined when stega.enabled is true\");\n  if (newConfig.stega.enabled && typeof newConfig.stega.studioUrl != \"string\" && typeof newConfig.stega.studioUrl != \"function\")\n    throw new Error(\n      `stega.studioUrl must be a string or a function, received ${newConfig.stega.studioUrl}`\n    );\n  const isBrowser = typeof window < \"u\" && window.location && window.location.hostname, isLocalhost = isBrowser && isLocal(window.location.hostname);\n  isBrowser && isLocalhost && newConfig.token && newConfig.ignoreBrowserTokenWarning !== !0 ? printBrowserTokenWarning() : typeof newConfig.useCdn > \"u\" && printCdnWarning(), projectBased && projectId(newConfig.projectId), newConfig.dataset && dataset(newConfig.dataset), \"requestTagPrefix\" in newConfig && (newConfig.requestTagPrefix = newConfig.requestTagPrefix ? requestTag(newConfig.requestTagPrefix).replace(/\\.+$/, \"\") : void 0), newConfig.apiVersion = `${newConfig.apiVersion}`.replace(/^v/, \"\"), newConfig.isDefaultApi = newConfig.apiHost === defaultConfig.apiHost, newConfig.useCdn === !0 && newConfig.withCredentials && printCdnAndWithCredentialsWarning(), newConfig.useCdn = newConfig.useCdn !== !1 && !newConfig.withCredentials, validateApiVersion(newConfig.apiVersion);\n  const hostParts = newConfig.apiHost.split(\"://\", 2), protocol = hostParts[0], host = hostParts[1], cdnHost = newConfig.isDefaultApi ? defaultCdnHost : host;\n  return newConfig.useProjectHostname ? (newConfig.url = `${protocol}://${newConfig.projectId}.${host}/v${newConfig.apiVersion}`, newConfig.cdnUrl = `${protocol}://${newConfig.projectId}.${cdnHost}/v${newConfig.apiVersion}`) : (newConfig.url = `${newConfig.apiHost}/v${newConfig.apiVersion}`, newConfig.cdnUrl = newConfig.url), newConfig;\n};\nclass ConnectionFailedError extends Error {\n  name = \"ConnectionFailedError\";\n}\nclass DisconnectError extends Error {\n  name = \"DisconnectError\";\n  reason;\n  constructor(message, reason, options = {}) {\n    super(message, options), this.reason = reason;\n  }\n}\nclass ChannelError extends Error {\n  name = \"ChannelError\";\n  data;\n  constructor(message, data) {\n    super(message), this.data = data;\n  }\n}\nclass MessageError extends Error {\n  name = \"MessageError\";\n  data;\n  constructor(message, data, options = {}) {\n    super(message, options), this.data = data;\n  }\n}\nclass MessageParseError extends Error {\n  name = \"MessageParseError\";\n}\nconst REQUIRED_EVENTS = [\"channelError\", \"disconnect\"];\nfunction connectEventSource(initEventSource, events) {\n  return (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.defer)(() => {\n    const es = initEventSource();\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.isObservable)(es) ? es : (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.of)(es);\n  }).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_6__.mergeMap)((es) => connectWithESInstance(es, events)));\n}\nfunction connectWithESInstance(es, events) {\n  return new rxjs__WEBPACK_IMPORTED_MODULE_2__.Observable((observer) => {\n    const emitOpen = events.includes(\"open\"), emitReconnect = events.includes(\"reconnect\");\n    function onError(evt) {\n      if (\"data\" in evt) {\n        const [parseError, event] = parseEvent(evt);\n        observer.error(\n          parseError ? new MessageParseError(\"Unable to parse EventSource error message\", { cause: event }) : new MessageError((event?.data).message, event)\n        );\n        return;\n      }\n      es.readyState === es.CLOSED ? observer.error(new ConnectionFailedError(\"EventSource connection failed\")) : emitReconnect && observer.next({ type: \"reconnect\" });\n    }\n    function onOpen() {\n      observer.next({ type: \"open\" });\n    }\n    function onMessage(message) {\n      const [parseError, event] = parseEvent(message);\n      if (parseError) {\n        observer.error(\n          new MessageParseError(\"Unable to parse EventSource message\", { cause: parseError })\n        );\n        return;\n      }\n      if (message.type === \"channelError\") {\n        observer.error(new ChannelError(extractErrorMessage(event?.data), event.data));\n        return;\n      }\n      if (message.type === \"disconnect\") {\n        observer.error(\n          new DisconnectError(\n            `Server disconnected client: ${event.data?.reason || \"unknown error\"}`\n          )\n        );\n        return;\n      }\n      observer.next({\n        type: message.type,\n        id: message.lastEventId,\n        ...event.data ? { data: event.data } : {}\n      });\n    }\n    es.addEventListener(\"error\", onError), emitOpen && es.addEventListener(\"open\", onOpen);\n    const cleanedEvents = [.../* @__PURE__ */ new Set([...REQUIRED_EVENTS, ...events])].filter((type) => type !== \"error\" && type !== \"open\" && type !== \"reconnect\");\n    return cleanedEvents.forEach((type) => es.addEventListener(type, onMessage)), () => {\n      es.removeEventListener(\"error\", onError), emitOpen && es.removeEventListener(\"open\", onOpen), cleanedEvents.forEach((type) => es.removeEventListener(type, onMessage)), es.close();\n    };\n  });\n}\nfunction parseEvent(message) {\n  try {\n    const data = typeof message.data == \"string\" && JSON.parse(message.data);\n    return [\n      null,\n      {\n        type: message.type,\n        id: message.lastEventId,\n        ...isEmptyObject(data) ? {} : { data }\n      }\n    ];\n  } catch (err) {\n    return [err, null];\n  }\n}\nfunction extractErrorMessage(err) {\n  return err.error ? err.error.description ? err.error.description : typeof err.error == \"string\" ? err.error : JSON.stringify(err.error, null, 2) : err.message || \"Unknown listener error\";\n}\nfunction isEmptyObject(data) {\n  for (const _ in data)\n    return !1;\n  return !0;\n}\nfunction getSelection(sel) {\n  if (typeof sel == \"string\")\n    return { id: sel };\n  if (Array.isArray(sel))\n    return { query: \"*[_id in $ids]\", params: { ids: sel } };\n  if (typeof sel == \"object\" && sel !== null && \"query\" in sel && typeof sel.query == \"string\")\n    return \"params\" in sel && typeof sel.params == \"object\" && sel.params !== null ? { query: sel.query, params: sel.params } : { query: sel.query };\n  const selectionOpts = [\n    \"* Document ID (<docId>)\",\n    \"* Array of document IDs\",\n    \"* Object containing `query`\"\n  ].join(`\n`);\n  throw new Error(`Unknown selection - must be one of:\n\n${selectionOpts}`);\n}\nclass BasePatch {\n  selection;\n  operations;\n  constructor(selection, operations = {}) {\n    this.selection = selection, this.operations = operations;\n  }\n  /**\n   * Sets the given attributes to the document. Does NOT merge objects.\n   * The operation is added to the current patch, ready to be commited by `commit()`\n   *\n   * @param attrs - Attributes to set. To set a deep attribute, use JSONMatch, eg: \\{\"nested.prop\": \"value\"\\}\n   */\n  set(attrs) {\n    return this._assign(\"set\", attrs);\n  }\n  /**\n   * Sets the given attributes to the document if they are not currently set. Does NOT merge objects.\n   * The operation is added to the current patch, ready to be commited by `commit()`\n   *\n   * @param attrs - Attributes to set. To set a deep attribute, use JSONMatch, eg: \\{\"nested.prop\": \"value\"\\}\n   */\n  setIfMissing(attrs) {\n    return this._assign(\"setIfMissing\", attrs);\n  }\n  /**\n   * Performs a \"diff-match-patch\" operation on the string attributes provided.\n   * The operation is added to the current patch, ready to be commited by `commit()`\n   *\n   * @param attrs - Attributes to perform operation on. To set a deep attribute, use JSONMatch, eg: \\{\"nested.prop\": \"dmp\"\\}\n   */\n  diffMatchPatch(attrs) {\n    return validateObject(\"diffMatchPatch\", attrs), this._assign(\"diffMatchPatch\", attrs);\n  }\n  /**\n   * Unsets the attribute paths provided.\n   * The operation is added to the current patch, ready to be commited by `commit()`\n   *\n   * @param attrs - Attribute paths to unset.\n   */\n  unset(attrs) {\n    if (!Array.isArray(attrs))\n      throw new Error(\"unset(attrs) takes an array of attributes to unset, non-array given\");\n    return this.operations = Object.assign({}, this.operations, { unset: attrs }), this;\n  }\n  /**\n   * Increment a numeric value. Each entry in the argument is either an attribute or a JSON path. The value may be a positive or negative integer or floating-point value. The operation will fail if target value is not a numeric value, or doesn't exist.\n   *\n   * @param attrs - Object of attribute paths to increment, values representing the number to increment by.\n   */\n  inc(attrs) {\n    return this._assign(\"inc\", attrs);\n  }\n  /**\n   * Decrement a numeric value. Each entry in the argument is either an attribute or a JSON path. The value may be a positive or negative integer or floating-point value. The operation will fail if target value is not a numeric value, or doesn't exist.\n   *\n   * @param attrs - Object of attribute paths to decrement, values representing the number to decrement by.\n   */\n  dec(attrs) {\n    return this._assign(\"dec\", attrs);\n  }\n  /**\n   * Provides methods for modifying arrays, by inserting, appending and replacing elements via a JSONPath expression.\n   *\n   * @param at - Location to insert at, relative to the given selector, or 'replace' the matched path\n   * @param selector - JSONPath expression, eg `comments[-1]` or `blocks[_key==\"abc123\"]`\n   * @param items - Array of items to insert/replace\n   */\n  insert(at, selector, items) {\n    return validateInsert(at, selector, items), this._assign(\"insert\", { [at]: selector, items });\n  }\n  /**\n   * Append the given items to the array at the given JSONPath\n   *\n   * @param selector - Attribute/path to append to, eg `comments` or `person.hobbies`\n   * @param items - Array of items to append to the array\n   */\n  append(selector, items) {\n    return this.insert(\"after\", `${selector}[-1]`, items);\n  }\n  /**\n   * Prepend the given items to the array at the given JSONPath\n   *\n   * @param selector - Attribute/path to prepend to, eg `comments` or `person.hobbies`\n   * @param items - Array of items to prepend to the array\n   */\n  prepend(selector, items) {\n    return this.insert(\"before\", `${selector}[0]`, items);\n  }\n  /**\n   * Change the contents of an array by removing existing elements and/or adding new elements.\n   *\n   * @param selector - Attribute or JSONPath expression for array\n   * @param start - Index at which to start changing the array (with origin 0). If greater than the length of the array, actual starting index will be set to the length of the array. If negative, will begin that many elements from the end of the array (with origin -1) and will be set to 0 if absolute value is greater than the length of the array.x\n   * @param deleteCount - An integer indicating the number of old array elements to remove.\n   * @param items - The elements to add to the array, beginning at the start index. If you don't specify any elements, splice() will only remove elements from the array.\n   */\n  splice(selector, start, deleteCount, items) {\n    const delAll = typeof deleteCount > \"u\" || deleteCount === -1, startIndex = start < 0 ? start - 1 : start, delCount = delAll ? -1 : Math.max(0, start + deleteCount), delRange = startIndex < 0 && delCount >= 0 ? \"\" : delCount, rangeSelector = `${selector}[${startIndex}:${delRange}]`;\n    return this.insert(\"replace\", rangeSelector, items || []);\n  }\n  /**\n   * Adds a revision clause, preventing the document from being patched if the `_rev` property does not match the given value\n   *\n   * @param rev - Revision to lock the patch to\n   */\n  ifRevisionId(rev) {\n    return this.operations.ifRevisionID = rev, this;\n  }\n  /**\n   * Return a plain JSON representation of the patch\n   */\n  serialize() {\n    return { ...getSelection(this.selection), ...this.operations };\n  }\n  /**\n   * Return a plain JSON representation of the patch\n   */\n  toJSON() {\n    return this.serialize();\n  }\n  /**\n   * Clears the patch of all operations\n   */\n  reset() {\n    return this.operations = {}, this;\n  }\n  _assign(op, props, merge = !0) {\n    return validateObject(op, props), this.operations = Object.assign({}, this.operations, {\n      [op]: Object.assign({}, merge && this.operations[op] || {}, props)\n    }), this;\n  }\n  _set(op, props) {\n    return this._assign(op, props, !1);\n  }\n}\nclass ObservablePatch extends BasePatch {\n  #client;\n  constructor(selection, operations, client) {\n    super(selection, operations), this.#client = client;\n  }\n  /**\n   * Clones the patch\n   */\n  clone() {\n    return new ObservablePatch(this.selection, { ...this.operations }, this.#client);\n  }\n  commit(options) {\n    if (!this.#client)\n      throw new Error(\n        \"No `client` passed to patch, either provide one or pass the patch to a clients `mutate()` method\"\n      );\n    const returnFirst = typeof this.selection == \"string\", opts = Object.assign({ returnFirst, returnDocuments: !0 }, options);\n    return this.#client.mutate({ patch: this.serialize() }, opts);\n  }\n}\nclass Patch extends BasePatch {\n  #client;\n  constructor(selection, operations, client) {\n    super(selection, operations), this.#client = client;\n  }\n  /**\n   * Clones the patch\n   */\n  clone() {\n    return new Patch(this.selection, { ...this.operations }, this.#client);\n  }\n  commit(options) {\n    if (!this.#client)\n      throw new Error(\n        \"No `client` passed to patch, either provide one or pass the patch to a clients `mutate()` method\"\n      );\n    const returnFirst = typeof this.selection == \"string\", opts = Object.assign({ returnFirst, returnDocuments: !0 }, options);\n    return this.#client.mutate({ patch: this.serialize() }, opts);\n  }\n}\nconst defaultMutateOptions = { returnDocuments: !1 };\nclass BaseTransaction {\n  operations;\n  trxId;\n  constructor(operations = [], transactionId) {\n    this.operations = operations, this.trxId = transactionId;\n  }\n  /**\n   * Creates a new Sanity document. If `_id` is provided and already exists, the mutation will fail. If no `_id` is given, one will automatically be generated by the database.\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param doc - Document to create. Requires a `_type` property.\n   */\n  create(doc) {\n    return validateObject(\"create\", doc), this._add({ create: doc });\n  }\n  /**\n   * Creates a new Sanity document. If a document with the same `_id` already exists, the create operation will be ignored.\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param doc - Document to create if it does not already exist. Requires `_id` and `_type` properties.\n   */\n  createIfNotExists(doc) {\n    const op = \"createIfNotExists\";\n    return validateObject(op, doc), requireDocumentId(op, doc), this._add({ [op]: doc });\n  }\n  /**\n   * Creates a new Sanity document, or replaces an existing one if the same `_id` is already used.\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param doc - Document to create or replace. Requires `_id` and `_type` properties.\n   */\n  createOrReplace(doc) {\n    const op = \"createOrReplace\";\n    return validateObject(op, doc), requireDocumentId(op, doc), this._add({ [op]: doc });\n  }\n  /**\n   * Deletes the document with the given document ID\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param documentId - Document ID to delete\n   */\n  delete(documentId) {\n    return validateDocumentId(\"delete\", documentId), this._add({ delete: { id: documentId } });\n  }\n  transactionId(id) {\n    return id ? (this.trxId = id, this) : this.trxId;\n  }\n  /**\n   * Return a plain JSON representation of the transaction\n   */\n  serialize() {\n    return [...this.operations];\n  }\n  /**\n   * Return a plain JSON representation of the transaction\n   */\n  toJSON() {\n    return this.serialize();\n  }\n  /**\n   * Clears the transaction of all operations\n   */\n  reset() {\n    return this.operations = [], this;\n  }\n  _add(mut) {\n    return this.operations.push(mut), this;\n  }\n}\nclass Transaction extends BaseTransaction {\n  #client;\n  constructor(operations, client, transactionId) {\n    super(operations, transactionId), this.#client = client;\n  }\n  /**\n   * Clones the transaction\n   */\n  clone() {\n    return new Transaction([...this.operations], this.#client, this.trxId);\n  }\n  commit(options) {\n    if (!this.#client)\n      throw new Error(\n        \"No `client` passed to transaction, either provide one or pass the transaction to a clients `mutate()` method\"\n      );\n    return this.#client.mutate(\n      this.serialize(),\n      Object.assign({ transactionId: this.trxId }, defaultMutateOptions, options || {})\n    );\n  }\n  patch(patchOrDocumentId, patchOps) {\n    const isBuilder = typeof patchOps == \"function\", isPatch = typeof patchOrDocumentId != \"string\" && patchOrDocumentId instanceof Patch, isMutationSelection = typeof patchOrDocumentId == \"object\" && (\"query\" in patchOrDocumentId || \"id\" in patchOrDocumentId);\n    if (isPatch)\n      return this._add({ patch: patchOrDocumentId.serialize() });\n    if (isBuilder) {\n      const patch = patchOps(new Patch(patchOrDocumentId, {}, this.#client));\n      if (!(patch instanceof Patch))\n        throw new Error(\"function passed to `patch()` must return the patch\");\n      return this._add({ patch: patch.serialize() });\n    }\n    if (isMutationSelection) {\n      const patch = new Patch(patchOrDocumentId, patchOps || {}, this.#client);\n      return this._add({ patch: patch.serialize() });\n    }\n    return this._add({ patch: { id: patchOrDocumentId, ...patchOps } });\n  }\n}\nclass ObservableTransaction extends BaseTransaction {\n  #client;\n  constructor(operations, client, transactionId) {\n    super(operations, transactionId), this.#client = client;\n  }\n  /**\n   * Clones the transaction\n   */\n  clone() {\n    return new ObservableTransaction([...this.operations], this.#client, this.trxId);\n  }\n  commit(options) {\n    if (!this.#client)\n      throw new Error(\n        \"No `client` passed to transaction, either provide one or pass the transaction to a clients `mutate()` method\"\n      );\n    return this.#client.mutate(\n      this.serialize(),\n      Object.assign({ transactionId: this.trxId }, defaultMutateOptions, options || {})\n    );\n  }\n  patch(patchOrDocumentId, patchOps) {\n    const isBuilder = typeof patchOps == \"function\";\n    if (typeof patchOrDocumentId != \"string\" && patchOrDocumentId instanceof ObservablePatch)\n      return this._add({ patch: patchOrDocumentId.serialize() });\n    if (isBuilder) {\n      const patch = patchOps(new ObservablePatch(patchOrDocumentId, {}, this.#client));\n      if (!(patch instanceof ObservablePatch))\n        throw new Error(\"function passed to `patch()` must return the patch\");\n      return this._add({ patch: patch.serialize() });\n    }\n    return this._add({ patch: { id: patchOrDocumentId, ...patchOps } });\n  }\n}\nconst projectHeader = \"X-Sanity-Project-ID\";\nfunction requestOptions(config, overrides = {}) {\n  const headers = {}, token = overrides.token || config.token;\n  token && (headers.Authorization = `Bearer ${token}`), !overrides.useGlobalApi && !config.useProjectHostname && config.projectId && (headers[projectHeader] = config.projectId);\n  const withCredentials = !!(typeof overrides.withCredentials > \"u\" ? config.token || config.withCredentials : overrides.withCredentials), timeout = typeof overrides.timeout > \"u\" ? config.timeout : overrides.timeout;\n  return Object.assign({}, overrides, {\n    headers: Object.assign({}, headers, overrides.headers || {}),\n    timeout: typeof timeout > \"u\" ? 5 * 60 * 1e3 : timeout,\n    proxy: overrides.proxy || config.proxy,\n    json: !0,\n    withCredentials,\n    fetch: typeof overrides.fetch == \"object\" && typeof config.fetch == \"object\" ? { ...config.fetch, ...overrides.fetch } : overrides.fetch || config.fetch\n  });\n}\nconst encodeQueryString = ({\n  query,\n  params = {},\n  options = {}\n}) => {\n  const searchParams = new URLSearchParams(), { tag, includeMutations, returnQuery, ...opts } = options;\n  tag && searchParams.append(\"tag\", tag), searchParams.append(\"query\", query);\n  for (const [key, value] of Object.entries(params))\n    searchParams.append(`$${key}`, JSON.stringify(value));\n  for (const [key, value] of Object.entries(opts))\n    value && searchParams.append(key, `${value}`);\n  return returnQuery === !1 && searchParams.append(\"returnQuery\", \"false\"), includeMutations === !1 && searchParams.append(\"includeMutations\", \"false\"), `?${searchParams}`;\n}, excludeFalsey = (param, defValue) => param === !1 ? void 0 : typeof param > \"u\" ? defValue : param, getMutationQuery = (options = {}) => ({\n  dryRun: options.dryRun,\n  returnIds: !0,\n  returnDocuments: excludeFalsey(options.returnDocuments, !0),\n  visibility: options.visibility || \"sync\",\n  autoGenerateArrayKeys: options.autoGenerateArrayKeys,\n  skipCrossDatasetReferenceValidation: options.skipCrossDatasetReferenceValidation\n}), isResponse = (event) => event.type === \"response\", getBody = (event) => event.body, indexBy = (docs, attr) => docs.reduce((indexed, doc) => (indexed[attr(doc)] = doc, indexed), /* @__PURE__ */ Object.create(null)), getQuerySizeLimit = 11264;\nfunction _fetch(client, httpRequest, _stega, query, _params = {}, options = {}) {\n  const stega = \"stega\" in options ? {\n    ..._stega || {},\n    ...typeof options.stega == \"boolean\" ? { enabled: options.stega } : options.stega || {}\n  } : _stega, params = stega.enabled ? (0,_chunks_es_stegaClean_js__WEBPACK_IMPORTED_MODULE_7__.stegaClean)(_params) : _params, mapResponse = options.filterResponse === !1 ? (res) => res : (res) => res.result, { cache, next, ...opts } = {\n    // Opt out of setting a `signal` on an internal `fetch` if one isn't provided.\n    // This is necessary in React Server Components to avoid opting out of Request Memoization.\n    useAbortSignal: typeof options.signal < \"u\",\n    // Set `resultSourceMap' when stega is enabled, as it's required for encoding.\n    resultSourceMap: stega.enabled ? \"withKeyArraySelector\" : options.resultSourceMap,\n    ...options,\n    // Default to not returning the query, unless `filterResponse` is `false`,\n    // or `returnQuery` is explicitly set. `true` is the default in Content Lake, so skip if truthy\n    returnQuery: options.filterResponse === !1 && options.returnQuery !== !1\n  }, reqOpts = typeof cache < \"u\" || typeof next < \"u\" ? { ...opts, fetch: { cache, next } } : opts, $request = _dataRequest(client, httpRequest, \"query\", { query, params }, reqOpts);\n  return stega.enabled ? $request.pipe(\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.combineLatestWith)(\n      (0,rxjs__WEBPACK_IMPORTED_MODULE_9__.from)(\n        __webpack_require__.e(/*! import() */ \"vendor-chunks/@sanity\").then(__webpack_require__.bind(__webpack_require__, /*! ./_chunks-es/stegaEncodeSourceMap.js */ \"(action-browser)/./node_modules/@sanity/client/dist/_chunks-es/stegaEncodeSourceMap.js\")).then(function(n) {\n          return n.stegaEncodeSourceMap$1;\n        }).then(\n          ({ stegaEncodeSourceMap }) => stegaEncodeSourceMap\n        )\n      )\n    ),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)(\n      ([res, stegaEncodeSourceMap]) => {\n        const result = stegaEncodeSourceMap(res.result, res.resultSourceMap, stega);\n        return mapResponse({ ...res, result });\n      }\n    )\n  ) : $request.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)(mapResponse));\n}\nfunction _getDocument(client, httpRequest, id, opts = {}) {\n  const options = {\n    uri: _getDataUrl(client, \"doc\", id),\n    json: !0,\n    tag: opts.tag,\n    signal: opts.signal\n  };\n  return _requestObservable(client, httpRequest, options).pipe(\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.filter)(isResponse),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)((event) => event.body.documents && event.body.documents[0])\n  );\n}\nfunction _getDocuments(client, httpRequest, ids, opts = {}) {\n  const options = {\n    uri: _getDataUrl(client, \"doc\", ids.join(\",\")),\n    json: !0,\n    tag: opts.tag,\n    signal: opts.signal\n  };\n  return _requestObservable(client, httpRequest, options).pipe(\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.filter)(isResponse),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)((event) => {\n      const indexed = indexBy(event.body.documents || [], (doc) => doc._id);\n      return ids.map((id) => indexed[id] || null);\n    })\n  );\n}\nfunction _createIfNotExists(client, httpRequest, doc, options) {\n  return requireDocumentId(\"createIfNotExists\", doc), _create(client, httpRequest, doc, \"createIfNotExists\", options);\n}\nfunction _createOrReplace(client, httpRequest, doc, options) {\n  return requireDocumentId(\"createOrReplace\", doc), _create(client, httpRequest, doc, \"createOrReplace\", options);\n}\nfunction _delete(client, httpRequest, selection, options) {\n  return _dataRequest(\n    client,\n    httpRequest,\n    \"mutate\",\n    { mutations: [{ delete: getSelection(selection) }] },\n    options\n  );\n}\nfunction _mutate(client, httpRequest, mutations, options) {\n  let mut;\n  mutations instanceof Patch || mutations instanceof ObservablePatch ? mut = { patch: mutations.serialize() } : mutations instanceof Transaction || mutations instanceof ObservableTransaction ? mut = mutations.serialize() : mut = mutations;\n  const muts = Array.isArray(mut) ? mut : [mut], transactionId = options && options.transactionId || void 0;\n  return _dataRequest(client, httpRequest, \"mutate\", { mutations: muts, transactionId }, options);\n}\nfunction _action(client, httpRequest, actions, options) {\n  const acts = Array.isArray(actions) ? actions : [actions], transactionId = options && options.transactionId || void 0, skipCrossDatasetReferenceValidation = options && options.skipCrossDatasetReferenceValidation || void 0, dryRun = options && options.dryRun || void 0;\n  return _dataRequest(\n    client,\n    httpRequest,\n    \"actions\",\n    { actions: acts, transactionId, skipCrossDatasetReferenceValidation, dryRun },\n    options\n  );\n}\nfunction _dataRequest(client, httpRequest, endpoint, body, options = {}) {\n  const isMutation = endpoint === \"mutate\", isAction = endpoint === \"actions\", isQuery = endpoint === \"query\", strQuery = isMutation || isAction ? \"\" : encodeQueryString(body), useGet = !isMutation && !isAction && strQuery.length < getQuerySizeLimit, stringQuery = useGet ? strQuery : \"\", returnFirst = options.returnFirst, { timeout, token, tag, headers, returnQuery, lastLiveEventId, cacheMode } = options, uri = _getDataUrl(client, endpoint, stringQuery), reqOptions = {\n    method: useGet ? \"GET\" : \"POST\",\n    uri,\n    json: !0,\n    body: useGet ? void 0 : body,\n    query: isMutation && getMutationQuery(options),\n    timeout,\n    headers,\n    token,\n    tag,\n    returnQuery,\n    perspective: options.perspective,\n    resultSourceMap: options.resultSourceMap,\n    lastLiveEventId: Array.isArray(lastLiveEventId) ? lastLiveEventId[0] : lastLiveEventId,\n    cacheMode,\n    canUseCdn: isQuery,\n    signal: options.signal,\n    fetch: options.fetch,\n    useAbortSignal: options.useAbortSignal,\n    useCdn: options.useCdn\n  };\n  return _requestObservable(client, httpRequest, reqOptions).pipe(\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.filter)(isResponse),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)(getBody),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)((res) => {\n      if (!isMutation)\n        return res;\n      const results = res.results || [];\n      if (options.returnDocuments)\n        return returnFirst ? results[0] && results[0].document : results.map((mut) => mut.document);\n      const key = returnFirst ? \"documentId\" : \"documentIds\", ids = returnFirst ? results[0] && results[0].id : results.map((mut) => mut.id);\n      return {\n        transactionId: res.transactionId,\n        results,\n        [key]: ids\n      };\n    })\n  );\n}\nfunction _create(client, httpRequest, doc, op, options = {}) {\n  const mutation = { [op]: doc }, opts = Object.assign({ returnFirst: !0, returnDocuments: !0 }, options);\n  return _dataRequest(client, httpRequest, \"mutate\", { mutations: [mutation] }, opts);\n}\nfunction _requestObservable(client, httpRequest, options) {\n  const uri = options.url || options.uri, config = client.config(), canUseCdn = typeof options.canUseCdn > \"u\" ? [\"GET\", \"HEAD\"].indexOf(options.method || \"GET\") >= 0 && uri.indexOf(\"/data/\") === 0 : options.canUseCdn;\n  let useCdn = (options.useCdn ?? config.useCdn) && canUseCdn;\n  const tag = options.tag && config.requestTagPrefix ? [config.requestTagPrefix, options.tag].join(\".\") : options.tag || config.requestTagPrefix;\n  if (tag && options.tag !== null && (options.query = { tag: requestTag(tag), ...options.query }), [\"GET\", \"HEAD\", \"POST\"].indexOf(options.method || \"GET\") >= 0 && uri.indexOf(\"/data/query/\") === 0) {\n    const resultSourceMap = options.resultSourceMap ?? config.resultSourceMap;\n    resultSourceMap !== void 0 && resultSourceMap !== !1 && (options.query = { resultSourceMap, ...options.query });\n    const perspectiveOption = options.perspective || config.perspective;\n    typeof perspectiveOption < \"u\" && (validateApiPerspective(perspectiveOption), options.query = {\n      perspective: Array.isArray(perspectiveOption) ? perspectiveOption.join(\",\") : perspectiveOption,\n      ...options.query\n    }, perspectiveOption === \"previewDrafts\" && useCdn && (useCdn = !1, printCdnPreviewDraftsWarning())), options.lastLiveEventId && (options.query = { ...options.query, lastLiveEventId: options.lastLiveEventId }), options.returnQuery === !1 && (options.query = { returnQuery: \"false\", ...options.query }), useCdn && options.cacheMode == \"noStale\" && (options.query = { cacheMode: \"noStale\", ...options.query });\n  }\n  const reqOptions = requestOptions(\n    config,\n    Object.assign({}, options, {\n      url: _getUrl(client, uri, useCdn)\n    })\n  ), request = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Observable(\n    (subscriber) => httpRequest(reqOptions, config.requester).subscribe(subscriber)\n  );\n  return options.signal ? request.pipe(_withAbortSignal(options.signal)) : request;\n}\nfunction _request(client, httpRequest, options) {\n  return _requestObservable(client, httpRequest, options).pipe(\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.filter)((event) => event.type === \"response\"),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)((event) => event.body)\n  );\n}\nfunction _getDataUrl(client, operation, path) {\n  const config = client.config(), catalog = hasDataset(config), baseUri = `/${operation}/${catalog}`;\n  return `/data${path ? `${baseUri}/${path}` : baseUri}`.replace(/\\/($|\\?)/, \"$1\");\n}\nfunction _getUrl(client, uri, canUseCdn = !1) {\n  const { url, cdnUrl } = client.config();\n  return `${canUseCdn ? cdnUrl : url}/${uri.replace(/^\\//, \"\")}`;\n}\nfunction _withAbortSignal(signal) {\n  return (input) => new rxjs__WEBPACK_IMPORTED_MODULE_2__.Observable((observer) => {\n    const abort = () => observer.error(_createAbortError(signal));\n    if (signal && signal.aborted) {\n      abort();\n      return;\n    }\n    const subscription = input.subscribe(observer);\n    return signal.addEventListener(\"abort\", abort), () => {\n      signal.removeEventListener(\"abort\", abort), subscription.unsubscribe();\n    };\n  });\n}\nconst isDomExceptionSupported = !!globalThis.DOMException;\nfunction _createAbortError(signal) {\n  if (isDomExceptionSupported)\n    return new DOMException(signal?.reason ?? \"The operation was aborted.\", \"AbortError\");\n  const error = new Error(signal?.reason ?? \"The operation was aborted.\");\n  return error.name = \"AbortError\", error;\n}\nclass ObservableAssetsClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  upload(assetType, body, options) {\n    return _upload(this.#client, this.#httpRequest, assetType, body, options);\n  }\n}\nclass AssetsClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  upload(assetType, body, options) {\n    const observable2 = _upload(this.#client, this.#httpRequest, assetType, body, options);\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(\n      observable2.pipe(\n        (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.filter)((event) => event.type === \"response\"),\n        (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)(\n          (event) => event.body.document\n        )\n      )\n    );\n  }\n}\nfunction _upload(client, httpRequest, assetType, body, opts = {}) {\n  validateAssetType(assetType);\n  let meta = opts.extract || void 0;\n  meta && !meta.length && (meta = [\"none\"]);\n  const dataset2 = hasDataset(client.config()), assetEndpoint = assetType === \"image\" ? \"images\" : \"files\", options = optionsFromFile(opts, body), { tag, label, title, description, creditLine, filename, source } = options, query = {\n    label,\n    title,\n    description,\n    filename,\n    meta,\n    creditLine\n  };\n  return source && (query.sourceId = source.id, query.sourceName = source.name, query.sourceUrl = source.url), _requestObservable(client, httpRequest, {\n    tag,\n    method: \"POST\",\n    timeout: options.timeout || 0,\n    uri: `/assets/${assetEndpoint}/${dataset2}`,\n    headers: options.contentType ? { \"Content-Type\": options.contentType } : {},\n    query,\n    body\n  });\n}\nfunction optionsFromFile(opts, file) {\n  return typeof File > \"u\" || !(file instanceof File) ? opts : Object.assign(\n    {\n      filename: opts.preserveFilename === !1 ? void 0 : file.name,\n      contentType: file.type\n    },\n    opts\n  );\n}\nvar defaults = (obj, defaults2) => Object.keys(defaults2).concat(Object.keys(obj)).reduce((target, prop) => (target[prop] = typeof obj[prop] > \"u\" ? defaults2[prop] : obj[prop], target), {});\nconst pick = (obj, props) => props.reduce((selection, prop) => (typeof obj[prop] > \"u\" || (selection[prop] = obj[prop]), selection), {}), eventSourcePolyfill = (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.defer)(() => Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/@sanity\"), __webpack_require__.e(\"vendor-chunks/eventsource\")]).then(__webpack_require__.t.bind(__webpack_require__, /*! @sanity/eventsource */ \"(action-browser)/./node_modules/@sanity/eventsource/node.js\", 19))).pipe(\n  (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)(({ default: EventSource2 }) => EventSource2),\n  (0,rxjs__WEBPACK_IMPORTED_MODULE_11__.shareReplay)(1)\n);\nfunction reconnectOnConnectionFailure() {\n  return function(source) {\n    return source.pipe(\n      (0,rxjs__WEBPACK_IMPORTED_MODULE_12__.catchError)((err, caught) => err instanceof ConnectionFailedError ? (0,rxjs__WEBPACK_IMPORTED_MODULE_13__.concat)((0,rxjs__WEBPACK_IMPORTED_MODULE_5__.of)({ type: \"reconnect\" }), (0,rxjs__WEBPACK_IMPORTED_MODULE_14__.timer)(1e3).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_6__.mergeMap)(() => caught))) : (0,rxjs__WEBPACK_IMPORTED_MODULE_15__.throwError)(() => err))\n    );\n  };\n}\nconst MAX_URL_LENGTH = 14800, possibleOptions = [\n  \"includePreviousRevision\",\n  \"includeResult\",\n  \"includeMutations\",\n  \"visibility\",\n  \"effectFormat\",\n  \"tag\"\n], defaultOptions = {\n  includeResult: !0\n};\nfunction _listen(query, params, opts = {}) {\n  const { url, token, withCredentials, requestTagPrefix } = this.config(), tag = opts.tag && requestTagPrefix ? [requestTagPrefix, opts.tag].join(\".\") : opts.tag, options = { ...defaults(opts, defaultOptions), tag }, listenOpts = pick(options, possibleOptions), qs = encodeQueryString({ query, params, options: { tag, ...listenOpts } }), uri = `${url}${_getDataUrl(this, \"listen\", qs)}`;\n  if (uri.length > MAX_URL_LENGTH)\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_15__.throwError)(() => new Error(\"Query too large for listener\"));\n  const listenFor = options.events ? options.events : [\"mutation\"], esOptions = {};\n  return (token || withCredentials) && (esOptions.withCredentials = !0), token && (esOptions.headers = {\n    Authorization: `Bearer ${token}`\n  }), connectEventSource(() => (\n    // use polyfill if there is no global EventSource or if we need to set headers\n    (typeof EventSource > \"u\" || esOptions.headers ? eventSourcePolyfill : (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.of)(EventSource)).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)((EventSource2) => new EventSource2(uri, esOptions)))\n  ), listenFor).pipe(\n    reconnectOnConnectionFailure(),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.filter)((event) => listenFor.includes(event.type)),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)(\n      (event) => ({\n        type: event.type,\n        ...\"data\" in event ? event.data : {}\n      })\n    )\n  );\n}\nconst requiredApiVersion = \"2021-03-26\";\nclass LiveClient {\n  #client;\n  constructor(client) {\n    this.#client = client;\n  }\n  /**\n   * Requires `apiVersion` to be `2021-03-26` or later.\n   */\n  events({\n    includeDrafts = !1,\n    tag: _tag\n  } = {}) {\n    const {\n      projectId: projectId2,\n      apiVersion: _apiVersion,\n      token,\n      withCredentials,\n      requestTagPrefix\n    } = this.#client.config(), apiVersion = _apiVersion.replace(/^v/, \"\");\n    if (apiVersion !== \"X\" && apiVersion < requiredApiVersion)\n      throw new Error(\n        `The live events API requires API version ${requiredApiVersion} or later. The current API version is ${apiVersion}. Please update your API version to use this feature.`\n      );\n    if (includeDrafts && !token && !withCredentials)\n      throw new Error(\n        \"The live events API requires a token or withCredentials when 'includeDrafts: true'. Please update your client configuration. The token should have the lowest possible access role.\"\n      );\n    if (includeDrafts && apiVersion !== \"X\")\n      throw new Error(\n        \"The live events API requires API version X when 'includeDrafts: true'. This API is experimental and may change or even be removed.\"\n      );\n    const path = _getDataUrl(this.#client, \"live/events\"), url = new URL(this.#client.getUrl(path, !1)), tag = _tag && requestTagPrefix ? [requestTagPrefix, _tag].join(\".\") : _tag;\n    tag && url.searchParams.set(\"tag\", tag), includeDrafts && url.searchParams.set(\"includeDrafts\", \"true\");\n    const esOptions = {};\n    includeDrafts && token && (esOptions.headers = {\n      Authorization: `Bearer ${token}`\n    }), includeDrafts && withCredentials && (esOptions.withCredentials = !0);\n    const events = connectEventSource(() => (\n      // use polyfill if there is no global EventSource or if we need to set headers\n      (typeof EventSource > \"u\" || esOptions.headers ? eventSourcePolyfill : (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.of)(EventSource)).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)((EventSource2) => new EventSource2(url.href, esOptions)))\n    ), [\n      \"message\",\n      \"restart\",\n      \"welcome\",\n      \"reconnect\"\n    ]).pipe(\n      reconnectOnConnectionFailure(),\n      (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)((event) => {\n        if (event.type === \"message\") {\n          const { data, ...rest } = event;\n          return { ...rest, tags: data.tags };\n        }\n        return event;\n      })\n    ), checkCors = fetchObservable(url, {\n      method: \"OPTIONS\",\n      mode: \"cors\",\n      credentials: esOptions.withCredentials ? \"include\" : \"omit\",\n      headers: esOptions.headers\n    }).pipe(\n      (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.mergeMap)(() => rxjs__WEBPACK_IMPORTED_MODULE_16__.EMPTY),\n      (0,rxjs__WEBPACK_IMPORTED_MODULE_12__.catchError)(() => {\n        throw new CorsOriginError({ projectId: projectId2 });\n      })\n    );\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_13__.concat)(checkCors, events);\n  }\n}\nfunction fetchObservable(url, init) {\n  return new rxjs__WEBPACK_IMPORTED_MODULE_2__.Observable((observer) => {\n    const controller = new AbortController(), signal = controller.signal;\n    return fetch(url, { ...init, signal: controller.signal }).then(\n      (response) => {\n        observer.next(response), observer.complete();\n      },\n      (err) => {\n        signal.aborted || observer.error(err);\n      }\n    ), () => controller.abort();\n  });\n}\nclass ObservableDatasetsClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  /**\n   * Create a new dataset with the given name\n   *\n   * @param name - Name of the dataset to create\n   * @param options - Options for the dataset\n   */\n  create(name, options) {\n    return _modify(this.#client, this.#httpRequest, \"PUT\", name, options);\n  }\n  /**\n   * Edit a dataset with the given name\n   *\n   * @param name - Name of the dataset to edit\n   * @param options - New options for the dataset\n   */\n  edit(name, options) {\n    return _modify(this.#client, this.#httpRequest, \"PATCH\", name, options);\n  }\n  /**\n   * Delete a dataset with the given name\n   *\n   * @param name - Name of the dataset to delete\n   */\n  delete(name) {\n    return _modify(this.#client, this.#httpRequest, \"DELETE\", name);\n  }\n  /**\n   * Fetch a list of datasets for the configured project\n   */\n  list() {\n    return _request(this.#client, this.#httpRequest, {\n      uri: \"/datasets\",\n      tag: null\n    });\n  }\n}\nclass DatasetsClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  /**\n   * Create a new dataset with the given name\n   *\n   * @param name - Name of the dataset to create\n   * @param options - Options for the dataset\n   */\n  create(name, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(\n      _modify(this.#client, this.#httpRequest, \"PUT\", name, options)\n    );\n  }\n  /**\n   * Edit a dataset with the given name\n   *\n   * @param name - Name of the dataset to edit\n   * @param options - New options for the dataset\n   */\n  edit(name, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(\n      _modify(this.#client, this.#httpRequest, \"PATCH\", name, options)\n    );\n  }\n  /**\n   * Delete a dataset with the given name\n   *\n   * @param name - Name of the dataset to delete\n   */\n  delete(name) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(_modify(this.#client, this.#httpRequest, \"DELETE\", name));\n  }\n  /**\n   * Fetch a list of datasets for the configured project\n   */\n  list() {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(\n      _request(this.#client, this.#httpRequest, { uri: \"/datasets\", tag: null })\n    );\n  }\n}\nfunction _modify(client, httpRequest, method, name, options) {\n  return dataset(name), _request(client, httpRequest, {\n    method,\n    uri: `/datasets/${name}`,\n    body: options,\n    tag: null\n  });\n}\nclass ObservableProjectsClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  list(options) {\n    const uri = options?.includeMembers === !1 ? \"/projects?includeMembers=false\" : \"/projects\";\n    return _request(this.#client, this.#httpRequest, { uri });\n  }\n  /**\n   * Fetch a project by project ID\n   *\n   * @param projectId - ID of the project to fetch\n   */\n  getById(projectId2) {\n    return _request(this.#client, this.#httpRequest, { uri: `/projects/${projectId2}` });\n  }\n}\nclass ProjectsClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  list(options) {\n    const uri = options?.includeMembers === !1 ? \"/projects?includeMembers=false\" : \"/projects\";\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(_request(this.#client, this.#httpRequest, { uri }));\n  }\n  /**\n   * Fetch a project by project ID\n   *\n   * @param projectId - ID of the project to fetch\n   */\n  getById(projectId2) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(\n      _request(this.#client, this.#httpRequest, { uri: `/projects/${projectId2}` })\n    );\n  }\n}\nclass ObservableUsersClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  /**\n   * Fetch a user by user ID\n   *\n   * @param id - User ID of the user to fetch. If `me` is provided, a minimal response including the users role is returned.\n   */\n  getById(id) {\n    return _request(\n      this.#client,\n      this.#httpRequest,\n      { uri: `/users/${id}` }\n    );\n  }\n}\nclass UsersClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  /**\n   * Fetch a user by user ID\n   *\n   * @param id - User ID of the user to fetch. If `me` is provided, a minimal response including the users role is returned.\n   */\n  getById(id) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(\n      _request(this.#client, this.#httpRequest, {\n        uri: `/users/${id}`\n      })\n    );\n  }\n}\nclass ObservableSanityClient {\n  assets;\n  datasets;\n  live;\n  projects;\n  users;\n  /**\n   * Private properties\n   */\n  #clientConfig;\n  #httpRequest;\n  /**\n   * Instance properties\n   */\n  listen = _listen;\n  constructor(httpRequest, config = defaultConfig) {\n    this.config(config), this.#httpRequest = httpRequest, this.assets = new ObservableAssetsClient(this, this.#httpRequest), this.datasets = new ObservableDatasetsClient(this, this.#httpRequest), this.live = new LiveClient(this), this.projects = new ObservableProjectsClient(this, this.#httpRequest), this.users = new ObservableUsersClient(this, this.#httpRequest);\n  }\n  /**\n   * Clone the client - returns a new instance\n   */\n  clone() {\n    return new ObservableSanityClient(this.#httpRequest, this.config());\n  }\n  config(newConfig) {\n    if (newConfig === void 0)\n      return { ...this.#clientConfig };\n    if (this.#clientConfig && this.#clientConfig.allowReconfigure === !1)\n      throw new Error(\n        \"Existing client instance cannot be reconfigured - use `withConfig(newConfig)` to return a new client\"\n      );\n    return this.#clientConfig = initConfig(newConfig, this.#clientConfig || {}), this;\n  }\n  /**\n   * Clone the client with a new (partial) configuration.\n   *\n   * @param newConfig - New client configuration properties, shallowly merged with existing configuration\n   */\n  withConfig(newConfig) {\n    const thisConfig = this.config();\n    return new ObservableSanityClient(this.#httpRequest, {\n      ...thisConfig,\n      ...newConfig,\n      stega: {\n        ...thisConfig.stega || {},\n        ...typeof newConfig?.stega == \"boolean\" ? { enabled: newConfig.stega } : newConfig?.stega || {}\n      }\n    });\n  }\n  fetch(query, params, options) {\n    return _fetch(\n      this,\n      this.#httpRequest,\n      this.#clientConfig.stega,\n      query,\n      params,\n      options\n    );\n  }\n  /**\n   * Fetch a single document with the given ID.\n   *\n   * @param id - Document ID to fetch\n   * @param options - Request options\n   */\n  getDocument(id, options) {\n    return _getDocument(this, this.#httpRequest, id, options);\n  }\n  /**\n   * Fetch multiple documents in one request.\n   * Should be used sparingly - performing a query is usually a better option.\n   * The order/position of documents is preserved based on the original array of IDs.\n   * If any of the documents are missing, they will be replaced by a `null` entry in the returned array\n   *\n   * @param ids - Document IDs to fetch\n   * @param options - Request options\n   */\n  getDocuments(ids, options) {\n    return _getDocuments(this, this.#httpRequest, ids, options);\n  }\n  create(document, options) {\n    return _create(this, this.#httpRequest, document, \"create\", options);\n  }\n  createIfNotExists(document, options) {\n    return _createIfNotExists(this, this.#httpRequest, document, options);\n  }\n  createOrReplace(document, options) {\n    return _createOrReplace(this, this.#httpRequest, document, options);\n  }\n  delete(selection, options) {\n    return _delete(this, this.#httpRequest, selection, options);\n  }\n  mutate(operations, options) {\n    return _mutate(this, this.#httpRequest, operations, options);\n  }\n  /**\n   * Create a new buildable patch of operations to perform\n   *\n   * @param selection - Document ID, an array of document IDs, or an object with `query` and optional `params`, defining which document(s) to patch\n   * @param operations - Optional object of patch operations to initialize the patch instance with\n   * @returns Patch instance - call `.commit()` to perform the operations defined\n   */\n  patch(selection, operations) {\n    return new ObservablePatch(selection, operations, this);\n  }\n  /**\n   * Create a new transaction of mutations\n   *\n   * @param operations - Optional array of mutation operations to initialize the transaction instance with\n   */\n  transaction(operations) {\n    return new ObservableTransaction(operations, this);\n  }\n  /**\n   * Perform action operations against the configured dataset\n   *\n   * @param operations - Action operation(s) to execute\n   * @param options - Action options\n   */\n  action(operations, options) {\n    return _action(this, this.#httpRequest, operations, options);\n  }\n  /**\n   * Perform an HTTP request against the Sanity API\n   *\n   * @param options - Request options\n   */\n  request(options) {\n    return _request(this, this.#httpRequest, options);\n  }\n  /**\n   * Get a Sanity API URL for the URI provided\n   *\n   * @param uri - URI/path to build URL for\n   * @param canUseCdn - Whether or not to allow using the API CDN for this route\n   */\n  getUrl(uri, canUseCdn) {\n    return _getUrl(this, uri, canUseCdn);\n  }\n  /**\n   * Get a Sanity API URL for the data operation and path provided\n   *\n   * @param operation - Data operation (eg `query`, `mutate`, `listen` or similar)\n   * @param path - Path to append after the operation\n   */\n  getDataUrl(operation, path) {\n    return _getDataUrl(this, operation, path);\n  }\n}\nclass SanityClient {\n  assets;\n  datasets;\n  live;\n  projects;\n  users;\n  /**\n   * Observable version of the Sanity client, with the same configuration as the promise-based one\n   */\n  observable;\n  /**\n   * Private properties\n   */\n  #clientConfig;\n  #httpRequest;\n  /**\n   * Instance properties\n   */\n  listen = _listen;\n  constructor(httpRequest, config = defaultConfig) {\n    this.config(config), this.#httpRequest = httpRequest, this.assets = new AssetsClient(this, this.#httpRequest), this.datasets = new DatasetsClient(this, this.#httpRequest), this.live = new LiveClient(this), this.projects = new ProjectsClient(this, this.#httpRequest), this.users = new UsersClient(this, this.#httpRequest), this.observable = new ObservableSanityClient(httpRequest, config);\n  }\n  /**\n   * Clone the client - returns a new instance\n   */\n  clone() {\n    return new SanityClient(this.#httpRequest, this.config());\n  }\n  config(newConfig) {\n    if (newConfig === void 0)\n      return { ...this.#clientConfig };\n    if (this.#clientConfig && this.#clientConfig.allowReconfigure === !1)\n      throw new Error(\n        \"Existing client instance cannot be reconfigured - use `withConfig(newConfig)` to return a new client\"\n      );\n    return this.observable && this.observable.config(newConfig), this.#clientConfig = initConfig(newConfig, this.#clientConfig || {}), this;\n  }\n  /**\n   * Clone the client with a new (partial) configuration.\n   *\n   * @param newConfig - New client configuration properties, shallowly merged with existing configuration\n   */\n  withConfig(newConfig) {\n    const thisConfig = this.config();\n    return new SanityClient(this.#httpRequest, {\n      ...thisConfig,\n      ...newConfig,\n      stega: {\n        ...thisConfig.stega || {},\n        ...typeof newConfig?.stega == \"boolean\" ? { enabled: newConfig.stega } : newConfig?.stega || {}\n      }\n    });\n  }\n  fetch(query, params, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(\n      _fetch(\n        this,\n        this.#httpRequest,\n        this.#clientConfig.stega,\n        query,\n        params,\n        options\n      )\n    );\n  }\n  /**\n   * Fetch a single document with the given ID.\n   *\n   * @param id - Document ID to fetch\n   * @param options - Request options\n   */\n  getDocument(id, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(_getDocument(this, this.#httpRequest, id, options));\n  }\n  /**\n   * Fetch multiple documents in one request.\n   * Should be used sparingly - performing a query is usually a better option.\n   * The order/position of documents is preserved based on the original array of IDs.\n   * If any of the documents are missing, they will be replaced by a `null` entry in the returned array\n   *\n   * @param ids - Document IDs to fetch\n   * @param options - Request options\n   */\n  getDocuments(ids, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(_getDocuments(this, this.#httpRequest, ids, options));\n  }\n  create(document, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(\n      _create(this, this.#httpRequest, document, \"create\", options)\n    );\n  }\n  createIfNotExists(document, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(\n      _createIfNotExists(this, this.#httpRequest, document, options)\n    );\n  }\n  createOrReplace(document, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(\n      _createOrReplace(this, this.#httpRequest, document, options)\n    );\n  }\n  delete(selection, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(_delete(this, this.#httpRequest, selection, options));\n  }\n  mutate(operations, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(_mutate(this, this.#httpRequest, operations, options));\n  }\n  /**\n   * Create a new buildable patch of operations to perform\n   *\n   * @param selection - Document ID, an array of document IDs, or an object with `query` and optional `params`, defining which document(s) to patch\n   * @param operations - Optional object of patch operations to initialize the patch instance with\n   * @returns Patch instance - call `.commit()` to perform the operations defined\n   */\n  patch(documentId, operations) {\n    return new Patch(documentId, operations, this);\n  }\n  /**\n   * Create a new transaction of mutations\n   *\n   * @param operations - Optional array of mutation operations to initialize the transaction instance with\n   */\n  transaction(operations) {\n    return new Transaction(operations, this);\n  }\n  /**\n   * Perform action operations against the configured dataset\n   * Returns a promise that resolves to the transaction result\n   *\n   * @param operations - Action operation(s) to execute\n   * @param options - Action options\n   */\n  action(operations, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(_action(this, this.#httpRequest, operations, options));\n  }\n  /**\n   * Perform a request against the Sanity API\n   * NOTE: Only use this for Sanity API endpoints, not for your own APIs!\n   *\n   * @param options - Request options\n   * @returns Promise resolving to the response body\n   */\n  request(options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(_request(this, this.#httpRequest, options));\n  }\n  /**\n   * Perform an HTTP request a `/data` sub-endpoint\n   * NOTE: Considered internal, thus marked as deprecated. Use `request` instead.\n   *\n   * @deprecated - Use `request()` or your own HTTP library instead\n   * @param endpoint - Endpoint to hit (mutate, query etc)\n   * @param body - Request body\n   * @param options - Request options\n   * @internal\n   */\n  dataRequest(endpoint, body, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(_dataRequest(this, this.#httpRequest, endpoint, body, options));\n  }\n  /**\n   * Get a Sanity API URL for the URI provided\n   *\n   * @param uri - URI/path to build URL for\n   * @param canUseCdn - Whether or not to allow using the API CDN for this route\n   */\n  getUrl(uri, canUseCdn) {\n    return _getUrl(this, uri, canUseCdn);\n  }\n  /**\n   * Get a Sanity API URL for the data operation and path provided\n   *\n   * @param operation - Data operation (eg `query`, `mutate`, `listen` or similar)\n   * @param path - Path to append after the operation\n   */\n  getDataUrl(operation, path) {\n    return _getDataUrl(this, operation, path);\n  }\n}\nfunction defineCreateClientExports(envMiddleware2, ClassConstructor) {\n  return { requester: defineHttpRequest(envMiddleware2), createClient: (config) => {\n    const clientRequester = defineHttpRequest(envMiddleware2);\n    return new ClassConstructor(\n      (options, requester2) => (requester2 || clientRequester)({\n        maxRedirects: 0,\n        maxRetries: config.maxRetries,\n        retryDelay: config.retryDelay,\n        ...options\n      }),\n      config\n    );\n  } };\n}\nfunction defineDeprecatedCreateClient(createClient2) {\n  return function(config) {\n    return printNoDefaultExport(), createClient2(config);\n  };\n}\nvar envMiddleware = [];\nconst exp = defineCreateClientExports(envMiddleware, SanityClient), requester = exp.requester, createClient = exp.createClient, deprecatedCreateClient = defineDeprecatedCreateClient(createClient);\n\n//# sourceMappingURL=index.browser.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@sanity/client/dist/index.browser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sanity/client/dist/index.browser.js":
/*!***********************************************************!*\
  !*** ./node_modules/@sanity/client/dist/index.browser.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BasePatch: () => (/* binding */ BasePatch),\n/* harmony export */   BaseTransaction: () => (/* binding */ BaseTransaction),\n/* harmony export */   ChannelError: () => (/* binding */ ChannelError),\n/* harmony export */   ClientError: () => (/* binding */ ClientError),\n/* harmony export */   ConnectionFailedError: () => (/* binding */ ConnectionFailedError),\n/* harmony export */   CorsOriginError: () => (/* binding */ CorsOriginError),\n/* harmony export */   DisconnectError: () => (/* binding */ DisconnectError),\n/* harmony export */   MessageError: () => (/* binding */ MessageError),\n/* harmony export */   MessageParseError: () => (/* binding */ MessageParseError),\n/* harmony export */   ObservablePatch: () => (/* binding */ ObservablePatch),\n/* harmony export */   ObservableSanityClient: () => (/* binding */ ObservableSanityClient),\n/* harmony export */   ObservableTransaction: () => (/* binding */ ObservableTransaction),\n/* harmony export */   Patch: () => (/* binding */ Patch),\n/* harmony export */   SanityClient: () => (/* binding */ SanityClient),\n/* harmony export */   ServerError: () => (/* binding */ ServerError),\n/* harmony export */   Transaction: () => (/* binding */ Transaction),\n/* harmony export */   connectEventSource: () => (/* binding */ connectEventSource),\n/* harmony export */   createClient: () => (/* binding */ createClient),\n/* harmony export */   \"default\": () => (/* binding */ deprecatedCreateClient),\n/* harmony export */   requester: () => (/* binding */ requester),\n/* harmony export */   unstable__adapter: () => (/* reexport safe */ get_it__WEBPACK_IMPORTED_MODULE_0__.adapter),\n/* harmony export */   unstable__environment: () => (/* reexport safe */ get_it__WEBPACK_IMPORTED_MODULE_0__.environment),\n/* harmony export */   validateApiPerspective: () => (/* binding */ validateApiPerspective)\n/* harmony export */ });\n/* harmony import */ var get_it__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! get-it */ \"(rsc)/./node_modules/get-it/dist/index.react-server.js\");\n/* harmony import */ var get_it_middleware__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! get-it/middleware */ \"(rsc)/./node_modules/get-it/dist/middleware.browser.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ \"(rsc)/./node_modules/rxjs/dist/esm5/internal/Observable.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ \"(rsc)/./node_modules/rxjs/dist/esm5/internal/observable/defer.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ \"(rsc)/./node_modules/rxjs/dist/esm5/internal/util/isObservable.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ \"(rsc)/./node_modules/rxjs/dist/esm5/internal/observable/of.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ \"(rsc)/./node_modules/rxjs/dist/esm5/internal/operators/mergeMap.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs */ \"(rsc)/./node_modules/rxjs/dist/esm5/internal/observable/from.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! rxjs */ \"(rsc)/./node_modules/rxjs/dist/esm5/internal/lastValueFrom.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! rxjs */ \"(rsc)/./node_modules/rxjs/dist/esm5/internal/operators/shareReplay.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! rxjs */ \"(rsc)/./node_modules/rxjs/dist/esm5/internal/operators/catchError.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! rxjs */ \"(rsc)/./node_modules/rxjs/dist/esm5/internal/observable/concat.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! rxjs */ \"(rsc)/./node_modules/rxjs/dist/esm5/internal/observable/timer.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! rxjs */ \"(rsc)/./node_modules/rxjs/dist/esm5/internal/observable/throwError.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! rxjs */ \"(rsc)/./node_modules/rxjs/dist/esm5/internal/observable/empty.js\");\n/* harmony import */ var _chunks_es_stegaClean_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./_chunks-es/stegaClean.js */ \"(rsc)/./node_modules/@sanity/client/dist/_chunks-es/stegaClean.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! rxjs/operators */ \"(rsc)/./node_modules/rxjs/dist/cjs/operators/index.js\");\n\n\n\n\n\n\nclass ClientError extends Error {\n  response;\n  statusCode = 400;\n  responseBody;\n  details;\n  constructor(res) {\n    const props = extractErrorProps(res);\n    super(props.message), Object.assign(this, props);\n  }\n}\nclass ServerError extends Error {\n  response;\n  statusCode = 500;\n  responseBody;\n  details;\n  constructor(res) {\n    const props = extractErrorProps(res);\n    super(props.message), Object.assign(this, props);\n  }\n}\nfunction extractErrorProps(res) {\n  const body = res.body, props = {\n    response: res,\n    statusCode: res.statusCode,\n    responseBody: stringifyBody(body, res),\n    message: \"\",\n    details: void 0\n  };\n  if (body.error && body.message)\n    return props.message = `${body.error} - ${body.message}`, props;\n  if (isMutationError(body) || isActionError(body)) {\n    const allItems = body.error.items || [], items = allItems.slice(0, 5).map((item) => item.error?.description).filter(Boolean);\n    let itemsStr = items.length ? `:\n- ${items.join(`\n- `)}` : \"\";\n    return allItems.length > 5 && (itemsStr += `\n...and ${allItems.length - 5} more`), props.message = `${body.error.description}${itemsStr}`, props.details = body.error, props;\n  }\n  return body.error && body.error.description ? (props.message = body.error.description, props.details = body.error, props) : (props.message = body.error || body.message || httpErrorMessage(res), props);\n}\nfunction isMutationError(body) {\n  return isPlainObject(body) && isPlainObject(body.error) && body.error.type === \"mutationError\" && typeof body.error.description == \"string\";\n}\nfunction isActionError(body) {\n  return isPlainObject(body) && isPlainObject(body.error) && body.error.type === \"actionError\" && typeof body.error.description == \"string\";\n}\nfunction isPlainObject(obj) {\n  return typeof obj == \"object\" && obj !== null && !Array.isArray(obj);\n}\nfunction httpErrorMessage(res) {\n  const statusMessage = res.statusMessage ? ` ${res.statusMessage}` : \"\";\n  return `${res.method}-request to ${res.url} resulted in HTTP ${res.statusCode}${statusMessage}`;\n}\nfunction stringifyBody(body, res) {\n  return (res.headers[\"content-type\"] || \"\").toLowerCase().indexOf(\"application/json\") !== -1 ? JSON.stringify(body, null, 2) : body;\n}\nclass CorsOriginError extends Error {\n  projectId;\n  addOriginUrl;\n  constructor({ projectId: projectId2 }) {\n    super(\"CorsOriginError\"), this.name = \"CorsOriginError\", this.projectId = projectId2;\n    const url = new URL(`https://sanity.io/manage/project/${projectId2}/api`);\n    if (typeof location < \"u\") {\n      const { origin } = location;\n      url.searchParams.set(\"cors\", \"add\"), url.searchParams.set(\"origin\", origin), this.addOriginUrl = url, this.message = `The current origin is not allowed to connect to the Live Content API. Add it here: ${url}`;\n    } else\n      this.message = `The current origin is not allowed to connect to the Live Content API. Change your configuration here: ${url}`;\n  }\n}\nconst httpError = {\n  onResponse: (res) => {\n    if (res.statusCode >= 500)\n      throw new ServerError(res);\n    if (res.statusCode >= 400)\n      throw new ClientError(res);\n    return res;\n  }\n};\nfunction printWarnings() {\n  const seen = {};\n  return {\n    onResponse: (res) => {\n      const warn = res.headers[\"x-sanity-warning\"], warnings = Array.isArray(warn) ? warn : [warn];\n      for (const msg of warnings)\n        !msg || seen[msg] || (seen[msg] = !0, console.warn(msg));\n      return res;\n    }\n  };\n}\nfunction defineHttpRequest(envMiddleware2) {\n  return (0,get_it__WEBPACK_IMPORTED_MODULE_0__.getIt)([\n    (0,get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.retry)({ shouldRetry }),\n    ...envMiddleware2,\n    printWarnings(),\n    (0,get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.jsonRequest)(),\n    (0,get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.jsonResponse)(),\n    (0,get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.progress)(),\n    httpError,\n    (0,get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.observable)({ implementation: rxjs__WEBPACK_IMPORTED_MODULE_2__.Observable })\n  ]);\n}\nfunction shouldRetry(err, attempt, options) {\n  if (options.maxRetries === 0) return !1;\n  const isSafe = options.method === \"GET\" || options.method === \"HEAD\", isQuery = (options.uri || options.url).startsWith(\"/data/query\"), isRetriableResponse = err.response && (err.response.statusCode === 429 || err.response.statusCode === 502 || err.response.statusCode === 503);\n  return (isSafe || isQuery) && isRetriableResponse ? !0 : get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.retry.shouldRetry(err, attempt, options);\n}\nconst BASE_URL = \"https://www.sanity.io/help/\";\nfunction generateHelpUrl(slug) {\n  return BASE_URL + slug;\n}\nconst VALID_ASSET_TYPES = [\"image\", \"file\"], VALID_INSERT_LOCATIONS = [\"before\", \"after\", \"replace\"], dataset = (name) => {\n  if (!/^(~[a-z0-9]{1}[-\\w]{0,63}|[a-z0-9]{1}[-\\w]{0,63})$/.test(name))\n    throw new Error(\n      \"Datasets can only contain lowercase characters, numbers, underscores and dashes, and start with tilde, and be maximum 64 characters\"\n    );\n}, projectId = (id) => {\n  if (!/^[-a-z0-9]+$/i.test(id))\n    throw new Error(\"`projectId` can only contain only a-z, 0-9 and dashes\");\n}, validateAssetType = (type) => {\n  if (VALID_ASSET_TYPES.indexOf(type) === -1)\n    throw new Error(`Invalid asset type: ${type}. Must be one of ${VALID_ASSET_TYPES.join(\", \")}`);\n}, validateObject = (op, val) => {\n  if (val === null || typeof val != \"object\" || Array.isArray(val))\n    throw new Error(`${op}() takes an object of properties`);\n}, validateDocumentId = (op, id) => {\n  if (typeof id != \"string\" || !/^[a-z0-9_][a-z0-9_.-]{0,127}$/i.test(id) || id.includes(\"..\"))\n    throw new Error(`${op}(): \"${id}\" is not a valid document ID`);\n}, requireDocumentId = (op, doc) => {\n  if (!doc._id)\n    throw new Error(`${op}() requires that the document contains an ID (\"_id\" property)`);\n  validateDocumentId(op, doc._id);\n}, validateInsert = (at, selector, items) => {\n  const signature = \"insert(at, selector, items)\";\n  if (VALID_INSERT_LOCATIONS.indexOf(at) === -1) {\n    const valid = VALID_INSERT_LOCATIONS.map((loc) => `\"${loc}\"`).join(\", \");\n    throw new Error(`${signature} takes an \"at\"-argument which is one of: ${valid}`);\n  }\n  if (typeof selector != \"string\")\n    throw new Error(`${signature} takes a \"selector\"-argument which must be a string`);\n  if (!Array.isArray(items))\n    throw new Error(`${signature} takes an \"items\"-argument which must be an array`);\n}, hasDataset = (config) => {\n  if (!config.dataset)\n    throw new Error(\"`dataset` must be provided to perform queries\");\n  return config.dataset || \"\";\n}, requestTag = (tag) => {\n  if (typeof tag != \"string\" || !/^[a-z0-9._-]{1,75}$/i.test(tag))\n    throw new Error(\n      \"Tag can only contain alphanumeric characters, underscores, dashes and dots, and be between one and 75 characters long.\"\n    );\n  return tag;\n};\nfunction once(fn) {\n  let didCall = !1, returnValue;\n  return (...args) => (didCall || (returnValue = fn(...args), didCall = !0), returnValue);\n}\nconst createWarningPrinter = (message) => (\n  // eslint-disable-next-line no-console\n  once((...args) => console.warn(message.join(\" \"), ...args))\n), printCdnAndWithCredentialsWarning = createWarningPrinter([\n  \"Because you set `withCredentials` to true, we will override your `useCdn`\",\n  \"setting to be false since (cookie-based) credentials are never set on the CDN\"\n]), printCdnWarning = createWarningPrinter([\n  \"Since you haven't set a value for `useCdn`, we will deliver content using our\",\n  \"global, edge-cached API-CDN. If you wish to have content delivered faster, set\",\n  \"`useCdn: false` to use the Live API. Note: You may incur higher costs using the live API.\"\n]), printCdnPreviewDraftsWarning = createWarningPrinter([\n  \"The Sanity client is configured with the `perspective` set to `previewDrafts`, which doesn't support the API-CDN.\",\n  \"The Live API will be used instead. Set `useCdn: false` in your configuration to hide this warning.\"\n]), printBrowserTokenWarning = createWarningPrinter([\n  \"You have configured Sanity client to use a token in the browser. This may cause unintentional security issues.\",\n  `See ${generateHelpUrl(\n    \"js-client-browser-token\"\n  )} for more information and how to hide this warning.`\n]), printNoApiVersionSpecifiedWarning = createWarningPrinter([\n  \"Using the Sanity client without specifying an API version is deprecated.\",\n  `See ${generateHelpUrl(\"js-client-api-version\")}`\n]), printNoDefaultExport = createWarningPrinter([\n  \"The default export of @sanity/client has been deprecated. Use the named export `createClient` instead.\"\n]), defaultCdnHost = \"apicdn.sanity.io\", defaultConfig = {\n  apiHost: \"https://api.sanity.io\",\n  apiVersion: \"1\",\n  useProjectHostname: !0,\n  stega: { enabled: !1 }\n}, LOCALHOSTS = [\"localhost\", \"127.0.0.1\", \"0.0.0.0\"], isLocal = (host) => LOCALHOSTS.indexOf(host) !== -1;\nfunction validateApiVersion(apiVersion) {\n  if (apiVersion === \"1\" || apiVersion === \"X\")\n    return;\n  const apiDate = new Date(apiVersion);\n  if (!(/^\\d{4}-\\d{2}-\\d{2}$/.test(apiVersion) && apiDate instanceof Date && apiDate.getTime() > 0))\n    throw new Error(\"Invalid API version string, expected `1` or date in format `YYYY-MM-DD`\");\n}\nfunction validateApiPerspective(perspective) {\n  if (Array.isArray(perspective)) {\n    for (const perspectiveValue of perspective)\n      if (perspectiveValue !== \"published\" && perspectiveValue !== \"drafts\" && !(typeof perspectiveValue == \"string\" && perspectiveValue.startsWith(\"r\") && perspectiveValue !== \"raw\"))\n        throw new TypeError(\n          \"Invalid API perspective value, expected `published`, `drafts` or a valid release identifier string\"\n        );\n    return;\n  }\n  switch (perspective) {\n    case \"previewDrafts\":\n    case \"drafts\":\n    case \"published\":\n    case \"raw\":\n      return;\n    default:\n      throw new TypeError(\n        \"Invalid API perspective string, expected `published`, `previewDrafts` or `raw`\"\n      );\n  }\n}\nconst initConfig = (config, prevConfig) => {\n  const specifiedConfig = {\n    ...prevConfig,\n    ...config,\n    stega: {\n      ...typeof prevConfig.stega == \"boolean\" ? { enabled: prevConfig.stega } : prevConfig.stega || defaultConfig.stega,\n      ...typeof config.stega == \"boolean\" ? { enabled: config.stega } : config.stega || {}\n    }\n  };\n  specifiedConfig.apiVersion || printNoApiVersionSpecifiedWarning();\n  const newConfig = {\n    ...defaultConfig,\n    ...specifiedConfig\n  }, projectBased = newConfig.useProjectHostname;\n  if (typeof Promise > \"u\") {\n    const helpUrl = generateHelpUrl(\"js-client-promise-polyfill\");\n    throw new Error(`No native Promise-implementation found, polyfill needed - see ${helpUrl}`);\n  }\n  if (projectBased && !newConfig.projectId)\n    throw new Error(\"Configuration must contain `projectId`\");\n  if (typeof newConfig.perspective < \"u\" && validateApiPerspective(newConfig.perspective), \"encodeSourceMap\" in newConfig)\n    throw new Error(\n      \"It looks like you're using options meant for '@sanity/preview-kit/client'. 'encodeSourceMap' is not supported in '@sanity/client'. Did you mean 'stega.enabled'?\"\n    );\n  if (\"encodeSourceMapAtPath\" in newConfig)\n    throw new Error(\n      \"It looks like you're using options meant for '@sanity/preview-kit/client'. 'encodeSourceMapAtPath' is not supported in '@sanity/client'. Did you mean 'stega.filter'?\"\n    );\n  if (typeof newConfig.stega.enabled != \"boolean\")\n    throw new Error(`stega.enabled must be a boolean, received ${newConfig.stega.enabled}`);\n  if (newConfig.stega.enabled && newConfig.stega.studioUrl === void 0)\n    throw new Error(\"stega.studioUrl must be defined when stega.enabled is true\");\n  if (newConfig.stega.enabled && typeof newConfig.stega.studioUrl != \"string\" && typeof newConfig.stega.studioUrl != \"function\")\n    throw new Error(\n      `stega.studioUrl must be a string or a function, received ${newConfig.stega.studioUrl}`\n    );\n  const isBrowser = typeof window < \"u\" && window.location && window.location.hostname, isLocalhost = isBrowser && isLocal(window.location.hostname);\n  isBrowser && isLocalhost && newConfig.token && newConfig.ignoreBrowserTokenWarning !== !0 ? printBrowserTokenWarning() : typeof newConfig.useCdn > \"u\" && printCdnWarning(), projectBased && projectId(newConfig.projectId), newConfig.dataset && dataset(newConfig.dataset), \"requestTagPrefix\" in newConfig && (newConfig.requestTagPrefix = newConfig.requestTagPrefix ? requestTag(newConfig.requestTagPrefix).replace(/\\.+$/, \"\") : void 0), newConfig.apiVersion = `${newConfig.apiVersion}`.replace(/^v/, \"\"), newConfig.isDefaultApi = newConfig.apiHost === defaultConfig.apiHost, newConfig.useCdn === !0 && newConfig.withCredentials && printCdnAndWithCredentialsWarning(), newConfig.useCdn = newConfig.useCdn !== !1 && !newConfig.withCredentials, validateApiVersion(newConfig.apiVersion);\n  const hostParts = newConfig.apiHost.split(\"://\", 2), protocol = hostParts[0], host = hostParts[1], cdnHost = newConfig.isDefaultApi ? defaultCdnHost : host;\n  return newConfig.useProjectHostname ? (newConfig.url = `${protocol}://${newConfig.projectId}.${host}/v${newConfig.apiVersion}`, newConfig.cdnUrl = `${protocol}://${newConfig.projectId}.${cdnHost}/v${newConfig.apiVersion}`) : (newConfig.url = `${newConfig.apiHost}/v${newConfig.apiVersion}`, newConfig.cdnUrl = newConfig.url), newConfig;\n};\nclass ConnectionFailedError extends Error {\n  name = \"ConnectionFailedError\";\n}\nclass DisconnectError extends Error {\n  name = \"DisconnectError\";\n  reason;\n  constructor(message, reason, options = {}) {\n    super(message, options), this.reason = reason;\n  }\n}\nclass ChannelError extends Error {\n  name = \"ChannelError\";\n  data;\n  constructor(message, data) {\n    super(message), this.data = data;\n  }\n}\nclass MessageError extends Error {\n  name = \"MessageError\";\n  data;\n  constructor(message, data, options = {}) {\n    super(message, options), this.data = data;\n  }\n}\nclass MessageParseError extends Error {\n  name = \"MessageParseError\";\n}\nconst REQUIRED_EVENTS = [\"channelError\", \"disconnect\"];\nfunction connectEventSource(initEventSource, events) {\n  return (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.defer)(() => {\n    const es = initEventSource();\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.isObservable)(es) ? es : (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.of)(es);\n  }).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_6__.mergeMap)((es) => connectWithESInstance(es, events)));\n}\nfunction connectWithESInstance(es, events) {\n  return new rxjs__WEBPACK_IMPORTED_MODULE_2__.Observable((observer) => {\n    const emitOpen = events.includes(\"open\"), emitReconnect = events.includes(\"reconnect\");\n    function onError(evt) {\n      if (\"data\" in evt) {\n        const [parseError, event] = parseEvent(evt);\n        observer.error(\n          parseError ? new MessageParseError(\"Unable to parse EventSource error message\", { cause: event }) : new MessageError((event?.data).message, event)\n        );\n        return;\n      }\n      es.readyState === es.CLOSED ? observer.error(new ConnectionFailedError(\"EventSource connection failed\")) : emitReconnect && observer.next({ type: \"reconnect\" });\n    }\n    function onOpen() {\n      observer.next({ type: \"open\" });\n    }\n    function onMessage(message) {\n      const [parseError, event] = parseEvent(message);\n      if (parseError) {\n        observer.error(\n          new MessageParseError(\"Unable to parse EventSource message\", { cause: parseError })\n        );\n        return;\n      }\n      if (message.type === \"channelError\") {\n        observer.error(new ChannelError(extractErrorMessage(event?.data), event.data));\n        return;\n      }\n      if (message.type === \"disconnect\") {\n        observer.error(\n          new DisconnectError(\n            `Server disconnected client: ${event.data?.reason || \"unknown error\"}`\n          )\n        );\n        return;\n      }\n      observer.next({\n        type: message.type,\n        id: message.lastEventId,\n        ...event.data ? { data: event.data } : {}\n      });\n    }\n    es.addEventListener(\"error\", onError), emitOpen && es.addEventListener(\"open\", onOpen);\n    const cleanedEvents = [.../* @__PURE__ */ new Set([...REQUIRED_EVENTS, ...events])].filter((type) => type !== \"error\" && type !== \"open\" && type !== \"reconnect\");\n    return cleanedEvents.forEach((type) => es.addEventListener(type, onMessage)), () => {\n      es.removeEventListener(\"error\", onError), emitOpen && es.removeEventListener(\"open\", onOpen), cleanedEvents.forEach((type) => es.removeEventListener(type, onMessage)), es.close();\n    };\n  });\n}\nfunction parseEvent(message) {\n  try {\n    const data = typeof message.data == \"string\" && JSON.parse(message.data);\n    return [\n      null,\n      {\n        type: message.type,\n        id: message.lastEventId,\n        ...isEmptyObject(data) ? {} : { data }\n      }\n    ];\n  } catch (err) {\n    return [err, null];\n  }\n}\nfunction extractErrorMessage(err) {\n  return err.error ? err.error.description ? err.error.description : typeof err.error == \"string\" ? err.error : JSON.stringify(err.error, null, 2) : err.message || \"Unknown listener error\";\n}\nfunction isEmptyObject(data) {\n  for (const _ in data)\n    return !1;\n  return !0;\n}\nfunction getSelection(sel) {\n  if (typeof sel == \"string\")\n    return { id: sel };\n  if (Array.isArray(sel))\n    return { query: \"*[_id in $ids]\", params: { ids: sel } };\n  if (typeof sel == \"object\" && sel !== null && \"query\" in sel && typeof sel.query == \"string\")\n    return \"params\" in sel && typeof sel.params == \"object\" && sel.params !== null ? { query: sel.query, params: sel.params } : { query: sel.query };\n  const selectionOpts = [\n    \"* Document ID (<docId>)\",\n    \"* Array of document IDs\",\n    \"* Object containing `query`\"\n  ].join(`\n`);\n  throw new Error(`Unknown selection - must be one of:\n\n${selectionOpts}`);\n}\nclass BasePatch {\n  selection;\n  operations;\n  constructor(selection, operations = {}) {\n    this.selection = selection, this.operations = operations;\n  }\n  /**\n   * Sets the given attributes to the document. Does NOT merge objects.\n   * The operation is added to the current patch, ready to be commited by `commit()`\n   *\n   * @param attrs - Attributes to set. To set a deep attribute, use JSONMatch, eg: \\{\"nested.prop\": \"value\"\\}\n   */\n  set(attrs) {\n    return this._assign(\"set\", attrs);\n  }\n  /**\n   * Sets the given attributes to the document if they are not currently set. Does NOT merge objects.\n   * The operation is added to the current patch, ready to be commited by `commit()`\n   *\n   * @param attrs - Attributes to set. To set a deep attribute, use JSONMatch, eg: \\{\"nested.prop\": \"value\"\\}\n   */\n  setIfMissing(attrs) {\n    return this._assign(\"setIfMissing\", attrs);\n  }\n  /**\n   * Performs a \"diff-match-patch\" operation on the string attributes provided.\n   * The operation is added to the current patch, ready to be commited by `commit()`\n   *\n   * @param attrs - Attributes to perform operation on. To set a deep attribute, use JSONMatch, eg: \\{\"nested.prop\": \"dmp\"\\}\n   */\n  diffMatchPatch(attrs) {\n    return validateObject(\"diffMatchPatch\", attrs), this._assign(\"diffMatchPatch\", attrs);\n  }\n  /**\n   * Unsets the attribute paths provided.\n   * The operation is added to the current patch, ready to be commited by `commit()`\n   *\n   * @param attrs - Attribute paths to unset.\n   */\n  unset(attrs) {\n    if (!Array.isArray(attrs))\n      throw new Error(\"unset(attrs) takes an array of attributes to unset, non-array given\");\n    return this.operations = Object.assign({}, this.operations, { unset: attrs }), this;\n  }\n  /**\n   * Increment a numeric value. Each entry in the argument is either an attribute or a JSON path. The value may be a positive or negative integer or floating-point value. The operation will fail if target value is not a numeric value, or doesn't exist.\n   *\n   * @param attrs - Object of attribute paths to increment, values representing the number to increment by.\n   */\n  inc(attrs) {\n    return this._assign(\"inc\", attrs);\n  }\n  /**\n   * Decrement a numeric value. Each entry in the argument is either an attribute or a JSON path. The value may be a positive or negative integer or floating-point value. The operation will fail if target value is not a numeric value, or doesn't exist.\n   *\n   * @param attrs - Object of attribute paths to decrement, values representing the number to decrement by.\n   */\n  dec(attrs) {\n    return this._assign(\"dec\", attrs);\n  }\n  /**\n   * Provides methods for modifying arrays, by inserting, appending and replacing elements via a JSONPath expression.\n   *\n   * @param at - Location to insert at, relative to the given selector, or 'replace' the matched path\n   * @param selector - JSONPath expression, eg `comments[-1]` or `blocks[_key==\"abc123\"]`\n   * @param items - Array of items to insert/replace\n   */\n  insert(at, selector, items) {\n    return validateInsert(at, selector, items), this._assign(\"insert\", { [at]: selector, items });\n  }\n  /**\n   * Append the given items to the array at the given JSONPath\n   *\n   * @param selector - Attribute/path to append to, eg `comments` or `person.hobbies`\n   * @param items - Array of items to append to the array\n   */\n  append(selector, items) {\n    return this.insert(\"after\", `${selector}[-1]`, items);\n  }\n  /**\n   * Prepend the given items to the array at the given JSONPath\n   *\n   * @param selector - Attribute/path to prepend to, eg `comments` or `person.hobbies`\n   * @param items - Array of items to prepend to the array\n   */\n  prepend(selector, items) {\n    return this.insert(\"before\", `${selector}[0]`, items);\n  }\n  /**\n   * Change the contents of an array by removing existing elements and/or adding new elements.\n   *\n   * @param selector - Attribute or JSONPath expression for array\n   * @param start - Index at which to start changing the array (with origin 0). If greater than the length of the array, actual starting index will be set to the length of the array. If negative, will begin that many elements from the end of the array (with origin -1) and will be set to 0 if absolute value is greater than the length of the array.x\n   * @param deleteCount - An integer indicating the number of old array elements to remove.\n   * @param items - The elements to add to the array, beginning at the start index. If you don't specify any elements, splice() will only remove elements from the array.\n   */\n  splice(selector, start, deleteCount, items) {\n    const delAll = typeof deleteCount > \"u\" || deleteCount === -1, startIndex = start < 0 ? start - 1 : start, delCount = delAll ? -1 : Math.max(0, start + deleteCount), delRange = startIndex < 0 && delCount >= 0 ? \"\" : delCount, rangeSelector = `${selector}[${startIndex}:${delRange}]`;\n    return this.insert(\"replace\", rangeSelector, items || []);\n  }\n  /**\n   * Adds a revision clause, preventing the document from being patched if the `_rev` property does not match the given value\n   *\n   * @param rev - Revision to lock the patch to\n   */\n  ifRevisionId(rev) {\n    return this.operations.ifRevisionID = rev, this;\n  }\n  /**\n   * Return a plain JSON representation of the patch\n   */\n  serialize() {\n    return { ...getSelection(this.selection), ...this.operations };\n  }\n  /**\n   * Return a plain JSON representation of the patch\n   */\n  toJSON() {\n    return this.serialize();\n  }\n  /**\n   * Clears the patch of all operations\n   */\n  reset() {\n    return this.operations = {}, this;\n  }\n  _assign(op, props, merge = !0) {\n    return validateObject(op, props), this.operations = Object.assign({}, this.operations, {\n      [op]: Object.assign({}, merge && this.operations[op] || {}, props)\n    }), this;\n  }\n  _set(op, props) {\n    return this._assign(op, props, !1);\n  }\n}\nclass ObservablePatch extends BasePatch {\n  #client;\n  constructor(selection, operations, client) {\n    super(selection, operations), this.#client = client;\n  }\n  /**\n   * Clones the patch\n   */\n  clone() {\n    return new ObservablePatch(this.selection, { ...this.operations }, this.#client);\n  }\n  commit(options) {\n    if (!this.#client)\n      throw new Error(\n        \"No `client` passed to patch, either provide one or pass the patch to a clients `mutate()` method\"\n      );\n    const returnFirst = typeof this.selection == \"string\", opts = Object.assign({ returnFirst, returnDocuments: !0 }, options);\n    return this.#client.mutate({ patch: this.serialize() }, opts);\n  }\n}\nclass Patch extends BasePatch {\n  #client;\n  constructor(selection, operations, client) {\n    super(selection, operations), this.#client = client;\n  }\n  /**\n   * Clones the patch\n   */\n  clone() {\n    return new Patch(this.selection, { ...this.operations }, this.#client);\n  }\n  commit(options) {\n    if (!this.#client)\n      throw new Error(\n        \"No `client` passed to patch, either provide one or pass the patch to a clients `mutate()` method\"\n      );\n    const returnFirst = typeof this.selection == \"string\", opts = Object.assign({ returnFirst, returnDocuments: !0 }, options);\n    return this.#client.mutate({ patch: this.serialize() }, opts);\n  }\n}\nconst defaultMutateOptions = { returnDocuments: !1 };\nclass BaseTransaction {\n  operations;\n  trxId;\n  constructor(operations = [], transactionId) {\n    this.operations = operations, this.trxId = transactionId;\n  }\n  /**\n   * Creates a new Sanity document. If `_id` is provided and already exists, the mutation will fail. If no `_id` is given, one will automatically be generated by the database.\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param doc - Document to create. Requires a `_type` property.\n   */\n  create(doc) {\n    return validateObject(\"create\", doc), this._add({ create: doc });\n  }\n  /**\n   * Creates a new Sanity document. If a document with the same `_id` already exists, the create operation will be ignored.\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param doc - Document to create if it does not already exist. Requires `_id` and `_type` properties.\n   */\n  createIfNotExists(doc) {\n    const op = \"createIfNotExists\";\n    return validateObject(op, doc), requireDocumentId(op, doc), this._add({ [op]: doc });\n  }\n  /**\n   * Creates a new Sanity document, or replaces an existing one if the same `_id` is already used.\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param doc - Document to create or replace. Requires `_id` and `_type` properties.\n   */\n  createOrReplace(doc) {\n    const op = \"createOrReplace\";\n    return validateObject(op, doc), requireDocumentId(op, doc), this._add({ [op]: doc });\n  }\n  /**\n   * Deletes the document with the given document ID\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param documentId - Document ID to delete\n   */\n  delete(documentId) {\n    return validateDocumentId(\"delete\", documentId), this._add({ delete: { id: documentId } });\n  }\n  transactionId(id) {\n    return id ? (this.trxId = id, this) : this.trxId;\n  }\n  /**\n   * Return a plain JSON representation of the transaction\n   */\n  serialize() {\n    return [...this.operations];\n  }\n  /**\n   * Return a plain JSON representation of the transaction\n   */\n  toJSON() {\n    return this.serialize();\n  }\n  /**\n   * Clears the transaction of all operations\n   */\n  reset() {\n    return this.operations = [], this;\n  }\n  _add(mut) {\n    return this.operations.push(mut), this;\n  }\n}\nclass Transaction extends BaseTransaction {\n  #client;\n  constructor(operations, client, transactionId) {\n    super(operations, transactionId), this.#client = client;\n  }\n  /**\n   * Clones the transaction\n   */\n  clone() {\n    return new Transaction([...this.operations], this.#client, this.trxId);\n  }\n  commit(options) {\n    if (!this.#client)\n      throw new Error(\n        \"No `client` passed to transaction, either provide one or pass the transaction to a clients `mutate()` method\"\n      );\n    return this.#client.mutate(\n      this.serialize(),\n      Object.assign({ transactionId: this.trxId }, defaultMutateOptions, options || {})\n    );\n  }\n  patch(patchOrDocumentId, patchOps) {\n    const isBuilder = typeof patchOps == \"function\", isPatch = typeof patchOrDocumentId != \"string\" && patchOrDocumentId instanceof Patch, isMutationSelection = typeof patchOrDocumentId == \"object\" && (\"query\" in patchOrDocumentId || \"id\" in patchOrDocumentId);\n    if (isPatch)\n      return this._add({ patch: patchOrDocumentId.serialize() });\n    if (isBuilder) {\n      const patch = patchOps(new Patch(patchOrDocumentId, {}, this.#client));\n      if (!(patch instanceof Patch))\n        throw new Error(\"function passed to `patch()` must return the patch\");\n      return this._add({ patch: patch.serialize() });\n    }\n    if (isMutationSelection) {\n      const patch = new Patch(patchOrDocumentId, patchOps || {}, this.#client);\n      return this._add({ patch: patch.serialize() });\n    }\n    return this._add({ patch: { id: patchOrDocumentId, ...patchOps } });\n  }\n}\nclass ObservableTransaction extends BaseTransaction {\n  #client;\n  constructor(operations, client, transactionId) {\n    super(operations, transactionId), this.#client = client;\n  }\n  /**\n   * Clones the transaction\n   */\n  clone() {\n    return new ObservableTransaction([...this.operations], this.#client, this.trxId);\n  }\n  commit(options) {\n    if (!this.#client)\n      throw new Error(\n        \"No `client` passed to transaction, either provide one or pass the transaction to a clients `mutate()` method\"\n      );\n    return this.#client.mutate(\n      this.serialize(),\n      Object.assign({ transactionId: this.trxId }, defaultMutateOptions, options || {})\n    );\n  }\n  patch(patchOrDocumentId, patchOps) {\n    const isBuilder = typeof patchOps == \"function\";\n    if (typeof patchOrDocumentId != \"string\" && patchOrDocumentId instanceof ObservablePatch)\n      return this._add({ patch: patchOrDocumentId.serialize() });\n    if (isBuilder) {\n      const patch = patchOps(new ObservablePatch(patchOrDocumentId, {}, this.#client));\n      if (!(patch instanceof ObservablePatch))\n        throw new Error(\"function passed to `patch()` must return the patch\");\n      return this._add({ patch: patch.serialize() });\n    }\n    return this._add({ patch: { id: patchOrDocumentId, ...patchOps } });\n  }\n}\nconst projectHeader = \"X-Sanity-Project-ID\";\nfunction requestOptions(config, overrides = {}) {\n  const headers = {}, token = overrides.token || config.token;\n  token && (headers.Authorization = `Bearer ${token}`), !overrides.useGlobalApi && !config.useProjectHostname && config.projectId && (headers[projectHeader] = config.projectId);\n  const withCredentials = !!(typeof overrides.withCredentials > \"u\" ? config.token || config.withCredentials : overrides.withCredentials), timeout = typeof overrides.timeout > \"u\" ? config.timeout : overrides.timeout;\n  return Object.assign({}, overrides, {\n    headers: Object.assign({}, headers, overrides.headers || {}),\n    timeout: typeof timeout > \"u\" ? 5 * 60 * 1e3 : timeout,\n    proxy: overrides.proxy || config.proxy,\n    json: !0,\n    withCredentials,\n    fetch: typeof overrides.fetch == \"object\" && typeof config.fetch == \"object\" ? { ...config.fetch, ...overrides.fetch } : overrides.fetch || config.fetch\n  });\n}\nconst encodeQueryString = ({\n  query,\n  params = {},\n  options = {}\n}) => {\n  const searchParams = new URLSearchParams(), { tag, includeMutations, returnQuery, ...opts } = options;\n  tag && searchParams.append(\"tag\", tag), searchParams.append(\"query\", query);\n  for (const [key, value] of Object.entries(params))\n    searchParams.append(`$${key}`, JSON.stringify(value));\n  for (const [key, value] of Object.entries(opts))\n    value && searchParams.append(key, `${value}`);\n  return returnQuery === !1 && searchParams.append(\"returnQuery\", \"false\"), includeMutations === !1 && searchParams.append(\"includeMutations\", \"false\"), `?${searchParams}`;\n}, excludeFalsey = (param, defValue) => param === !1 ? void 0 : typeof param > \"u\" ? defValue : param, getMutationQuery = (options = {}) => ({\n  dryRun: options.dryRun,\n  returnIds: !0,\n  returnDocuments: excludeFalsey(options.returnDocuments, !0),\n  visibility: options.visibility || \"sync\",\n  autoGenerateArrayKeys: options.autoGenerateArrayKeys,\n  skipCrossDatasetReferenceValidation: options.skipCrossDatasetReferenceValidation\n}), isResponse = (event) => event.type === \"response\", getBody = (event) => event.body, indexBy = (docs, attr) => docs.reduce((indexed, doc) => (indexed[attr(doc)] = doc, indexed), /* @__PURE__ */ Object.create(null)), getQuerySizeLimit = 11264;\nfunction _fetch(client, httpRequest, _stega, query, _params = {}, options = {}) {\n  const stega = \"stega\" in options ? {\n    ..._stega || {},\n    ...typeof options.stega == \"boolean\" ? { enabled: options.stega } : options.stega || {}\n  } : _stega, params = stega.enabled ? (0,_chunks_es_stegaClean_js__WEBPACK_IMPORTED_MODULE_7__.stegaClean)(_params) : _params, mapResponse = options.filterResponse === !1 ? (res) => res : (res) => res.result, { cache, next, ...opts } = {\n    // Opt out of setting a `signal` on an internal `fetch` if one isn't provided.\n    // This is necessary in React Server Components to avoid opting out of Request Memoization.\n    useAbortSignal: typeof options.signal < \"u\",\n    // Set `resultSourceMap' when stega is enabled, as it's required for encoding.\n    resultSourceMap: stega.enabled ? \"withKeyArraySelector\" : options.resultSourceMap,\n    ...options,\n    // Default to not returning the query, unless `filterResponse` is `false`,\n    // or `returnQuery` is explicitly set. `true` is the default in Content Lake, so skip if truthy\n    returnQuery: options.filterResponse === !1 && options.returnQuery !== !1\n  }, reqOpts = typeof cache < \"u\" || typeof next < \"u\" ? { ...opts, fetch: { cache, next } } : opts, $request = _dataRequest(client, httpRequest, \"query\", { query, params }, reqOpts);\n  return stega.enabled ? $request.pipe(\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.combineLatestWith)(\n      (0,rxjs__WEBPACK_IMPORTED_MODULE_9__.from)(\n        __webpack_require__.e(/*! import() */ \"vendor-chunks/@sanity\").then(__webpack_require__.bind(__webpack_require__, /*! ./_chunks-es/stegaEncodeSourceMap.js */ \"(rsc)/./node_modules/@sanity/client/dist/_chunks-es/stegaEncodeSourceMap.js\")).then(function(n) {\n          return n.stegaEncodeSourceMap$1;\n        }).then(\n          ({ stegaEncodeSourceMap }) => stegaEncodeSourceMap\n        )\n      )\n    ),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)(\n      ([res, stegaEncodeSourceMap]) => {\n        const result = stegaEncodeSourceMap(res.result, res.resultSourceMap, stega);\n        return mapResponse({ ...res, result });\n      }\n    )\n  ) : $request.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)(mapResponse));\n}\nfunction _getDocument(client, httpRequest, id, opts = {}) {\n  const options = {\n    uri: _getDataUrl(client, \"doc\", id),\n    json: !0,\n    tag: opts.tag,\n    signal: opts.signal\n  };\n  return _requestObservable(client, httpRequest, options).pipe(\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.filter)(isResponse),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)((event) => event.body.documents && event.body.documents[0])\n  );\n}\nfunction _getDocuments(client, httpRequest, ids, opts = {}) {\n  const options = {\n    uri: _getDataUrl(client, \"doc\", ids.join(\",\")),\n    json: !0,\n    tag: opts.tag,\n    signal: opts.signal\n  };\n  return _requestObservable(client, httpRequest, options).pipe(\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.filter)(isResponse),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)((event) => {\n      const indexed = indexBy(event.body.documents || [], (doc) => doc._id);\n      return ids.map((id) => indexed[id] || null);\n    })\n  );\n}\nfunction _createIfNotExists(client, httpRequest, doc, options) {\n  return requireDocumentId(\"createIfNotExists\", doc), _create(client, httpRequest, doc, \"createIfNotExists\", options);\n}\nfunction _createOrReplace(client, httpRequest, doc, options) {\n  return requireDocumentId(\"createOrReplace\", doc), _create(client, httpRequest, doc, \"createOrReplace\", options);\n}\nfunction _delete(client, httpRequest, selection, options) {\n  return _dataRequest(\n    client,\n    httpRequest,\n    \"mutate\",\n    { mutations: [{ delete: getSelection(selection) }] },\n    options\n  );\n}\nfunction _mutate(client, httpRequest, mutations, options) {\n  let mut;\n  mutations instanceof Patch || mutations instanceof ObservablePatch ? mut = { patch: mutations.serialize() } : mutations instanceof Transaction || mutations instanceof ObservableTransaction ? mut = mutations.serialize() : mut = mutations;\n  const muts = Array.isArray(mut) ? mut : [mut], transactionId = options && options.transactionId || void 0;\n  return _dataRequest(client, httpRequest, \"mutate\", { mutations: muts, transactionId }, options);\n}\nfunction _action(client, httpRequest, actions, options) {\n  const acts = Array.isArray(actions) ? actions : [actions], transactionId = options && options.transactionId || void 0, skipCrossDatasetReferenceValidation = options && options.skipCrossDatasetReferenceValidation || void 0, dryRun = options && options.dryRun || void 0;\n  return _dataRequest(\n    client,\n    httpRequest,\n    \"actions\",\n    { actions: acts, transactionId, skipCrossDatasetReferenceValidation, dryRun },\n    options\n  );\n}\nfunction _dataRequest(client, httpRequest, endpoint, body, options = {}) {\n  const isMutation = endpoint === \"mutate\", isAction = endpoint === \"actions\", isQuery = endpoint === \"query\", strQuery = isMutation || isAction ? \"\" : encodeQueryString(body), useGet = !isMutation && !isAction && strQuery.length < getQuerySizeLimit, stringQuery = useGet ? strQuery : \"\", returnFirst = options.returnFirst, { timeout, token, tag, headers, returnQuery, lastLiveEventId, cacheMode } = options, uri = _getDataUrl(client, endpoint, stringQuery), reqOptions = {\n    method: useGet ? \"GET\" : \"POST\",\n    uri,\n    json: !0,\n    body: useGet ? void 0 : body,\n    query: isMutation && getMutationQuery(options),\n    timeout,\n    headers,\n    token,\n    tag,\n    returnQuery,\n    perspective: options.perspective,\n    resultSourceMap: options.resultSourceMap,\n    lastLiveEventId: Array.isArray(lastLiveEventId) ? lastLiveEventId[0] : lastLiveEventId,\n    cacheMode,\n    canUseCdn: isQuery,\n    signal: options.signal,\n    fetch: options.fetch,\n    useAbortSignal: options.useAbortSignal,\n    useCdn: options.useCdn\n  };\n  return _requestObservable(client, httpRequest, reqOptions).pipe(\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.filter)(isResponse),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)(getBody),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)((res) => {\n      if (!isMutation)\n        return res;\n      const results = res.results || [];\n      if (options.returnDocuments)\n        return returnFirst ? results[0] && results[0].document : results.map((mut) => mut.document);\n      const key = returnFirst ? \"documentId\" : \"documentIds\", ids = returnFirst ? results[0] && results[0].id : results.map((mut) => mut.id);\n      return {\n        transactionId: res.transactionId,\n        results,\n        [key]: ids\n      };\n    })\n  );\n}\nfunction _create(client, httpRequest, doc, op, options = {}) {\n  const mutation = { [op]: doc }, opts = Object.assign({ returnFirst: !0, returnDocuments: !0 }, options);\n  return _dataRequest(client, httpRequest, \"mutate\", { mutations: [mutation] }, opts);\n}\nfunction _requestObservable(client, httpRequest, options) {\n  const uri = options.url || options.uri, config = client.config(), canUseCdn = typeof options.canUseCdn > \"u\" ? [\"GET\", \"HEAD\"].indexOf(options.method || \"GET\") >= 0 && uri.indexOf(\"/data/\") === 0 : options.canUseCdn;\n  let useCdn = (options.useCdn ?? config.useCdn) && canUseCdn;\n  const tag = options.tag && config.requestTagPrefix ? [config.requestTagPrefix, options.tag].join(\".\") : options.tag || config.requestTagPrefix;\n  if (tag && options.tag !== null && (options.query = { tag: requestTag(tag), ...options.query }), [\"GET\", \"HEAD\", \"POST\"].indexOf(options.method || \"GET\") >= 0 && uri.indexOf(\"/data/query/\") === 0) {\n    const resultSourceMap = options.resultSourceMap ?? config.resultSourceMap;\n    resultSourceMap !== void 0 && resultSourceMap !== !1 && (options.query = { resultSourceMap, ...options.query });\n    const perspectiveOption = options.perspective || config.perspective;\n    typeof perspectiveOption < \"u\" && (validateApiPerspective(perspectiveOption), options.query = {\n      perspective: Array.isArray(perspectiveOption) ? perspectiveOption.join(\",\") : perspectiveOption,\n      ...options.query\n    }, perspectiveOption === \"previewDrafts\" && useCdn && (useCdn = !1, printCdnPreviewDraftsWarning())), options.lastLiveEventId && (options.query = { ...options.query, lastLiveEventId: options.lastLiveEventId }), options.returnQuery === !1 && (options.query = { returnQuery: \"false\", ...options.query }), useCdn && options.cacheMode == \"noStale\" && (options.query = { cacheMode: \"noStale\", ...options.query });\n  }\n  const reqOptions = requestOptions(\n    config,\n    Object.assign({}, options, {\n      url: _getUrl(client, uri, useCdn)\n    })\n  ), request = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Observable(\n    (subscriber) => httpRequest(reqOptions, config.requester).subscribe(subscriber)\n  );\n  return options.signal ? request.pipe(_withAbortSignal(options.signal)) : request;\n}\nfunction _request(client, httpRequest, options) {\n  return _requestObservable(client, httpRequest, options).pipe(\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.filter)((event) => event.type === \"response\"),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)((event) => event.body)\n  );\n}\nfunction _getDataUrl(client, operation, path) {\n  const config = client.config(), catalog = hasDataset(config), baseUri = `/${operation}/${catalog}`;\n  return `/data${path ? `${baseUri}/${path}` : baseUri}`.replace(/\\/($|\\?)/, \"$1\");\n}\nfunction _getUrl(client, uri, canUseCdn = !1) {\n  const { url, cdnUrl } = client.config();\n  return `${canUseCdn ? cdnUrl : url}/${uri.replace(/^\\//, \"\")}`;\n}\nfunction _withAbortSignal(signal) {\n  return (input) => new rxjs__WEBPACK_IMPORTED_MODULE_2__.Observable((observer) => {\n    const abort = () => observer.error(_createAbortError(signal));\n    if (signal && signal.aborted) {\n      abort();\n      return;\n    }\n    const subscription = input.subscribe(observer);\n    return signal.addEventListener(\"abort\", abort), () => {\n      signal.removeEventListener(\"abort\", abort), subscription.unsubscribe();\n    };\n  });\n}\nconst isDomExceptionSupported = !!globalThis.DOMException;\nfunction _createAbortError(signal) {\n  if (isDomExceptionSupported)\n    return new DOMException(signal?.reason ?? \"The operation was aborted.\", \"AbortError\");\n  const error = new Error(signal?.reason ?? \"The operation was aborted.\");\n  return error.name = \"AbortError\", error;\n}\nclass ObservableAssetsClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  upload(assetType, body, options) {\n    return _upload(this.#client, this.#httpRequest, assetType, body, options);\n  }\n}\nclass AssetsClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  upload(assetType, body, options) {\n    const observable2 = _upload(this.#client, this.#httpRequest, assetType, body, options);\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(\n      observable2.pipe(\n        (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.filter)((event) => event.type === \"response\"),\n        (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)(\n          (event) => event.body.document\n        )\n      )\n    );\n  }\n}\nfunction _upload(client, httpRequest, assetType, body, opts = {}) {\n  validateAssetType(assetType);\n  let meta = opts.extract || void 0;\n  meta && !meta.length && (meta = [\"none\"]);\n  const dataset2 = hasDataset(client.config()), assetEndpoint = assetType === \"image\" ? \"images\" : \"files\", options = optionsFromFile(opts, body), { tag, label, title, description, creditLine, filename, source } = options, query = {\n    label,\n    title,\n    description,\n    filename,\n    meta,\n    creditLine\n  };\n  return source && (query.sourceId = source.id, query.sourceName = source.name, query.sourceUrl = source.url), _requestObservable(client, httpRequest, {\n    tag,\n    method: \"POST\",\n    timeout: options.timeout || 0,\n    uri: `/assets/${assetEndpoint}/${dataset2}`,\n    headers: options.contentType ? { \"Content-Type\": options.contentType } : {},\n    query,\n    body\n  });\n}\nfunction optionsFromFile(opts, file) {\n  return typeof File > \"u\" || !(file instanceof File) ? opts : Object.assign(\n    {\n      filename: opts.preserveFilename === !1 ? void 0 : file.name,\n      contentType: file.type\n    },\n    opts\n  );\n}\nvar defaults = (obj, defaults2) => Object.keys(defaults2).concat(Object.keys(obj)).reduce((target, prop) => (target[prop] = typeof obj[prop] > \"u\" ? defaults2[prop] : obj[prop], target), {});\nconst pick = (obj, props) => props.reduce((selection, prop) => (typeof obj[prop] > \"u\" || (selection[prop] = obj[prop]), selection), {}), eventSourcePolyfill = (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.defer)(() => Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/@sanity\"), __webpack_require__.e(\"vendor-chunks/eventsource\")]).then(__webpack_require__.t.bind(__webpack_require__, /*! @sanity/eventsource */ \"(rsc)/./node_modules/@sanity/eventsource/node.js\", 19))).pipe(\n  (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)(({ default: EventSource2 }) => EventSource2),\n  (0,rxjs__WEBPACK_IMPORTED_MODULE_11__.shareReplay)(1)\n);\nfunction reconnectOnConnectionFailure() {\n  return function(source) {\n    return source.pipe(\n      (0,rxjs__WEBPACK_IMPORTED_MODULE_12__.catchError)((err, caught) => err instanceof ConnectionFailedError ? (0,rxjs__WEBPACK_IMPORTED_MODULE_13__.concat)((0,rxjs__WEBPACK_IMPORTED_MODULE_5__.of)({ type: \"reconnect\" }), (0,rxjs__WEBPACK_IMPORTED_MODULE_14__.timer)(1e3).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_6__.mergeMap)(() => caught))) : (0,rxjs__WEBPACK_IMPORTED_MODULE_15__.throwError)(() => err))\n    );\n  };\n}\nconst MAX_URL_LENGTH = 14800, possibleOptions = [\n  \"includePreviousRevision\",\n  \"includeResult\",\n  \"includeMutations\",\n  \"visibility\",\n  \"effectFormat\",\n  \"tag\"\n], defaultOptions = {\n  includeResult: !0\n};\nfunction _listen(query, params, opts = {}) {\n  const { url, token, withCredentials, requestTagPrefix } = this.config(), tag = opts.tag && requestTagPrefix ? [requestTagPrefix, opts.tag].join(\".\") : opts.tag, options = { ...defaults(opts, defaultOptions), tag }, listenOpts = pick(options, possibleOptions), qs = encodeQueryString({ query, params, options: { tag, ...listenOpts } }), uri = `${url}${_getDataUrl(this, \"listen\", qs)}`;\n  if (uri.length > MAX_URL_LENGTH)\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_15__.throwError)(() => new Error(\"Query too large for listener\"));\n  const listenFor = options.events ? options.events : [\"mutation\"], esOptions = {};\n  return (token || withCredentials) && (esOptions.withCredentials = !0), token && (esOptions.headers = {\n    Authorization: `Bearer ${token}`\n  }), connectEventSource(() => (\n    // use polyfill if there is no global EventSource or if we need to set headers\n    (typeof EventSource > \"u\" || esOptions.headers ? eventSourcePolyfill : (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.of)(EventSource)).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)((EventSource2) => new EventSource2(uri, esOptions)))\n  ), listenFor).pipe(\n    reconnectOnConnectionFailure(),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.filter)((event) => listenFor.includes(event.type)),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)(\n      (event) => ({\n        type: event.type,\n        ...\"data\" in event ? event.data : {}\n      })\n    )\n  );\n}\nconst requiredApiVersion = \"2021-03-26\";\nclass LiveClient {\n  #client;\n  constructor(client) {\n    this.#client = client;\n  }\n  /**\n   * Requires `apiVersion` to be `2021-03-26` or later.\n   */\n  events({\n    includeDrafts = !1,\n    tag: _tag\n  } = {}) {\n    const {\n      projectId: projectId2,\n      apiVersion: _apiVersion,\n      token,\n      withCredentials,\n      requestTagPrefix\n    } = this.#client.config(), apiVersion = _apiVersion.replace(/^v/, \"\");\n    if (apiVersion !== \"X\" && apiVersion < requiredApiVersion)\n      throw new Error(\n        `The live events API requires API version ${requiredApiVersion} or later. The current API version is ${apiVersion}. Please update your API version to use this feature.`\n      );\n    if (includeDrafts && !token && !withCredentials)\n      throw new Error(\n        \"The live events API requires a token or withCredentials when 'includeDrafts: true'. Please update your client configuration. The token should have the lowest possible access role.\"\n      );\n    if (includeDrafts && apiVersion !== \"X\")\n      throw new Error(\n        \"The live events API requires API version X when 'includeDrafts: true'. This API is experimental and may change or even be removed.\"\n      );\n    const path = _getDataUrl(this.#client, \"live/events\"), url = new URL(this.#client.getUrl(path, !1)), tag = _tag && requestTagPrefix ? [requestTagPrefix, _tag].join(\".\") : _tag;\n    tag && url.searchParams.set(\"tag\", tag), includeDrafts && url.searchParams.set(\"includeDrafts\", \"true\");\n    const esOptions = {};\n    includeDrafts && token && (esOptions.headers = {\n      Authorization: `Bearer ${token}`\n    }), includeDrafts && withCredentials && (esOptions.withCredentials = !0);\n    const events = connectEventSource(() => (\n      // use polyfill if there is no global EventSource or if we need to set headers\n      (typeof EventSource > \"u\" || esOptions.headers ? eventSourcePolyfill : (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.of)(EventSource)).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)((EventSource2) => new EventSource2(url.href, esOptions)))\n    ), [\n      \"message\",\n      \"restart\",\n      \"welcome\",\n      \"reconnect\"\n    ]).pipe(\n      reconnectOnConnectionFailure(),\n      (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)((event) => {\n        if (event.type === \"message\") {\n          const { data, ...rest } = event;\n          return { ...rest, tags: data.tags };\n        }\n        return event;\n      })\n    ), checkCors = fetchObservable(url, {\n      method: \"OPTIONS\",\n      mode: \"cors\",\n      credentials: esOptions.withCredentials ? \"include\" : \"omit\",\n      headers: esOptions.headers\n    }).pipe(\n      (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.mergeMap)(() => rxjs__WEBPACK_IMPORTED_MODULE_16__.EMPTY),\n      (0,rxjs__WEBPACK_IMPORTED_MODULE_12__.catchError)(() => {\n        throw new CorsOriginError({ projectId: projectId2 });\n      })\n    );\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_13__.concat)(checkCors, events);\n  }\n}\nfunction fetchObservable(url, init) {\n  return new rxjs__WEBPACK_IMPORTED_MODULE_2__.Observable((observer) => {\n    const controller = new AbortController(), signal = controller.signal;\n    return fetch(url, { ...init, signal: controller.signal }).then(\n      (response) => {\n        observer.next(response), observer.complete();\n      },\n      (err) => {\n        signal.aborted || observer.error(err);\n      }\n    ), () => controller.abort();\n  });\n}\nclass ObservableDatasetsClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  /**\n   * Create a new dataset with the given name\n   *\n   * @param name - Name of the dataset to create\n   * @param options - Options for the dataset\n   */\n  create(name, options) {\n    return _modify(this.#client, this.#httpRequest, \"PUT\", name, options);\n  }\n  /**\n   * Edit a dataset with the given name\n   *\n   * @param name - Name of the dataset to edit\n   * @param options - New options for the dataset\n   */\n  edit(name, options) {\n    return _modify(this.#client, this.#httpRequest, \"PATCH\", name, options);\n  }\n  /**\n   * Delete a dataset with the given name\n   *\n   * @param name - Name of the dataset to delete\n   */\n  delete(name) {\n    return _modify(this.#client, this.#httpRequest, \"DELETE\", name);\n  }\n  /**\n   * Fetch a list of datasets for the configured project\n   */\n  list() {\n    return _request(this.#client, this.#httpRequest, {\n      uri: \"/datasets\",\n      tag: null\n    });\n  }\n}\nclass DatasetsClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  /**\n   * Create a new dataset with the given name\n   *\n   * @param name - Name of the dataset to create\n   * @param options - Options for the dataset\n   */\n  create(name, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(\n      _modify(this.#client, this.#httpRequest, \"PUT\", name, options)\n    );\n  }\n  /**\n   * Edit a dataset with the given name\n   *\n   * @param name - Name of the dataset to edit\n   * @param options - New options for the dataset\n   */\n  edit(name, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(\n      _modify(this.#client, this.#httpRequest, \"PATCH\", name, options)\n    );\n  }\n  /**\n   * Delete a dataset with the given name\n   *\n   * @param name - Name of the dataset to delete\n   */\n  delete(name) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(_modify(this.#client, this.#httpRequest, \"DELETE\", name));\n  }\n  /**\n   * Fetch a list of datasets for the configured project\n   */\n  list() {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(\n      _request(this.#client, this.#httpRequest, { uri: \"/datasets\", tag: null })\n    );\n  }\n}\nfunction _modify(client, httpRequest, method, name, options) {\n  return dataset(name), _request(client, httpRequest, {\n    method,\n    uri: `/datasets/${name}`,\n    body: options,\n    tag: null\n  });\n}\nclass ObservableProjectsClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  list(options) {\n    const uri = options?.includeMembers === !1 ? \"/projects?includeMembers=false\" : \"/projects\";\n    return _request(this.#client, this.#httpRequest, { uri });\n  }\n  /**\n   * Fetch a project by project ID\n   *\n   * @param projectId - ID of the project to fetch\n   */\n  getById(projectId2) {\n    return _request(this.#client, this.#httpRequest, { uri: `/projects/${projectId2}` });\n  }\n}\nclass ProjectsClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  list(options) {\n    const uri = options?.includeMembers === !1 ? \"/projects?includeMembers=false\" : \"/projects\";\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(_request(this.#client, this.#httpRequest, { uri }));\n  }\n  /**\n   * Fetch a project by project ID\n   *\n   * @param projectId - ID of the project to fetch\n   */\n  getById(projectId2) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(\n      _request(this.#client, this.#httpRequest, { uri: `/projects/${projectId2}` })\n    );\n  }\n}\nclass ObservableUsersClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  /**\n   * Fetch a user by user ID\n   *\n   * @param id - User ID of the user to fetch. If `me` is provided, a minimal response including the users role is returned.\n   */\n  getById(id) {\n    return _request(\n      this.#client,\n      this.#httpRequest,\n      { uri: `/users/${id}` }\n    );\n  }\n}\nclass UsersClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  /**\n   * Fetch a user by user ID\n   *\n   * @param id - User ID of the user to fetch. If `me` is provided, a minimal response including the users role is returned.\n   */\n  getById(id) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(\n      _request(this.#client, this.#httpRequest, {\n        uri: `/users/${id}`\n      })\n    );\n  }\n}\nclass ObservableSanityClient {\n  assets;\n  datasets;\n  live;\n  projects;\n  users;\n  /**\n   * Private properties\n   */\n  #clientConfig;\n  #httpRequest;\n  /**\n   * Instance properties\n   */\n  listen = _listen;\n  constructor(httpRequest, config = defaultConfig) {\n    this.config(config), this.#httpRequest = httpRequest, this.assets = new ObservableAssetsClient(this, this.#httpRequest), this.datasets = new ObservableDatasetsClient(this, this.#httpRequest), this.live = new LiveClient(this), this.projects = new ObservableProjectsClient(this, this.#httpRequest), this.users = new ObservableUsersClient(this, this.#httpRequest);\n  }\n  /**\n   * Clone the client - returns a new instance\n   */\n  clone() {\n    return new ObservableSanityClient(this.#httpRequest, this.config());\n  }\n  config(newConfig) {\n    if (newConfig === void 0)\n      return { ...this.#clientConfig };\n    if (this.#clientConfig && this.#clientConfig.allowReconfigure === !1)\n      throw new Error(\n        \"Existing client instance cannot be reconfigured - use `withConfig(newConfig)` to return a new client\"\n      );\n    return this.#clientConfig = initConfig(newConfig, this.#clientConfig || {}), this;\n  }\n  /**\n   * Clone the client with a new (partial) configuration.\n   *\n   * @param newConfig - New client configuration properties, shallowly merged with existing configuration\n   */\n  withConfig(newConfig) {\n    const thisConfig = this.config();\n    return new ObservableSanityClient(this.#httpRequest, {\n      ...thisConfig,\n      ...newConfig,\n      stega: {\n        ...thisConfig.stega || {},\n        ...typeof newConfig?.stega == \"boolean\" ? { enabled: newConfig.stega } : newConfig?.stega || {}\n      }\n    });\n  }\n  fetch(query, params, options) {\n    return _fetch(\n      this,\n      this.#httpRequest,\n      this.#clientConfig.stega,\n      query,\n      params,\n      options\n    );\n  }\n  /**\n   * Fetch a single document with the given ID.\n   *\n   * @param id - Document ID to fetch\n   * @param options - Request options\n   */\n  getDocument(id, options) {\n    return _getDocument(this, this.#httpRequest, id, options);\n  }\n  /**\n   * Fetch multiple documents in one request.\n   * Should be used sparingly - performing a query is usually a better option.\n   * The order/position of documents is preserved based on the original array of IDs.\n   * If any of the documents are missing, they will be replaced by a `null` entry in the returned array\n   *\n   * @param ids - Document IDs to fetch\n   * @param options - Request options\n   */\n  getDocuments(ids, options) {\n    return _getDocuments(this, this.#httpRequest, ids, options);\n  }\n  create(document, options) {\n    return _create(this, this.#httpRequest, document, \"create\", options);\n  }\n  createIfNotExists(document, options) {\n    return _createIfNotExists(this, this.#httpRequest, document, options);\n  }\n  createOrReplace(document, options) {\n    return _createOrReplace(this, this.#httpRequest, document, options);\n  }\n  delete(selection, options) {\n    return _delete(this, this.#httpRequest, selection, options);\n  }\n  mutate(operations, options) {\n    return _mutate(this, this.#httpRequest, operations, options);\n  }\n  /**\n   * Create a new buildable patch of operations to perform\n   *\n   * @param selection - Document ID, an array of document IDs, or an object with `query` and optional `params`, defining which document(s) to patch\n   * @param operations - Optional object of patch operations to initialize the patch instance with\n   * @returns Patch instance - call `.commit()` to perform the operations defined\n   */\n  patch(selection, operations) {\n    return new ObservablePatch(selection, operations, this);\n  }\n  /**\n   * Create a new transaction of mutations\n   *\n   * @param operations - Optional array of mutation operations to initialize the transaction instance with\n   */\n  transaction(operations) {\n    return new ObservableTransaction(operations, this);\n  }\n  /**\n   * Perform action operations against the configured dataset\n   *\n   * @param operations - Action operation(s) to execute\n   * @param options - Action options\n   */\n  action(operations, options) {\n    return _action(this, this.#httpRequest, operations, options);\n  }\n  /**\n   * Perform an HTTP request against the Sanity API\n   *\n   * @param options - Request options\n   */\n  request(options) {\n    return _request(this, this.#httpRequest, options);\n  }\n  /**\n   * Get a Sanity API URL for the URI provided\n   *\n   * @param uri - URI/path to build URL for\n   * @param canUseCdn - Whether or not to allow using the API CDN for this route\n   */\n  getUrl(uri, canUseCdn) {\n    return _getUrl(this, uri, canUseCdn);\n  }\n  /**\n   * Get a Sanity API URL for the data operation and path provided\n   *\n   * @param operation - Data operation (eg `query`, `mutate`, `listen` or similar)\n   * @param path - Path to append after the operation\n   */\n  getDataUrl(operation, path) {\n    return _getDataUrl(this, operation, path);\n  }\n}\nclass SanityClient {\n  assets;\n  datasets;\n  live;\n  projects;\n  users;\n  /**\n   * Observable version of the Sanity client, with the same configuration as the promise-based one\n   */\n  observable;\n  /**\n   * Private properties\n   */\n  #clientConfig;\n  #httpRequest;\n  /**\n   * Instance properties\n   */\n  listen = _listen;\n  constructor(httpRequest, config = defaultConfig) {\n    this.config(config), this.#httpRequest = httpRequest, this.assets = new AssetsClient(this, this.#httpRequest), this.datasets = new DatasetsClient(this, this.#httpRequest), this.live = new LiveClient(this), this.projects = new ProjectsClient(this, this.#httpRequest), this.users = new UsersClient(this, this.#httpRequest), this.observable = new ObservableSanityClient(httpRequest, config);\n  }\n  /**\n   * Clone the client - returns a new instance\n   */\n  clone() {\n    return new SanityClient(this.#httpRequest, this.config());\n  }\n  config(newConfig) {\n    if (newConfig === void 0)\n      return { ...this.#clientConfig };\n    if (this.#clientConfig && this.#clientConfig.allowReconfigure === !1)\n      throw new Error(\n        \"Existing client instance cannot be reconfigured - use `withConfig(newConfig)` to return a new client\"\n      );\n    return this.observable && this.observable.config(newConfig), this.#clientConfig = initConfig(newConfig, this.#clientConfig || {}), this;\n  }\n  /**\n   * Clone the client with a new (partial) configuration.\n   *\n   * @param newConfig - New client configuration properties, shallowly merged with existing configuration\n   */\n  withConfig(newConfig) {\n    const thisConfig = this.config();\n    return new SanityClient(this.#httpRequest, {\n      ...thisConfig,\n      ...newConfig,\n      stega: {\n        ...thisConfig.stega || {},\n        ...typeof newConfig?.stega == \"boolean\" ? { enabled: newConfig.stega } : newConfig?.stega || {}\n      }\n    });\n  }\n  fetch(query, params, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(\n      _fetch(\n        this,\n        this.#httpRequest,\n        this.#clientConfig.stega,\n        query,\n        params,\n        options\n      )\n    );\n  }\n  /**\n   * Fetch a single document with the given ID.\n   *\n   * @param id - Document ID to fetch\n   * @param options - Request options\n   */\n  getDocument(id, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(_getDocument(this, this.#httpRequest, id, options));\n  }\n  /**\n   * Fetch multiple documents in one request.\n   * Should be used sparingly - performing a query is usually a better option.\n   * The order/position of documents is preserved based on the original array of IDs.\n   * If any of the documents are missing, they will be replaced by a `null` entry in the returned array\n   *\n   * @param ids - Document IDs to fetch\n   * @param options - Request options\n   */\n  getDocuments(ids, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(_getDocuments(this, this.#httpRequest, ids, options));\n  }\n  create(document, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(\n      _create(this, this.#httpRequest, document, \"create\", options)\n    );\n  }\n  createIfNotExists(document, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(\n      _createIfNotExists(this, this.#httpRequest, document, options)\n    );\n  }\n  createOrReplace(document, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(\n      _createOrReplace(this, this.#httpRequest, document, options)\n    );\n  }\n  delete(selection, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(_delete(this, this.#httpRequest, selection, options));\n  }\n  mutate(operations, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(_mutate(this, this.#httpRequest, operations, options));\n  }\n  /**\n   * Create a new buildable patch of operations to perform\n   *\n   * @param selection - Document ID, an array of document IDs, or an object with `query` and optional `params`, defining which document(s) to patch\n   * @param operations - Optional object of patch operations to initialize the patch instance with\n   * @returns Patch instance - call `.commit()` to perform the operations defined\n   */\n  patch(documentId, operations) {\n    return new Patch(documentId, operations, this);\n  }\n  /**\n   * Create a new transaction of mutations\n   *\n   * @param operations - Optional array of mutation operations to initialize the transaction instance with\n   */\n  transaction(operations) {\n    return new Transaction(operations, this);\n  }\n  /**\n   * Perform action operations against the configured dataset\n   * Returns a promise that resolves to the transaction result\n   *\n   * @param operations - Action operation(s) to execute\n   * @param options - Action options\n   */\n  action(operations, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(_action(this, this.#httpRequest, operations, options));\n  }\n  /**\n   * Perform a request against the Sanity API\n   * NOTE: Only use this for Sanity API endpoints, not for your own APIs!\n   *\n   * @param options - Request options\n   * @returns Promise resolving to the response body\n   */\n  request(options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(_request(this, this.#httpRequest, options));\n  }\n  /**\n   * Perform an HTTP request a `/data` sub-endpoint\n   * NOTE: Considered internal, thus marked as deprecated. Use `request` instead.\n   *\n   * @deprecated - Use `request()` or your own HTTP library instead\n   * @param endpoint - Endpoint to hit (mutate, query etc)\n   * @param body - Request body\n   * @param options - Request options\n   * @internal\n   */\n  dataRequest(endpoint, body, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.lastValueFrom)(_dataRequest(this, this.#httpRequest, endpoint, body, options));\n  }\n  /**\n   * Get a Sanity API URL for the URI provided\n   *\n   * @param uri - URI/path to build URL for\n   * @param canUseCdn - Whether or not to allow using the API CDN for this route\n   */\n  getUrl(uri, canUseCdn) {\n    return _getUrl(this, uri, canUseCdn);\n  }\n  /**\n   * Get a Sanity API URL for the data operation and path provided\n   *\n   * @param operation - Data operation (eg `query`, `mutate`, `listen` or similar)\n   * @param path - Path to append after the operation\n   */\n  getDataUrl(operation, path) {\n    return _getDataUrl(this, operation, path);\n  }\n}\nfunction defineCreateClientExports(envMiddleware2, ClassConstructor) {\n  return { requester: defineHttpRequest(envMiddleware2), createClient: (config) => {\n    const clientRequester = defineHttpRequest(envMiddleware2);\n    return new ClassConstructor(\n      (options, requester2) => (requester2 || clientRequester)({\n        maxRedirects: 0,\n        maxRetries: config.maxRetries,\n        retryDelay: config.retryDelay,\n        ...options\n      }),\n      config\n    );\n  } };\n}\nfunction defineDeprecatedCreateClient(createClient2) {\n  return function(config) {\n    return printNoDefaultExport(), createClient2(config);\n  };\n}\nvar envMiddleware = [];\nconst exp = defineCreateClientExports(envMiddleware, SanityClient), requester = exp.requester, createClient = exp.createClient, deprecatedCreateClient = defineDeprecatedCreateClient(createClient);\n\n//# sourceMappingURL=index.browser.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sanity/client/dist/index.browser.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@sanity/next-loader/dist/_chunks-es/utils.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@sanity/next-loader/dist/_chunks-es/utils.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   perspectiveCookieName: () => (/* binding */ perspectiveCookieName),\n/* harmony export */   sanitizePerspective: () => (/* binding */ sanitizePerspective)\n/* harmony export */ });\n/* harmony import */ var _sanity_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sanity/client */ \"(action-browser)/./node_modules/@sanity/client/dist/index.browser.js\");\n\nconst perspectiveCookieName = \"sanity-preview-perspective\";\nfunction sanitizePerspective(_perspective, fallback) {\n  const perspective = typeof _perspective == \"string\" && _perspective.includes(\",\") ? _perspective.split(\",\") : _perspective;\n  try {\n    return (0,_sanity_client__WEBPACK_IMPORTED_MODULE_0__.validateApiPerspective)(perspective), perspective === \"raw\" ? fallback : perspective;\n  } catch (err) {\n    return console.warn(\"Invalid perspective:\", _perspective, perspective, err), fallback;\n  }\n}\n\n//# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac2FuaXR5L25leHQtbG9hZGVyL2Rpc3QvX2NodW5rcy1lcy91dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBd0Q7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLHNFQUFzQjtBQUNqQyxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBSUU7QUFDRiIsInNvdXJjZXMiOlsiL21lZGlhL2F3YWlzL05ldyBWb2x1bWUvR292ZXJOT3IgSG91c2UgL2hhY2thdGhvbi0zL3NlY29uZFRpbWVzL2hhY2thdGhvbi1iYW5kYWdlL25vZGVfbW9kdWxlcy9Ac2FuaXR5L25leHQtbG9hZGVyL2Rpc3QvX2NodW5rcy1lcy91dGlscy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB2YWxpZGF0ZUFwaVBlcnNwZWN0aXZlIH0gZnJvbSBcIkBzYW5pdHkvY2xpZW50XCI7XG5jb25zdCBwZXJzcGVjdGl2ZUNvb2tpZU5hbWUgPSBcInNhbml0eS1wcmV2aWV3LXBlcnNwZWN0aXZlXCI7XG5mdW5jdGlvbiBzYW5pdGl6ZVBlcnNwZWN0aXZlKF9wZXJzcGVjdGl2ZSwgZmFsbGJhY2spIHtcbiAgY29uc3QgcGVyc3BlY3RpdmUgPSB0eXBlb2YgX3BlcnNwZWN0aXZlID09IFwic3RyaW5nXCIgJiYgX3BlcnNwZWN0aXZlLmluY2x1ZGVzKFwiLFwiKSA/IF9wZXJzcGVjdGl2ZS5zcGxpdChcIixcIikgOiBfcGVyc3BlY3RpdmU7XG4gIHRyeSB7XG4gICAgcmV0dXJuIHZhbGlkYXRlQXBpUGVyc3BlY3RpdmUocGVyc3BlY3RpdmUpLCBwZXJzcGVjdGl2ZSA9PT0gXCJyYXdcIiA/IGZhbGxiYWNrIDogcGVyc3BlY3RpdmU7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIHJldHVybiBjb25zb2xlLndhcm4oXCJJbnZhbGlkIHBlcnNwZWN0aXZlOlwiLCBfcGVyc3BlY3RpdmUsIHBlcnNwZWN0aXZlLCBlcnIpLCBmYWxsYmFjaztcbiAgfVxufVxuZXhwb3J0IHtcbiAgcGVyc3BlY3RpdmVDb29raWVOYW1lLFxuICBzYW5pdGl6ZVBlcnNwZWN0aXZlXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXRpbHMuanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@sanity/next-loader/dist/_chunks-es/utils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sanity/next-loader/dist/client-components/live-stream.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@sanity/next-loader/dist/client-components/live-stream.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-server-dom-webpack/server.edge */ "(rsc)/./node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-server-dom-webpack-server-edge.js");

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(
function() { throw new Error("Attempted to call the default export of \"/media/awais/New Volume/GoverNOr House /hackathon-3/secondTimes/hackathon-bandage/node_modules/@sanity/next-loader/dist/client-components/live-stream.js\" from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component."); },
"/media/awais/New Volume/GoverNOr House /hackathon-3/secondTimes/hackathon-bandage/node_modules/@sanity/next-loader/dist/client-components/live-stream.js",
"default",
));


/***/ }),

/***/ "(rsc)/./node_modules/@sanity/next-loader/dist/client-components/live.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@sanity/next-loader/dist/client-components/live.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-server-dom-webpack/server.edge */ "(rsc)/./node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-server-dom-webpack-server-edge.js");

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(
function() { throw new Error("Attempted to call the default export of \"/media/awais/New Volume/GoverNOr House /hackathon-3/secondTimes/hackathon-bandage/node_modules/@sanity/next-loader/dist/client-components/live.js\" from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component."); },
"/media/awais/New Volume/GoverNOr House /hackathon-3/secondTimes/hackathon-bandage/node_modules/@sanity/next-loader/dist/client-components/live.js",
"default",
));


/***/ }),

/***/ "(action-browser)/./node_modules/@sanity/next-loader/dist/server-actions.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@sanity/next-loader/dist/server-actions.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   revalidateSyncTags: () => (/* binding */ revalidateSyncTags),\n/* harmony export */   setPerspectiveCookie: () => (/* binding */ setPerspectiveCookie)\n/* harmony export */ });\n/* harmony import */ var private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! private-next-rsc-server-reference */ \"(action-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/server-reference.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! private-next-rsc-action-encryption */ \"(action-browser)/./node_modules/next/dist/server/app-render/encryption.js\");\n/* harmony import */ var _chunks_es_utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./_chunks-es/utils.js */ \"(action-browser)/./node_modules/@sanity/next-loader/dist/_chunks-es/utils.js\");\n/* harmony import */ var next_cache_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/cache.js */ \"(action-browser)/./node_modules/next/cache.js\");\n/* harmony import */ var next_headers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/headers.js */ \"(action-browser)/./node_modules/next/dist/api/headers.js\");\n/* harmony import */ var private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! private-next-rsc-action-validate */ \"(action-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-validate.js\");\n/* __next_internal_action_entry_do_not_use__ {\"7f819735203160e7e22e2ef4afa67c6d5172248e92\":\"setPerspectiveCookie\",\"7faaf08e057fc174ba647c29a180bb15fba7da76cc\":\"revalidateSyncTags\"} */ \n\n\n\n\nasync function revalidateSyncTags(tags) {\n    await (0,next_cache_js__WEBPACK_IMPORTED_MODULE_2__.revalidateTag)(\"sanity:fetch-sync-tags\");\n    for (const _tag of tags){\n        const tag = `sanity:${_tag}`;\n        await (0,next_cache_js__WEBPACK_IMPORTED_MODULE_2__.revalidateTag)(tag), console.log(`<SanityLive /> revalidated tag: ${tag}`);\n    }\n}\nasync function setPerspectiveCookie(perspective) {\n    if (!(await (0,next_headers_js__WEBPACK_IMPORTED_MODULE_3__.draftMode)()).isEnabled) return;\n    const sanitizedPerspective = (0,_chunks_es_utils_js__WEBPACK_IMPORTED_MODULE_4__.sanitizePerspective)(perspective, \"previewDrafts\");\n    if (perspective !== sanitizedPerspective) throw new Error(`Invalid perspective: ${perspective}`);\n    (await (0,next_headers_js__WEBPACK_IMPORTED_MODULE_3__.cookies)()).set(_chunks_es_utils_js__WEBPACK_IMPORTED_MODULE_4__.perspectiveCookieName, Array.isArray(sanitizedPerspective) ? sanitizedPerspective.join(\",\") : sanitizedPerspective, {\n        httpOnly: !0,\n        path: \"/\",\n        secure: !0,\n        sameSite: \"none\"\n    });\n}\n //# sourceMappingURL=server-actions.js.map\n\n(0,private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_5__.ensureServerEntryExports)([\n    revalidateSyncTags,\n    setPerspectiveCookie\n]);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(revalidateSyncTags, \"7faaf08e057fc174ba647c29a180bb15fba7da76cc\", null);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(setPerspectiveCookie, \"7f819735203160e7e22e2ef4afa67c6d5172248e92\", null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac2FuaXR5L25leHQtbG9hZGVyL2Rpc3Qvc2VydmVyLWFjdGlvbnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxlQUFzQixtQkFBbUIsTUFBZ0M7SUFDdkUsTUFBTSw0REFBYSxDQUFDLHdCQUF3QjtJQUU1QyxXQUFXLFFBQVEsS0FBTTtRQUNqQixZQUFNLFVBQVUsSUFBSTtRQUMxQixNQUFNLDREQUFhLENBQUMsR0FBRyxHQUV2QixRQUFRLElBQUksbUNBQW1DLEdBQUcsRUFBRTtJQUFBO0FBRXhEO0FBRUEsZUFBc0IscUJBQXFCLGFBQStDO0lBQ3BGLE1BQUUsTUFBTSwwREFBUyxFQUFULEVBQWEsV0FFdkI7SUFFSSw2QkFBdUIsd0VBQW1CLENBQUMsYUFBYSxlQUFlO0lBQzdFLElBQUksZ0JBQWdCLHNCQUNsQixNQUFNLElBQUksTUFBTSx3QkFBd0IsV0FBVyxFQUFFO0tBR3JELE1BQU0sd0RBQU8sRUFBUCxFQUFXLElBQ2pCLHNFQUFxQixFQUNyQixNQUFNLFFBQVEsb0JBQW9CLElBQUkscUJBQXFCLEtBQUssR0FBRyxJQUFJLHNCQUN2RTtRQUNFLFVBQVU7UUFDVixNQUFNO1FBQ04sUUFBUTtRQUNSLFVBQVU7SUFBQTtBQUdoQiIsInNvdXJjZXMiOlsiL21lZGlhL2F3YWlzL05ldyBWb2x1bWUvR292ZXJOT3IgSG91c2UgL2hhY2thdGhvbi0zL3NlY29uZFRpbWVzL3NyYy9zZXJ2ZXItYWN0aW9ucy9pbmRleC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHNlcnZlcidcblxuaW1wb3J0IHR5cGUge0NsaWVudFBlcnNwZWN0aXZlLCBTeW5jVGFnfSBmcm9tICdAc2FuaXR5L2NsaWVudCdcbmltcG9ydCB7cGVyc3BlY3RpdmVDb29raWVOYW1lfSBmcm9tICdAc2FuaXR5L3ByZXZpZXctdXJsLXNlY3JldC9jb25zdGFudHMnXG5pbXBvcnQge3JldmFsaWRhdGVUYWd9IGZyb20gJ25leHQvY2FjaGUuanMnXG5pbXBvcnQge2Nvb2tpZXMsIGRyYWZ0TW9kZX0gZnJvbSAnbmV4dC9oZWFkZXJzLmpzJ1xuaW1wb3J0IHtzYW5pdGl6ZVBlcnNwZWN0aXZlfSBmcm9tICcuLi91dGlscydcblxuLy8gZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGRpc2FibGVEcmFmdE1vZGUoKTogUHJvbWlzZTx2b2lkPiB7XG4vLyAgICd1c2Ugc2VydmVyJ1xuLy8gICBhd2FpdCBQcm9taXNlLmFsbFNldHRsZWQoW1xuLy8gICAgIChhd2FpdCBkcmFmdE1vZGUoKSkuZGlzYWJsZSgpLFxuLy8gICAgIC8vIFNpbXVsYXRlIGEgZGVsYXkgdG8gc2hvdyB0aGUgbG9hZGluZyBzdGF0ZVxuLy8gICAgIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIDEwMDApKSxcbi8vICAgXSlcbi8vIH1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHJldmFsaWRhdGVTeW5jVGFncyh0YWdzOiBTeW5jVGFnW10pOiBQcm9taXNlPHZvaWQ+IHtcbiAgYXdhaXQgcmV2YWxpZGF0ZVRhZygnc2FuaXR5OmZldGNoLXN5bmMtdGFncycpXG5cbiAgZm9yIChjb25zdCBfdGFnIG9mIHRhZ3MpIHtcbiAgICBjb25zdCB0YWcgPSBgc2FuaXR5OiR7X3RhZ31gXG4gICAgYXdhaXQgcmV2YWxpZGF0ZVRhZyh0YWcpXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICBjb25zb2xlLmxvZyhgPFNhbml0eUxpdmUgLz4gcmV2YWxpZGF0ZWQgdGFnOiAke3RhZ31gKVxuICB9XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzZXRQZXJzcGVjdGl2ZUNvb2tpZShwZXJzcGVjdGl2ZTogQ2xpZW50UGVyc3BlY3RpdmUpOiBQcm9taXNlPHZvaWQ+IHtcbiAgaWYgKCEoYXdhaXQgZHJhZnRNb2RlKCkpLmlzRW5hYmxlZCkge1xuICAgIC8vIHRocm93IG5ldyBFcnJvcignRHJhZnQgbW9kZSBpcyBub3QgZW5hYmxlZCwgc2V0dGluZyBwZXJzcGVjdGl2ZSBjb29raWUgaXMgbm90IGFsbG93ZWQnKVxuICAgIHJldHVyblxuICB9XG4gIGNvbnN0IHNhbml0aXplZFBlcnNwZWN0aXZlID0gc2FuaXRpemVQZXJzcGVjdGl2ZShwZXJzcGVjdGl2ZSwgJ3ByZXZpZXdEcmFmdHMnKVxuICBpZiAocGVyc3BlY3RpdmUgIT09IHNhbml0aXplZFBlcnNwZWN0aXZlKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIHBlcnNwZWN0aXZlOiAke3BlcnNwZWN0aXZlfWApXG4gIH1cblxuICA7KGF3YWl0IGNvb2tpZXMoKSkuc2V0KFxuICAgIHBlcnNwZWN0aXZlQ29va2llTmFtZSxcbiAgICBBcnJheS5pc0FycmF5KHNhbml0aXplZFBlcnNwZWN0aXZlKSA/IHNhbml0aXplZFBlcnNwZWN0aXZlLmpvaW4oJywnKSA6IHNhbml0aXplZFBlcnNwZWN0aXZlLFxuICAgIHtcbiAgICAgIGh0dHBPbmx5OiB0cnVlLFxuICAgICAgcGF0aDogJy8nLFxuICAgICAgc2VjdXJlOiB0cnVlLFxuICAgICAgc2FtZVNpdGU6ICdub25lJyxcbiAgICB9LFxuICApXG59XG5cbi8vIGV4cG9ydCBhc3luYyBmdW5jdGlvbiBoYW5kbGVEcmFmdE1vZGVBY3Rpb25NaXNzaW5nKCk6IFByb21pc2U8dm9pZCB8IHN0cmluZz4ge1xuLy8gICByZXR1cm4gJ1RoZSA8U2FuaXR5TGl2ZSAvPiBjb21wb25lbnQgaXMgbWlzc2luZyB0aGUgaGFuZGxlRHJhZnRNb2RlQWN0aW9uIHByb3AnXG4vLyB9XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@sanity/next-loader/dist/server-actions.js\n");

/***/ })

};
;